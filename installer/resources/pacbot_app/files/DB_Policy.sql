USE `pacmandata`;

CREATE TABLE IF NOT EXISTS `cf_PolicyTable` (
  `policyId` varchar(200) COLLATE utf8_bin NOT NULL,
  `policyUUID` varchar(200) COLLATE utf8_bin NOT NULL,
  `policyName` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `policyDisplayName` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `policyDesc` text COLLATE utf8_bin,
  `resolution` longtext COLLATE utf8_bin,
  `resolutionUrl` varchar(500) COLLATE utf8_bin DEFAULT NULL,
  `targetType` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `assetGroup` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `alexaKeyword` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `policyParams` longtext COLLATE utf8_bin,
  `policyFrequency` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `policyExecutable` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `policyRestUrl` varchar(500) COLLATE utf8_bin DEFAULT NULL,
  `policyType` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `policyArn` varchar(150) COLLATE utf8_bin DEFAULT NULL,
  `severity` varchar(20) COLLATE utf8_bin DEFAULT NULL,
  `category` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `autoFixAvailable` varchar(6) COLLATE utf8_bin DEFAULT 'false',
  `autoFixEnabled` varchar(20) COLLATE utf8_bin DEFAULT 'false',
  `allowList` varchar(1000) COLLATE utf8_bin DEFAULT NULL,
  `waitingTime` int(11) DEFAULT '24',
  `maxEmailNotification` int(11) DEFAULT '1',
  `templateName` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `templateColumns` varchar(500) COLLATE utf8_bin DEFAULT NULL,
  `fixType` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `warningMailSubject` varchar(1000) COLLATE utf8_bin DEFAULT NULL,
  `fixMailSubject` varchar(1000) COLLATE utf8_bin DEFAULT NULL,
  `warningMessage` varchar(1000) COLLATE utf8_bin DEFAULT NULL,
  `fixMessage` varchar(1000) COLLATE utf8_bin DEFAULT NULL,
  `violationMessage` varchar(1000) COLLATE utf8_bin DEFAULT NULL,
  `elapsedTime` int(11) DEFAULT '24',
  `userId` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `createdDate` date DEFAULT NULL,
  `modifiedDate` date DEFAULT NULL,
  `status` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`policyId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

CREATE TABLE IF NOT EXISTS `cf_PolicyCategoryWeightage` (
  `policyCategory` varchar(50) COLLATE utf8_bin NOT NULL,
  `domain` varchar(50) COLLATE utf8_bin NOT NULL,
  `weightage` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`policyCategory`,`domain`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

CREATE TABLE IF NOT EXISTS `pac_policy_engine_autofix_actions` (
  `resourceId` varchar(100) COLLATE utf8_bin NOT NULL,
  `lastActionTime` datetime NOT NULL,
  `action` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`resourceId`,`lastActionTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

CREATE TABLE IF NOT EXISTS cf_NotificationTypes (
  notificationTypeId varchar(200) COLLATE utf8_bin NOT NULL,
  notificationType varchar(200) COLLATE utf8_bin NOT NULL,
  createdBy varchar(200) COLLATE utf8_bin NOT NULL,
  creationDate DATETIME DEFAULT current_timestamp(),
  PRIMARY KEY (notificationTypeId),
  unique (notificationType)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;



CREATE TABLE IF NOT EXISTS cf_NotificationChannels (
  notificationChannelId varchar(200) COLLATE utf8_bin NOT NULL,
  channelName varchar(200) COLLATE utf8_bin NOT NULL,
  createdBy varchar(200) COLLATE utf8_bin NOT NULL,
  creationDate DATETIME DEFAULT current_timestamp(),
  PRIMARY KEY (notificationChannelId),
  unique (channelName)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS cf_NotificationTypeChannelMapping (
  notificationMappingId varchar(200) COLLATE utf8_bin NOT NULL,
  notificationTypeId varchar(200) COLLATE utf8_bin NOT NULL,
  notificationChannelId varchar(200) COLLATE utf8_bin NOT NULL,
  createdBy varchar(200) COLLATE utf8_bin NOT NULL,
  creationDate DATETIME DEFAULT current_timestamp(),
  PRIMARY KEY (notificationMappingId),
  unique (notificationTypeId,notificationChannelId),
  constraint notification_type_id_fkey FOREIGN KEY (notificationTypeId) REFERENCES cf_NotificationTypes (notificationTypeId) ON DELETE CASCADE ON UPDATE CASCADE,
  constraint notification_channel_id_fkey FOREIGN KEY (notificationChannelId) REFERENCES cf_NotificationChannels (notificationChannelId) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `cf_PolicyExemption` (
  `id` VARCHAR(50) NOT NULL,
  `policyID` VARCHAR(250) NOT NULL,
  `exemptionDesc` VARCHAR(1000) NULL,
  `expireDate` DATE NOT NULL,
  `filter` VARCHAR(1000) NULL,
  `createdBy` VARCHAR(45) NULL,
  `ceatedOn` DATETIME NULL,
  `modifiedBy` VARCHAR(45) NULL,
  `modifiedOn` DATETIME NULL,
  `status` VARCHAR(45) NULL,
  PRIMARY KEY (`id`));


insert ignore into cf_NotificationChannels (notificationChannelId,channelName,createdBy,creationDate) values ('6a7e6590-bd06-11ed-afa1-0242ac120002','email','admin@paladincloud.io',current_timestamp());


 insert ignore into cf_NotificationTypes (notificationTypeId,notificationType,createdBy,creationDate) values ('42ffd1d8-bd07-11ed-afa1-0242ac120002','violations','admin@paladincloud.io',current_timestamp());
 insert ignore into cf_NotificationTypes (notificationTypeId,notificationType,createdBy,creationDate) values ('5bf94e30-bd07-11ed-afa1-0242ac120002','autofix','admin@paladincloud.io',current_timestamp());
 insert ignore into cf_NotificationTypes (notificationTypeId,notificationType,createdBy,creationDate) values ('63a2d98a-bd07-11ed-afa1-0242ac120002','exemptions','admin@paladincloud.io',current_timestamp());
 INSERT IGNORE INTO cf_NotificationTypes (notificationTypeId,notificationType,createdBy,creationDate) VALUES ('73a2d98a-bd07-11ed-afa1-0242ac120002', 'policyaction', 'admin@paladincloud.io', current_timestamp());
INSERT IGNORE INTO cf_NotificationTypes (notificationTypeId,notificationType,createdBy,creationDate) VALUES ('68a8451e-ec58-4f09-bb7c-f39a402e3819', 'permission', 'admin@paladincloud.io', current_timestamp());
/* RUle Category Weightage */
INSERT IGNORE INTO cf_PolicyCategoryWeightage (policyCategory,domain,weightage) VALUES ('cost','Infra & Platforms',20);
INSERT IGNORE INTO cf_PolicyCategoryWeightage (policyCategory,domain,weightage) VALUES ('operations','Infra & Platforms',20);
INSERT IGNORE INTO cf_PolicyCategoryWeightage (policyCategory,domain,weightage) VALUES ('security','Infra & Platforms',50);
INSERT IGNORE INTO cf_PolicyCategoryWeightage (policyCategory,domain,weightage) VALUES ('tagging','Infra & Platforms',10);

DELIMITER $$
DROP PROCEDURE IF EXISTS alter_cf_policytable_add_columns $$
CREATE PROCEDURE alter_cf_policytable_add_columns()
BEGIN
IF NOT EXISTS( SELECT NULL
            FROM INFORMATION_SCHEMA.COLUMNS
           WHERE table_name = 'cf_PolicyTable'
             AND table_schema = 'pacmandata'
             AND column_name = 'autoFixEnabled')  THEN
ALTER TABLE cf_PolicyTable ADD COLUMN autoFixEnabled VARCHAR(20) NULL DEFAULT 'false' AFTER category;
END IF;

IF NOT EXISTS( SELECT NULL
            FROM INFORMATION_SCHEMA.COLUMNS
           WHERE table_name = 'cf_PolicyTable'
             AND table_schema = 'pacmandata'
             AND column_name = 'autoFixAvailable')  THEN
ALTER TABLE cf_PolicyTable 
ADD COLUMN `autoFixAvailable` VARCHAR(6) NULL DEFAULT 'false' AFTER `category`,
ADD COLUMN `allowList` VARCHAR(1000) NULL AFTER `autoFixEnabled`,
ADD COLUMN `waitingTime` INT NULL DEFAULT 24 AFTER `allowList`,
ADD COLUMN `maxEmailNotification` INT NULL DEFAULT 1 AFTER `waitingTime`,
ADD COLUMN `templateName` VARCHAR(100) NULL AFTER `maxEmailNotification`,
ADD COLUMN `templateColumns` VARCHAR(500) NULL AFTER `templateName`,
ADD COLUMN `fixType` VARCHAR(50) NULL AFTER `templateColumns`,
ADD COLUMN `warningMailSubject` VARCHAR(1000) NULL AFTER `fixType`,
ADD COLUMN `fixMailSubject` VARCHAR(1000) NULL AFTER `warningMailSubject`,
ADD COLUMN `warningMessage` VARCHAR(1000) NULL AFTER `fixMailSubject`,
ADD COLUMN `fixMessage` VARCHAR(1000) NULL AFTER `warningMessage`,
ADD COLUMN `violationMessage` VARCHAR(1000) NULL DEFAULT NULL AFTER `fixMessage`,
ADD COLUMN `elapsedTime` INT NULL DEFAULT 24 AFTER `violationMessage`;

END IF;

END $$
DELIMITER ;
CALL alter_cf_policytable_add_columns();



INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('ACMCertificate_Expiry_For_X_Days_version-1_ACMCertificate_Expiry_acmcertificate','aws_acmcertificate_expiry','ACMCertificate_Expiry','Check the Expiry Status of the ACM Certificate','To comply with Amazon Security Best Practices, remove all expired SSL/TLS certificates managed by AWS Certificate Manager. This prevents accidental deployment of invalid certificates to resources like Elastic Load Balancing, which could cause errors and harm your web application or website\'s reputation.','Rotate the keys before the expiry','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Check-the-Expiry-status-of-the-ACM-Certificate','acmcertificate','aws','ACMCertificate_Expiry','{\"assetGroup\":\"aws\",\"policyId\":\"ACMCertificate_Expiry_For_X_Days_version-1_ACMCertificate_Expiry_acmcertificate\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_acmcertificate_expiry\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"acmcertificate\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-acm-certificate-expiry\",\"key\":\"policyKey\"},{\"defaultVal\":\"90\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Target expiration duration\",\"description\":\"Checks if expiry date is under given number of days\",\"value\":\"90\",\"key\":\"targetExpireDuration\",\"isMandatory\":true},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"autofix\":false,\"alexaKeyword\":\"ACMCertificate_Expiry\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_acmcertificate_expiry','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'admin@paladincloud.io','2019-02-18','2023-01-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWSAMIUnused_version-1_Unused_ami','aws_ami_unused','Remove unused Amazon Machine Images','Remove unused Amazon Machine Images','Remove unused Amazon Machine Images to lower the cost of monthly AWS bill.','Deregister the image and then delete the associated snapshot','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#remove-unused-amazon-machine-images','ami','aws','AWSUnusedAMI','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-unused-ami\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"cost\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWSAMIUnused_version-1_Unused_ami\",\"autofix\":false,\"alexaKeyword\":\"AWSUnusedAMI\",\"policyRestUrl\":\"\",\"targetType\":\"ami\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ami_unused\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ami_unused','high','cost','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2021-01-17','2021-01-17','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWSEC2InstanceGeneration_version-1_InstanceGeneration_ec2','aws_ec2_instance_generation','Update Amazon EC2 instances generation to the latest','Update Amazon EC2 instances generation','Latest generation has multiple advantages over previous generation such as better hardware, lower costs and better HVM.','Upgrade your previous generation Amazon EC2 instances to their latest generation','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#update-amazon-ec2-instances-generation','ec2','aws','AWSEC2InstanceGeneration','{\"assetGroup\":\"aws\",\"policyId\":\"AWSEC2InstanceGeneration_version-1_InstanceGeneration_ec2\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_ec2_instance_generation\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"ec2\",\"params\":[{\"encrypt\":false,\"value\":\"check-ec2-instance-generation\",\"key\":\"policyKey\"},{\"key\":\"oldVersions\",\"value\":\"m1.small,m1.medium,m1.large,m1.xlarge,m3.medium,m3.large,m3.xlarge,m3.2xlarge,c1.medium,c1.xlarge,c2.8xlarge,c3.large,c3.xlarge,c3.2xlarge,c3.4xlarge,c3.8xlarge,g2.2xlarge*,g2.8xlarge**,m2.xlarge,m2.2xlarge,m2.4xlarge,cr1.8xlarge,r3.large,r3.xlarge,r3.2xlarge,r3.4xlarge,r3.8xlarge,i2.xlarge,i2.2xlarge,i2.4xlarge,i2.8xlarge,hs1.8xlarge,t1.micro\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Old EC2 versions\",\"defaultVal\":\"m1.small,m1.medium,m1.large,m1.xlarge,m3.medium,m3.large,m3.xlarge,m3.2xlarge,c1.medium,c1.xlarge,c2.8xlarge,c3.large,c3.xlarge,c3.2xlarge,c3.4xlarge,c3.8xlarge,g2.2xlarge*,g2.8xlarge**,m2.xlarge,m2.2xlarge,m2.4xlarge,cr1.8xlarge,r3.large,r3.xlarge,r3.2xlarge,r3.4xlarge,r3.8xlarge,i2.xlarge,i2.2xlarge,i2.4xlarge,i2.8xlarge,hs1.8xlarge,t1.micro\",\"displayName\":\"Old versions\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"cost\",\"key\":\"policyCategory\"}],\"autofix\":false,\"alexaKeyword\":\"AWSEC2InstanceGeneration\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_instance_generation','high','cost','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2021-01-17','2021-01-17','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWSKMSKeyRotationEnabled_version-1_KeyRotationEnabled_kms','aws_kms_key_rotation_enabled','Enable Automatic Rotation for customer-managed Customer Master Keys','Enable Automatic Rotation for Customer Master Keys','This feature will reduce the chance of compromised CMKs.','Enable automatic rotation for your customer-managed Customer Master Keys','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-automatic-rotation-for-customer-master-keys','kms','aws','AWSKMSKeyRotationEnabled','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-kms-key-rotation-enabled\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWSKMSKeyRotationEnabled_version-1_KeyRotationEnabled_kms\",\"autofix\":false,\"alexaKeyword\":\"AWSKMSKeyRotationEnabled\",\"policyRestUrl\":\"\",\"targetType\":\"kms\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_kms_key_rotation_enabled\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_kms_key_rotation_enabled','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2023-01-20','2023-01-20','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_ACM_Certificate_Expired_version-1_AWS_ACM_Certificate_Expired','aws_check_for_expired_acm_certificate','AWS_ACM_Certificate_Expired','Delete Expired ACM Certificates','AWS Certificate Manager is a service provided by Amazon that allows for rapidly provisioning, managing, and deploying SSL/TLS certificates with other Amazon services, including CloudFront and ELB.\n\nTo follow Amazon Security Best Practices and avoid the deployment of invalid SSL/TLS certificates to Elastic Load Balancing (ELB) and other resources, it is essential to remove any expired certificates managed by AWS Certificate Manager. Otherwise, deploying such certificates can cause front-end errors and harm the credibility of the web application or website behind the ELB.','Remove all the expired Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificates managed by AWS Certificate Manager.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Delete-Expired-ACM-Certificates','acmcertificate','aws','ExpiredACMCertificate','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-expired-acm-certificate\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_ACM_Certificate_Expired_version-1_AWS_ACM_Certificate_Expired\",\"autofix\":false,\"alexaKeyword\":\"ExpiredACMCertificate\",\"policyRestUrl\":\"\",\"targetType\":\"acmcertificate\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_check_for_expired_acm_certificate\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_check_for_expired_acm_certificate','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'admin@paladincloud.io','2022-05-12','2023-01-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_CloudTrail_Global_Services_version-1_Enable_CloudTrail_Global_Services_cloudtrail','aws_enable_cloudtrail_global_services','Enable_CloudTrail_Global_Services','Enable CloudTrail Global Services','To enhance the security and management of API activity in your AWS cloud account, ensure that your Amazon CloudTrail trails record regional and global events.','Ensure that your Amazon CloudTrail trails are recording both regional and global events in order to increase the visibility of the API activity in your AWS cloud account for security and management purposes','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-cloudtrail-global-services','cloudtrail','aws','CloudtrailGlobalServices','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudtrail-global-services-enabled\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_CloudTrail_Global_Services_version-1_Enable_CloudTrail_Global_Services_cloudtrail\",\"autofix\":false,\"alexaKeyword\":\"CloudtrailGlobalServices\",\"policyRestUrl\":\"\",\"targetType\":\"cloudtrail\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_enable_cloudtrail_global_services\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_enable_cloudtrail_global_services','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-11','2022-05-11','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_EMR_Clusters_Enabled_Encryption_version-1_Enable_Amazon_EMR_clusters_encryption','aws_enable_emr_clusters_encryption','Enable_Amazon_EMR_clusters_encryption','Enable EMR Data Encryption','Encryption of production data is essential to prevent unauthorized access and comply with data security regulations. AWS EMR clusters must be encrypted to secure data at rest and in transit. Data encryption prevents unauthorized users from accessing sensitive data stored on EMR clusters and related data storage systems.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Enable-EMR-Data-Encryption','emr','aws','AmazonEMREncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-emr-clusters-encrypted\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_EMR_Clusters_Enabled_Encryption_version-1_Enable_Amazon_EMR_clusters_encryption\",\"autofix\":false,\"alexaKeyword\":\"AmazonEMREncryption\",\"policyRestUrl\":\"\",\"targetType\":\"emr\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_enable_emr_clusters_encryption\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_enable_emr_clusters_encryption','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_ElastiCache_Clusters_Enabled_Encryption_version-1_Enable_CloudTrail_Global_Services_cloudtrail','aws_enable_elasticache_redis_clusters_encryption','Enable_ElastiCache_Redis_clusters_encryption','Encrypt ElastiCache for Redis Data','Securing sensitive data stored on Redis clusters and cache storage systems is essential to meet security and compliance requirements and keep Personally Identifiable Information safe. Data encryption helps ensure that unauthorized users cannot access the data, whether it is stored as data at rest or transmitted as data in transit.\n\nElastiCache for Redis has encryption at rest built-in and also allows for the implementation of customer-managed master keys through AWS Key Management Service (KMS). It is critical to encrypt your AWS ElastiCache Redis clusters to safeguard your information.','To enable in-transit and at-rest encryption for your existing AWS ElastiCache Redis clusters, you must re-create them with the necessary encryption configuration','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-elastiCache-for-redis-data','elasticache','aws','RedisClusterEncryption','{\"assetGroup\":\"aws\",\"policyId\":\"AWS_ElastiCache_Clusters_Enabled_Encryption_version-1_Enable_CloudTrail_Global_Services_cloudtrail\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_enable_elasticache_redis_clusters_encryption\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"elasticache\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-elasticache-clusters-encrypted\",\"key\":\"policyKey\"},{\"defaultVal\":\"redis\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Engine Type\",\"description\":\"Engine type for cache\",\"value\":\"redis\",\"key\":\"engineType\",\"isMandatory\":true},{\"defaultVal\":\"3.2.6\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Engine version\",\"description\":\"Engine version for the given engine type\",\"value\":\"3.2.6\",\"key\":\"engineVersion\",\"isMandatory\":true},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"autofix\":false,\"alexaKeyword\":\"RedisClusterEncryption\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_enable_elasticache_redis_clusters_encryption','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_ElasticSearch_Domain_At_Rest_Encryption_version-1_ElasticSearchDomainAtRestEncryption','aws_elasticsearch_domain_at_rest_encryption','ElasticSearchDomainAtRestEncryption','Encrypt OpenSearch Data at Rest','It is crucial to enable encryption at rest to ensure the security and privacy of your sensitive data stored on Amazon Elasticsearch (ES) domains and their storage systems. This way, unauthorized access to the data is prevented. Utilizing this feature does not require any application changes, as Amazon Elasticsearch automatically handles encryption and decryption processes.','To enable at-rest encryption for your existing AWS ElasticSearch domains, you must re-create them with the necessary encryption configuration','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-opensearch-data-at-rest','elasticsearch','aws','ESDomainEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-es-encrypted-at-rest\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_ElasticSearch_Domain_At_Rest_Encryption_version-1_ElasticSearchDomainAtRestEncryption\",\"autofix\":false,\"alexaKeyword\":\"ESDomainEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"elasticsearch\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_elasticsearch_domain_at_rest_encryption\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_elasticsearch_domain_at_rest_encryption','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_ElasticSearch_Domain_Encryption_Using_CMK_KMS_Key_version-1_Enable_CloudTrail_Global_Services_cloudtrail','aws_elasticsearch_domain_encryption_using_cmk_kms_keys','ElasticSearchDomainEncryptionUsingCMKKMSKeys','Encrypt OpenSearch Using KMS CMK','The AWS KMS service provides a convenient way to create, rotate, disable, and monitor the encryption keys for your ElasticSearch domains using CMKs. Using KMS Customer Master Keys instead of the default AWS-managed keys for your Amazon ElasticSearch domains provides a more secure and controlled encryption and decryption process for data-at-rest and helps you meet compliance requirements. When protecting your ElasticSearch domains and their storage systems using your own KMS Customer Master Keys, you have complete control over who can access the cluster\'s data using these keys.','To encrypt an existing AWS ElasticSearch domain with your own KMS Customer Master Key, you must re-create the domain with the necessary encryption configuration. To create the necessary KMS CMK and set up the new ES domain, enable custom encryption and copy your existing data to it.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#use-customer-managed-key-to-encrypt-opensearch-data-at-rest','elasticsearch','aws','ESDomainEncryptionUsingCMKKMSKeys','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-es-encrypted-using-kms-cmks\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_ElasticSearch_Domain_Encryption_Using_CMK_KMS_Key_version-1_Enable_CloudTrail_Global_Services_cloudtrail\",\"autofix\":false,\"alexaKeyword\":\"ESDomainEncryptionUsingCMKKMSKeys\",\"policyRestUrl\":\"\",\"targetType\":\"elasticsearch\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_elasticsearch_domain_encryption_using_cmk_kms_keys\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_elasticsearch_domain_encryption_using_cmk_kms_keys','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_ElasticSearch_Domain_Node_to_Node_Encryption_version-1_ElasticSearchDomainNodeToNodeEncryption','aws_elasticsearch_domain_node_to_node_encryption','ElasticSearchDomainNodeToNodeEncryption','Encrypt OpenSearch Data in Transit','Encrypting OpenSearch data in transit should be considered a best practice for ensuring the security and privacy of data. It helps to ensure the security and integrity of data while it is being transferred between nodes in a distributed system. Without encryption, data can be vulnerable to interception, modification, or tampering during transmission. Encrypting data in transit adds an extra layer of security and safeguards sensitive information from unauthorized access or data breaches. This is especially crucial when dealing with sensitive or confidential data, such as financial or personal information.','To enable node-to-node encryption for your existing Amazon ElasticSearch domains, you need to re-create them with the necessary configuration.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-opensearch-data-in-transit','elasticsearch','aws','ESNodeToNodeEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-es-node-to-node-encrypted\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_ElasticSearch_Domain_Node_to_Node_Encryption_version-1_ElasticSearchDomainNodeToNodeEncryption\",\"autofix\":false,\"alexaKeyword\":\"ESNodeToNodeEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"elasticsearch\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_elasticsearch_domain_node_to_node_encryption\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_elasticsearch_domain_node_to_node_encryption','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_IAM_Customer_Mnged_Policy_With_Admin_Previlege_version-1_Admin_Previlege_iampolicies','aws_customer_managed_policy_with_admin_previlege','IAM customer managed policies should not have full administrative privileges','Deny Full Administrative Privileges to Customer Managed IAM Policy','To secure AWS cloud resources, it\'s important to set IAM policies with the minimum permissions required and gradually add more as needed instead of starting with full administrative privileges. This helps to restrict access and prevent undesired actions. IAM policies that provide full administrative privileges should be avoided to prevent potential attacks. It\'s recommended to use the Principle of Least Privilege by creating and using IAM policies that provide the minimum set of actions required for task completion to ensure the security and privacy of AWS cloud resources.','Remove or update the policy to revoke the administrative privileges.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-customer-managed-policy-with-full-administrative-privileges','iampolicies','aws','CustomPolicyWithAdminAccess','{\"params\":[{\"key\":\"policyKey\",\"value\":\"iam-cutomer-managed-policy-with-admin-previlege\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_IAM_Customer_Mnged_Policy_With_Admin_Previlege_version-1_Admin_Previlege_iampolicies\",\"autofix\":false,\"alexaKeyword\":\"CustomPolicyWithAdminAccess\",\"policyRestUrl\":\"\",\"targetType\":\"iampolicies\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_customer_managed_policy_with_admin_previlege\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_customer_managed_policy_with_admin_previlege','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-08-23','2022-08-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_IAM_Role_Full_Admin_Privilege_version-1_Admin_Previlege_iamrole','aws_iam_role_with_full_admin_previlege','IAM roles should not have customer managed policies with full administrative privileges','Detach any Customer Managed Policies with Full Access from the IAM Role','By detaching customer-managed policies with full access from IAM roles and adhering to the Principle of Least Privilege, you can enhance security, compliance, access control, and auditing while minimizing the impact of human errors. This practice involves granting only necessary actions for tasks, thus minimizing AWS cloud resource permissions, reducing risks, and protecting your resources from unwanted actions.','Detach the customer managed or inline policy to revoke the administrative privileges.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#detach-customer-managed-policy-with-full-access-from-iam-role','iamrole','aws','IAMRoleWithFullAdminAccess','{\"params\":[{\"key\":\"policyKey\",\"value\":\"iam-role-with-admin-privilege-policy\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"/aws/iampolicies/_search\",\"key\":\"esIamPoliciesUrl\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_IAM_Role_Full_Admin_Privilege_version-1_Admin_Previlege_iamrole\",\"autofix\":false,\"alexaKeyword\":\"IAMRoleWithFullAdminAccess\",\"policyRestUrl\":\"\",\"targetType\":\"iamrole\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_iam_role_with_full_admin_previlege\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_iam_role_with_full_admin_previlege','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-08-25','2022-08-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_IAM_User_Full_Admin_Privilege_version-1_Admin_Privilege_iamuser','iam-user-with-admin-privilege-policy','IAM users should not have customer managed policy with full administrative privileges','Detach any Customer-Managed Policy with Full Access from IAM User','By detaching customer-managed policies with full access from IAM users and adhering to the Principle of Least Privilege, you can enhance security, compliance, access control, and auditing while minimizing the impact of human errors. This practice involves granting only necessary actions for tasks, thus minimizing AWS cloud resource permissions, reducing risks, and protecting your resources from unwanted actions.','Detach the customer managed or inline policy to revoke the administrative privileges','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#detach-customer-managed-policy-with-full-access-from-iam-user','iamuser','aws','IAMUserWithFullAdminAccess','{\"params\":[{\"key\":\"policyKey\",\"value\":\"iam-user-with-admin-privilege-policy\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"/aws/iampolicies/_search\",\"key\":\"esIamPoliciesUrl\"},{\"encrypt\":false,\"value\":\"/aws/iamgroup/_search\",\"key\":\"esIamGroupUrl\"},{\"encrypt\":false,\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_IAM_User_Full_Admin_Privilege_version-1_Admin_Privilege_iamuser\",\"autofix\":false,\"alexaKeyword\":\"IAMUserWithFullAdminAccess\",\"policyRestUrl\":\"\",\"targetType\":\"iamuser\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"iam-user-with-admin-privilege-policy\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/iam-user-with-admin-privilege-policy','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-08-26','2022-08-26','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_Support_Access_Role_version-1_Support_Access_account','aws_account_without_aws_support_access_role','Support role should be created for the AWS support incidents','Configure Dedicated IAM Role for AWS Support Access','Configuring a dedicated IAM role for AWS Support access is important for maintaining security, enabling efficient troubleshooting, and ensuring proper access control. By creating a specific role for AWS Support, you can grant the necessary permissions for support personnel to resolve issues, while adhering to the Principle of Least Privilege and preventing unauthorized access to your AWS resources.','If there is no role created, then create a separate support role and attach the policy to the role. Users or group should use this role for support access.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-dedicated-iam-role-for-aws-support-access','account','aws','AWSAccountWithoutSupportRole','{\"params\":[{\"key\":\"policyKey\",\"value\":\"iam-role-for-aws-support-access\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"AWSSupportAccess\",\"key\":\"policyName\"},{\"encrypt\":false,\"value\":\"/aws/iamrole/_search\",\"key\":\"esIamRoleUrl\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_Support_Access_Role_version-1_Support_Access_account\",\"autofix\":false,\"alexaKeyword\":\"AWSAccountWithoutSupportRole\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_without_aws_support_access_role\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_without_aws_support_access_role','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-08-31','2022-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_account_security_hub_exists_version-1_enable_security_hub_account','aws_account_security_hub','AWS Security hub should be enabled','Enable AWS Security Hub','Enabling AWS Security Hub enhances your security posture by centralizing security monitoring, automating compliance checks, integrating threat detection, offering customizable insights, and continuously monitoring your AWS environment.','Grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-aws-security-hub','account','aws','AccountSecurityHub','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-security-hub-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"us-east-1\",\"key\":\"regions\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Regions to check\",\"defaultVal\":\"us-east-1\",\"displayName\":\"Regions\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_account_security_hub_exists_version-1_enable_security_hub_account\",\"autofix\":false,\"alexaKeyword\":\"AccountSecurityHub\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_security_hub\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_security_hub','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_eks_cluster_encryption_enabled_version-1_enable_cluster_encryption_eks','aws_eks_cluster_encryption_enabled','Encrypt EKS Secret Keys','Enable Encryption for EKS Kubernetes Secrets using Envelope Encryption','Enable encryption for EKS Kubernetes Secrets using envelope encryption in order to meet security and compliance requirements','Enable envelope encryption of Kubernetes secrets using KMS Customer Master Keys','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-encryption-for-eks-kubernetes-secrets-using-envelope-encryptio','eks','aws','EksClusterEncryptionEnabled','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-eks-cluster-encryption-enabled\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_eks_cluster_encryption_enabled_version-1_enable_cluster_encryption_eks\",\"autofix\":false,\"alexaKeyword\":\"EksClusterEncryptionEnabled\",\"policyRestUrl\":\"\",\"targetType\":\"eks\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_eks_cluster_encryption_enabled\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_eks_cluster_encryption_enabled','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-01-17','2022-01-17','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_eks_cluster_logs_enabled_version-1_enable_cluster_logs_eks','aws_eks_cluster_logs_enabled','Control plane logs should be enabled for EKS','Enable Control Plane Logs for EKS',' Control plane logs can help identify cluster creation, authentication, authorization, and scheduling issues. They can also help detect security breaches and compliance violations by tracking unauthorized access attempts, changes to permissions, and other activities. Enabling control plane logs for Amazon Elastic Kubernetes Service (EKS) is crucial because it provides visibility into the cluster\'s control plane activity, making diagnosing and troubleshooting issues easier. In addition, control plane logs are required for auditing and compliance purposes, as they provide a detailed record of the actions taken in the cluster.','Enable EKS control plane logging for Amazon EKS','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-control-plane-logs-for-eks','eks','aws','EksClusterLogsEnabled','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-eks-cluster-control-plane-logs-enabled\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_eks_cluster_logs_enabled_version-1_enable_cluster_logs_eks\",\"autofix\":false,\"alexaKeyword\":\"EksClusterLogsEnabled\",\"policyRestUrl\":\"\",\"targetType\":\"eks\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_eks_cluster_logs_enabled\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_eks_cluster_logs_enabled','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-01-17','2022-01-17','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_eks_cluster_public_access_disabled_version-1_disable_cluster_public_access_eks','aws_eks_cluster_public_access_disabled','Disable Public Access for EKS Cluster Endpoint','Disable Public Access to EKS Cluster Endpoint','To control access to the managed Kubernetes API server created by Amazon EKS, it is important to use AWS IAM and Kubernetes RBAC to regulate access to the public API server endpoint. Keeping the Kubernetes API server private is recommended to enhance the cluster\'s security and to allow communication between worker nodes and APIs within the VPC. In situations where public access is necessary, limiting the IP addresses that can access the API server from the internet can help reduce the potential attack surface.','Disable public accessibility of EKS cluster endpoint','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#disable-public-access-to-eks-cluster-endpoint','eks','aws','EksClusterPublicAccessDisabled','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-eks-cluster-endpoint-public-access-disabled\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_eks_cluster_public_access_disabled_version-1_disable_cluster_public_access_eks\",\"autofix\":false,\"alexaKeyword\":\"EksClusterPublicAccessDisabled\",\"policyRestUrl\":\"\",\"targetType\":\"eks\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_eks_cluster_public_access_disabled\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_eks_cluster_public_access_disabled','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-01-17','2022-01-17','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_eks_cluster_version_upgrade_version-1_update_cluster_version_eks','aws_eks_cluster_version_update','Update EKS Cluster Version to Latest','Update EKS Cluster Version to Latest','Updating the EKS cluster version to the latest is crucial to ensure that the cluster benefits from the latest features and security updates. Running outdated EKS cluster versions may expose the cluster to vulnerabilities and potential attacks, as older versions may not have the latest patches and bug fixes. Therefore, updating the EKS cluster version to the latest version helps ensure the stability, security, and efficiency of the cluster.','Update the Kubernetes version for your existing Amazon EKS clusters','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#update-eks-cluster-version-to-the-latest','eks','aws','EksClusterVersionUpdate','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-eks-cluster-version-update\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"1.23\",\"key\":\"latestversion\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"EKS version should be equal to or higher than the given version\",\"defaultVal\":\"1.23\",\"displayName\":\"Latest EKS cluster version\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_eks_cluster_version_upgrade_version-1_update_cluster_version_eks\",\"autofix\":false,\"alexaKeyword\":\"EksClusterVersionUpdate\",\"policyRestUrl\":\"\",\"targetType\":\"eks\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_eks_cluster_version_update\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_eks_cluster_version_update','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-01-17','2022-01-17','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_rootaccount_hardware_MFA_version-1_enable_harware_mfa_account','aws_root_account_without_hardware_mfa','Hardware MFA should be enabled for root account','Enable Hardware MFA for Root Account','Enabling Hardware MFA for the root account adds an extra layer of security to protect the AWS account against unauthorized access. Hardware MFA devices provide an added level of security by generating a unique code that needs to be entered alongside the password. Using a hardware device for MFA reduces the risk of unauthorized access in case of a password compromise. It is strongly recommended to enable MFA for the root account and use hardware devices, which are considered more secure than other MFA options.','Install and configure a hardware MFA device for the root account.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-hardware-mfa-for-root-account','account','aws','AWSRootAccountWithoutHardwareMFA','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-hardware-MFA-root-account\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_rootaccount_hardware_MFA_version-1_enable_harware_mfa_account\",\"autofix\":false,\"alexaKeyword\":\"AWSRootAccountWithoutHardwareMFA\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_root_account_without_hardware_mfa\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_root_account_without_hardware_mfa','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-09-01','2022-09-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWS_user_permissions_without_group_version-1_user_policy_via_group_iamuser','aws_user_permission_without_group','Permissions should be assigned through groups','Assign User Permission Only through IAM Groups ','Assigning user permissions through IAM groups simplifies management, promotes consistency, improves scalability, enhances security, and eases auditing of access control in your AWS environment, streamlining the application of the Principle of Least Privilege.','Create an IAM group and attach policies and add user.Detach the policy from user','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-User-Permission-Only-through-IAM-Groups','iamuser','aws','AWSUserPermissionWithoutGroup','{\"params\":[{\"key\":\"policyKey\",\"value\":\"iam-permissions-through-group\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AWS_user_permissions_without_group_version-1_user_policy_via_group_iamuser\",\"autofix\":false,\"alexaKeyword\":\"AWSUserPermissionWithoutGroup\",\"policyRestUrl\":\"\",\"targetType\":\"iamuser\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_user_permission_without_group\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_user_permission_without_group','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-09-06','2022-09-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Access_Through_Internet_version-1_AIE_virtualmachine','azure_aie_virtualmachine','AIE','Restrict Network Ports on Network security Groups Associated to VM','Network security groups (NSGs) can control inbound and outbound traffic to VMs; by default, they allow all traffic. Restricting network ports on network security groups associated with VMs is important for improving security in cloud environments. By limiting the range of open network ports, organizations can prevent unauthorized access to their resources and reduce the risk of security breaches. This will also ensure that only the necessary traffic is allowed, reducing the attack surface and improving overall security.','Access through Internet-facing endpoint should be restricted.','https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#restrict-network-ports-on-network-security-groups-associated-to-vm','virtualmachine','azure','AIE','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"9daedab3-fb2d-461e-b861-71790eead4f6\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Access_Through_Internet_version-1_AIE_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"AIE\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_aie_virtualmachine\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_aie_virtualmachine','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-26','2019-11-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_aws_conf','AWS Config configuration changes should have log metric filter and alarm','Configure Log Metric Filter and Alarm for AWS Config Configuration Changes','Configuring log metric filters and alarms for AWS Config changes promotes real-time monitoring, improved security, compliance, faster troubleshooting, and accountability, helping you maintain a secure and well-managed AWS environment.','Create CloudWatch Logs Metric Filter and corresponding alarm for AWS Config configuration changes','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-aws-config-configuration-changes','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"AWS_CONF_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_aws_conf\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_aws_conf','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_org_changes','AWS Organizations changes should have log metric filter and alarm','Configure Log Metric Filter and Alarm for AWS Organizations Changes','Configuring log metric filters and alarms for AWS Organizations changes is essential for effective monitoring, heightened security, compliance, efficient troubleshooting, and accountability, ultimately contributing to a secure and well-managed multi-account AWS environment.','Create CloudWatch Logs Metric Filter and corresponding alarm for AWS Organizations changes','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-aws-organizations-changes','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"AWS_ORG_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_org_changes\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_org_changes','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_ct_conf_changes','Log metric filter and alarm should be enabled for CloudTrail configuration changes','Configure Log Metric Filter and Alarm for CloudTrail Configuration Changes','Configuring log metric filters and alarms for CloudTrail configuration changes is crucial for improved monitoring, enhanced security, compliance adherence, efficient troubleshooting, and increased accountability, contributing to a robust and well-managed AWS environment.','Create CloudWatch Logs Metric Filter and corresponding alarm for CloudTrail configuration changes','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-cloudtrail-configuration-changes','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CT_CFGN_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_ct_conf_changes\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_ct_conf_changes','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_customer_cmk','Disabling or scheduled deletion of customer created CMKs should have log metric filter and alarm','Configure Log Metric Filter and Alarm for Disabling or Scheduled Deletion of Customer Created CMKs','Configuring log metric filters and alarms for disabling or scheduled deletion of customer-created CMKs is vital for effective monitoring, increased security, ensuring compliance, timely troubleshooting, and maintaining accountability, which helps safeguard and manage cryptographic keys within your AWS environment.','Create CloudWatch Logs Metric Filter and corresponding alarm for disabling or scheduled deletion of customer created CMKs','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-disabling-or-scheduled-deletion-of-customer-created-cmks','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CUST_CMK_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_customer_cmk\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_customer_cmk','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_iam_policy_changes','IAM policy changes should have log metric filter and alarm','Configure Log Metric Filter and Alarm for IAM Policy Changes','Configuring log metric filters and alarms for IAM policy changes is essential for effective monitoring, heightened security, detecting unauthorized activity, maintaining compliance, and ensuring accountability, all of which contribute to a secure and well-managed AWS environment.','Create CloudWatch Logs Metric Filter and corresponding alarm for IAM policy changes','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-iam-policy-changes','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"IAM_POL_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_iam_policy_changes\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_iam_policy_changes','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_mc_auth_failures','AWS Management Console authentication failures should have log metric filter and alarm','Configure Log Metric Filter and Alarm for AWS Management Console Authentication Failures','Configuring log metric filters and alarms for AWS Management Console authentication failures is crucial for maintaining security, compliance, operational efficiency, and cost optimization in your AWS environment. It helps you detect potential security breaches, meet compliance requirements, troubleshoot operational issues, and prevent misuse of AWS resources. Proactive monitoring and alerting on authentication failures enable early detection and response to potential incidents, ensuring the integrity and availability of your AWS resources and data.','Create CloudWatch Logs Metric Filter and corresponding alarm for AWS Management Console authentication failures','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-aws-management-console-authentication-failures','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"MC_AUTH_FAIL_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_mc_auth_failures\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_mc_auth_failures','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_mc_signin','Management Console sign-in without MFA should have log metric filter and alarm','Configure Log Metric Filter and Alarm for Management Console Sign-in Without MFA','Configuring log metric filters and alarms for management console sign-in without multi-factor authentication (MFA) is essential for enhancing security, ensuring compliance, gaining operational visibility and enabling prompt incident response in your AWS environment. It helps detect unauthorized access attempts, demonstrate compliance, identify user behavior anomalies, and facilitate timely responses to security incidents. By monitoring and alerting on management console sign-in without MFA, you can proactively protect your AWS resources and data by enforcing an additional layer of authentication.','Create CloudWatch Logs Metric Filter and corresponding alarm for Management Console sign-in without MFA','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-management-console-sign-in-without-mfa','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"MC_SIGNIN_WO_MFA_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_mc_signin\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_mc_signin','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_nacl_changes','Changes to NACL should have log metric filter and alarm','Configure Log Metric Filter and Alarm for NACL Changes','Configuring log metric filters and alarms for Network Access Control List (NACL) changes in AWS is essential for enhancing security, ensuring compliance, gaining operational visibility, and improving change management. It helps detect unauthorized changes, demonstrate compliance, troubleshoot networking issues, and ensure network configuration governance. By monitoring and alerting on NACL changes, you can promptly detect and respond to potential security vulnerabilities, track changes, and maintain a secure and compliant AWS environment.','Create CloudWatch Logs Metric Filter and corresponding alarm for changes to NACL','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Configure-Log-Metric-Filter-and-Alarm-for-NACL-Changes','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"NACL_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_nacl_changes\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_nacl_changes','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_network_gateway','Changes to network gateways  should have log metric filter and alarm','Configure Log Metric Filter and Alarm for Changes to Network Gateways','Configuring log metric filters and alarms for changes to network gateways in AWS is important for enhancing security, ensuring compliance, gaining operational visibility, and improving change management. It helps detect unauthorized changes, demonstrate compliance, troubleshoot networking issues, and ensure network configuration governance. By monitoring and alerting on changes to network gateways, you can promptly detect and respond to potential security vulnerabilities, track changes, and maintain a secure and compliant AWS networking environment.','Create CloudWatch Logs Metric Filter and corresponding alarm for changes to network gateways','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-changes-to-network-gateways','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"NTWK_GTWY_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_network_gateway\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_network_gateway','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_root_account_usage','Usage of root account should have log metric filter and alarm','Configure Log Metric Filter and Alarm for Root Account Usage','Configuring log metric filters and alarms for root account usage in AWS is crucial for security, compliance, operational visibility, and incident response. It helps detect unauthorized activities, demonstrate compliance, gain insights into root account usage, and aid incident response efforts. Monitoring root account usage is a critical security best practice. It can help organizations protect their AWS resources from unauthorized access or misuse, comply with regulatory requirements, gain visibility into privileged account activities, and enable effective incident response.','Create CloudWatch Logs Metric Filter and corresponding alarm for usage of root account','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Configure-Log-Metric-Filter-and-Alarm-for-Root-Account-Usage','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"USAGE_OF_ROOT_ACC_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_root_account_usage\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_root_account_usage','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_root_table','Route table changes should have log metric filter and alarm','Configure Log Metric Filter and Alarm for Route Table Changes','Configuring log metric filters and alarms for route table changes in AWS is crucial for enhancing security, operational visibility, change management, and compliance. It helps detect unauthorized changes, provides insights into network configurations, establishes effective change management practices, and ensures compliance with security best practices and regulatory requirements. Monitoring and alerting on route table changes can aid in troubleshooting, network security, and compliance audits.','Create CloudWatch Logs Metric Filter and corresponding alarm for route table changes','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-route-table-changes','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"ROUTE_TBL_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_root_table\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_root_table','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_s3_policy_changes','S3 bucket policy changes should have log metric filter and alarm','Configure Log Metric Filter and Alarm for S3 Bucket Policy Changes','Configuring log metric filters and alarms for S3 bucket policy changes is important for enhancing security, compliance, operational visibility, and incident response capabilities. It helps detect unauthorized changes to S3 bucket policies in real time, ensures compliance with regulations, provides operational insights, enables proactive alerting, and aids in incident response activities. Overall, it is a best practice for protecting S3 data assets.','Create CloudWatch Logs Metric Filter and corresponding alarm for S3 bucket policy changes','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-s3-bucket-policy-changes','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"S3_BUCK_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_s3_policy_changes\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_s3_policy_changes','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_sg_changes','Security group changes should have log metric filter and alarm','Configure Log Metric Filter and Alarm for Security Group Changes','Configuring log metric filters and alarms for security group changes is crucial for maintaining security, compliance, operational visibility, and incident response capabilities in AWS. It helps detect unauthorized changes, ensures compliance, provides insights, enables proactive alerts, and aids incident response. Overall, it is a best practice for securing AWS resources and preventing security breaches.','Create CloudWatch Logs Metric Filter and corresponding alarm for AWS security group changes','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-security-group-changes','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"SEC_GRP_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_sg_changes\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_sg_changes','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_unauthorized_api','Unauthorized API calls should have log metric filter and alarm','Configure Log Metric Filter and Alarm for Unauthorized API Calls','Configuring log metric filters and alarms for unauthorized API calls is crucial for improving security, compliance, operational visibility, and incident response capabilities. It helps detect potential security threats, ensures compliance, provides insights, enables proactive alerts, and aids incident response. Overall, it is a best practice for safeguarding systems and data from unauthorized access, meeting compliance requirements, identifying operational anomalies, and responding to security incidents effectively.','Create CloudWatch Logs Metric Filter and corresponding alarm for unauthorized API calls','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-unauthorized-api-calls','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"UNAUTH_API_CALLS_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_unauthorized_api\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_unauthorized_api','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_vpc_changes','VPC changes should have log metric filter and alarm','Configure Log Metric Filter and Alarm for VPC Changes','Configuring log metric filters and alarms for VPC changes is essential for improving security, compliance, operational visibility, and incident response in AWS environments. It helps detect unauthorized changes, ensures compliance, provides insights, enables proactive alerting, and aids in incident response. Overall, it is a best practice for maintaining the security and integrity of VPCs, meeting compliance requirements, identifying operational issues, and responding to security incidents effectively.','Create CloudWatch Logs Metric Filter and corresponding alarm for VPC changes','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-vpc-changes','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric name should be equal to the given name\",\"defaultVal\":\"CloudTrailEventCount\",\"displayName\":\"Metric name for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Metric namespace should be equal to the given name\",\"defaultVal\":\"CloudTrailMetrics\",\"displayName\":\"Metric namespace for cloudwatch alarm\"},{\"encrypt\":false,\"value\":\"VPC_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloudwatch_alarm_for_vpc_changes\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloudwatch_alarm_for_vpc_changes','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Adaptive_App_Control_version-1_AAC_virtualmachine','azure_aac_virtualmachine','AAC','Enable Adaptive Application Controls on Virtual Machines','Enabling Adaptive Application Controls on Virtual Machines brings benefits such as increased security, reduced risk of configuration errors, improved performance, and simplified management. It uses machine learning algorithms to identify and prevent potentially harmful activities, automatically adjusts security policies based on application behavior, and can be managed centrally.',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-adaptive-application-controls','virtualmachine','azure','AdaptiveAppControl','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"47a6b606-51aa-4496-8bb7-64b11cf66adc\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Adaptive_App_Control_version-1_AAC_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"AdaptiveAppControl\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_aac_virtualmachine\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_aac_virtualmachine','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-08-27','2019-11-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AmazonRDSIdleDBInstancesRule_version-1_AmazonRDSIdleDBInstancesRule_rdsdb','aws_rds_instances_should_not_tbe_idle_state','AmazonRDSIdleDBInstancesRule','Delete AWS RDS DB Instances Running in Idle Mode','Deleting AWS RDS DB instances running in idle mode can lead to cost savings, improved security, simplified maintenance, and better compliance with regulatory requirements. It can help optimize your AWS usage and reduce your attack surface, and ensure that your database is up-to-date and free from vulnerabilities.','Consider taking a snapshot of the idle DB instance and then deleting it,See Deleting a DB Instance with a Final Snapshot','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#delete-aws-rds-db-instances-running-in-idle-mode','rdsdb','aws','AmazonRDSIdleDBInstancesRule','{\"assetGroup\":\"aws\",\"policyId\":\"AmazonRDSIdleDBInstancesRule_version-1_AmazonRDSIdleDBInstancesRule_rdsdb\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_rds_instances_should_not_tbe_idle_state\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"rdsdb\",\"params\":[{\"defaultVal\":\"Ti39halfu8\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Check Id\",\"description\":\"Check Id Keyword\",\"value\":\"Ti39halfu8\",\"key\":\"checkId\",\"isMandatory\":true},{\"encrypt\":false,\"value\":\"check-for-amazon-RDS-idle-DB-instances\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"cost\",\"key\":\"policyCategory\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_checks/checks_resources/_search\",\"key\":\"esServiceURL\"}],\"autofix\":false,\"alexaKeyword\":\"AmazonRDSIdleDBInstancesRule\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_rds_instances_should_not_tbe_idle_state','high','cost','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-03-15','2018-09-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Attached-EBS-volumes-are-encrypted_version-1_Attached_EBS_volumes_should_be_encrypted','AWS_Attached_EBS_volumes_should_be_encrypted','Attached_EBS_volumes_should_be_encrypted','Encrypt EBS Volume','To meet security and compliance standards, it is important to ensure that all your Amazon Elastic Block Store (EBS) volumes are encrypted. You can confidently store senTo meet security and compliance standards, it is important to ensure that all your Amazon Elastic Block Store (EBS) volumes are encrypted. You can confidently store sensitive, confidential, and critical data on your EBS volumes by enabling encryption.sitive, confidential, and critical data on your EBS volumes by enabling encryption.','To enable encryption on your existing EBS volumes, you need to re-create them and turn the encryption feature on','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-ebs-volume','volume','aws','EBSVolumeEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-ebs-snapshot-should-be-encrypted\",\"encrypt\":false},{\"key\":\"esEbsWithInstanceUrl\",\"value\":\"/aws/volume_attachments/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Attached-EBS-volumes-are-encrypted_version-1_Attached_EBS_volumes_should_be_encrypted\",\"autofix\":false,\"alexaKeyword\":\"EBSVolumeEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"volume\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"AWS_Attached_EBS_volumes_should_be_encrypted\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/AWS_Attached_EBS_volumes_should_be_encrypted','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-11','2022-05-11','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Auditing_Advanced_Data_Security_version-1_SADS_sqlserver','azure_sads_sqlserver','SADS','Enable Auditing for Advanced Data Security SQL Server ','Enabling auditing for Advanced Data Security on SQL Server provides benefits such as enhanced security, compliance, improved visibility, forensic analysis, and continuous monitoring. Auditing allows you to track and log security-related events, detect potential security threats, meet compliance requirements, provide greater visibility into user activity, conduct forensic analysis, and proactively monitor for suspicious activity. It is an essential component of a robust security strategy for organizations handling sensitive data on their SQL Server.','Auditing should be enabled on advanced data security settings on SQL Server','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-auditing-for-advanced-data-security-sql-server','sqlserver','azure','SADS','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Auditing_Advanced_Data_Security_version-1_SADS_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"SADS\",\"policyRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_sads_sqlserver\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_sads_sqlserver','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-26','2019-11-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Avoid_Service_roles_to_IAM_user_at_project_level','Avoid_Service_roles_to_IAM_user_at_project_level','Avoid Assigning Service Roles to IAM Users at the Project Level','Avoid Assigning Service Roles to IAM Users on a Project Level','Avoiding the assignment of service roles to IAM users at the project level in GCP helps adhere to the principle of least privilege, enhances role-based access control, reduces the risk of unauthorized access, simplifies management, and maintains compliance. Instead, assign roles at more granular levels, such as the resource or service level, to create a more secure environment.','Remove Service Account user and Service Account token creator from the role parameter at project level.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#avoid-assigning-service-roles-to-iam-users-on-a-project-level','iamusers','gcp','Avoid_Service_roles_to_IAM_user_at_project_level','{\"params\":[{\"encrypt\":false,\"value\":\"avoid-assigning-service-roles-to-iam-user-at-project-level\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Ensure that Service Account User (iam.serviceAccountUser) and Service Account Token Creator (iam.serviceAccountTokenCreator) roles to a user for a specific service account rather than assigning the role to a user at project level.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Assigned Service roles to IAM users at project level.\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Avoid_Service_roles_to_IAM_user_at_project_level\",\"autofix\":false,\"alexaKeyword\":\"Avoid_Service_roles_to_IAM_user_at_project_level\",\"policyRestUrl\":\"\",\"targetType\":\"iamusers\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Avoid_Service_roles_to_IAM_user_at_project_level\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Avoid_Service_roles_to_IAM_user_at_project_level','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-29','2022-11-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AwsAsgInactiveSecurityGroup_version-1_AwsAsgInactiveSecurityGroup_asg','aws_asg_config_should_use_active_security_group','AWS_Asg_launch_configuration_should_use_active_security _groups','Ensure the Launch Config for ASG Contains Updated Information','It is essential to keep your AWS Auto Scaling Groups (ASGs) launch configuration up to date to prevent your application performance from being negatively impacted and to avoid downtime. If the ASGs fail to launch new EC2 instances due to inactive (deleted) Security Groups, the scaling mechanism cannot add compute resources to handle the traffic load.\n\nTo fix this, replace the unhealthy ASGs with a valid launch configuration that references one or more active Security Groups (SGs).','Copy the existing launch configuration and update the security group details with the required changes and attach the configuration with the auto scaling group.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#ensure-the-validity-of-security-group-reference-in-the-launch-config','asg','aws','AwsAsgWithMissingSecurityGroup','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-asg-referencing-inactive-sg\",\"encrypt\":false},{\"key\":\"esSgURL\",\"value\":\"/aws/sg/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esAsgLcURL\",\"value\":\"/aws/asg_launchconfig/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AwsAsgInactiveSecurityGroup_version-1_AwsAsgInactiveSecurityGroup_asg\",\"autofix\":false,\"alexaKeyword\":\"AwsAsgWithMissingSecurityGroup\",\"policyRestUrl\":\"\",\"targetType\":\"asg\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_asg_config_should_use_active_security_group\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_asg_config_should_use_active_security_group','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-07-13','2022-07-13','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AwsAsgMissingAMI_version-1_AwsAsgMissingAMI_asg','aws_asg_config_should_use_active_AMI','AWS_Asg_launch_configuration_should_use_active_AMIs','Ensure AWS ASG Launch Configurations Are Utilizing Active Amazon Machine Images','Make sure your AWS Auto Scaling Groups (ASGs) launch configuration refers to an active Amazon Machine Image (AMI) to keep the auto-scaling process functioning properly.\n\nIf your ASGs cannot launch new EC2 instances due to invalid (removed) AMIs, the scaling mechanism will be unable to allocate additional computing resources to manage the workload, resulting in a substantial negative impact on your application\'s performance.','Copy the existing launch configuration and update the AMI details with the required changes and attach the configuration with the auto scaling group.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#ensure-aws-launch-configurations-are-utilizing-active-amazon-machine-images','asg','aws','AwsAsgWithMissingAMIs','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-asg-referencing-missing-ami\",\"encrypt\":false},{\"key\":\"esAmiUrl\",\"value\":\"/aws/ami/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esAsgLcURL\",\"value\":\"/aws/asg_launchconfig/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AwsAsgMissingAMI_version-1_AwsAsgMissingAMI_asg\",\"autofix\":false,\"alexaKeyword\":\"AwsAsgWithMissingAMIs\",\"policyRestUrl\":\"\",\"targetType\":\"asg\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_asg_config_should_use_active_AMI\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_asg_config_should_use_active_AMI','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-07-14','2022-07-14','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AwsClassicELBListenerSecurity_version-1_AwsListenerSecurity_classicelb','aws_classic_elb_listener_security','aws_classic_elb_should_use_secured_protocols','Enable CLB Secure Listener','Configuring your Amazon Classic Load Balancer listeners to use HTTPS or SSL encryption provides security for sensitive information transmitted between clients and the load balancer, authentication, meets regulatory requirements, and improves the user experience by avoiding browser warnings.','To secure the connection between your application clients and your load balancers, update AWS ELB listeners configuration to support the secured protocols. For classic ELB update the configuration with HTTPS/SSL protocol.For ELBV2 use HTTPS/TLS','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Enable-CLB-Secure-Listener','classicelb','aws','AwsClassicElbListenerSecurity','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-secured-classic-elb-listener-protocols\",\"encrypt\":false},{\"key\":\"esClassicELBListenerURL\",\"value\":\"/aws/classicelb_listeners/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AwsClassicELBListenerSecurity_version-1_AwsListenerSecurity_classicelb\",\"autofix\":false,\"alexaKeyword\":\"AwsClassicElbListenerSecurity\",\"policyRestUrl\":\"\",\"targetType\":\"classicelb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_classic_elb_listener_security\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_classic_elb_listener_security','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AwsElbV2ListenerSecurity_version-1_AwsListenerSecurity_appelb','aws_elb_v2_listener_security','aws_elb_v2_should_use_secured_protocols','Enable ELB HTTPS Listener','Enabling secure listeners for Elastic Load Balancers (ELBs) is essential to protect web applications and ensure secure communication between clients and servers. Secure listeners use Secure Sockets Layer (SSL) or Transport Layer Security (TLS) encryption to secure the connection between the client and the load balancer. This protects sensitive data, such as login credentials and credit card information, from interception and theft by malicious actors. Enabling secure listeners for ELBs also helps to ensure compliance with various security standards and regulations, such as the Payment Card Industry Data Security Standard (PCI DSS).','To secure the connection between your application clients and your load balancers, update AWS ELB listeners configuration to support the secured protocols. For classic ELB update the configuration with HTTPS/SSL protocol.For ELBV2 use HTTPS/TLS','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Enable-ELB-HTTPS-Listener','appelb','aws','AwsElbV2ListenerSecurity','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-secured-elb-v2-listener-protocols\",\"encrypt\":false},{\"key\":\"esElbV2ListenerURL\",\"value\":\"/aws/appelb_listeners/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AwsElbV2ListenerSecurity_version-1_AwsListenerSecurity_appelb\",\"autofix\":false,\"alexaKeyword\":\"AwsElbV2ListenerSecurity\",\"policyRestUrl\":\"\",\"targetType\":\"appelb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_elb_v2_listener_security\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_elb_v2_listener_security','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-24','2022-05-24','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_appelb','aws_elb_with_unrestricted_sg','aws_elb_should_have_secured_sg','Ensure that Ports associated with Security Group and ALB are same','Ensure that the ports associated with a security group and an Application Load Balancer (ALB) are the same. This is important for ensuring proper communication between the security group and the ALB, as well as for maintaining security and avoiding potential security breaches. Having mismatched ports can lead to security vulnerabilities and communication errors. Therefore, it\'s recommended to regularly check and confirm that the ports associated with the security group and the ALB are the same.','Create a new security group and add rule to add the required inbound rule(s) that will match your load balancer listeners configuration and attach this security group to the load balancer','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Ensure-the-Validity-of-Security-Group-Reference-in-the-Launch-Config','appelb','aws','AwsElbWithUnrestrictedSG','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-elb-unrestrcted-security-group\",\"encrypt\":false},{\"key\":\"esElbWithSGUrl\",\"value\":\"/aws/appelb_secgroups/_search\",\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"encrypt\":false},{\"key\":\"esElbV2ListenerURL\",\"value\":\"/aws/appelb_listeners/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_appelb\",\"autofix\":false,\"alexaKeyword\":\"AwsElbWithUnrestrictedSG\",\"policyRestUrl\":\"\",\"targetType\":\"appelb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_elb_with_unrestricted_sg\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_elb_with_unrestricted_sg','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_classicelb','aws_classic_elb_with_unrestricted_sg','aws_classic_elb_should_have_secured_sg','Ensure that Ports associated with Security Group and ELB are same','Ensuring that the ports associated with the security group and ELB are the same is important to avoid any issues related to port mismatch. If there is a port mismatch between the security group and ELB, it can lead to unintended network access and make the application vulnerable to attacks. Therefore, it is crucial to ensure that the same ports are allowed in both the security group and the ELB. This helps to maintain consistency and ensure the security and reliability of the application.','Create a new security group and add rule to add the required inbound rule(s) that will match your load balancer listeners configuration and attach this security group to the load balancer','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#ensure-that-ports-associated-with-security-group-and-elb-are-same','classicelb','aws','AwsClassicElbWithUnrestrictedSG','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-classic-elb-unrestrcted-security-group\",\"encrypt\":false},{\"key\":\"esClassicElbWithSGUrl\",\"value\":\"/aws/classicelb_secgroups/_search\",\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"encrypt\":false},{\"key\":\"esClassicELBListenerURL\",\"value\":\"/aws/classicelb_listeners/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_classicelb\",\"autofix\":false,\"alexaKeyword\":\"AwsClassicElbWithUnrestrictedSG\",\"policyRestUrl\":\"\",\"targetType\":\"classicelb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_classic_elb_with_unrestricted_sg\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_classic_elb_with_unrestricted_sg','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AwsPublicAccessDefaultSecurityGroup_version-1_AwsPublicAccessDefaultSecurityGroup_sg','aws_default_security_group_should_not_be_publicly_accessible','default_security_group_open_to_internet_access','Deny Public Access in Default Security Group','The default security groups on Amazon EC2 should restrict all inbound public traffic so that users (administrators, resource managers, etc.) are forced to create their security groups using the Principle of Least Privilege (POLP).','Configuring default security group to restrict all traffic will encourage least privilege security group development. Do not set Inbound Source to 0.0.0.0/0 (IPv4) or ::/0 (IPv6).','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-in-default-security-group','sg','aws','AwsPublicAccessDefaultSecurityGroup','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-default-security-group-public-access\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"default\",\"key\":\"securityGroupName\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"key\":\"esSgURL\",\"value\":\"/aws/sg/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"key\":\"cidripv6\",\"value\":\"::/0\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"}],\"environmentVariables\":[],\"policyId\":\"AwsPublicAccessDefaultSecurityGroup_version-1_AwsPublicAccessDefaultSecurityGroup_sg\",\"autofix\":false,\"alexaKeyword\":\"AwsPublicAccessDefaultSecurityGroup\",\"policyRestUrl\":\"\",\"targetType\":\"sg\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_default_security_group_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_default_security_group_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-20','2022-05-20','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AwsVaultMissingAccessPolicy_version-1_AwsVaultMissingAccessPolicy_backupvault','aws_vault_missing_delete_protection','AWS backup should have delete access policy','Configure AWS Backup Vault Access Policy','Implementing an Amazon Backup vault access policy not only safeguards AWS backups, but also provides better control over user permissions. This added layer of protection maintains the integrity of your data and ensures a reliable recovery process when needed.','If the vault already has a policy attached, then update the policy with the statement to deny the action backup:DeleteRecoveryPoint to Principal: *.Otherwise attach a new access policy with the statement to deny the action : backup:DeleteRecoveryPoint to Principal: *.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-aws-backup-vault-access-policy','backupvault','aws','AwsVaultMissingPolicy','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-bakup-vault-delete-policy\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"AwsVaultMissingAccessPolicy_version-1_AwsVaultMissingAccessPolicy_backupvault\",\"autofix\":false,\"alexaKeyword\":\"AwsVaultMissingPolicy\",\"policyRestUrl\":\"\",\"targetType\":\"backupvault\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_vault_missing_delete_protection\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_vault_missing_delete_protection','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-08-10','2022-08-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AwsVpcExternalPeeringConnection_version-1_AwsVpcExternalPeeringConnection_peeringconnection','aws_vpc_should_not_be_associated_with_external_peering','Disable_VPC_External_Peering_Connections','Remove any VPC Peering Connections to Non Allowlisted AWS Accounts','Removing any VPC peering connections to non-allowlisted AWS accounts is essential for security reasons. VPC peering connections can allow traffic to flow between VPCs in different accounts, which can potentially expose sensitive data or resources to unauthorized access or attacks. Therefore, restricting VPC peering connections to only the allowed and trusted AWS accounts can help prevent potential security breaches and maintain the confidentiality and integrity of your resources.','Ensure external VPC peering connections not exist','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#remove-any-vpc-peering-connections-to-non-allowlisted-aws-accounts','peeringconnection','aws','ExternalPeeringVPC','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-external-vpc-peering-connections\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"key\":\"accountEsURL\",\"value\":\"/aws/account/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[],\"policyId\":\"AwsVpcExternalPeeringConnection_version-1_AwsVpcExternalPeeringConnection_peeringconnection\",\"autofix\":false,\"alexaKeyword\":\"ExternalPeeringVPC\",\"policyRestUrl\":\"\",\"targetType\":\"peeringconnection\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_vpc_should_not_be_associated_with_external_peering\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_vpc_should_not_be_associated_with_external_peering','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-18','2022-05-18','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_AMI_encryption_version-1_aws_enable_encryption_ami','aws_ami_should_be_encrypted','aws_ami_snapshots_should_be_encrypted','Encrypt AWS AMI','\nTo comply with data-at-rest encryption requirements, it is important to verify that your Amazon Machine Images (AMIs) are encrypted. The encryption and decryption of AMI data are handled automatically, without the need for any additional action from your applications.\n\nWhen dealing with critical business data in production environments, it is strongly advised to implement data encryption to safeguard against unauthorized access or attacks. The encryption keys used for AMIs employ the AES-256 algorithm and are fully managed and protected by AWS\'s Key Management Service (KMS).','To encrypt an existing AMI, copy the AMI and enable the encryption and choose the Customer Master Key for the encryption. Then the instances can be created from the new copied AMI.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Encrypt-AWS-AMI','ami','aws','EnableAwsAMIEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-ami-blockdevice-is-encrypted\",\"encrypt\":false},{\"key\":\"esAmiBlockDeviceMappingUrl\",\"value\":\"/aws/ami_blockdevicemap/_search\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_AMI_encryption_version-1_aws_enable_encryption_ami\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsAMIEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"ami\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ami_should_be_encrypted\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ami_should_be_encrypted','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-20','2022-06-20','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_Attached_EBS_volumes_are_custom_kms_key_encrypted_version-1_Attached_EBS_volumes_should_be_custom_kms_key_encrypted','aws_attached_ebs_volumes_should_be_custom_kms_key_encrypted','aws_ebs_should_be_kms_custom_encrypted','Encrypt EBS Volume Using Customer Managed Keys','Use customer-managed Customer Master Keys (CMKs) instead of AWS-managed keys for Amazon EBS volumes for complete control of encryption and decryption. Once CMK-based encryption is enabled, it secures Amazon EBS volumes, volume snapshots, and disk I/O.','Create a new CMK KMS key and use this key for creating snapshot. Use the newly created snapshot for creating volume and attach this volume to your instance.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Encrypt-EBS-Volume-Using-Customer-Managed-Keys','volume','aws','EBSVolumeCustomKmsKeyEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-ebs-volume-should-be-encrypted-with-kms-keys\",\"encrypt\":false},{\"key\":\"esEbsWithInstanceUrl\",\"value\":\"/aws/volume_attachments/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esKmsUrl\",\"value\":\"/aws/kms/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_Attached_EBS_volumes_are_custom_kms_key_encrypted_version-1_Attached_EBS_volumes_should_be_custom_kms_key_encrypted\",\"autofix\":false,\"alexaKeyword\":\"EBSVolumeCustomKmsKeyEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"volume\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_attached_ebs_volumes_should_be_custom_kms_key_encrypted\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_attached_ebs_volumes_should_be_custom_kms_key_encrypted','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-01','2022-06-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_DocumentDB_should_be_encrypted_version-1_aws_enable_cluster_encryption_documentdb','aws_enable_document_db_cluster_encryption','aws_document_db_cluster_encryption_should_be_enabled','Encrypt DocumentDB','Enabling encryption for Amazon DocumentDB clusters protects data at rest from unauthorized access to the underlying storage and meets compliance requirements. It is recommended to activate encryption for your AWS DocumentDB (with MongoDB compatibility) clusters to bolster your data security and meet data-at-rest encryption compliance requirements. The encryption covers data elements, including indexes, logs, replicas, and snapshots, and is managed by the DocumentDB service with minimal impact on performance.','Create a snapshot of the unencrypted cluster.Restore the snapshot and enable encryption  with appropriate AWS KMS key. Then add instances to the new DocumentDB cluster. Delete the unencrypted clusters.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-documentdb','documentdb','aws','EnableAwsDocumentDbEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-document-db-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_DocumentDB_should_be_encrypted_version-1_aws_enable_cluster_encryption_documentdb\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsDocumentDbEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"documentdb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_enable_document_db_cluster_encryption\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_enable_document_db_cluster_encryption','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-06','2022-06-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_DocumentDB_should_be_encrypted_with_kms_cmks_version-1_aws_enable_cluster_kms_cmks_encryption_documentdb','aws_enable_document_db_kms_cmks_cluster_encryption','aws_document_db_cluster_kms_cmks_encryption_should_be_enabled','Encrypt DocumentDB using Customer Managed Keys','Using your own AWS KMS Customer Master Keys (CMKs) to encrypt your DocumentDB data, including indexes, logs, replicas, and snapshots, gives you complete authority over who can access your data using the encryption keys. With Amazon KMS service, creating, rotating, disabling, and auditing Customer Master Keys for your Amazon DocumentDB clusters is straightforward.\n\nTo achieve more granular control over DocumentDB data-at-rest encryption and decryption, it is recommended to use KMS Customer Master Keys (CMKs) instead of AWS managed-keys, which are the default keys used by the DocumentDB service when customer-managed keys are not defined.','Create KMS Customer Master Key.Create a snapshot of the unencrypted cluster.Restore the snapshot and enable encryption  with the new CMK. Then add instances to the new cluster.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Encrypt-DocumentDB-using-Customer-Managed-Keys','documentdb','aws','EnableAwsDocumentDbKmsCmksEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-document-db-encrypted-with-kms-cmks\",\"encrypt\":false},{\"key\":\"esKmsUrl\",\"value\":\"/aws/kms/_search\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_DocumentDB_should_be_encrypted_with_kms_cmks_version-1_aws_enable_cluster_kms_cmks_encryption_documentdb\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsDocumentDbKmsCmksEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"documentdb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_enable_document_db_kms_cmks_cluster_encryption\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_enable_document_db_kms_cmks_cluster_encryption','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-06','2022-06-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_DynamoDB_should_use_aws_managed_cmk_for_sse_version-1_aws_managed_cmk_for_sse_dynamodb','aws_dynamodb_should_use_aws_managed_cmk_for_sse','DynamoDB_should_use_aws_managed_CMK_for_SSE','Encrypt DynamoDB Tables Using Customer Managed Keys','To have more precise control over your cluster data encryption and decryption process in Amazon DynamoDB, it is advisable to use KMS Customer Master Keys (CMKs) instead of AWS managed-keys or keys owned by the DynamoDB service. Encryption at rest with Customer Master Keys can satisfy stringent encryption compliance and regulatory requirements, especially for security-sensitive applications.\n\nCustomer-managed Customer Master Keys (CMKs) are often necessary to comply with organizational policies, industry or government regulations, and internal compliance requirements for data-at-rest encryption. Using your own KMS Customer Master Keys (CMKs) to secure DynamoDB data provides complete control over who can access your data with these keys. The key policy is viewable, and encryption/decryption of your DynamoDB data can be audited by analyzing DynamoDB API calls made to Amazon KMS with CloudTrail.','To make sure the DynamoDB is server side encrypted with KMS, update or create the DynamoDB with the encryption as AWS managed.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Encrypt-DynamoDB-tables-using-Customer-Managed-Keys','dynamodb','aws','DynamoDBAwsManagedCmkServerSideEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-dynamodb-uses-aws-managed-cmks-for-sse\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_DynamoDB_should_use_aws_managed_cmk_for_sse_version-1_aws_managed_cmk_for_sse_dynamodb\",\"autofix\":false,\"alexaKeyword\":\"DynamoDBAwsManagedCmkServerSideEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"dynamodb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_dynamodb_should_use_aws_managed_cmk_for_sse\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_dynamodb_should_use_aws_managed_cmk_for_sse','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-02','2022-06-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_EFS_should_be_encrypted_version-1_aws_enable_encryption_efs','aws_enable_efs_encryption','aws_efs_encryption_should_be_enabled','Encrypt EFS','It is important to ensure that your Amazon EFS file systems are encrypted to meet security and compliance requirements. This provides transparent encryption of your data as it is being written and decrypted as it is being read, without requiring any extra effort from you or your applications. AWS KMS service manages the encryption keys, so there is no need to establish and maintain a secure key management infrastructure.\n\nEncrypting your EFS file systems is strongly advised to safeguard your data and metadata against unauthorized access and fulfill your organization\'s data-at-rest encryption compliance requirements.','To encrypt an existing AWS EFS file system you must copy the data from the existing file system onto the new one, that has the encryption feature enabled.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-efs','efs','aws','EnableAwsEFSEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-efs-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_EFS_should_be_encrypted_version-1_aws_enable_encryption_efs\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsEFSEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"efs\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_enable_efs_encryption\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_enable_efs_encryption','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-08','2022-06-08','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_EKS_secrets_should_be_encrypted_version-1_aws_enable_secret_encryption_eks','aws_enable_eks_secret_encryption','aws_eks_secrets_should_be_encrypted_with_kms_cmks','Enable Envelope Encryption for EKS Kubernetes Secrets','To ensure that your secrets stored in Amazon Elastic Kubernetes Service (EKS) meet security and compliance requirements, you can use AWS Key Management Service (KMS) keys to provide envelope encryption. Implementing envelope encryption of Kubernetes secrets is a security best practice for applications that handle sensitive and confidential data. To set this up, you must create your AWS KMS Customer Master Key (CMK) and link it to your Amazon EKS cluster. When you store secrets using the Kubernetes secrets API, they will first be encrypted using a data encryption key generated by Kubernetes and then further encrypted with the connected KMS CMK. This additional layer of encryption helps to protect your secrets and meet security and compliance requirements.','To enable envelope encryption of Kubernetes secrets for existing Amazon EKS clusters, re-create the clusters using KMS Customer Master Keys (CMKs).','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-encryption-for-eks-kubernetes-secrets-using-envelope-encryption','eks','aws','EnableAwsEKSSecretsEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-eks-secrets-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_EKS_secrets_should_be_encrypted_version-1_aws_enable_secret_encryption_eks\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsEKSSecretsEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"eks\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_enable_eks_secret_encryption\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_enable_eks_secret_encryption','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_appflow_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_appflow','aws_appflow_should_be_encrypted_with_CMKs','aws_appflow_should_be_encrypted_using_CMKs','Encrypt AppFlow Using CMK','A Customer Master Key (CMK) is a logical representation of a symmetric master key managed by Amazon KMS service, containing metadata such as the key ID, creation date, description, and key state, as well as the key material used for encryption and decryption of data. To meet security and compliance requirements and gain full control over encrypted data, it is recommended to encrypt Amazon AppFlow flows using customer-managed Customer Master Keys (CMKs). ','To enable encryption for AppFlow flows using Customer Master Key, re-create the flow with the configuration of the flow for which the encryption should be enabled, and enable the encryption and choose the Customer Master Key already created for the encryption key.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Encrypt-AppFlow-Using-CMK','appflow','aws','EnableAwsAppFlowEncryptionWithCMK','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-app-flow-encrypted-with-cmks\",\"encrypt\":false},{\"key\":\"esKmsUrl\",\"value\":\"/aws/kms/_search\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_appflow_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_appflow\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsAppFlowEncryptionWithCMK\",\"policyRestUrl\":\"\",\"targetType\":\"appflow\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_appflow_should_be_encrypted_with_CMKs\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_appflow_should_be_encrypted_with_CMKs','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-15','2022-06-15','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_athena_query_results_should_be_encrypted_version-1_aws_enable_query_results_encryption_awsathena','aws_enable_athena_query_results_encryption','aws_athena_query_results_should_be_encrypted','Encrypt Athena Query Results','AWS Athena is an interactive query service that allows you to analyze data in Amazon S3 using standard SQL. While data in transit between Amazon Athena and S3 is encrypted by default using SSL/TLS, query results are not encrypted at rest by default. To ensure the security of your data and meet compliance requirements, it is recommended to enable encryption at rest for Athena query results stored in S3. AWS Athena offers different S3 encryption options including SSE-S3, SSE-KMS, and CSE-KMS to add an extra layer of security to your data.','To enable encryption, enable the encrypt query results in settings and choose the Customer Master Key created.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-athena-query-results','awsathena','aws','EnableAwsAthenaQueryResultsEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-athena-query-results-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_athena_query_results_should_be_encrypted_version-1_aws_enable_query_results_encryption_awsathena\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsAthenaQueryResultsEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"awsathena\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_enable_athena_query_results_encryption\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_enable_athena_query_results_encryption','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-13','2022-06-13','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_comprehend_job_results_should_be_encrypted_version-1_aws_enable_job_results_encryption_awscomprehend','aws_enable_comprehend_job_results_encryption','aws_comprehend_job_results_should_be_encrypted','Encrypt Comprehend Analysis Results','Encrypting Comprehend Analysis results is essential to safeguard sensitive information, maintain privacy, ensure data integrity, comply with regulations, prevent data breaches, and build trust. Encryption protects data from unauthorized access, tampering, and theft, helping organizations adhere to industry standards and maintain a positive reputation.','To enable encryption, create a customer managed key. Copy the job that should be re-configured and use the new Customer Managed Key for the new job.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-comprehend-analysis-results','awscomprehend','aws','EnableAwsComprehendJobResultsEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-comprehend-job-results-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_comprehend_job_results_should_be_encrypted_version-1_aws_enable_job_results_encryption_awscomprehend\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsComprehendJobResultsEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"awscomprehend\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_enable_comprehend_job_results_encryption\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_enable_comprehend_job_results_encryption','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-13','2022-06-13','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_dax_should_be_encrypted_version-1_aws_enable_encryption_dax','aws_enable_dax_encryption','aws_dax_cluster_should_be_encrypted','Encrypt DynamoDB Accelerator(DAX) Cluster','Enabling encryption at rest for Amazon DAX cache clusters ensures data protection for security-sensitive DynamoDB applications that have strict data protection requirements by organizational policies, industry, or government regulations. Server-Side Encryption is recommended to encrypt DAX cluster data at rest, including data in the cache, configuration data, and log files, and protect it from unauthorized access to the underlying storage. Enabling Server-Side Encryption integrates with AWS KMS to manage the default encryption key, adds no storage overhead, and has minimal impact on performance without requiring modifications to your applications.','To enable encryption for an existing DAX cluster, re-create the cluster with the encryption enabled.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Encrypt-DynamoDB-Accelerator(DAX)-Cluster','daxcluster','aws','EnableAwsDAXClusterEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-dynamodb-accelerator-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_dax_should_be_encrypted_version-1_aws_enable_encryption_dax\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsDAXClusterEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"daxcluster\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_enable_dax_encryption\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_enable_dax_encryption','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-13','2022-06-13','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_dms_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_dms','aws_dms_should_be_encrypted_with_CMKs','aws_dms_replication_instances_kms_cmks_encryption_should_be_enabled','Encrypt DMS Replication Using CMK','Amazon DMS provides encryption for replication instance storage and endpoint connection information, with the option to use AWS KMS Customer Master Keys (CMKs) for increased data protection. Using your own AWS KMS CMKs allows for greater control over who can access your data, and AWS KMS service enables easy management of Customer Master Keys. To have more control over data-at-rest encryption and decryption for AWS DMS replication instances, it is recommended to use KMS Customer Master Keys instead of AWS managed-keys, ensuring a higher level of control over data and improved data security.','To encrypt an existing Amazon DMS replication instance with your own AWS KMS Customer Master Key (CMK) you have to re-create the instance with the new Customer Master Key.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Encrypt-DMS-Replication-Using-CMK','dms','aws','AwsDmsEncryptionUsingKMSCMKs','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-dms-encrypted-with-kms-cmks\",\"encrypt\":false},{\"key\":\"esKmsUrl\",\"value\":\"/aws/kms/_search\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_dms_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_dms\",\"autofix\":false,\"alexaKeyword\":\"AwsDmsEncryptionUsingKMSCMKs\",\"policyRestUrl\":\"\",\"targetType\":\"dms\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_dms_should_be_encrypted_with_CMKs\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_dms_should_be_encrypted_with_CMKs','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-08','2022-06-08','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_dms_should_not_be_publicly_accessible_version-1_aws_public_access_dms','aws_dms_should_not_be_publicly_accessible','aws_dms_relication_instances_should_not_be_publicly_accessible','Deny Public Access to Data Migration Service','To protect your private data and minimize security risks, it is important to ensure that your Amazon Database Migration Service (DMS) is not publicly accessible from the Internet. As long as both source and target databases are in the same network connected to the instance\'s VPC through a VPN, VPC peering connection, or AWS Direct Connect dedicated connection, a DMS replication instance should have a private IP address and the Publicly Accessible feature disabled. This helps to ensure that your DMS is not exposed to external threats and keeps your data secure.','To disable public accessibility for your Amazon DMS replication instances, you must re-create these instances with the necessary configuration in order to be reachable only within your VPC network','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-to-dms','dms','aws','AwsDmsPublicAccess','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-dms-public-access\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_dms_should_not_be_publicly_accessible_version-1_aws_public_access_dms\",\"autofix\":false,\"alexaKeyword\":\"AwsDmsPublicAccess\",\"policyRestUrl\":\"\",\"targetType\":\"dms\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_dms_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_dms_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-08','2022-06-08','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_ecs_task_should_use_log_driver_version-1_aws_enable_task_log_driver_ecs','aws_enable_ecs_task_log_driver','aws_ecs_task_should_configure_log_driver','Configure ECS Task Definition Log Driver','Configure a log driver for containers in Amazon ECS task definitions to effectively manage logs. This enables centralized logging, additional operational capabilities, and prevents logs from consuming disk space on ECS container instances.','To configure log driver for the task definitions, create a new revision for the task definition that should be reconfigured. Update the new revision with the log driver and the cloud watch log group which is created already.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Configure-Task-Log-Driver','ecstaskdefinition','aws','ConfigureAwsEcsTaskLogDriver','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-ecs-task-log-driver-in-use\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_ecs_task_should_use_log_driver_version-1_aws_enable_task_log_driver_ecs\",\"autofix\":false,\"alexaKeyword\":\"ConfigureAwsEcsTaskLogDriver\",\"policyRestUrl\":\"\",\"targetType\":\"ecstaskdefinition\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_enable_ecs_task_log_driver\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_enable_ecs_task_log_driver','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-15','2022-06-15','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_efs_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_efs','aws_efs_should_be_encrypted_with_cmks','aws_efs_should_be_encrypted_with_kms_cmks','Encrypt EFS using Customer Managed Keys','Using your own KMS CMK customer-managed keys to encrypt Amazon EFS file systems data and metadata provides complete control over who can access the data, including the system metadata. With the AWS KMS service, you can easily create, rotate, disable and audit CMK encryption keys for your file systems. It is recommended to use KMS CMK customer-managed keys for Amazon EFS file system encryption instead of AWS managed-keys to have greater control over data-at-rest encryption/decryption process.','To encrypt an existing AWS EFS file system with your own AWS KMS CMK customer-managed key you must copy the data from the existing file system onto the new one, that has the encryption feature enabled.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#use-customer-managed-key-to-encrypt-efs','efs','aws','AwsEfsEncryptionUsingKMSCMKs','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-efs-encrypted-with-kms-cmks\",\"encrypt\":false},{\"key\":\"esKmsUrl\",\"value\":\"/aws/kms/_search\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_efs_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_efs\",\"autofix\":false,\"alexaKeyword\":\"AwsEfsEncryptionUsingKMSCMKs\",\"policyRestUrl\":\"\",\"targetType\":\"efs\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_efs_should_be_encrypted_with_cmks\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_efs_should_be_encrypted_with_cmks','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-08','2022-06-08','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Aws_iam_access_analyser_findings_version-1_aws_active_findings_accessanalyzer','aws_active_accessanalyzer_findings_should_be_resolved','aws_analyzer_findings_should_be_resolved','Resolve IAM Access Analyzer Findings','Utilize Amazon IAM Access Analyzer to identify and address security issues related to public or untrusted cross-account access in your AWS environment. This feature analyzes resource-based policies, generates findings, and helps maintain the principle of least privilege by continuously monitoring policy changes, thus reducing the need for manual checks.','To resolve findings generated from access that you did not intend to allow, modify the policy statement to remove the permissions that allow access to the identified resource','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Resolve-IAM-Access-Analyzer-Findings','accessanalyzer','aws','ActiveAwsIAMAccessAnalyzerFindings','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-access-analyzer-findings\",\"encrypt\":false},{\"key\":\"esFindingsUrl\",\"value\":\"/aws/accessanalyzer_findings/_search\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Aws_iam_access_analyser_findings_version-1_aws_active_findings_accessanalyzer\",\"autofix\":false,\"alexaKeyword\":\"ActiveAwsIAMAccessAnalyzerFindings\",\"policyRestUrl\":\"\",\"targetType\":\"accessanalyzer\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_active_accessanalyzer_findings_should_be_resolved\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_active_accessanalyzer_findings_should_be_resolved','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-17','2022-06-17','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AzureAuditNetworkAccessToStorageAccounts_version-1_ConfigureNetworkRulesOnStorageAccount_storageaccount','azure_ConfigureNetworkRules_storageaccount','ConfigureNetworkRulesOnStorageAccount','Check Unrestricted Network Access to Storage Accounts','To secure access to your Microsoft Azure Storage account, you should configure network rules to limit access to specific Azure Virtual Networks or public IP address ranges. Clients and applications that request access should provide proper authorization, such as access keys or Shared Access Signatures (SAS) tokens. To add an extra layer of security, ensure that the default network access is set to \"Deny\"\" to prevent unauthorized access from any network.\"',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#check-unrestricted-network-access-to-storage-accounts','storageaccount','azure','ConfigureNetworkRulesOnStorageAccount','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"34c877ad-507e-4c82-993e-3452a6e0ad3c\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"AzureAuditNetworkAccessToStorageAccounts_version-1_ConfigureNetworkRulesOnStorageAccount_storageaccount\",\"autofix\":false,\"alexaKeyword\":\"ConfigureNetworkRulesOnStorageAccount\",\"policyRestUrl\":\"\",\"targetType\":\"storageaccount\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_ConfigureNetworkRules_storageaccount\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_ConfigureNetworkRules_storageaccount','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-11-08','2019-11-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AzureAuditStorageVnetIntegration_version-1_AuditStorageVnetIntegration_storageaccount','azure_AuditStorageVnetInt_storageaccount','AuditStorageVnetIntegration','Check Storage VNet Integration','Checking Storage VNet Integration is important to ensure a secure network boundary for specific applications accessing Microsoft Azure Storage accounts. By configuring network rules, access is limited to allowed networks and IP addresses and proper authorization (such as a valid access key or Shared Access Signature token) is required for access. To add an extra layer of security, it is recommended to deny access to traffic from all networks and change the default action from \"Allow\"\" to \"\"Deny\"\".\"',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#check-storage-vnet-integration','storageaccount','azure','AuditStorageVnetIntegration','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"deb3d6f0-8113-4ed4-8492-d64f90919223\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"AzureAuditStorageVnetIntegration_version-1_AuditStorageVnetIntegration_storageaccount\",\"autofix\":false,\"alexaKeyword\":\"AuditStorageVnetIntegration\",\"policyRestUrl\":\"\",\"targetType\":\"storageaccount\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_AuditStorageVnetInt_storageaccount\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_AuditStorageVnetInt_storageaccount','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-11-08','2019-11-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AzureAuditTransferToStorageAccounts_version-1_EnableSecureTransferToStorageAccounts_storageaccount','azure_EnableSecureTransfer_storageaccount','EnableSecureTransferToStorageAccounts','Enable Secure Transfer to Storage Accounts','The Azure Storage account provides a secure and scalable environment for storing various types of data objects, including files, blobs, queues, tables, and disks, with high availability and durability. \n\nEnabling the \"Secure transfer required\"\" feature restricts the access to your Azure storage account only to secure connections using HTTPS protocol. This feature enhances the security of your storage account and prevents requests that use unencrypted connections. To ensure the security of your Azure Storage data, all data transfer between clients and the storage account must be encrypted with HTTPS protocol. \"',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-storage-account-secure-transfer','storageaccount','azure','EnableSecureTransferToStorageAccounts','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"404c3081-a854-4457-ae30-26a93ef643f9\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"AzureAuditTransferToStorageAccounts_version-1_EnableSecureTransferToStorageAccounts_storageaccount\",\"autofix\":false,\"alexaKeyword\":\"EnableSecureTransferToStorageAccounts\",\"policyRestUrl\":\"\",\"targetType\":\"storageaccount\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_EnableSecureTransfer_storageaccount\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_EnableSecureTransfer_storageaccount','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-11-08','2019-11-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AzureBatchAccountMetricAlertRules_version-1_ConfigureMetricAlertRules_batchaccounts','azure_ConfigureMetric_batchaccounts','ConfigureMetricAlertRules','Configure Metric Alert Rules on Batch Accounts','Configuring metric alert rules on Batch Accounts in Azure helps proactively monitor system performance and availability, trigger alerts based on defined thresholds for Batch account metrics, and prevent potential downtime or performance issues. This ensures efficient and effective operation of the Batch service.',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#configure-metric-alert-rules-on-batch-accounts','batchaccounts','azure','ConfigureMetricAlertRules','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"26ee67a2-f81a-4ba8-b9ce-8550bd5ee1a7\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"AzureBatchAccountMetricAlertRules_version-1_ConfigureMetricAlertRules_batchaccounts\",\"autofix\":false,\"alexaKeyword\":\"ConfigureMetricAlertRules\",\"policyRestUrl\":\"\",\"targetType\":\"batchaccounts\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_ConfigureMetric_batchaccounts\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_ConfigureMetric_batchaccounts','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-11-08','2019-11-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AzureBatchAccountsDiagnosticLogs_version-1_EnableDiagnosticLogsInBatchAccount_batchaccounts','azure_EnableDiagnosticLogs_batchaccounts','EnableDiagnosticLogsInBatchAccount','Enable Diagnostic Logs in Batch Accounts ','Enabling diagnostic logs in Batch Accounts in Azure provides insights into system behavior, improves system uptime, and reduces MTTR by identifying potential issues and their root causes. These logs can be used for performance monitoring, auditing, and security analysis, and analyzed with various Azure tools for valuable insights and trend identification.',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-diagnostic-logs-in-batch-accounts','batchaccounts','azure','EnableDiagnosticLogsInBatchAccount','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"428256e6-1fac-4f48-a757-df34c2b3336d\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"AzureBatchAccountsDiagnosticLogs_version-1_EnableDiagnosticLogsInBatchAccount_batchaccounts\",\"autofix\":false,\"alexaKeyword\":\"EnableDiagnosticLogsInBatchAccount\",\"policyRestUrl\":\"\",\"targetType\":\"batchaccounts\",\"pac_ds\":\"azure\",\"assetGroup\":null,\"policyUUID\":\"azure_EnableDiagnosticLogs_batchaccounts\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_EnableDiagnosticLogs_batchaccounts','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-11-08','2019-11-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AzureNamespacesDiagnosticLogs_version-1_EnableDiagnosticLogsInServiceBus_namespaces','azure_EnableDiagnosticLogs_namespaces','EnableDiagnosticLogsInServiceBus','Enable Diagnostic Logs in Service Bus','Enabling diagnostic logs in Azure Service Bus is essential for maintaining system visibility, identifying potential issues, and improving system uptime and performance. These logs provide insights into messaging operations, message delivery, and security events, and can be analyzed with Azure tools for monitoring, auditing, and security analysis.',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#disable-service-bus-diagnostic-logs','namespaces','azure','EnableDiagnosticLogsInServiceBus','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"f8d36e2f-389b-4ee4-898d-21aeb69a0f45\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"AzureNamespacesDiagnosticLogs_version-1_EnableDiagnosticLogsInServiceBus_namespaces\",\"autofix\":false,\"alexaKeyword\":\"EnableDiagnosticLogsInServiceBus\",\"policyRestUrl\":\"\",\"targetType\":\"namespaces\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_EnableDiagnosticLogs_namespaces\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_EnableDiagnosticLogs_namespaces','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-11-08','2019-11-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AzureSQLAuditLogging_version-1_ConfigureActionGroupsInSQLAuditSettings_sqlserver','azure_ConfigureActionGroups_sqlserver','ConfigureActionGroupsInSQLAuditSettings','Configure SQL Audit Action Groups','To capture critical activity on SQL databases and servers, ensure proper configuration of the \"AuditActionGroup\"\" property in the auditing policy implemented at the Microsoft Azure SQL server level. Enable SQL database auditing and configure the \"\"AuditActionGroup\"\" property to include the SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP, FAILED_DATABASE_AUTHENTICATION_GROUP, and BATCH_COMPLETED_GROUP action groups for comprehensive audit logging of SQL servers and hosted databases.\"',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#configure-sql-audit-action-groups','sqlserver','azure','ConfigureActionGroupsInSQLAuditSettings','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"7ff426e2-515f-405a-91c8-4f2333442eb5\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"AzureSQLAuditLogging_version-1_ConfigureActionGroupsInSQLAuditSettings_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"ConfigureActionGroupsInSQLAuditSettings\",\"policyRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_ConfigureActionGroups_sqlserver\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_ConfigureActionGroups_sqlserver','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-11-08','2019-11-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AzureSQLServerAuthenticationSettings_version-1_EnableAzureADAuthentication_sqlserver','azure_EnableAzureADAuth_sqlserver','EnableAzureADAuthentication','Provision Active Directory Administrator for SQL Servers','Configuring Azure Active Directory authentication allows for central management of identity and access to Azure SQL databases through an Active Directory administrator. This simplifies permission management, improves security, and reduces the number of user identities. Additional benefits include password rotation in one place, external group management of permissions, and support for various forms of authentication. Connections from SQL Server Management Studio and SQL Server Data Tools are also enabled.',NULL,'https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#provision-active-directory-administrator-for-sql-servers','sqlserver','azure','EnableAzureADAuthentication','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"1f314764-cb73-4fc9-b863-8eca98ac36e9\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"AzureSQLServerAuthenticationSettings_version-1_EnableAzureADAuthentication_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"EnableAzureADAuthentication\",\"policyRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_EnableAzureADAuth_sqlserver\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_EnableAzureADAuth_sqlserver','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-11-08','2019-11-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Account_Delete_Azure_Key_Valut_log_alert','Azure_Account_Delete_Azure_Key_Valut_log_alert','Azure_Account_Delete_Azure_Key_Valut_log_alert','Enable Log Alert for Delete Key Vault Events','Configure a Microsoft Azure activity log alert to trigger whenever a \"Delete Key Vault\"\" event occurs in your Azure cloud account. This alert condition improves Key Vault resource security and management by reducing the time required to mitigate accidental or intentional deletions, using the Microsoft Azure Monitor service.\"','To implement a Microsoft Azure activity log alert for Delete Key Vault (Microsoft.KeyVault/vaults) events','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-update-security-policy-activity-log-alert','subscription','azure','Delete_Azure_Key_Valut_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Key Vault events are triggered\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to Delete Key Vault events are triggered\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.KeyVault/vaults/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Delete Key Valut log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Account_Delete_Azure_Key_Valut_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Delete_Azure_Key_Valut_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Azure_Account_Delete_Azure_Key_Valut_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_Account_Delete_Azure_Key_Valut_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Check_Public_Access_For_Storage_Account','azure_check_public_access_for_storage_account','Azure_Check_Public_Access_For_Storage_Account','Deny Public Access to Storage Accounts with Blob Containers','To improve the security of your Microsoft Azure Storage account, it\'s advisable to modify the default setting from \"Allow\"\" to \"\"Deny\"\" and restrict access to selected networks or IP addresses. To achieve this, you may allow access to particular Azure Virtual Networks, which provide a secure network boundary, or public IP address ranges, which facilitate connections from specific services or clients. With network restrictions in place, only authorized applications from approved networks or IP addresses will be permitted to access the storage account. These applications must also possess the appropriate authorization to gain entry.\n\"','Enable cloudtrail for all regions','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-storage-account','storageaccount','azure','CheckStorageAccountPublicAccess','{\"params\":[{\"encrypt\":false,\"value\":\"check-public-access-for-storage-account\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Check_Public_Access_For_Storage_Account\",\"autofix\":false,\"alexaKeyword\":\"CheckStorageAccountPublicAccess\",\"policyRestUrl\":\"\",\"targetType\":\"storageaccount\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_check_public_access_for_storage_account\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_check_public_access_for_storage_account','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-03','2022-06-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Close_management_ports_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_security_center','Close_management_ports','Deny Access to Virtual Machine Management Ports','Management ports, such as Remote Desktop Protocol (RDP) and Secure Shell (SSH), are commonly used to connect to Azure virtual machines to administer them remotely. However, these ports open your virtual machine to potential attacks from the Internet and can expose you to credential-guessing attempts. It is important to ensure that these management ports are securely configured and monitored to minimize the risk of attack.','','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-access-to-virtual-machine-management-ports','virtualmachine','azure','Close_management_ports','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-security-rule\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Management@ports@should@be@closed@on@your@virtual@machines\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Close_management_ports_version-1_SecurityCenter_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"close management port\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_virtualmachine_security_center\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_virtualmachine_security_center','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Create_Network_Security_Group_log_alert','Azure_Account_Create_Network_Security_Group_log_alert','Azure_Create_Network_Security_Group_log_alert','Enable Log Alert for Create/Update Network Security Group',' Ensure that an activity log alert is created for the Create or Update Network Security Group events','create a Microsoft Azure activity log alert for Create or Update Network Security Group event','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Create_Network_Security_Group','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to create or  Update Network Security Group\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to create or  Update Network Security Group\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Network/networkSecurityGroups/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Create or Update Network Security Group log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Create_Network_Security_Group_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Create_Network_Security_Group\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Azure_Account_Create_Network_Security_Group_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_Account_Create_Network_Security_Group_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-24','2022-05-24','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Enable_Adaptive_Application_controls_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_enable_adaptive_application','Enable_Adaptive_Application_controls','Enable Adaptive Application Controls','To enable the scanning of adaptive application controls and control which applications can run on eligible virtual machines (VMs) in Microsoft Azure, it is necessary to activate the monitoring of this feature. This allows Microsoft Defender for Cloud to use machine learning to analyze the applications running on each VM and suggest a list of known-safe applications, helping to harden the VMs against malware. By activating the Adaptive Application Control feature, which is an automated application to allowlist solution provided by Microsoft Defender for Cloud, only specific applications are allowed to run on Azure and non-Azure VMs, using both Windows and Linux.','Open the Security Center dashboard.,In the left pane select Adaptive application controls located under Advanced cloud defense and Follow the guidelines.','https://github.com/tmobile/pacbot/wiki/Policies#Enable-Adaptive-Application-Controls','virtualmachine','azure','Enable_Adaptive_Application_controls','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-security-rule\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Adaptive@Application@Controls@should@be@enabled@on@virtual@machines\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Enable_Adaptive_Application_controls_version-1_SecurityCenter_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"enable adaptive controls\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Azure_Enable_Adaptive_Application_controls_version-1\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_virtualmachine_enable_adaptive_application','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Enable_CMK_Encryption_For_Storage_Account_version-1_storageaccount','azure_enable_storage_account_customer_managed_key_encryption','EnableStorageAccountCMKEncryption','Enable Azure Storage Account Customer Managed Keys','Customer Managed Keys allow customers to control their own encryption keys for Azure Storage accounts, providing an extra layer of security and enabling greater regulatory compliance. This feature allows customers to generate, store, and revoke their own encryption keys in Azure Key Vault, ensuring that they have full control over who can access their data. Additionally, customers can rotate their encryption keys as needed to further enhance security. Using Customer Managed Keys is a best practice for ensuring the highest level of security for Azure Storage account data. ','create the Microsoft Azure Key Vault where the required Customer Managed Key and also create the Customer Managed Key (CMK), required to encrypt data within Microsoft Azure Storage account','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-azure-storage','storageaccount','azure','EnableStorageAccountCMKEncryption','{\"params\":[{\"encrypt\":false,\"value\":\"check-customer-managed-keys-encryption-enabled-for-storage-account\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Enable_CMK_Encryption_For_Storage_Account_version-1_storageaccount\",\"autofix\":false,\"alexaKeyword\":\"EnableStorageAccountCMKEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"storageaccount\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_enable_storage_account_customer_managed_key_encryption\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_enable_storage_account_customer_managed_key_encryption','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-18','2022-05-18','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Enable_Database_Tier_Customer_Managed_Key','Azure_Enable_Database_Tier_Customer_Managed_Key','Azure_Enable_Database_Tier_Customer_Managed_Key','Create AWS KMS Customer Master Key for Database-Tier','Using your own AWS KMS Customer Master Key (CMK) for encryption of data in your database-tier provides you with complete control over encryption key ownership and usage. It\'s recommended to create an Amazon KMS Customer Master Key (CMK) for your database tier to protect data-at-rest in your AWS web stack and meet security and compliance requirements. You can easily rotate, audit, and disable the key with Amazon KMS. Additionally, it\'s advised to tag AWS resources in your database tier to better manage and organize your resources.','create and configure a dedicated Customer-Managed Key (CMK) for the Azure cloud resources provisioned within your Database tier','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-azure-storage','vaults','azure','Enable_Database_Tier_Customer_Managed_Key','{\"assetGroup\":\"azure\",\"policyId\":\"Azure_Enable_Database_Tier_Customer_Managed_Key\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"Azure_Enable_Database_Tier_Customer_Managed_Key\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"azure\",\"targetType\":\"vaults\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-keyvault-rule-alert\",\"key\":\"policyKey\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"selected Customer Master Key  is not an Database-tier resource\",\"key\":\"failure\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"selected Customer Master Key  is an Database-tier resource\",\"key\":\"SUCCESS\"},{\"isValueNew\":true,\"defaultVal\":\"cc-production-vault,cc-user-access-vault\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Keyvault name\",\"description\":\"Keyvault name\",\"value\":\"cc-production-vault,cc-user-access-vault\",\"key\":\"keyValutName\",\"isMandatory\":true},{\"isValueNew\":true,\"defaultVal\":\"Owner\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Keyvault key\",\"description\":\"Keyvault key\",\"value\":\"Owner\",\"key\":\"keyVaultKey\",\"isMandatory\":true},{\"isValueNew\":true,\"defaultVal\":\"AzSQLManager\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Keyvault value\",\"description\":\"Keyvault value\",\"value\":\"AzSQLManager\",\"key\":\"keyVaultValue\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"Ensure Database Tier Customer-Managed Key\",\"key\":\"policyName\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"autofix\":false,\"alexaKeyword\":\"Enable_Database_Tier_Customer_Managed_Key\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_Enable_Database_Tier_Customer_Managed_Key','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Enable_Email_Alerts_for_SQL_Threat_Detection_Service_version-1_sqldatabase','azure_sqldatabase_enable_email_alerts','EnableEmailAlerts','Enable Alert for Azure SQL Advanced Threat Detection','Enabling alerts for Azure SQL Advanced Threat Detection is important for detecting and preventing potential data breaches or unauthorized access to sensitive data. It is also necessary for compliance with security standards and regulations, including GDPR and HIPAA, which require regular monitoring and incident detection.','Provide one or more recepients emails','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-azure-sql-advanced-threat-detection-alerts','sqldatabase','azure','EnableEmailAlerts','{\"params\":[{\"encrypt\":false,\"value\":\"check-email-alerts-enabled-for-sql-threat-detection\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Enable_Email_Alerts_for_SQL_Threat_Detection_Service_version-1_sqldatabase\",\"autofix\":false,\"alexaKeyword\":\"EnableEmailAlerts\",\"policyRestUrl\":\"\",\"targetType\":\"sqldatabase\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_sqldatabase_enable_email_alerts\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/check-email-alerts-enabled-for-sql-threat-detection','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-10','2022-05-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Enable_Encryption_for_Boot_Disk_Volumes_version-1_virtualmachine','azure_enable_boot_disk_encryption_virtualmachine','EnableBootDiskVolumesEncryption','Encrypt VMs with Disk Encryption using Key Vault','Azure Disk Encryption uses DM-Crypt for Linux and BitLocker for Windows to provide volume encryption for OS and data disks of Azure virtual machines (VMs), integrated with Azure Key Vault for managing encryption keys and secrets. Enabling Azure Disk Encryption is recommended for production data to protect VM disks from unauthorized access and meet compliance requirements. Encrypting boot volumes ensures entire VM data is unrecoverable without a key, providing protection from unwarranted reads. It is essential to encrypt Microsoft Azure virtual machine (VM) boot volumes using Azure Disk Encryption and integrated Azure Key Vault to meet security and compliance requirements.','create the Microsoft Azure Key Vault where the disk encryption key will be placed and set encryption enabled as true','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#encrypt-boot-disk','virtualmachine','azure','EnableBootDiskVolumesEncryption','{\"params\":[{\"encrypt\":false,\"value\":\"check-encryption-enabled-for-boot-disk-volumes\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Enable_Encryption_for_Boot_Disk_Volumes_version-1_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"EnableBootDiskVolumesEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_enable_boot_disk_encryption_virtualmachine\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_enable_boot_disk_encryption_virtualmachine','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Enable_Network_Security_for_FTP','azure_enable_network_security_FTP','Enable_Network_Security_for_FTP','Deny Public Access to FTP Ports 20 and 21','It is crucial to secure your Azure virtual machines associated with these NSGs by ensuring that Microsoft Azure network security groups (NSGs) do not permit unrestricted access on TCP ports 20 and 21, which are used for data transfer and communication by the File Transfer Protocol (FTP) client-server applications. Attackers might use brute-force methods to gain access to your Azure virtual machines through these ports, underscoring the importance of securing them.','Ensure that no network security groups allow unrestricted inbound access on TCP port 20,21 (FTP).','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-ftp-ports-20-and-21','nsg','azure','Enable_Network_Security_for_FTP','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"policyKey\"},{\"key\":\"protocol\",\"value\":\"tcp\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"20,21\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny unresticted access to FTP port NNN\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Enable_Network_Security_for_FTP\",\"autofix\":false,\"alexaKeyword\":\"Enable Network Security for FTP\",\"policyRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_enable_network_security_FTP\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_enable_network_security_FTP','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-02','2022-05-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Enable_Network_Security_for_RPC','azure_enable_network_security_RPc','Enable_Network_Security_for_RPC','Deny Public Access to RPC Port 135','The Microsoft Message Queuing (MSMQ) and other Microsoft Windows/Windows Server software use the Remote Procedure Call (RPC) TCP port 135 for client-server communications. Allowing unrestricted access to this port can lead to hacking, ransomware, and denial-of-service (DoS) attacks. To reduce the attack surface, it is essential to follow the principle of least privilege and ensure that Microsoft Azure network security groups (NSGs) do not allow unrestricted access on TCP port 135. ',' Access should be restricted for permissive Network Security Groups with Internet-facing RPC','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-rpc-port-135','nsg','azure','RPC','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"policyKey\"},{\"key\":\"protocol\",\"value\":\"tcp\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"135\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny public access to RPC port 135\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Enable_Network_Security_for_RPC\",\"autofix\":false,\"alexaKeyword\":\"Enable Network Security for RPC\",\"policyRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_enable_network_security_RPC\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_enable_network_security_RPC','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-02','2022-05-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Enable_Network_Security_for_SQLSERVER','azure_enable_network_security_SQLSERVER','Enable_Network_Security_for_SQLSERVER','Deny Public Access to SQL Server Port 1433','\nAllowing unrestricted access to TCP port 1433 can lead to malicious activities such as hacking, denial-of-service (DoS) attacks, and SQL injection attacks. To minimize the attack surface and adhere to the principle of least privilege, it is essential to ensure that all Microsoft Azure network security groups (NSGs) limit inbound access to TCP port 1433 to only trusted IP addresses. ',' Access should be restricted for permissive Network Security Groups with Internet-facing SQLSERVER','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-sql-server-port-1433','nsg','azure','SQLSERVER','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"policyKey\"},{\"key\":\"protocol\",\"value\":\"tcp\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"1433\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny public access to SQL Server port 1433\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Enable_Network_Security_for_SQLSERVER\",\"autofix\":false,\"alexaKeyword\":\"Enable Network Security for SQLSERVER\",\"policyRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_enable_network_security_SQLSERVER\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_enable_network_security_SQLSERVER','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-02','2022-05-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Enable_Network_Security_for_SSH','azure_enable_network_security_SSH','Enable_Network_Security_for_SSH','Deny Public Access to SSH Port 22','Secure remote login is achieved through TCP port 22, which connects an SSH client application with an SSH server. In order to minimize the possibility of a security breach and adhere to the principle of least privilege, it is essential to review the inbound rules of your Microsoft Azure network security groups (NSGs) for TCP port 22. It is recommended to restrict access to only the necessary IP addresses, instead of permitting unrestricted access (i.e., 0.0.0.0/0).','Restrict NSG Source setting. refer for this more info https://docs.microsoft.com/en-us/azure/virtual-network/manage-network-security-group','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-ssh-port-22','nsg','azure','SSH','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"policyKey\"},{\"key\":\"protocol\",\"value\":\"tcp\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"22\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny public access to SSH port 22\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Enable_Network_Security_for_SSH\",\"autofix\":false,\"alexaKeyword\":\"Enable Network Security for SSH\",\"policyRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_enable_network_security_SSH\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_enable_network_security_SSH','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-02','2022-05-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Enable_Network_Security_for_UDP','azure_enable_network_security_UDP','Enable_Network_Security_for_UDP','Deny Public Access to User Datagram Protocol (UDP)','To reduce the attack surface and implement the principle of least privilege, ensure that Microsoft Azure network security groups (NSGs) do not allow unrestricted access(i.e., 0.0.0.0/0) to UDP ports. The User Datagram Protocol (UDP) is a communication protocol used on the internet for transmitting time-sensitive data, such as video streaming or Domain Name System (DNS) lookups. One of the main benefits of using UDP is that it allows for fast data transfer. However, it is also possible for packets to be lost during transmission, which can create vulnerabilities and potentially allow for malicious activities like Distributed Denial of Service (DDoS) attacks.',' Access should be restricted for permissive Network Security Groups with Internet-facing UDP','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-udp-access','nsg','azure','Enable_Network_Security_for_UDP','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"policyKey\"},{\"key\":\"protocol\",\"value\":\"UDP\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"*\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny public UDP access\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Enable_Network_Security_for_UDP\",\"autofix\":false,\"alexaKeyword\":\"Enable Network Security for UDP\",\"policyRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_enable_network_security_UDP\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_enable_network_security_UDP','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-10','2022-05-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Enable_Network_Security_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_enable_network_security','Enable_Network_Security','Enable Network Security Groups on Virtual Machines','Enabling network security group monitoring in Microsoft Azure allows Azure Security Center to audit VM-associated network security groups for overly permissive traffic rules. This feature detects such groups and recommends configuring them to control inbound and outbound traffic to VMs with public endpoints. Subnet-configured security groups are inherited by all VM network interfaces by default.','','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-network-security-groups-on-virtual-machines','virtualmachine','azure','Enable_Network_Security','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-security-rule\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Access@should@be@restricted@for@permissive@Network@Security@Groups@with@Internet-facing@VMs\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Enable_Network_Security_version-1_SecurityCenter_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"enable network security\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_virtualmachine_enable_network_security\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_virtualmachine_enable_network_security','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Enable_Web_Tier_Customer_Managed_Key','Azure_Enable_Web_Tier_Customer_Managed_Key','Azure_Enable_Web_Tier_Customer_Managed_Key','Enable Web Tier Customer Managed Keys','To enhance security and compliance in your Microsoft Azure cloud web tier, it is recommended to utilize a Customer-Managed Key (CMK) or Bring Your Own Key (BYOK) within your Azure Key Vault. This provides complete control over key usage and ownership, implementing the principle of least privilege. It is advisable to configure at least one CMK/BYOK for your web tier. All Azure cloud resources within the web tier must be tagged with <web_tier_tag>:<web_tier_tag_value>, where <web_tier_tag> refers to the tag name and <web_tier_tag_value> refers to the tag value. Properly configure the tag set for your Azure web tier before implementing the CMK/BYOK key.','create and configure a dedicated Customer-Managed Key (CMK) for the Azure cloud resources provisioned within your web tier','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-azure-storage','vaults','azure','Enable_Web_Tier_Customer_Managed_Key','{\"assetGroup\":\"azure\",\"policyId\":\"Azure_Enable_web_Tier_Customer_Managed_Key\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"Azure_Enable_web_Tier_Customer_Managed_Key\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"azure\",\"targetType\":\"vaults\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-keyvault-rule-alert\",\"key\":\"policyKey\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"selected Customer Master Key  is not an web-tier resource\",\"key\":\"failure\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"selected Customer Master Key  is an Web-tier resource\",\"key\":\"SUCCESS\"},{\"isValueNew\":true,\"defaultVal\":\"cc-main-key-vault,cc-user-access-vault\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Keyvault name\",\"description\":\"Keyvault name\",\"value\":\"cc-main-key-vault,cc-user-access-vault\",\"key\":\"keyValutName\",\"isMandatory\":true},{\"isValueNew\":true,\"defaultVal\":\"Environment\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Keyvault key\",\"description\":\"Keyvault key\",\"value\":\"Environment\",\"key\":\"keyVaultKey\",\"isMandatory\":true},{\"isValueNew\":true,\"defaultVal\":\"Production\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Keyvault value\",\"description\":\"Keyvault value\",\"value\":\"Production\",\"key\":\"keyVaultValue\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"Ensure web Tier Customer-Managed Key\",\"key\":\"policyName\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"autofix\":false,\"alexaKeyword\":\"Enable_web_Tier_Customer_Managed_Key\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_Enable_Web_Tier_Customer_Managed_Key','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Enable_key_Vault_Customer_Managed_Key','Azure_Enable_key_Vault_Customer_Managed_Key','Azure_Enable_key_Vault_Customer_Managed_Key','Enable Azure Key Vault Customer Managed Key','Enabling Azure Key Vault Customer Managed Key (CMK) provides increased security, control, and compliance to your data in the cloud. By bringing your own encryption keys to Azure Key Vault, you can manage encryption keys and control access to them, which ensures that only authorized users can access your data. Enabling CMK helps meet regulatory and compliance requirements and provides additional layers of security to your Azure resources.','create and configure a dedicated Customer-Managed Key  to be used by the Azure cloud resources provisioned within your application tier','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-azure-storage','vaults','azure','Enable_key_Vault_Customer_Managed_Key','{\"assetGroup\":\"azure\",\"policyId\":\"Azure_Enable_key_Vault_Customer_Managed_Key\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"Azure_Enable_key_Vault_Customer_Managed_Key\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"azure\",\"targetType\":\"vaults\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-keyvault-rule-alert\",\"key\":\"policyKey\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"selected Customer Master Key  is not an app-tier resource\",\"key\":\"failure\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"selected Customer Master Key  is an app-tier resource\",\"key\":\"SUCCESS\"},{\"isValueNew\":true,\"defaultVal\":\"cc-project5-key-vault,cc-user-access-vault\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Keyvault name\",\"description\":\"Keyvault name\",\"value\":\"cc-project5-key-vault,cc-user-access-vault\",\"key\":\"keyValutName\",\"isMandatory\":true},{\"isValueNew\":true,\"defaultVal\":\"ProjectName\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Keyvault key\",\"description\":\"Keyvault key\",\"value\":\"ProjectName\",\"key\":\"keyVaultKey\",\"isMandatory\":true},{\"isValueNew\":true,\"defaultVal\":\"Project5\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Keyvault value\",\"description\":\"Keyvault value\",\"value\":\"Project5\",\"key\":\"keyVaultValue\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"Enable Azure key Vault Customer-Managed Key\",\"key\":\"policyName\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"autofix\":false,\"alexaKeyword\":\"Enable_key_Vault_Customer_Managed_Key\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_Enable_key_Vault_Customer_Managed_Key','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Encryption_for_Data_in_RedisCache','azure_encryption_for_data_in_RedisCache','Data in Transit should be encrypted in Redis Cache','Enable In Transit Encryption for Redis Cache Server','Using secure connections between the cache server and the service/application protects data in transit and authenticates users. Encryption is recommended to protect production data from unauthorized access and comply with data encryption requirements. Enabling SSL connection to Azure Redis Cache servers is essential to meet cloud security and compliance requirements, as it helps prevent unauthorized access to sensitive data during transit. Enforcing SSL connection is necessary to ensure data in transit remains secure.','Enable in-transit encryption on Redis Cache by allowing access only via SSL','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-in-transit-encryption-for-redis-cache-server','rediscache','azure','Enable Encryption for Data in RedisCache','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-rediscache-rule\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Enable Encryption for Data in RedisCache\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Encryption_for_Data_in_RedisCache\",\"autofix\":false,\"alexaKeyword\":\"Enable Encryption for Data in RedisCache\",\"policyRestUrl\":\"\",\"targetType\":\"rediscache\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_encryption_for_data_in_RedisCache\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_encryption_for_data_in_RedisCache','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'aishwarya.kulkarni@paladincloud.io','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Install_a_vulnerability_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_install_a_vulnerability','Install_A_Vulnerability','Install Vulnerability Assessment Solution on Virtual Machines','Enable automatic provisioning of vulnerability assessment solutions for Azure VM servers using Microsoft Defender for Cloud to monitor security configurations and reduce management overhead. This applies to both Azure and hybrid environments, streamlining the installation of required agents and extensions on VMs.','','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#install-vulnerability-assessment-solution-on-virtual-machines','virtualmachine','azure','Install_A_Vulnerability','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-security-rule\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Vulnerability@assessment@solution@should@be@installed@on@your@virtual@machines\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Install_a_vulnerability_version-1_SecurityCenter_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"install vulnerability scan tool\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_virtualmachine_install_a_vulnerability\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_virtualmachine_install_a_vulnerability','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Install_monitoring_agent_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_install_monitoring_agent','Install_Monitoring_Agent','Install Monitoring Agent on Machines','Installing Monitoring Agents on Azure machines is crucial for enhanced visibility, performance optimization, log collection, timely alerts, security, compliance, simplified management, and seamless integration with other Azure services. This ensures efficient VM operation, effective troubleshooting, and a secure, compliant infrastructure.','Installation of the monitoring agent and enabling data collection in Security Center can be done in several ways: Using Security Centers automatic provisioning on your subscription(s). This will automatically provision the monitoring agent on current and future-created virtual machines on your subscription(s). You can enable automatic provisioning on multiple subscriptions by clicking on the Getting started menu item, and select \'Install agents\'. You can also enable it for specific subscriptions and customize additional settings by clicking on the \'Security policy\' menu item, select \'Edit settings\' on a subscription and enable auto provisioning in the \'data collection\' menu item. Install the Microsoft Monitoring agent on your Virtual machines as a VM extension or directly, by following these instructions. Provision the Microsoft Monitoring agent with Azure Policies.','https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#install-monitoring-agent-on-machines','virtualmachine','azure','Install_Monitoring_Agent','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-security-rule\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Monitoring@agent@should@be@installed@on@your@machines\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Install_monitoring_agent_version-1_SecurityCenter_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"install monitoring agent\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_virtualmachine_install_monitoring_agent\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_virtualmachine_install_monitoring_agent','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Just_in_time_network_access_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_just_in_time_network_access','Just_in_time_network_access','Enable JIT Access to secure VM Management','Microsoft Azure Security Center offers Just-in-Time (JIT) access as a threat prevention instrument to reduce surface areas susceptible to attacks. JIT access locks down virtual machines at the network level by blocking inbound traffic to management ports, and allows you to create policies to control access and reduce the attack surface. Enabling JIT access for Azure virtual machines is essential to improve security and reduce exposure to attacks while providing easy SSH/RDP access when needed.','Open the Security Center dashboard.,In the left pane, select Just-in-time VM access.,The Just-in-time VM access window opens.,Select the Recommended tab.,Under VIRTUAL MACHINE, click the VMs that you want to enable. This puts a checkmark next to a VM.,','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-jit-network-access-control','virtualmachine','azure','Just_in_time_network_access','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-security-rule\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Just-In-Time@network@access@control@should@be@applied@on@virtual@machines\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Just_in_time_network_access_version-1_SecurityCenter_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"enable just in time access\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_virtualmachine_just_in_time_network_access\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_virtualmachine_just_in_time_network_access','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_KeyVault_Key_ExpiryDate','Azure_KeyVault_Key_ExpiryDate','Azure_KeyVault_Key_ExpiryDate','Set Expiration Date for Keys in Key Vault','Setting an expiration date for keys in Key Vault provides benefits such as enhanced security, compliance, simplified key management, improved auditing and accountability, and better performance. It reduces the risk of compromised keys, helps ensure compliance, simplifies key management, provides a clear record of key usage, and helps maintain strong security and system performance over time. It is an important best practice to follow for the security and integrity of cryptographic systems.','set expiration date for key under settings->keys','https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#set-expiration-date-for-keys-in-key-vault','vaults','azure','KeyVaultKeyExpirationDate','{\"params\":[{\"encrypt\":false,\"value\":\"key-should-have-expiration-date\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"Key vault key does not have expiration date\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"Key vault key has expiration date\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Set expiration date for key in vault key\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_KeyVault_Key_ExpiryDate\",\"autofix\":false,\"alexaKeyword\":\"KeyVaultKeyExpirationDate\",\"policyRestUrl\":\"\",\"targetType\":\"vaults\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Azure_KeyVault_Key_ExpiryDate\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_KeyVault_Key_ExpiryDate','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-05','2022-08-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_KeyVault_Key_ExpiryDate_RBAC','Azure_KeyVault_Key_ExpiryDate_RBAC','RBAC Expiration date for keys','Set Expiration Date for RBAC for Keys in Key vaults','It is important to have an explicit expiration time for all Microsoft Azure Key Vault keys to meet cloud security best practices, and to renew these keys prior to their expiration date to maintain security and compliance. Regularly check for expiring keys and create new versions of these keys to ensure security and compliance. Configuration for key renewal before expiration should be set on the Cloud Conformity account dashboard before running this rule.','1.Ensure that the user has the role of Key Vault Secrets Officer assigned \n2.Go to Key vaults \n3.For each Key vault, click on keys . \n4.Under the Settings section, Make sure Enabled? is set to Yes \n5.Ensure that each key in the vault has EXPIRATION DATE set as appropriate','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Set-expiration-date-for-Role-base-access-control-of-keys-in-key-vaults','vaultsrbac','azure','KeyVaultKeyExpirationDateRBAC','{\"params\":[{\"encrypt\":false,\"value\":\"key-should-have-expiration-date\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"Key vault key does not have expiration date with access of RBAC\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"Key vault key has expiration date with access of RBAC\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Set expiration date for key in vault key\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_KeyVault_Key_ExpiryDate_RBAC\",\"autofix\":false,\"alexaKeyword\":\"KeyVaultKeyExpirationDateRBAC\",\"policyRestUrl\":\"\",\"targetType\":\"vaultsrbac\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Azure_KeyVault_Key_ExpiryDate_RBAC\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_KeyVault_Key_ExpiryDate_RBAC','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-10','2022-11-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_KeyVault_Secret_ExpiryDate','Azure_KeyVault_Secret_ExpiryDate','Expiration date for secret','Set Expiration Date for Secrets in Key Vault','Setting an expiration date for secrets in Key Vault provides benefits such as reduced risk of compromise, simplified secret management, improved auditing and accountability, compliance, and maintained security over time. Secrets, like passwords and connection strings, are critical to security systems, and their compromise can pose a significant risk. Setting an expiration date for secrets in Key Vault can limit their lifespan, reducing the risk of compromise, simplifying secret management, and improving auditing and accountability. It is an important best practice to ensure the security and integrity of systems.','set expiration date for secrets under settings->secrets','https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#set-expiration-date-for-secrets-in-key-vault','vaults','azure','KeyVaultSecretExpirationDate','{\"params\":[{\"encrypt\":false,\"value\":\"secret-should-have-expiration-date\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"Key vault Secret does not have expiration date\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"Key vault Secret has expiration date\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Set expiration date for key in vault key\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_KeyVault_Secret_ExpiryDate\",\"autofix\":false,\"alexaKeyword\":\"KeyVaultSecretExpirationDate\",\"policyRestUrl\":\"\",\"targetType\":\"vaults\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Azure_KeyVault_Secret_ExpiryDate\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_KeyVault_Secret_ExpiryDate','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-12','2022-08-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_KeyVault_Secret_ExpiryDate_RBAC','Azure_KeyVault_Secret_ExpiryDate_RBAC','RBAC Expiration date for secrets','Set Expiration Date for RBAC for Secrets in Key Vaults','Setting an expiration date for RBAC for secrets in Key Vaults is important to help secure and protect confidential information, as it limits access time, ensures timely reviews of users and applications with access to the secret, and helps to avoid forgotten secrets becoming security risks.','1.Ensure that the user has the role of Key Vault Secrets Officer assigned \n2.Go to Key vaults \n3.For each Key vault, click on Secrets . \n4.Under the Settings section, Make sure Enabled? is set to Yes \n5.Ensure that each secret in the vault has EXPIRATION DATE set as appropriate','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Set-expiration-date-for-Role-base-access-control-of-secrets-in-key-vaults','vaultsrbac','azure','KeyVaultSecretExpirationDate','{\"params\":[{\"encrypt\":false,\"value\":\"secret-should-have-expiration-date\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"Key vault Secret does not have expiration date with access of RBAC\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"Key vault Secret has expiration date with access of RBAC\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Set expiration date for key in vault key\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_KeyVault_Secret_ExpiryDate_RBAC\",\"autofix\":false,\"alexaKeyword\":\"KeyVaultSecretExpirationDateRBAC\",\"policyRestUrl\":\"\",\"targetType\":\"vaultsrbac\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Azure_KeyVault_Secret_ExpiryDate_RBAC\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_KeyVault_Secret_ExpiryDate_RBAC','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-12','2022-11-12','ENABLED');
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='Azure_KeyVault_Secret_ExpiryDate_RBAC';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='Azure_KeyVault_Key_ExpiryDate_RBAC';
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Remediate_vulnerabilities_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_remediate_vulnerabilities','Remediate_vulnerabilities','Use a Vulnerability Assessment Solution to Remediate vulnerabilities ','Using a Vulnerability Assessment Solution is crucial for enhancing security posture, prioritizing risk management, ensuring compliance, providing actionable insights, streamlining security processes, offering visibility and tracking, and minimizing potential damages from cyber attacks. It helps maintain a strong, secure, and compliant infrastructure.','','https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#use-a-vulnerability-assessment-solution-to-remediate-vulnerabilities','virtualmachine','azure','Remediate_vulnerabilities','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-security-rule\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Vulnerabilities@should@be@remediated@by@a@Vulnerability@Assessment@solution\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Remediate_vulnerabilities_version-1_SecurityCenter_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"remediate vulnerabilities\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_virtualmachine_remediate_vulnerabilities\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_virtualmachine_remediate_vulnerabilities','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Resolve_monitoring_agent_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_resolve_monitoring_agent','resolve_monitoring_agent','Resolve App Service Health Check Issues','Proper maintenance of your App Service is essential to guarantee the reliability and efficiency of your application. Regular health checks are necessary to identify and resolve problems that could lead to service interruptions or sluggish performance. By addressing these issues, you can optimize your app for an improved user experience and make it more resilient to unexpected disruptions. Additionally, regular maintenance will help ensure that your application runs at optimal performance and that any potential problems are addressed quickly, resulting in a smoother overall operation.','','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#resolve-app-service-health-check-issues','virtualmachine','azure','resolve_monitoring_agent','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-security-rule\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Monitoring@agent@health@issues@should@be@resolved@on@your@machines\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Resolve_monitoring_agent_version-1_SecurityCenter_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"resolve monitoring agent findings\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_virtualmachine_resolve_monitoring_agent\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_virtualmachine_resolve_monitoring_agent','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_SQLServerDataSecuritySettings_version-1_ConfigureEmailInDataSecuritySettings_sqlserver','azure_ConfigureEmailInDataSecurity_sqlserver','ConfigureEmailInDataSecuritySettings','Configure Email in Data Security Settings','Configuring email in Data Security Settings in Azure is essential for receiving timely security alerts, compliance notifications, and operational updates. It facilitates prompt incident response, promotes accountability and communication, and aids in auditing and reporting, ultimately improving the overall management of your Azure environment.',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#configure-email-in-data-security-settings','sqlserver','azure','ConfigureEmailInDSS','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"9677b740-f641-4f3c-b9c5-466005c85278\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_SQLServerDataSecuritySettings_version-1_ConfigureEmailInDataSecuritySettings_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"ConfigureEmailInDSS\",\"policyRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_ConfigureEmailInDataSecurity_sqlserver\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_ConfigureEmailInDataSecurity_sqlserver','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-11-14','2019-11-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_SSH_Authentication_Type_version-1_SSH_virtualmachine','azure_SSH_Authentication_virtualmachine','SSHAuthentication','Authenticate VM Access Using SSH Keys for Enhanced Security','To ensure a higher level of security and mitigate the risks associated with passwords, it is advisable to authenticate access to virtual machines using SSH keys. Removing the option of password authentication enforces more secure methods and eliminates the vulnerabilities that come with passwords.','To reconfigure password-based Microsoft Azure Linux virtual machines to use keys for SSH authentication need to re-create the virtual machines','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#disable-password-authentication','virtualmachine','azure','SSHAuthentication','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-ssh-authentication-type\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_SSH_Authentication_Type_version-1_SSH_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"SSHAuthentication\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_SSH_Authentication_virtualmachine\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_SSH_Authentication_virtualmachine','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-06','2022-05-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','Security_Groups_RDP_port_should_not_be_publicly_accessible','Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','Deny Public Access to RDP Port 3389','Unrestricted access (e.g., 0.0.0.0/0) on RDP port 3389 should not be allowed as it can open your system to malicious actors and increase the attack surface.\nTo increase security, it is recommended to update your Azure Network Security Group (NSG) configuration to restrict Remote Desktop Protocol (RDP) access to specific IP addresses or IP ranges. ','Do not allow public access to well known ports of an EC2 instance directly (except for 80 and 443).','https://github.com/PaladinCloud/Rev1/wiki/Azure-Policy#deny-public-access-to-rdp-port-3389','nsg','azure','Security_for_RDP_port_3889_should_not_be_acessed_publicly','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"policyKey\"},{\"key\":\"protocol\",\"value\":\"TCP\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"3389\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Security Groups with RDP port 3389 should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"Security_for_RDP_port_3889_should_not_be_acessed_publicly\",\"policyRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Security_Groups_RDP_port_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Security_Groups_RDP_port_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-02','2022-05-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Threat_Detection_on_SQL_Server','azure_enable_threat_detection_on_sql_server','enable_threat_detection_on_sql_server','Enable Azure Threat Detection on SQL Server','Azure Threat Detection for SQL Server provides advanced threat protection for your databases in the cloud. It monitors the security of your databases and detects suspicious activities, such as SQL injection attacks, malicious attempts to access sensitive data, and anomalous database activities. It also provides an easy-to-use dashboard to view the security of your databases and track threats. By enabling Azure Threat Detection on SQL Server, you can gain visibility into potential security threats, protect your databases from attack, and minimize your risk of data loss.','all types of threat detection for your Microsoft Azure SQL database servers should be enabled','https://github.com/PaladinCloud/Rev1/wiki/Azure-Policy#enable-azure-sql-advanced-threat-detection-alerts','sqldatabase','azure','Enable Threat Detection on SQL Server','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-threat-detection-on-sql-server\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"azure enable threat detection on sql server\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Threat_Detection_on_SQL_Server\",\"autofix\":false,\"alexaKeyword\":\"Enable Threat Detection on SQL Server\",\"policyRestUrl\":\"\",\"targetType\":\"sqldatabase\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_enable_azure_threat_detection_on_sql_server\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_enable_azure_threat_detection_on_sql_server','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-02','2022-05-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_Virtual_Machine_Endpoint_Protection','azure_Virtual_Machine_Endpoint_Protection','Install Endpoint Protection for VM','Install Endpoint Protection for VM','Endpoint protection software such as Microsoft Antimalware can help protect Azure virtual machines (VMs) from viruses, spyware, and other malicious software. Azure Security Center monitors the status of anti-malware protection on VMs, alerting users to any unprotected VMs. When installing endpoint protection, it provides real-time detection of malicious software and can prevent it from installing or running on your VMs.','Ensure end point protection for VM','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#install-endpoint-protection-for-vm','virtualmachine','azure','Enable End point protection for VM','{\"params\":[{\"encrypt\":false,\"value\":\"check-endpoint-protection-installed-for-virtual-machines\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_Virtual_Machine_Endpoint_Protection\",\"autofix\":false,\"alexaKeyword\":\"End point protection for VM\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Virtual_Machine_Endpoint_Protection\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Virtual_Machine_Endpoint_Protection','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-18','2022-05-18','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_harden-NSGs_internet_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_harden-nsgs_internet','harden-NSGs_internet','Harden the Network Security Group Rules for Internet-Facing Virtual Machines','Hardening the Network Security Group Rules for Internet-Facing Virtual Machines in Azure is critical to ensure the security of your cloud environment. By hardening the rules, you can reduce the attack surface and limit access to only those services and ports necessary for the applications and services running on the virtual machine. This can help protect against malicious actors trying to gain access to your environment and prevent attackers from exploiting any open or vulnerable ports. Hardening the Network Security Group Rules can help you meet compliance requirements, such as those that government regulations or industry standards may impose.','','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#harden-network-security-group-rules-of-publicly-accessible-virtual-machines','virtualmachine','azure','harden-NSGs_internet','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-security-rule\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Harden@Network@Security@Group@rules@of@internet@facing@virtual@machines\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_harden-NSGs_internet_version-1_SecurityCenter_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"harden nsgs for internet facing vms\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_virtualmachine_harden-nsgs_internet\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_virtualmachine_harden-nsgs_internet','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_policies-Container_Security_Configurations_version-1_CSC_virtualmachine','azure_CSC_virtualmachine','CSC','Strengthen VM Security using Azure Container Security\n','Azure Container Security helps organizations ensure their container workloads are secure and compliant. It provides visibility and control of container images running in Azure and helps to identify potential security risks or misconfigurations. Azure Container Security also offers tools to detect and remediate container vulnerabilities and monitor container health. This helps reduce the risk of attacks and data breaches and ensures that containers comply with organizational standards and industry regulations.',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#configure-container-security','virtualmachine','azure','Container security','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"e8cbc669-f12d-49eb-93e7-9273119e9933\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_policies-Container_Security_Configurations_version-1_CSC_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"Container security\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_CSC_virtualmachine\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_CSC_virtualmachine','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-26','2019-11-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Azure_policies-Disk_Encryption_version-1_DE_virtualmachine','azure_DiskEncryption_virtualmachine','DE','Enable Disk Encryption Monitoring and Recommendations for Microsoft Azure Virtual Machines (VMs)','Enabling disk encryption monitoring and recommendations for Microsoft Azure virtual machines (VMs) provides benefits such as enhanced security, compliance, improved visibility, simplified management, and cost savings. It helps protect data, ensures compliance, provides greater visibility into the encryption status of VMs, simplifies management, and identifies opportunities for cost savings. It is an essential component of a robust security strategy for organizations handling sensitive data on their Azure VMs.',NULL,'https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#enable-disk-encryption-monitoring-and-recommendations-for-microsoft-azure-virtual-machines-vms','virtualmachine','azure','AzurepoliciesDiskEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"0961003e-5a0a-4549-abde-af6a37f2724d\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Azure_policies-Disk_Encryption_version-1_DE_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"AzurepoliciesDiskEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_DiskEncryption_virtualmachine\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_DiskEncryption_virtualmachine','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-08-27','2019-11-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Centralized_CloudTrail_version-1_Centralized_Cloudtrail_account','aws_account_centralized-cloudtrial','Centralized_Cloudtrail','Enable Cloudtrail for Multi-Region','AWS CloudTrail is an AWS service that helps you enable governance, compliance, and operational and risk auditing of your AWS account. Actions taken by a user, role, or an AWS service are recorded as events in CloudTrail. Events include actions taken in the AWS Management Console, AWS Command Line Interface, and AWS SDKs and APIs.','Enable the cloudtrail in multi region','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-cloudtrail-multi-region-support','account','aws','Centralized_Cloudtrail','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudtrail-multiRegion-enabled\",\"encrypt\":false},{\"key\":\"inputCloudTrailName\",\"value\":\"\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Name of the cloudtrail to check\",\"defaultVal\":\"\",\"displayName\":\"Input Cloudtrail name\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Centralized_CloudTrail_version-1_Centralized_Cloudtrail_account\",\"autofix\":false,\"alexaKeyword\":\"Centralized_Cloudtrail\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_centralized-cloudtrial\",\"policyType\":\"ManagePolicy\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_centralized-cloudtrial','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-06-19','2019-06-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('CheckGuardDutyIsEnabledForAllAccount_version-1_CheckGuardDutyIsEnabledForAllAccount_account','aws_guardduty_should_be_enabled','CheckGuardDutyIsEnabledForAllAccount','Enable AWS Guard Duty Service across all Regions and Accounts','Enabling AWS GuardDuty across all regions and accounts is essential for comprehensive security coverage. It provides centralized security monitoring, ensures consistent security posture, enables faster detection and response to threats, and can lead to cost savings by reducing the need for manual security monitoring. By covering all AWS resources in your organization, you better protect your environment from unauthorized access, data leaks, and other malicious activities.','','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Resolve-IAM-Access-Analyzer-Findings','account','aws','CheckGuardDutyIsEnabledForAllAccount','{\"params\":[{\"encrypt\":false,\"value\":\"check-guard-duty-enabled-for-all-accounts\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"CheckGuardDutyIsEnabledForAllAccount_version-1_CheckGuardDutyIsEnabledForAllAccount_account\",\"autofix\":false,\"alexaKeyword\":\"CheckGuardDutyIsEnabledForAllAccount\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_guardduty_should_be_enabled\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_guardduty_should_be_enabled','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-01-19','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('CheckInactiveIamUser_version-1_CheckInactiveIamUser_iamuser','aws_iam_users_should_not_be_inactive_for_than_target_period','CheckInactiveIamUser','Remove Inactive IAM users after 90 days','Removing inactive IAM users after 90 days is a best practice for security and compliance. It helps prevent users from having open access to your data and resources, which can lead to a data breach or other security threats. Additionally, removing users who are no longer actively using your services helps ensure that you are only paying for the resources you are using. Lastly, it can help simplify the management of your users and ensure that your IAM policies are up to date.','Reach out to paladincloud.io for exceptions','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#remove-inactive-iam-users-after-90-days','iamuser','aws','CheckInactiveIamUser','{\"assetGroup\":\"aws\",\"environmentVariables\":[],\"policyUUID\":\"aws_iam_users_should_not_be_inactive_for_than_target_period\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"iamuser\",\"params\":[{\"encrypt\":false,\"value\":\"90\",\"key\":\"pwdInactiveDuration\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Max inactive duration allowed for IAM users\",\"defaultVal\":\"90\",\"displayName\":\"Inactive duration in days\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"check-for-inactive-iam-users\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"true\",\"key\":\"threadsafe\"}],\"policyId\":\"CheckInactiveIamUser_version-1_CheckInactiveIamUser_iamuser\",\"autofix\":false,\"alexaKeyword\":\"CheckInactiveIamUser\",\"policyRestUrl\":\"\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_iam_users_should_not_be_inactive_for_than_target_period','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'710383','2018-02-13','2018-02-13','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Check_MFA_RootUSer_version-1_Check_MFA_RootUser_account','aws_account_mfa_root_user','Check_MFA_RootUser','Enable MFA for Root User','It is strongly recommended to enable Multi-Factor Authentication (MFA) for the Root Account in an AWS account because the Root Account has the highest level of privileges. MFA is an additional security measure that enhances the protection of user credentials. To authenticate successfully, users must have a registered device that generates a time-sensitive key and knowledge of their credentials, including their user name and password. When a user with MFA enabled signs in to an AWS website, they will be asked to provide their user name, password, and the authentication code generated by their registered AWS MFA device.','Enable the MFA for root user','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-mfa-for-root-user','account','aws','mfa','{\"params\":[{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"key\":\"policyKey\",\"value\":\"check-for-MFA-RootUser\",\"encrypt\":false},{\"key\":\"roleIdentifyingString\",\"value\":\"role/paladincloud_ro\",\"encrypt\":false}],\"environmentVariables\":[],\"policyId\":\"Check_MFA_RootUSer_version-1_Check_MFA_RootUser_account\",\"autofix\":false,\"alexaKeyword\":\"mfa\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_mfa_root_user\",\"policyType\":\"ManagePolicy\"}','0 0 ? * MON *','pac-managed-rules.jar','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_mfa_root_user','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-06-19','2019-06-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Check_for_Unrestricted_PostgreSQL_Database_Access','Check_for_Unrestricted_PostgreSQL_Database_Access','PostgreSQLDatabaseAccess','Deny Public Access to PostgreSQL Server Port 5432','To protect against malicious actors and reduce the attack surface, it is important to restrict firewall rules that permit unrestricted access (e.g., 0.0.0.0/0) on PostgreSQL port 5432. Restrict Azure Network Security Groups (NSGs) inbound access via TCP ports 5432 to trusted IP addresses only. ','To reconfigure your Azure NSG rules in order to allow access on TCP port 5432','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-postgresql-server-port-5432','nsg','azure','EnableNetworkSecurityforPostgreSQLDatabase','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"policyKey\"},{\"key\":\"protocol\",\"value\":\"tcp\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"5432\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny public access to PostgreSQL Server port 5432\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Check_for_Unrestricted_PostgreSQL_Database_Access\",\"autofix\":false,\"alexaKeyword\":\"EnableNetworkSecurityforPostgreSQLDatabase\",\"policyRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Check_for_Unrestricted_PostgreSQL_Database_Access\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Check_for_Unrestricted_PostgreSQL_Database_Access','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-13','2022-05-13','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Check_permission_of_Ingress_Setting_of_GCP_cloud_Function','Check_permission_of_Ingress_Setting_of_GCP_cloud_Function','Check permission of Ingress Setting of GCP cloud Function','Check permission of Ingress Setting of GCP cloud Function','This policy identifies GCP Cloud Functions that are configured with overly permissive Ingress setting. With overly permissive Ingress setting, all inbound requests to the function are allowed, from both the public and resources within the same project. It is recommended to restrict the traffic from the public and other resources, to get better network-based access control and allow traffic from VPC networks in the same project or traffic through the Cloud Load Balancer.','1. Login to GCP console\n2. Navigate to \'Cloud Functions\' service (Left Panel)\n3. Click on the alerting function\n4. Click on \'EDIT\'\n5. Click on \'Runtime, build, connections and security settings\' drop-down to get the detailed view\n6. Click on the \'CONNECTIONS\' tab\n7. In \'Ingress settings\', select either \'Allow internal traffic only\' or \'Allow internal traffic and traffic from Cloud Load Balancing\'\n8. Click on \'NEXT\'\n9. Click on \'DEPLOY\'','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#gcp-cloud-function-configured-with-overly-permissive-ingress-setting','cloudfunction','gcp','cloudfunctioningress','{\"params\":[{\"encrypt\":false,\"value\":\"GCP_Cloud_Function_configured_with_overly_permissive_Ingress_setting\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_Cloud_Function_configured_with_overly_permissive_Ingress_setting\",\"autofix\":false,\"policyRestUrl\":\"\",\"targetType\":\"cloudfunction\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"GCP_Cloud_Function_configured_with_overly_permissive_Ingress_setting\",\"policyType\":\"ManagePolicy\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_Cloud_Function_configured_with_overly_permissive_Ingress_setting','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'admin@paladincloud.io','2023-01-18','2023-01-18','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('CloudFront_AccessLogs_version-1_CloudFront_AccessLogs_cloudfront','aws_cloudfront_accesslogs','CloudFront_AccessLogs','Enable Access Log for Cloudfront and attach to the Mentioned Bucket','Enabling access logs for CloudFront and attaching them to a specified S3 bucket provides several benefits, including monitoring user activity, maintaining security and compliance, troubleshooting issues, optimizing performance, managing costs, and centralizing log storage. These logs offer valuable insights into web traffic patterns and can help improve the overall performance and security of your web application.','Access log should be enabled to cloudfront and attached to mentioned bucket','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Enable-Access-Log-to-CloudFront-and-Attach-to-the-Mentioned-Bucket','cloudfront','aws','CloudFront_AccessLogs','{\"assetGroup\":\"aws\",\"policyId\":\"CloudFront_AccessLogs_version-1_CloudFront_AccessLogs_cloudfront\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_cloudfront_accesslogs\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"cloudfront\",\"params\":[{\"encrypt\":false,\"value\":\"check-access-log-for-cloudfront\",\"key\":\"policyKey\"},{\"key\":\"accessLogBucketName\",\"value\":\"\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Cloudfront access log bucket name to check\",\"defaultVal\":\"\",\"displayName\":\"Access log bucket name\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"autofix\":false,\"alexaKeyword\":\"CloudFront_AccessLogs\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_cloudfront_accesslogs','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-02-18','2019-02-28','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('CloudTrailLogFileValidation_version-1_EnableLogFileValidation_cloudtrail','aws_cloud_trail_enable_log_file_validation','Validation should be enabled for CloudTrail log file','Enable Validation for CloudTrail Log File','Enabling validation for CloudTrail log files is essential to maintain data integrity, ensure security, meet compliance requirements, establish accountability, support forensic analysis, and build trust. It helps detect unauthorized changes, comply with regulations, trace actions, and serves as a reliable source of information during security investigations.','Enable Log file validation on each trails','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-validation-for-cloudtrail-log-file','cloudtrail','aws','CloudTrailLogFileValidation','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudtrail-log-file-validation-enabled\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"CloudTrailLogFileValidation_version-1_EnableLogFileValidation_cloudtrail\",\"autofix\":false,\"alexaKeyword\":\"CloudTrailLogFileValidation\",\"policyRestUrl\":\"\",\"targetType\":\"cloudtrail\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_cloud_trail_enable_log_file_validation\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_cloud_trail_enable_log_file_validation','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('CloudTrailLogsEncryptedByKMS_version-1_EnableKMSEncryption_cloudtrail','aws_cloud_trail_encrypt_logs_using_kms','CloudTrail logs should be configured to leverage SSE and KMS CMKs','Encrypt CloudTrail to use Key Management Service Customer Managed Keys','Encrypting CloudTrail logs with KMS Customer Managed Keys is essential for enhanced security, control over encryption keys, compliance, auditing, key rotation, and granular access control. Using KMS CMKs provides greater protection for log data, ensures adherence to industry regulations, and allows for better key management and access control in AWS environments.','configure CloudTrail to use SSE KMS','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-cloudtrail-to-use-kms-cmks','cloudtrail','aws','CloudTrailLogsEncryptedByKMS','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-cloudtrail-logs-encrypted-by-kms\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"CloudTrailLogsEncryptedByKMS_version-1_EnableKMSEncryption_cloudtrail\",\"autofix\":false,\"alexaKeyword\":\"CloudTrailLogsEncryptedByKMS\",\"policyRestUrl\":\"\",\"targetType\":\"cloudtrail\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_cloud_trail_encrypt_logs_using_kms\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_cloud_trail_encrypt_logs_using_kms','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('CloudWatchEventsForAllAccounts_version-1_CloudWatchEventsForAllAccounts_account','aws_account_cloud_watch_events','CloudWatchEventsForAllAccounts','Ensure that All CloudWatch Events from all Accounts are sent to the \'Dedicated ACCOUNTID\' Default Ev','Sending all CloudWatch Events from all accounts to a dedicated ACCOUNTID default event bus offers advantages such as centralized monitoring and management, simplified cross-account event handling, improved security and governance, efficient incident response, streamlined troubleshooting, and cost optimization. By centralizing events, you can better track activities, maintain consistent security policies, and manage resources more effectively across multiple AWS accounts.','Events from all AWS account should be routed to a central event.',NULL,'account','aws','CloudWatchEventsForAllAccounts','{\"params\":[{\"encrypt\":false,\"value\":\"check-cloudwatch-event-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"role/pac_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"DO-NOT-DELETE-all-events-to-eventbus-in-ACCOUNTID\",\"key\":\"ruleName\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"CloudWatchEventsForAllAccounts_version-1_CloudWatchEventsForAllAccounts_account\",\"autofix\":false,\"alexaKeyword\":\"CloudWatchEventsForAllAccounts\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_cloud_watch_events\",\"policyType\":\"ManagePolicy\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_cloud_watch_events','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-08-05','2019-08-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Cloud_Storage_should_be_encrypted_with_CMK','Cloud_Storage_should_be_encrypted_with_CMK','Cloud_Storage_should_be_encrypted_with_CMK','Encrypt Cloud Storage using Customer Managed Encryption Keys','To protect your data stored in Google Cloud Storage, you can use Customer-Managed Keys (CMKs) with the Cloud Key Management Service (Cloud KMS). This way, you can have full control over your data encryption/decryption process, create, rotate, manage, and destroy your own CMKs. Google Cloud Storage encrypts data by default with Google-managed encryption keys, but with CMKs you can have an extra layer of security for your sensitive and confidential data, something that is particularly important in companies where compliance and security are paramount.','Configure google cloud storage encryption to use customer managed key','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#use-cmek-to-encrypt-cloud-storage','cloudstorage','gcp','Cloud_Storage_should_be_encrypted_with_CMK','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-cloud-storage-has-cmk-encryption\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"checks if cloud storage has customer managed key to encrypt data\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Google cloud storage is not encrypted with customer managed key\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"cloudstorage\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"cloud storage should be encrypted with customer managed key\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Cloud_Storage_should_be_encrypted_with_CMK\",\"autofix\":false,\"alexaKeyword\":\"Cloud_Storage_should_be_encrypted_with_CMK\",\"policyRestUrl\":\"\",\"targetType\":\"cloudstorage\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Cloud_Storage_should_be_encrypted_with_CMK\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Cloud_Storage_should_be_encrypted_with_CMK','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-27','2022-06-27','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Cloud_Storage_should_not_be_public','Cloud_Storage_should_not_be_public','Cloud_Storage_should_not_be_public','Deny Public Access to Cloud Storage','Denying public access to your cloud storage buckets on GCP is an important security measure that can help protect your data from unauthorized access, ensure compliance with regulations, and avoid unexpected costs.\n\nWhile public access is disabled by default, an IAM principal with appropriate permissions can enable public access at the bucket or object level. Therefore, it is recommended to regularly review and update access control settings to ensure that only authorized users and applications can access your cloud storage and objects.','Restrict permissions to buckets to remove public access','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-cloud-storage','cloudstorage','gcp','Cloud_Storage_should_not_be_public','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-cloud-storage-has-public-access\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Ensure there are no cloud storage buckets with public access \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Google cloud storage should not have public access\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"cloudstorage\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"cloud storage should not have public access\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Cloud_Storage_should_not_be_public\",\"autofix\":false,\"alexaKeyword\":\"Cloud_Storage_should_not_be_public\",\"policyRestUrl\":\"\",\"targetType\":\"cloudstorage\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Cloud_Storage_should_not_be_public\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Cloud_Storage_should_not_be_public','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-24','2022-06-24','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Configure_email_in_ms_defender','Configure_email_in_ms_defender','Configure additional email address in MS defender email notifications settings','Configure Additional email Address in MS Defender','Configuring additional email addresses in Microsoft Defender provides benefits such as improved notification coverage, better collaboration, redundancy, and flexibility. It ensures that relevant personnel receive security incident alerts and can collaborate to resolve them, provides redundancy in case of email address unavailability, and provides flexibility in managing notifications based on alert severity or incident type. It is an important best practice to ensure security incidents are promptly addressed, and critical alerts are not missed.',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#in-ms-defender-ensure-additional-email-addresses-is-configured-with-a-security-contact-email','defender','azure','Configure_email_in_ms_defender','{\"params\":[{\"encrypt\":false,\"value\":\"configure-additional-email-address-ms-defender\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"In MS defender email alert settings, Ensure additional email address is configured.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"In MS defender email settings, additional email address is configured.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"In MS defender email alert settings, additional email address is not configured.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Configure additional email address in MS defender email notifications settings\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Configure_email_in_ms_defender\",\"autofix\":false,\"alexaKeyword\":\"Configure_email_in_ms_defender\",\"policyRestUrl\":\"\",\"targetType\":\"defender\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Configure_email_in_ms_defender\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Configure_email_in_ms_defender','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-18','2022-10-18','ENABLED');
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aws_image_critical_vulnerabilities_aqua_scanned_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aqua_aws_image_critical_vulnerabilities_scanned_rule';
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('CriticalImageVulnerabilitiesScannedByAqua','aqua_aws_image_critical_vulnerabilities_scanned_rule','Aqua found Critical Vulnerabilities for AWS ECR','Aqua found Critical Vulnerabilities for AWS ECR','Vulnerabilities in images created or updated within a configurable threshold timeline of 10 days are scanned using Aqua\'s vulnerability data to gather key information about the vulnerabilities, including the CVE number, NVD URL, solution, resource, Aqua severity classification, and description.\n\nScanning and remediating critical-vulnerability images in AWS can proactively identify and mitigate potential security threats, minimizing the risk of security breaches and other damage to the cloud infrastructure.\n','create/register in Aqua Sass platform and add image repositories for scan and get it scanned regularly','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#scan-and-remediate-critical-vulnerability-images-policy','ecr','aws','CriticalVulnerableImagesReportedByAqua','{\"assetGroup\":\"aws\",\"policyId\":\"ImagesVulnerabilitiesByAqua\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aqua_aws_image_critical_vulnerabilities_scanned_rule\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"ecr\",\"params\":[{\"defaultVal\":\"30\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Target\",\"description\":\"Target in days\",\"value\":\"30\",\"key\":\"target\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aqua-image-vulnerability/_search\",\"key\":\"esAquaImageUrl\"},{\"isValueNew\":true,\"defaultVal\":\"7\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Discovered days range\",\"description\":\"Discovered days in number\",\"value\":\"7\",\"key\":\"discoveredDaysRange\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"check-for-image-vulnerabilities-scanned-by-aqua\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"autofix\":false,\"alexaKeyword\":\"CriticalVulnerableImagesReportedByAqua\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aqua_aws_image_critical_vulnerabilities_scanned_rule','critical','security','0','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2023-05-05','2023-05-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Data_Encryption_SQL_version-1_SDE_sqldatabase','azure_SDE_sqldatabase','SDE','Enable Transparent Data Encryption on SQL Databases','Transparent Data Encryption (TDE) helps protect sensitive data stored in a SQL Server database by encrypting the data on disk. This ensures that the data is not compromised if the disk or disk backups are stolen. It also helps protect data stored in memory while the server is running, and helps to prevent malicious activity by restricting access to the data. TDE also helps to ensure compliance with various industry data protection regulations and standards.','Audit transparent data encryption status for SQL databases','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-transparent-data-encryption-for-sql-database','sqldatabase','azure','SDE','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"17k78e20-9358-41c9-923c-fb736d382a12\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Data_Encryption_SQL_version-1_SDE_sqldatabase\",\"autofix\":false,\"alexaKeyword\":\"SDE\",\"policyRestUrl\":\"\",\"targetType\":\"sqldatabase\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_SDE_sqldatabase\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_SDE_sqldatabase','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-26','2019-11-07','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Default_Network_should_Not_Exist_in_a_Project','Default_Network_should_Not_Exist_in_a_Project','Ensure that Default Network does not Exist in a Project','Ensure that Default Network does not Exist in a Project','It is recommended to disable or delete the default network in a GCP project for security reasons. The default network has default firewall rules that may expose your resources to external attacks. By disabling or deleting the default network, you can have greater control over the network security of your project and prevent the accidental creation of new resources in the default network. This can help you reduce the risk of unauthorized access, data breaches, and simplify your network management tasks.','make sure to delete default vpc with in Google projects','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#default-network-should-not-exist-in-a-project','networks','gcp','Cloud Vpc Networks','{\"params\":[{\"encrypt\":false,\"value\":\"check-default-vpc-used-in-project\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Default Network should Not Exist in a Project\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Default_Network_should_Not_Exist_in_a_Project\",\"autofix\":false,\"alexaKeyword\":\"Cloud Vpc Networks\",\"policyRestUrl\":\"\",\"targetType\":\"networks\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Default_Network_should_Not_Exist_in_a_Project\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Default_Network_should_Not_Exist_in_a_Project','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-29','2022-08-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Define_Authorised_IP_for_kubernetes','Define_Authorised_IP_for_kubernetes','Define authorised IP ranges','Define Authorized IP Ranges for AKS API Server','Defining authorized IP ranges for AKS API server is a security best practice that limits access to authorized clients only, helps comply with regulatory requirements, optimizes resource utilization, and reduces costs associated with data transfer and network usage.','1. In azure portal, select Kubernetes services \n2. Select the kubernete service from the list \n3. Under Settings tab, select Networking \n4. Under security section in the Networking tab, select Set authorized IP ranges \n5. After selecting set authorized IP ranges, Specify IP ranges','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Define-authorised-IP-ranges-for-AKS-API-server','kubernetes','azure','DefineAuthorisedIPRange','{\"params\":[{\"encrypt\":false,\"value\":\"define-authorised-ip-ranges-for-kubernetes\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Define authorised IP ranges for Azure Kubernetes Services.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"In Azure kubernetes services, authorised IP ranges are defined\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"In Azure kubernetes services,authorised IP ranges are NOT defined\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Define authorised IP ranges for Azure Kubernetes Services\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Define_Authorised_IP_for_kubernetes\",\"autofix\":false,\"alexaKeyword\":\"DefineAuthorisedIPRange\",\"policyRestUrl\":\"\",\"targetType\":\"kubernetes\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Define_Authorised_IP_for_kubernetes\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Define_Authorised_IP_for_kubernetes','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-22','2022-11-22','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Deny_Admin_Privilege_Service_Account','Deny_Admin_Privilege_Service_Account','Deny Admin privilege for service account','Deny Admin Privileges to Service Accounts','Denying administrative privileges to service accounts in GCP is a critical security measure that can help reduce the risk of unauthorized access, data breaches, and other security incidents. Service accounts often provide applications and other services with the credentials to access cloud resources, but granting them administrative privileges can pose a security risk. Removing unnecessary administrative privileges from service accounts can help achieve better security posture and compliance with regulatory requirements. It is generally recommended to follow the principle of least privilege, which means granting the minimum necessary permissions to service accounts to perform their intended functions.','Delete the Admin/ Owner/Editor role for the service accounts','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Deny-admin-Privileges-to-service-accounts','serviceaccounts','gcp','Deny_Admin_Privilege_Service_Account','{\"params\":[{\"encrypt\":false,\"value\":\"least-privilege-service-accounts\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Deny admin Privileges to service accounts\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Deny_Admin_Privilege_Service_Account\",\"autofix\":false,\"alexaKeyword\":\"Deny_Admin_Privilege_Service_Account\",\"policyRestUrl\":\"\",\"targetType\":\"serviceaccounts\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Deny_Admin_Privilege_Service_Account\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Deny_Admin_Privilege_Service_Account','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-28','2022-09-28','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Deny_Azure_KeyVault_Admin_Privileges','azure_Deny_KeyVault_Admin_Privileges','Deny_Azure_KeyVault_Admin_Privileges','Deny Full Administrator Privilege to Azure Key Vault ','Ensuring maximum safety for confidential and crucial data stored in Azure Key Vaults requires granting access to specific operations only to relevant principals. It is also crucial to follow security best practices, including implementing the principle of least privilege. No Microsoft Azure user, group, or application should have full administrator privileges for accessing and managing Azure Key Vaults.',' providing every principal the minimal amount of access required to perform its tasks','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-administrator-full-access-to-key-vault','vaults','azure','KeyVaultDenyAdminPrivilege','{\"params\":[{\"encrypt\":false,\"value\":\"deny-admin-privileges-azure-keyvault-rule\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"Key vault has admin privilege\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"Key vault does not have admin privilege\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"adminForKeys\",\"value\":\"Get,List,Update,Create,Import,Delete,Recover,Backup,Restore,Decrypt,Encrypt,UnwrapKey,WrapKey,Verify,Sign,Purge\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"adminForSecrets\",\"value\":\"Get,List,Set,Delete,Recover,Backup,Restore,Purge\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"adminForCertificates\",\"value\":\"Get,List,Update,Create,Import,Delete,Recover,Backup,Restore,ManageContacts,ManageIssuers,GetIssuers,ListIssuers,SetIssuers,DeleteIssuers,Purge\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny admin privilege for dkey vaults\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Deny_Azure_KeyVault_Admin_Privileges\",\"autofix\":false,\"alexaKeyword\":\"KeyVaultDenyAdminPrivilege\",\"policyRestUrl\":\"\",\"targetType\":\"vaults\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Deny_KeyVault_Admin_Privileges\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Deny_KeyVault_Admin_Privileges','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-13','2022-06-13','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Deny_Default_Network_Access_Rule_for_Storage_Accounts','Deny_Default_Network_Access_Rule_for_Storage_Accounts','Deny Default Network Access Rule for Storage Accounts','Deny Network Access Rule for Storage Accounts','A Deny Network Access Rule for Storage Accounts is a security control that blocks network traffic to a storage account from specified IP addresses or ranges. It provides benefits such as improved security, compliance, granular access control, and reduced attack surface. Deny Network Access Rules limit access to only authorized users or applications, reduce the risk of unauthorized access or data exfiltration, and help organizations meet compliance requirements. It is an important best practice for protecting sensitive data in Azure storage accounts and preventing security breaches.','Deny public Network Access to Storage Account','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-default-network-access-rule-for-storage-accounts','storageaccount','azure','Deny_Default_Network_Access_Rule_for_Storage_Accounts','{\"params\":[{\"encrypt\":false,\"value\":\"restrict-default-network-access\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\" Default Network Access Rule for Storage Accounts\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Deny_Default_Network_Access_Rule_for_Storage_Accounts\",\"autofix\":false,\"alexaKeyword\":\"Deny_Default_Network_Access_Rule_for_Storage_Accounts\",\"policyRestUrl\":\"\",\"targetType\":\"storageaccount\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Deny_Default_Network_Access_Rule_for_Storage_Accounts\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Deny_Default_Network_Access_Rule_for_Storage_Accounts','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-23','2022-08-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Deny_access_to_Kubernate_Engine_cluster','Deny_access_to_Kubernate_Engine_cluster','Deny_access_to_Kubernate_Engine_cluster','Deny Access to GKE Cluster','To enhance the security of your Google Kubernetes Engine (GKE) clusters and minimize their exposure to the internet, it\'s essential to configure them with master authorized networks. This feature allows you to add specific IP addresses and/or IP address ranges to an allowlist, which authorizes them to access your cluster master endpoint using HTTPS.\n\nBy adding master authorized networks to your GKE cluster, you can enjoy improved network-level protection and security. Authorized networks provide access only to a limited set of trusted IP addresses, such as those originating from a secure network. This ensures that your GKE cluster is accessible only to authorized users, which can be crucial in case of a vulnerability in the cluster\'s authentication or authorization mechanism. Overall, it\'s highly recommended to use master authorized networks to help secure your GKE clusters and prevent unauthorized access.','update GKE cluster configuration with master authorized networks in order to limit their exposure to the Internet.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-access-to-gke-cluster','gkecluster','gcp','Kubernate_Engine_cluster','{\"params\":[{\"encrypt\":false,\"value\":\"check-access-for-gke-cluster\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Deny_access_to_Kubernate_Engine_cluster\",\"autofix\":false,\"alexaKeyword\":\"Kubernate_Engine_cluster\",\"policyRestUrl\":\"\",\"targetType\":\"webapp\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Deny_access_to_Kubernate_Engine_cluster\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Deny_access_to_Kubernate_Engine_cluster','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-19','2022-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Deny_public_ip_for_sql','Deny_public_ip_for_sql','SQL DB instances should not have public IP','Deny Usage of Public IP Addresses for Cloud SQL Database Instances','Denying the usage of public IP addresses for SQL database instances is an important security measure that can help protect your database from unauthorized access and malicious activities. This can reduce the attack surface, give you better control over network traffic, help you comply with security requirements, and save on costs. By using private IP addresses and virtual private cloud (VPC) peering, you can enforce stricter security policies and protect your data from unauthorized access and data breaches.','Configure private Ip for sql db instance','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-usage-of-public-ip-addresses-for-sql-database-instances','cloudsql','gcp','Deny_public_ip_for_sql','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-ip-public-for-db\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"SQL DB instances should not have public IP\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"SQL DB instances should not have public IP\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_cloudsql/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"SQL database instances should not use public IP addresses\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Deny_public_ip_for_sql\",\"autofix\":false,\"alexaKeyword\":\"Deny_public_ip_for_sql\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Deny_public_ip_for_sql\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Deny_public_ip_for_sql','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-18','2022-08-18','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Deny_usage_of_default_service_accounts_for_instances','Deny_usage_of_default_service_accounts_for_instances','Deny_usage_of_default_service_accounts_for_instances','Deny Usage of Default Service Accounts for Instances','Denying the usage of default service accounts for instances in GCP is an important security measure that can help protect your cloud resources from unauthorized access and malicious activities. This can reduce the attack surface, give you better control over permissions, comply with security requirements, and avoid accidental privilege escalation. Custom service accounts with the minimum necessary permissions can help achieve the principle of least privilege and improve the overall security of your cloud environment.','NULL','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Deny-usage-of-default-service-accounts-for-instances','vminstance','gcp','ServiceAccount','{\"params\":[{\"encrypt\":false,\"value\":\"deny-usage-of-default-service-account\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Deny usage of default service accounts for instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Deny_usage_of_default_service_accounts_for_instances\",\"autofix\":false,\"alexaKeyword\":\"ServiceAccount\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Deny_usage_of_default_service_accounts_for_instances\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Deny_usage_of_default_service_accounts_for_instances','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-29','2022-09-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_3625_Flag_for_SQL_Server_DB_Instances','Disable_3625_Flag_for_SQL_Server_DB_Instances','3625 database flag should be off','Disable 3625 (trace flag) Database Flag for Cloud SQL Server Instance','Disabling the 3625 (trace flag) database flag for a Cloud SQL Server instance is an important security measure that can help improve the security of your database. This can help you achieve compliance with security standards, have better control over administrative access, and reduce the attack surface. Disabling this flag can prevent remote administrative connections to your SQL Server instance, limiting the potential for unauthorized access and data breaches.','set 3625 DataBase Flag off for SQL SERVER Instance','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-3625-trace-flag-database-flag-for-cloud-sql-server-instance','cloudsql_sqlserver','gcp','sqlserver','{\"params\":[{\"encrypt\":false,\"value\":\"disable-contained-database-Auth-flag-for-sql-server\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"gcp_cloudsql_sqlserver\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"3625\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Disable \'3625 (trace flag)\' database flag for Cloud SQL Server instance\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure that 3625 (trace flag) database flag is disabled for your Google Cloud SQL Server database instances.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"3625(trace flag) is enabled for your Google Cloud SQL Server database instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_3625_Flag_for_SQL_Server_DB_Instances\",\"autofix\":false,\"alexaKeyword\":\"sqlserver\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_sqlserver\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_3625_Flag_for_SQL_Server_DB_Instances\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_3625_Flag_for_SQL_Server_DB_Instances','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-20','2022-08-20','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_Alpha_Cluster','Disable_Alpha_Cluster','Disable alpha clusters','Disable Alpha Clusters for Production Workloads','Alpha clusters are temporary clusters that run stable Kubernetes releases with all Kubernetes APIs and features enabled. However, they are not recommended for production workloads as they are not covered by a Service level agreement (SLA), do not receive security updates, automatic upgrades, or repairs, expire in 30 days, and GKE does not automatically save data stored on alpha clusters.','Alpha features cannot be disabled. To remediate, a new cluster must be created.\nUsing Google Cloud Console\n1. Go to Kubernetes Engine by visiting\nhttps://console.cloud.google.com/kubernetes/\n2. Click CREATE CLUSTER\n3. Unless Node Auto-Upgrade and Node Auto-Repair are disabled, under Availability, networking, security, and additional features, the option Enable Kubernetes alpha features in this cluster will not be available. Ensure this feature is not checked \n4. Click CREATE.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Disable-Alpha-clusters-for-Production-Workloads','gkecluster','gcp','Kubernates','{\"params\":[{\"encrypt\":false,\"value\":\"disable-alpha-clusters\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"disable alpha clusters for production workloads\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Alpha clusters are NOT disabled\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_Alpha_Cluster\",\"autofix\":false,\"alexaKeyword\":\"Kubernates\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_Alpha_Cluster\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Alpha_Cluster','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-02','2022-11-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_Basic_Authentication','Disable_Basic_Authentication','Disable basic authentication','Disable Basic Authentication Using Static Passwords','It is recommended to disable Basic Authentication as it uses static passwords without any encryption. This security threat can lead to attacks like brute force and credential stuffing. OpenID Connect and other authentication methods can still be used to authenticate on the cluster.','1.Go to Kubernetes Engine by visiting https://console.cloud.google.com/kubernetes/list \n2.Select the Kubernetes cluster for which Basic Authentication is currently enabled \n3.Click on EDIT \n4.Set Basic authentication to Disabled \n5.Click SAVE.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Disable-Basic-Authentication-using-static-passwords','gkecluster','gcp','DisableBasicAuth','{\"params\":[{\"encrypt\":false,\"value\":\"disable-basic-authentication\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Disable Basic Authentication using static passwords\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Basic authentication is not disabled\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_Basic_Authentication\",\"autofix\":false,\"alexaKeyword\":\"DisableBasicAuth\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_Basic_Authentication\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Basic_Authentication','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-02','2022-11-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','Disable Contained Database Authentication Flag for SQL Server Database Instances','Disable Contained Database Authentication Flag for SQL Server Database Instances','Disabling the contained database authentication flag for SQL Server database instances is an important security measure that can help reduce the attack surface, improve the security of your database, comply with security standards, and have better control over user access. Disabling this feature can help prevent unauthorized access and data breaches, and ensure that all user accounts are centrally managed and audited. Enabling the contained database authentication feature can increase the attack surface and allow users to authenticate to the database without relying on a login in the master database.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-contained-database-authentication-flag-for-sql-server-database-instances','cloudsql_sqlserver','gcp','sqlserver','{\"params\":[{\"encrypt\":false,\"value\":\"disable-contained-database-Auth-flag-for-sql-server\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"gcp_cloudsql_sqlserver\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"contained database authentication\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Disable Contained Database Authentication Flag for SQL Server Database Instances\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"users within a contained database that have the ALTER ANY USER permission can grant access to the database without the knowledge or permission of the SQL Server administrator and also prone to DOS Attack\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"contained database authentication flag is enabled for your Google Cloud SQL Server database instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances\",\"autofix\":false,\"alexaKeyword\":\"sqlserver\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_sqlserver\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-19','2022-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','Disable External Scripts Enabled Flag for SQL Server Database Instances','Disable External Scripts Enabled Flag for SQL Server Database Instances','Disabling the External Scripts Enabled flag for SQL Server database instances is an important security measure that can help reduce the attack surface, improve the security of your database, comply with security standards, and have better control over code execution. This can help prevent unauthorized access and data breaches, and ensure that only trusted code is executed on your database server. Enabling external scripts can increase the attack surface and allow users to execute code outside of the database, potentially compromising the security of your database server.','set external scripts enabled off for SQL SERVER Instance','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-external-scripts-enabled-flag-for-sql-server-database-instances','cloudsql_sqlserver','gcp','sqlserver','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-external-script-Enabled-flag-for-sql-server-disabled\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"SQLSERVER\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"external scripts enabled\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Disable External Scripts Enabled Flag for SQL Server Database Instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_External_scripts_enabled_for_SQL_Server_DB_Instances\",\"autofix\":false,\"alexaKeyword\":\"sqlserver\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_sqlserver\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_External_scripts_enabled_for_SQL_Server_DB_Instances\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-19','2022-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_Kubernetes_Web_UI','Disable_Kubernetes_Web_UI','Disable Kubernetes Web UI','Disable Kubernetes Web UI','Disabling the Kubernetes Web UI (Dashboard) is a security best practice that can help control access, reduce the attack surface, and optimize resource utilization of a Kubernetes cluster. It is also a recommended best practice by the Kubernetes community.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-kubernetes-web-ui','gkecluster','gcp','Disable_Kubernetes_Web_UI','{\"params\":[{\"encrypt\":false,\"value\":\"disable-kubernetes-web-ui\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_Kubernetes_Web_UI\",\"autofix\":false,\"alexaKeyword\":\"Disable_Kubernetes_Web_UI\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_Kubernetes_Web_UI\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Kubernetes_Web_UI','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_Legacy_Authorization','Disable_Legacy_Authorization','Disable Legacy Authorization','Disable Legacy Authorization for GKE Cluster','Disabling legacy authorization for GKE clusters is an important security measure that can help improve the security of your Kubernetes workloads, achieve compliance with security standards, have better control over user access, and protect against insider threats. Enabling legacy authorization can increase the risk of unauthorized access and data breaches, and compromise the security of your cloud environment. Proper authentication and authorization mechanisms can help enforce security policies and reduce the risk of unauthorized access and data breaches.','From the list of clusters, click on each cluster to open the Details pane, and make sure Legacy Authorization is set to Disabled.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-legacy-authorization-1','gkecluster','gcp','Kubernates','{\"params\":[{\"encrypt\":false,\"value\":\"check-legacy-authorization-disabled\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Ensure Legacy Authorization is disabled.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Legacy Authorization is enabled \",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_Legacy_Authorization\",\"autofix\":false,\"alexaKeyword\":\"Kubernates\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_Legacy_Authorization\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Legacy_Authorization','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-27','2022-10-27','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_Local_infile_for_MySQL_Server_DB_Instances','Disable_Local_infile_for_MySQL_Server_DB_Instances','Disable Local_infile DB Flag for Cloud SQL','Disable Local_infile DB Flag for Cloud SQL','Disabling the local_infile database flag for Cloud SQL is a security best practice that can help prevent SQL injection attacks, comply with regulatory requirements, mitigate the risk of data loss or modification, and is a recommended best practice by Google and the MySQL community.','1. Navigate cloud sql instances at https://console.cloud.google.com/sql/instances\n2. Click Filter tree box, select Type and MySQL \n3. Click the database you want to reconfigure\n4. In the navigation panel, select Overview\n5. Click on Edit button\n6. In the Configuration options, click on Flags\n7. Find the local_infile flag and turn it off by selecting off from the flag configuration dropdown list\n8. Click Save','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Disable-Local_infile-DB-Flag-for-Cloud-SQL','cloudsql_mysqlserver','gcp','mysqlserver','{\"params\":[{\"encrypt\":false,\"value\":\"disable-enable-database-flags-for-cloudsql-server\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"gcp_cloudsql_mysqlserver\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"local_infile\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagValue\",\"value\":\"off\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Disable Local_infile DB Flag for Cloud SQL\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure that the local_infile database flag is disabled for your Google Cloud MySQL database instances, in order to follow data security best practices\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Local_infile flag is enabled for your Google Cloud MySQL Server database instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_Local_infile_for_MySQL_Server_DB_Instances\",\"autofix\":false,\"alexaKeyword\":\"mysqlserver\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_mysqlserver\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_Local_infile_for_MySQL_Server_DB_Instances\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Local_infile_for_MySQL_Server_DB_Instances','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-06','2022-10-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_Log_min_duration_statement_for_PostgreSQL','Disable_Log_min_duration_statement_for_PostgreSQL','Disable Log_min_duration_statement Database Flag for PostgreSQL Instance','Disable Log_min_duration_statement Database Flag for PostgreSQL Instance','Disabling the log_min_duration_statement database flag for PostgreSQL instances is an important security measure that can help reduce the exposure of sensitive data, improve performance, achieve compliance with security standards, and have better control over logging policies. Logging all SQL statements that take longer than a certain duration to execute can impact the performance of your database and expose sensitive data to unauthorized access or disclosure. Disabling this flag can help protect your database from potential vulnerabilities and security threats.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Disable-Log_min_duration_statement-Database-Flag-for-PostgreSQL-Instance','cloudsql_postgres','gcp','postgres','{\"params\":[{\"encrypt\":false,\"value\":\"disable-enable-database-flags-for-cloudsql-server\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"gcp_cloudsql_postgres\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"log_min_duration_statement\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagValue\",\"value\":\"-1\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Disable Log_min_duration_statement Database Flag for PostgreSQL Instance\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure that log_min_duration_statement database flag is disabled for a Cloud PostgreSQL database instances.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Log_min_duration_statement flag for Postgres Instance is enabled\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_Log_min_duration_statement_for_PostgreSQL\",\"autofix\":false,\"alexaKeyword\":\"postgres\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_postgres\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_Log_min_duration_statement_for_PostgreSQL\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Log_min_duration_statement_for_PostgreSQL','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-06','2022-10-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','DisableRemoteAccessFlag','Disable Database Remote Access Flag for SQL Server Database Instances','Disabling the database remote access flag for SQL Server database instances is an important security measure that can help improve the security of your database server, achieve compliance with security standards, have better control over database access, and reduce the attack surface. Enabling database remote access can increase the risk of unauthorized access and data breaches, potentially compromising the security of your database server. Disabling this feature can limit access to only authorized personnel and reduce the number of entry points that an attacker can use to access your database server.','set remote access flag off for SQL SERVER Instance','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-database-remote-access-flag-for-sql-server-database-instances','cloudsql_sqlserver','gcp','sqlserver','{\"params\":[{\"encrypt\":false,\"value\":\"disable-contained-database-Auth-flag-for-sql-server\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"gcp_cloudsql_sqlserver\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"remote access\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Disable Database Remote Access flag for SQL Server Instances\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure that remote access database flag is disabled for your Google Cloud SQL Server database instances.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"remote access flag is enabled for your Google Cloud SQL Server database instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances\",\"autofix\":false,\"alexaKeyword\":\"sqlserver\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_sqlserver\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-29','2022-08-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_Remote_Debugging_For_WebApp','azure_Disable_Remote_Debugging_For_WebApp','Disable_Remote_Debugging_For_WebApp','Disable Remote Debugging on Application Service ','The remote debugging feature, available for web applications such as ASP.NET, ASP.NET Core, Node.js, and Python, can create potential security vulnerabilities. It requires opening certain inbound ports for the Visual Studio remote debugger within the configuration of your Microsoft Azure App Services web applications. However, this increases the attack surface and may pose a security risk. To improve the security of your Azure App Services web applications and prevent unauthorized access, it is recommended to disable remote debugging. By following the principle of least privilege and disabling access to these inbound ports, you can significantly reduce the possibility of a security breach.','Disable remote debugging for Azure App Services web apps','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#disable-app-service-remote-debugging','webapp','azure','Disable_Remote_Debugging_For_WebApp','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-remote-debugging-app-service\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Disable App Service Remote Debugging\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_Remote_Debugging_For_WebApp\",\"autofix\":false,\"alexaKeyword\":\"Disable_Remote_Debugging_For_WebApp\",\"policyRestUrl\":\"\",\"targetType\":\"webapp\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Disable_Remote_Debugging_For_WebApp\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Disable_Remote_Debugging_For_WebApp','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-31','2022-05-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_User_Managed_Service_Account_Key_Creation','Disable_User_Managed_Service_Account_Key_Creation','Disable User-Managed Service Account Key Creation','Disable User Managed Service Account Key Creation','Disabling user managed service account key creation is an important security measure that can help improve the security of your cloud resources, achieve compliance with security standards, have better control over access to cloud resources, and protect against insider threats. User managed service account keys can provide access to your cloud resources without requiring a password or other form of authentication, potentially compromising the security of your cloud environment. Disabling this feature can enforce more secure authentication and access control mechanisms, ensure all access is granted through secure authentication mechanisms, and reduce the risk of unauthorized access and data breaches.','delete user managed service account keys','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Disable-User-Managed-Service-Account-Key-Creation','serviceaccounts','gcp','Disable_User_Managed_Service_Account_Key_Creation','{\"params\":[{\"encrypt\":false,\"value\":\"delete-user-manged-keys\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Disable User-Managed Service Account Key Creation\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_User_Managed_Service_Account_Key_Creation\",\"autofix\":false,\"alexaKeyword\":\"Disable_User_Managed_Service_Account_Key_Creation\",\"policyRestUrl\":\"\",\"targetType\":\"serviceaccounts\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_User_Managed_Service_Account_Key_Creation\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_User_Managed_Service_Account_Key_Creation','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-19','2022-09-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_Web_App_traffic_to_plain_Ftp','Disable_Web_App_traffic_to_plain_Ftp','Disable Plain FTP Deployment','Disable Plain FTP Deployment','Disabling Plain FTP Deployment is a security measure that provides benefits such as improved security, compliance, better control, and improved performance. It improves security by requiring the use of secure file transfer protocols, such as SFTP or FTPS, and avoids the vulnerabilities of plain FTP. It helps organizations meet compliance requirements and provides better control over access to the deployment. Additionally, it improves performance by using encryption and compression to improve transfer speeds and reduce latency. It is an important best practice for organizations that deploy applications or services and need to protect sensitive data.','change the ftpsState to disable or ftps only this will restrict traffic  on FTP only.','https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#disable-plain-ftp-deployment','webapp','azure','Disable_Web_App_traffic_to_plain_Ftp','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-ftp-rule\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"disable ftp deployment\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"web apps does allow traffic on ftp.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/azure_webapp/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Disable Plain FTP Deployment\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_Web_App_traffic_to_plain_Ftp\",\"autofix\":false,\"alexaKeyword\":\"Disable_Web_App_traffic_to_plain_Ftp\",\"policyRestUrl\":\"\",\"targetType\":\"webapp\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Disable_Web_App_traffic_to_plain_Ftp\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Web_App_traffic_to_plain_Ftp','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-19','2022-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_client_certificate_Authentication_for_Cluster','Disable_client_certificate_Authentication_for_Cluster','Disable client certificate Authentication for GKE Cluster','Disable Client Certificate Authentication for GKE Cluster','Disabling client certificate authentication for GKE clusters is an important security measure that can help improve the security of your Kubernetes workloads, achieve compliance with security standards, have better control over user access, and simplify authentication management. Client certificate authentication can increase the attack surface and risk of unauthorized access to your cluster, potentially compromising the security of your cloud environment. Disabling this feature can enforce proper authentication mechanisms, ensure all user accounts are properly authenticated, simplify authentication management, and improve the overall security of your GKE cluster.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Disable-client-certificate-Authentication-for-GKE-Cluster','gkecluster','gcp','Kubernates','{\"params\":[{\"encrypt\":false,\"value\":\"Disable-client-certificate-Authentication-for-GKE-Cluster\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_client_certificate_Authentication_for_Cluster\",\"autofix\":false,\"alexaKeyword\":\"Kubernates\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_client_certificate_Authentication_for_Cluster\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_client_certificate_Authentication_for_Cluster','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_connecting_to_Serial_Ports_for_VM_Instance','Disable_connecting_to_Serial_Ports_for_VM_Instance','Disable \'Connecting to Serial Ports\' for VM Instance','Disable \'Connecting to Serial Ports\' for VM Instance','Disabling the ability to connect to serial ports for VM instances is an important security measure that can help improve the security of your cloud resources, achieve compliance with security standards, have better control over access to cloud resources, and reduce the attack surface. Allowing users to connect to serial ports on VM instances can provide unauthorized access to your cloud resources, potentially compromising the security of your cloud environment. Disabling this feature can limit access to only authorized personnel, enforce strong authentication mechanisms, and reduce the risk of unauthorized access and data breaches.','Unselect Enable connecting to serial ports below Remote access block.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-connecting-to-serial-ports-for-vm-instance','vminstance','gcp','Disable_connecting_to_Serial_Ports_for_VM_Instance','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-serial-port-enable-key\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Checks if instance-level serial port enable key is disabled\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Compute Engine serial-port is enabled.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_vminstance/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Disable connecting to Serial Ports for VM Instance\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_connecting_to_Serial_Ports_for_VM_Instance\",\"autofix\":false,\"alexaKeyword\":\"Disable_connecting_to_Serial_Ports_for_VM_Instance\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_connecting_to_Serial_Ports_for_VM_Instance\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_connecting_to_Serial_Ports_for_VM_Instance','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-23','2022-08-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Disable_kubernetes_DashBoard','Disable_kubernetes_DashBoard','Disable kubernetes DashBoard','Disable Kubernetes Dashboard','Disabling the Kubernetes Dashboard is a security best practice that helps control access, reduce the attack surface, optimize resource utilization, and is a recommended best practice by the Kubernetes community.',NULL,'https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#disable-kubernetes-dashboard','kubernetes','azure','Disable_kubernetes_DashBoard','{\"params\":[{\"encrypt\":false,\"value\":\"Disable-kubernetes-DashBoard\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Disable kubernetes DashBoard\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Disable_kubernetes_DashBoard\",\"autofix\":false,\"alexaKeyword\":\"EnableClusterMonitoring\",\"policyRestUrl\":\"\",\"targetType\":\"kubernetes\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Disable_kubernetes_DashBoard\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_kubernetes_DashBoard','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-22','2022-11-22','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole','aws_iamrole_shouldnothave_ec2runinstance_privilege','ec2-runInstance-iam-role-with-unapproved-access','Restrict EC2 RunInstance Privilege to Non-Allow Listed IAM Role','To enhance the security of your AWS infrastructure, it is recommended to restrict the \"RunInstances\"\" privilege for Amazon Elastic Compute Cloud (EC2) instances to non-allow listed IAM roles only. This way, you can ensure that only authorized IAM roles can create new EC2 instances within your AWS account, thereby reducing the risk of unauthorized access and misuse of your resources.\n\nTo implement this security measure, you can create an IAM policy that allows only specific IAM roles to run EC2 instances and denies this privilege to any other role not explicitly listed. You can then attach this policy to your EC2 instances to restrict the ability to launch new instances to only authorized roles.\"','Attach deny policy / remove elevated permissions,If you want exception you may please request exception for this rule through PacBot.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#restrict-ec2-runinstance-privilege-to-non-allow-listed-iam-role','iamrole','aws','ec2-runInstance-iam-role-with-unapproved-access','{\"params\":[{\"key\":\"roleIdentifyingString\",\"value\":\"role/paladincloud_ro\",\"encrypt\":false},{\"key\":\"splitterChar\",\"value\":\",\",\"encrypt\":false},{\"key\":\"unApprovedIamActions\",\"value\":\"ec2:*,*,ec2:RunInstances\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"IAM roles should not have these permissions\",\"defaultVal\":\"ec2:*,*,ec2:RunInstances\",\"displayName\":\"Unapproved IAM actions\"},{\"key\":\"policyKey\",\"value\":\"iam-role-with-unapproved-access\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole\",\"autofix\":false,\"alexaKeyword\":\"ec2-runInstance-iam-role-with-unapproved-access\",\"policyRestUrl\":\"\",\"targetType\":\"iamrole\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_iamrole_shouldnothave_ec2runinstance_privilege\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_iamrole_shouldnothave_ec2runinstance_privilege','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'asgc','2019-02-08','2019-02-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2','aws_ec2_should_not_be_publicly_accessible_on_port22','EC2WithPublicAccessForConfiguredPort22','Deny Public Access to EC2 Instances on SSH Port 22','SSH (Secure Shell) port 22 should be restricted for inbound traffic from external IP addresses since unrestricted access could result in banner grabbing or brute force attacks. These risks can be minimized by configuring specific IP addresses for incoming connections.','Remove the rule from the security groups that allows inbound access from 0.0.0.0/0.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Deny-Public-Access-to-EC2-Instances-on-SSH-Port-22','ec2','aws','EC2WithPublicAccessForConfiguredPort22','{\"params\":[{\"encrypt\":false,\"value\":\"igw\",\"key\":\"internetGateWay\"},{\"encrypt\":false,\"value\":\"22\",\"key\":\"portToCheck\"},{\"encrypt\":false,\"value\":\"check-for-ec2-with-public-access-for-configured-port\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"key\":\"esEc2SgURL\",\"value\":\"/aws/ec2_secgroups/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableAssociationsURL\",\"value\":\"/aws_routetable/routetable_associations/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableRoutesURL\",\"value\":\"/aws_routetable/routetable_routes/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableURL\",\"value\":\"/aws_routetable/routetable/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSubnetURL\",\"value\":\"/aws_subnet/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[],\"policyId\":\"EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2\",\"autofix\":false,\"alexaKeyword\":\"EC2WithPublicAccessForConfiguredPort22\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ec2_should_not_be_publicly_accessible_on_port22\",\"policyType\":\"ManagePolicy\"}','0 0/2 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_should_not_be_publicly_accessible_on_port22','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-08-23','2018-11-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','aws_ec2_should_not_be_publicly_accessible_with_any_port','Ec2WithPublicAccess','Deny Public Access to Ports on EC2 Instances','EC2 instances can be vulnerable to network attacks due to their open ports. One way to address this vulnerability is by configuring security groups on EC2 instances to restrict inbound traffic based on specific rules, such as allowing traffic from specific IP addresses.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Deny-Public-Access-to-Ports-on-EC2-Instances','ec2','aws','Ec2WithPublicAccess','{\"assetGroup\":\"aws\",\"policyId\":\"EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2\",\"policyRestUrl\":\"\",\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyUUID\":\"aws_ec2_should_not_be_publicly_accessible_with_any_port\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"ec2\",\"params\":[{\"encrypt\":\"false\",\"value\":\"igw\",\"key\":\"internetGateWay\"},{\"encrypt\":\"false\",\"value\":\"check-for-ec2-public-access\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws/ec2_secgroups/_search\",\"key\":\"esEc2SgURL\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_routetable/routetable_associations/_search\",\"key\":\"esRoutetableAssociationsURL\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_routetable/routetable_routes/_search\",\"key\":\"esRoutetableRoutesURL\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_routetable/routetable/_search\",\"key\":\"esRoutetableURL\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_sg/sg_rules/_search\",\"key\":\"esSgRulesUrl\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_subnet/_search\",\"key\":\"esSubnetURL\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"::/0\",\"key\":\"cidripv6\"},{\"isValueNew\":true,\"defaultVal\":\"192.168.0.0/16\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Default cidr IP\",\"description\":\"Any instance found with default route 0.0.0.0, then it will be replaced with given cird block during the time of autofix\",\"value\":\"192.168.0.0/16\",\"key\":\"defaultCidrIp\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"ec2-global-access-fix\",\"key\":\"fixKey\"}],\"autofix\":false,\"alexaKeyword\":\"Ec2WithPublicAccess\"}','0 0/2 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_should_not_be_publicly_accessible_with_any_port','critical','security','true','false','',24,2,'commonTemplate','Resource Id,Account Id,Region,Attached Sg,Detached Sg',NULL,'PaladinCloud autofix - Ec2 instance detected with public access','PaladinCloud - autofix action - Ec2 with public access restored back','The access to this Ec2 instance will be automatically fixed by PaladinCloud after {days} days if no exception is granted.','PaladinCloud has now automatically revoked the public access of this Ec2 instance created by you as it was a violation of','an Ec2 instance  (<b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) created by you is open to internet',24,'ASGC','2017-08-18','2018-12-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('ELB_Access_Logs_version-1_AppLB_Access_Logs_appelb','aws_appelb_access_logs','AppLB_Access_Logs','Enable Access log for App ELB and attach to the mentioned bucket','Enabling access logs for App ELB and attaching them to a specified S3 bucket is beneficial for performance monitoring, troubleshooting, security and compliance, user activity analysis, centralized log storage, and cost management. Access logs provide valuable insights into traffic patterns and client behavior, helping you optimize your application, identify potential security threats, and manage resources more effectively.','Access log should be enabled to ELB and attached to mentioned bucket','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Enable-the-Access-Log-to-App-ELB-and-Attach-It-to-the-Mentioned-Bucket','appelb','aws','AppLB_Access_Logs','{\"assetGroup\":\"aws\",\"policyId\":\"ELB_Access_Logs_version-1_AppLB_Access_Logs_appelb\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_appelb_access_logs\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"appelb\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-access-log-for-elb\",\"key\":\"policyKey\"},{\"key\":\"accessLogBucketName\",\"value\":\"\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Cloudfront access log bucket name to check\",\"defaultVal\":\"\",\"displayName\":\"Access log bucket name\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"autofix\":false,\"alexaKeyword\":\"AppLBAccessLogs\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_appelb_access_logs','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-02-24','2019-03-14','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('ELB_Access_Logs_version-1_ClassicLB_Access_Logs_classicelb','aws_classicelb_access_logs','ClassicLB_Access_Logs','Enable Access Log for Classic ELB and attach to the mentioned bucket','Enabling access logs for Classic ELB and attaching them to a specified S3 bucket provides benefits such as performance monitoring, troubleshooting, security and compliance, user activity analysis, centralized log storage, and cost management. Access logs offer valuable insights into client traffic patterns and user behavior, helping you optimize your application, identify potential security threats, and manage resources more effectively.','Access log should be enabled to ELB and attached to mentioned bucket','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-elb-access-logs','classicelb','aws','ClassicLB_Access_Logs','{\"assetGroup\":\"aws\",\"policyId\":\"ELB_Access_Logs_version-1_ClassicLB_Access_Logs_classicelb\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_classicelb_access_logs\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"classicelb\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-access-log-for-elb\",\"key\":\"policyKey\"},{\"key\":\"accessLogBucketName\",\"value\":\"\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Cloudfront access log bucket name to check\",\"defaultVal\":\"\",\"displayName\":\"Access log bucket name\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"autofix\":false,\"alexaKeyword\":\"ClassicLBAccessLogs\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_classicelb_access_logs','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-02-24','2019-02-27','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('EbsSnapShot_version-1_EbsSnapShot_snapshot','aws_ec2_instances_should_not_use_deprecates_instance_types','EbsSnapShot','Deny Public Access to EBS Snapshots','AWS EBS volume snapshots should be kept private for optimal data security to avoid the risk of unauthorized data access. Sharing snapshots with external accounts can pose a potential risk, as they can create volumes from it and gain access to sensitive information. It is therefore recommended to restrict public visibility or share them only with specific accounts.','Make the snapshot private','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-to-ebs-snapshots','snapshot','aws','EbsSnapShot','{\"assetGroup\":\"aws\",\"policyId\":\"EbsSnapShot_version-1_EbsSnapShot_snapshot\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_ec2_instances_should_not_use_deprecates_instance_types\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"snapshot\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-ebs-snapshot-with-public-access\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"defaultVal\":\"ePs02jT06w\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Check Id\",\"description\":\"Check Id Keyword\",\"value\":\"ePs02jT06w\",\"key\":\"checkId\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_checks/checks_resources/_search\",\"key\":\"esServiceURL\"}],\"autofix\":false,\"alexaKeyword\":\"EbsSnapShot\"}','0 0/23 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_instances_should_not_use_deprecates_instance_types','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-08-16','2018-09-19','ENABLED');
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aws_ec2_qualys_scanned_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='qualys_aws_ec2_scanned_rule';
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2','qualys_aws_ec2_scanned_rule','Ec2InstanceScannedByQualysAPI','Enable Qualys Scan for AWS EC2 Instances','Scanning EC2 instances monthly using the Qualys Vulnerability Assessment Tool is important for understanding and managing security risks on your cloud infrastructure. The tool can help identify vulnerabilities in software, configurations, and networking components, which malicious actors can exploit to gain unauthorized access to your systems or data. \nBy scanning your EC2 instances regularly, you can discover and promptly address any potential security threats. This helps to ensure that the security of your cloud environment is top-notch and that your data is safe and secure.\n','Install Qualys Cloud Agent on the server or get the asset scanned manually by VMAS team every month','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#scan-ec2-instances-monthly-using-the-qualys-vulnerability-assessment-tool','ec2','aws','Ec2InstanceScannedByQualysAPI','{\"assetGroup\":\"aws\",\"policyId\":\"Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"qualys_aws_ec2_scanned_rule\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"ec2\",\"params\":[{\"defaultVal\":\"30\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Target\",\"description\":\"Target in days\",\"value\":\"30\",\"key\":\"target\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_ec2/_search\",\"key\":\"esQualysUrl\"},{\"isValueNew\":true,\"defaultVal\":\"7\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Discovered days range\",\"description\":\"Discovered days in number\",\"value\":\"7\",\"key\":\"discoveredDaysRange\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"check-for-resource-scanned-by-qualys\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"autofix\":false,\"alexaKeyword\":\"Ec2InstanceScannedByQualysAPI\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/qualys_aws_ec2_scanned_rule','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-09-18','2019-09-18','ENABLED');
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aws_ec2_pub_vuln_s5_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='qualys_aws_ec2_pub_vuln_s5_rule';
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','qualys_aws_ec2_pub_vuln_s5_rule','Ec2PublicAccessPortWithS5Vuln','Restrict Internet Access to EC2 Instance with Remotely Exploitable Vulnerability (S5)','Minimizing the risk of network attacks is crucial when an EC2 instance has a remotely exploitable vulnerability. Key steps to take include identifying the affected instance, restricting inbound traffic via security group rules, using a bastion host to control access, and applying relevant patches or updates. By taking these measures, the vulnerability can be addressed, and the instance can be safeguarded while still allowing legitimate traffic to reach it.','Immediately remove the internet access,Apply the vulnerability fix','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Restrict-Internet-Access-to-EC2-Instance-with-Remotely-Exploitable-Vulnerability-S5','ec2','aws','Ec2PublicAccessPortWithS5Vuln','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-ec2-public-access-port-with-s5-vulnerabilities\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"S5\",\"key\":\"severityVulnValue\"},{\"encrypt\":false,\"value\":\"EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2\",\"key\":\"ec2PortRuleId\"},{\"key\":\"esEc2WithVulnInfoForS5Url\",\"value\":\"/aws_ec2/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esEc2PubAccessPortUrl\",\"value\":\"/aws/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esAppElbWithInstanceUrl\",\"value\":\"/aws_appelb/appelb_instances/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esClassicElbWithInstanceUrl\",\"value\":\"/aws_classicelb/classicelb_instances/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esAppElbPubAccessPortUrl\",\"value\":\"/aws_appelb/issue_appelb/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esClassicElbPubAccessPortUrl\",\"value\":\"/aws_classicelb/issue_classicelb/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"appElbPortRuleId\",\"value\":\"ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"classicElbPortRuleId\",\"value\":\"ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2\",\"autofix\":false,\"alexaKeyword\":\"Ec2PublicAccessPortWithS5Vulnerability\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"qualys_aws_ec2_pub_vuln_s5_rule\",\"policyType\":\"ManagePolicy\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/qualys_aws_ec2_pub_vuln_s5_rule','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-08-05','2019-08-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ec2StoppedInstanceForLong_version-1_Ec2StoppedInstanceForLong_ec2','aws_ec2_should_not_be_stopped_state_for_too_long','Ec2StoppedInstanceForLong','Ensure that EC2 instances are not Left in a Stopped State for more than 60 Days','EC2 instances should not be left in a stopped state for more than 60 days because it can result in increased costs due to storage charges, security vulnerabilities, compliance violations, and performance issues.','Terminate the EC2 instance if it is no longer required.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#ensure-that-ec2-instances-are-not-left-in-a-stopped-state-for-more-than-60-days','ec2','aws','Ec2StoppedInstanceForLong','{\"assetGroup\":\"aws\",\"policyId\":\"Ec2StoppedInstanceForLong_version-1_Ec2StoppedInstanceForLong_ec2\",\"policyRestUrl\":\"\",\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyUUID\":\"aws_ec2_should_not_be_stopped_state_for_too_long\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"ec2\",\"params\":[{\"encrypt\":\"false\",\"value\":\"true\",\"key\":\"threadsafe\"},{\"encrypt\":\"false\",\"value\":\"check-for-stopped-instance-for-long\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"90\",\"key\":\"targetstoppedDuration\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Max duration in days\",\"defaultVal\":\"90\",\"displayName\":\"Target stopped Duration\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"}],\"autofix\":false,\"alexaKeyword\":\"Ec2StoppedInstanceForLong\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_should_not_be_stopped_state_for_too_long','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-08-29','2018-11-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2','aws_ec2_should_not_be_publicly_accessible_on_port1434','Ec2WithPublicAccessOnPort1434','Deny Public Access to EC2 Instances on Default SQL Browser Port 1434 ','Allowing all external IP addresses to SQL Browser port 1434 is a security vulnerability and should be avoided. To protect against Denial of Service, Buffer Overflow, and SQL Injection attacks, public access to the SQL server should be blocked, and only inbound traffic from specific IP addresses should be allowed for port 1434.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-sql-port-1434','ec2','aws','Ec2WithPublicAccessOnPort1434','{\"params\":[{\"encrypt\":\"false\",\"value\":\"1434\",\"key\":\"portToCheck\"},{\"encrypt\":\"false\",\"value\":\"igw\",\"key\":\"internetGateWay\"},{\"encrypt\":\"false\",\"value\":\"check-for-ec2-with-public-access-for-configured-port\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"key\":\"esEc2SgURL\",\"value\":\"/aws/ec2_secgroups/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableAssociationsURL\",\"value\":\"/aws_routetable/routetable_associations/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableRoutesURL\",\"value\":\"/aws_routetable/routetable_routes/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableURL\",\"value\":\"/aws_routetable/routetable/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSubnetURL\",\"value\":\"/aws_subnet/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyId\":\"Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2\",\"autofix\":false,\"alexaKeyword\":\"Ec2WithPubAccPort1434\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ec2_should_not_be_publicly_accessible_on_port1434\",\"policyType\":\"ManagePolicy\"}','0 0/23 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_should_not_be_publicly_accessible_on_port1434','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-06-10','2019-06-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2','aws_ec2_should_not_be_publicly_accessible_on_port3306','Ec2WithPubAccMySqlPort3306','Deny Public Access to EC2 Instances on Default MySQL Port 3306 ','Allowing all external IP addresses to MySQL Browser port 3306 is a security vulnerability and should be avoided. To protect against Denial of Service, Buffer Overflow, and SQL Injection attacks, public access to the SQL server should be blocked, and only inbound traffic from specific IP addresses should be allowed for port 3306.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-mysql-port-3306','ec2','aws','Ec2WithPubAccMySqlPort3306','{\"params\":[{\"encrypt\":\"false\",\"value\":\"igw\",\"key\":\"internetGateWay\"},{\"encrypt\":\"false\",\"value\":\"3306\",\"key\":\"portToCheck\"},{\"encrypt\":\"false\",\"value\":\"check-for-ec2-with-public-access-for-configured-port\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"key\":\"esEc2SgURL\",\"value\":\"/aws/ec2_secgroups/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableAssociationsURL\",\"value\":\"/aws_routetable/routetable_associations/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableRoutesURL\",\"value\":\"/aws_routetable/routetable_routes/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableURL\",\"value\":\"/aws_routetable/routetable/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSubnetURL\",\"value\":\"/aws_subnet/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyId\":\"Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2\",\"autofix\":false,\"alexaKeyword\":\"Ec2WithPubAccMySqlPort3306\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ec2_should_not_be_publicly_accessible_on_port3306\",\"policyType\":\"ManagePolicy\"}','0 0/23 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_should_not_be_publicly_accessible_on_port3306','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-09-06','2018-09-28','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2','aws_ec2_should_not_be_publicly_accessible_on_port138','Ec2WithPubAccNetBIOS138','Deny Public Access to EC2 Instances on Port 138','TCP port 139 and UDP ports 137 and 138 are used for NetBIOS name resolution (i.e., mapping a NetBIOS name to an IP address) by the services such as File and Printer Sharing service running on Microsoft Windows Server OS. Allowing unrestricted NetBIOS access can increase opportunities for malicious activity such as man-in-the-middle attacks (MITM), Denial of Service (DoS) attacks, or BadTunnel exploits. Review the inbound rules of your EC2 security groups that allow unrestricted access (i.e., 0.0.0.0/0) on TCP port 139 and UDP ports 137 and 138. If such rules are found, restrict them to only trusted IP addresses or IP ranges that require it to implement the principle of least privilege and reduce the attack surface. This will ensure that only authorized traffic is allowed access.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-netbios-port-138','ec2','aws','Ec2WithPubAccNetBIOS138','{\"params\":[{\"encrypt\":\"false\",\"value\":\"igw\",\"key\":\"internetGateWay\"},{\"encrypt\":\"false\",\"value\":\"138\",\"key\":\"portToCheck\"},{\"encrypt\":\"false\",\"value\":\"check-for-ec2-with-public-access-for-configured-port\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"key\":\"esEc2SgURL\",\"value\":\"/aws/ec2_secgroups/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableAssociationsURL\",\"value\":\"/aws_routetable/routetable_associations/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableRoutesURL\",\"value\":\"/aws_routetable/routetable_routes/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableURL\",\"value\":\"/aws_routetable/routetable/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSubnetURL\",\"value\":\"/aws_subnet/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyId\":\"Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2\",\"autofix\":false,\"alexaKeyword\":\"Ec2WithPubAccNetBIOS138\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ec2_should_not_be_publicly_accessible_on_port138\",\"policyType\":\"ManagePolicy\"}','0 0/23 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_should_not_be_publicly_accessible_on_port138','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-09-06','2018-09-28','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2','aws_ec2_should_not_be_publicly_accessible_on_port80','Ec2WithPublicAccessNonWebPort80','Deny Public Access to EC2 Instances on Port 80','To implement the principle of least privilege and minimize the risk of a security breach, it\'s crucial to review the inbound rules in your EC2 security groups for TCP port 80 and ensure that only the necessary IP addresses are granted access. Allowing unrestricted HTTP access can lead to various malicious activities, including hacking, denial-of-service (DoS) attacks, and data loss. Therefore, it\'s advisable to update your security groups\' inbound configuration to restrict HTTP access to specific entities, such as IP addresses or IP ranges.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-http-port-80','ec2','aws','Ec2WithPublicAccessNonWebPort80','{\"params\":[{\"encrypt\":\"false\",\"value\":\"igw\",\"key\":\"internetGateWay\"},{\"encrypt\":\"false\",\"value\":\"80\",\"key\":\"portToCheck\"},{\"encrypt\":\"false\",\"value\":\"check-for-ec2-with-public-access-for-configured-port\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"key\":\"esEc2SgURL\",\"value\":\"/aws/ec2_secgroups/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableAssociationsURL\",\"value\":\"/aws_routetable/routetable_associations/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableRoutesURL\",\"value\":\"/aws_routetable/routetable_routes/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableURL\",\"value\":\"/aws_routetable/routetable/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSubnetURL\",\"value\":\"/aws_subnet/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyId\":\"Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2\",\"autofix\":false,\"alexaKeyword\":\"Ec2WithPublicAccessNonWebPort80\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ec2_should_not_be_publicly_accessible_on_port80\",\"policyType\":\"ManagePolicy\"}','0 0/23 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_should_not_be_publicly_accessible_on_port80','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-09-06','2018-09-28','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2','aws_ec2_should_not_be_publicly_accessible_on_port8080','Ec2WithPublicAccessPort8080','Deny Public Access to EC2 Instances on Port 8080','Preventing public access to specific ports, including port 8080, can enhance security by decreasing the probability of cyber-attacks, guaranteeing compliance with regulations and standards, decreasing expenses associated with data transfer, and avoiding unintentional disclosure of confidential information. By regulating access to ports, you can decrease your EC2 instance\'s susceptibility to hacking and minimize the chances of unauthorized entry.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-port-8080','ec2','aws','Ec2WithPublicAccessPort8080','{\"params\":[{\"key\":\"internetGateWay\",\"value\":\"igw\",\"encrypt\":false},{\"key\":\"portToCheck\",\"value\":\"8080\",\"encrypt\":false},{\"key\":\"policyKey\",\"value\":\"check-for-ec2-with-public-access-for-configured-port\",\"encrypt\":false},{\"key\":\"policyCategory\",\"value\":\"security\",\"encrypt\":false},{\"key\":\"severity\",\"value\":\"critical\",\"encrypt\":false},{\"key\":\"cidrIp\",\"value\":\"0.0.0.0/0\",\"encrypt\":false},{\"key\":\"esEc2SgURL\",\"value\":\"/aws/ec2_secgroups/_search\",\"encrypt\":false},{\"key\":\"esRoutetableAssociationsURL\",\"value\":\"/aws_routetable/routetable_associations/_search\",\"encrypt\":false},{\"key\":\"esRoutetableRoutesURL\",\"value\":\"/aws_routetable/routetable_routes/_search\",\"encrypt\":false},{\"key\":\"esRoutetableURL\",\"value\":\"/aws_routetable/routetable/_search\",\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"encrypt\":false},{\"key\":\"esSubnetURL\",\"value\":\"/aws_subnet/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[],\"policyId\":\"Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2\",\"autofix\":false,\"alexaKeyword\":\"Ec2WithPublicAccessPort8080\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ec2_should_not_be_publicly_accessible_on_port8080\",\"policyType\":\"ManagePolicy\"}','0 0/23 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_should_not_be_publicly_accessible_on_port8080','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-09-06','2018-09-28','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2','aws_ec2_should_not_be_publicly_accessible_on_port5432','Ec2WithPubAcc5432','Deny Public Access to EC2 Instances on Default PostgreSQL Port 5432','Denying public access to EC2 instances on default PostgreSQL port 5432 can enhance your environment\'s security. Allowing public internet access to this port can lead to various security threats, including brute-force attacks, SQL injection attacks, and unauthorized data breaches. By restricting public access to this port and using security groups to limit access to trusted IP addresses or specific security groups, you can prevent unauthorized access to your database and reduce the risk of data loss or corruption.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-postgresql-port-5432','ec2','aws','Ec2WithPubAcc5432','{\"params\":[{\"encrypt\":\"false\",\"value\":\"igw\",\"key\":\"internetGateWay\"},{\"encrypt\":\"false\",\"value\":\"5432\",\"key\":\"portToCheck\"},{\"encrypt\":\"false\",\"value\":\"check-for-ec2-with-public-access-for-configured-port\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"key\":\"esRoutetableAssociationsURL\",\"value\":\"/aws_routetable/routetable_associations/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableRoutesURL\",\"value\":\"/aws_routetable/routetable_routes/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableURL\",\"value\":\"/aws_routetable/routetable/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esEc2SgURL\",\"value\":\"/aws/ec2_secgroups/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSubnetURL\",\"value\":\"/aws_subnet/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyId\":\"Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2\",\"autofix\":false,\"alexaKeyword\":\"Ec2WithPubAcc5432\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ec2_should_not_be_publicly_accessible_on_port5432\",\"policyType\":\"ManagePolicy\"}','0 0/23 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_should_not_be_publicly_accessible_on_port5432','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-06-10','2019-06-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2','aws_ec2_should_not_be_publicly_accessible_on_port3389','Ec2WithPubAcc3389','Deny Public Access to EC2 Instances on Port 3389','To implement the principle of least privilege and reduce the likelihood of a security breach, it is important to review your EC2 security groups for inbound rules that permit unrestricted access (i.e., 0.0.0.0/0 or ::/0) to TCP port 3389. TCP port 3389 is used for secure remote GUI login to Microsoft servers by connecting an RDP (Remote Desktop Protocol) client application with an RDP server. Allowing unrestricted RDP access can increase the potential for malicious activity, such as hacking, man-in-the-middle attacks (MITM), and Pass-the-Hash (PtH) attacks. To mitigate these risks, restrict access to only the IP addresses that require it by modifying your security group\'s inbound rules.','Remove the rule from the security groups that allows inbound access from 0.0.0.0/0.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-rdp-port-3389','ec2','aws','Ec2WithPubAcc3389','{\"params\":[{\"encrypt\":\"false\",\"value\":\"igw\",\"key\":\"internetGateWay\"},{\"encrypt\":\"false\",\"value\":\"3389\",\"key\":\"portToCheck\"},{\"encrypt\":\"false\",\"value\":\"check-for-ec2-with-public-access-for-configured-port\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"key\":\"esEc2SgURL\",\"value\":\"/aws/ec2_secgroups/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableAssociationsURL\",\"value\":\"/aws_routetable/routetable_associations/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableRoutesURL\",\"value\":\"/aws_routetable/routetable_routes/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esRoutetableURL\",\"value\":\"/aws_routetable/routetable/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSubnetURL\",\"value\":\"/aws_subnet/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyId\":\"Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2\",\"autofix\":false,\"alexaKeyword\":\"Ec2WithPublicAccessRdpPort3389\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ec2_should_not_be_publicly_accessible_on_port3389\",\"policyType\":\"ManagePolicy\"}','0 0/23 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_should_not_be_publicly_accessible_on_port3389','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-06-10','2019-06-10','ENABLED');
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aws_ec2_vuln_severity_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='qualys_aws_ec2_vuln_severity_rule';
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS3Vulnerability_ec2','qualys_aws_ec2_vuln_severity_rule','Ec2WithS3VulnerabilityRule','Qualys found S3 Vulnerabilities for AWS EC2 Instance','S3 vulnerability could allow attackers to access the underlying operating system, resources, and data. To prevent the S3 vulnerability from affecting EC2 instances, update the firmware, disable the Management Engine if necessary, implement access controls and security policies, monitor the instance for suspicious activity, and use strong authentication measures.','','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Deny-S3-Vulnerability-on-EC2-Instance','ec2','aws','Ec2WithS3VulnerabilityRule','{\"params\":[{\"encrypt\":false,\"value\":\"S3\",\"key\":\"severityVulnValue\"},{\"key\":\"esResourceWithVulnInfoForSeverityUrl\",\"value\":\"/aws_ec2/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyKey\",\"value\":\"check-for-resource-with-severity-vulnerabilities\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Ec2WithSeverityVulnerability_version-1_Ec2WithS3Vulnerability_ec2\",\"autofix\":false,\"alexaKeyword\":\"Ec2WithS3Vulnerability\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"qualys_aws_ec2_vuln_severity_rule\",\"policyType\":\"ManagePolicy\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/qualys_aws_ec2_vuln_severity_rule','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-08-05','2019-08-05','ENABLED');
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aws_ec2_vuln_s4_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='qualys_aws_ec2_vuln_s4_rule';
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS4Vulnerability_ec2','qualys_aws_ec2_vuln_s4_rule','Ec2WithS4VulnerabilityRule','Qualys found S4 Vulnerabilities for AWS EC2 Instance','S4 vulnerability could allow attackers to access the underlying operating system, resources, and data. To prevent the S4 vulnerability from affecting EC2 instances, update the firmware, disable the Management Engine if necessary, implement access controls and security policies, monitor the instance for suspicious activity, and use strong authentication measures. ','','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Deny-S4-Vulnerability-on-EC2-Instance','ec2','aws','Ec2WithS4VulnerabilityRule','{\"params\":[{\"encrypt\":false,\"value\":\"S4\",\"key\":\"severityVulnValue\"},{\"key\":\"esResourceWithVulnInfoForSeverityUrl\",\"value\":\"/aws_ec2/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyKey\",\"value\":\"check-for-resource-with-severity-vulnerabilities\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Ec2WithSeverityVulnerability_version-1_Ec2WithS4Vulnerability_ec2\",\"autofix\":false,\"alexaKeyword\":\"Ec2WithS4Vulnerability\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"qualys_aws_ec2_vuln_s4_rule\",\"policyType\":\"ManagePolicy\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/qualys_aws_ec2_vuln_s4_rule','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-08-05','2019-08-05','ENABLED');
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aws_ec2_vuln_s5_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='qualys_aws_ec2_vuln_s5_rule';
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS5Vulnerability_ec2','qualys_aws_ec2_vuln_s5_rule','Ec2WithS5VulnerabilityRule','Qualys found S5 Vulnerabilities for AWS EC2 Instance','S5 vulnerability can enable attackers to gain control of a target system and affects EC2 instances with Intel processors with Intel Management Engine firmware. To prevent the S5 vulnerability from affecting EC2 instances, update the firmware, disable the Management Engine if necessary, implement access controls and security policies, monitor the instance for suspicious activity, and use strong authentication measures. ','','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Deny-S5-Vulnerability-on-EC2-Instance','ec2','aws','Ec2WithS5VulnerabilityRule','{\"params\":[{\"encrypt\":false,\"value\":\"S5\",\"key\":\"severityVulnValue\"},{\"key\":\"esResourceWithVulnInfoForSeverityUrl\",\"value\":\"/aws_ec2/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyKey\",\"value\":\"check-for-resource-with-severity-vulnerabilities\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Ec2WithSeverityVulnerability_version-1_Ec2WithS5Vulnerability_ec2\",\"autofix\":false,\"alexaKeyword\":\"Ec2WithS5Vulnerability\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"qualys_aws_ec2_vuln_s5_rule\",\"policyType\":\"ManagePolicy\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/qualys_aws_ec2_vuln_s5_rule','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-08-05','2019-08-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('EksSgInboundTrafficValidation_version-1_SgInboundTrafficValidation_eks','aws_eks_sg_inbound_traffic_validation','All Inbound traffic should be disabled for EKS Cluster other than TCP port 443','Disable All Inbound Traffic for EKS Cluster Other than TCP Port 443','EKS cluster should be configured to allow traffic only on port 443 to protect your clusters against malicious activities','Allow access only on TCP port 443 by updating the Security groups associated with AWS EKS cluster','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Disable-All-Inbound-Traffic-for-EKS-Cluster-Other-than-TCP-Port-443','eks','aws','EksSgInboundTraffic','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-eks-inbound-traffic\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"EksSgInboundTrafficValidation_version-1_SgInboundTrafficValidation_eks\",\"autofix\":false,\"alexaKeyword\":\"EksSgInboundTraffic\",\"policyRestUrl\":\"\",\"targetType\":\"eks\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_eks_sg_inbound_traffic_validation\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_eks_sg_inbound_traffic_validation','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-12-05','2022-12-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','aws_elasticsearch_endpoint_should_not_be_publicly_accessible','ElasticSearchPublicAccessRule','Restrict Internet Access to Elastic Search Endpoint','AWS Elasticsearch should not be accessible to the public via the internet to prevent unauthorized user access, data loss, and the potential exposure of sensitive data.','Make necessary changes to the access control policy and security groups to make the ES endpoint private, Allow only a specific list of IP addresses, Once the Elastic Search endpoint is not publicly accessible PacBot will auotmatically close the issue, In case you want this to be public then send a request for exeception to paladincloud.io, You can also request exception from the policy violation details page, Secops will review and involve DSO if required and grant exception and PacBot will automatically ignore this resource till the expiry of exception.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Restrict-Internet-Access-to-Elastic-Search-Endpoint','elasticsearch','aws','ElasticSearchPublicAccessRule','{\"assetGroup\":\"aws\",\"policyId\":\"ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_elasticsearch_endpoint_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"elasticsearch\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-elastic-search-public-access\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"igw\",\"key\":\"internetGateWay\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_routetable/routetable_associations/_search\",\"key\":\"esRoutetableAssociationsURL\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_sg/sg_rules/_search\",\"key\":\"esSgRulesUrl\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_routetable/routetable/_search\",\"key\":\"esRoutetableURL\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"::/0\",\"key\":\"cidripv6\"},{\"isValueNew\":true,\"defaultVal\":\"192.168.0.0/16\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Default cidr IP\",\"description\":\"Any instance found with default route 0.0.0.0, then it will be replaced with given cird block during the time of autofix\",\"value\":\"192.168.0.0/16\",\"key\":\"defaultCidrIp\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"publicly-accessible-elasticsearch\",\"key\":\"fixKey\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_routetable/routetable_routes/_search\",\"key\":\"esRoutetableRoutesURL\"}],\"autofix\":false,\"alexaKeyword\":\"ElasticSearchPublicAccessRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_elasticsearch_endpoint_should_not_be_publicly_accessible','critical','security','true','false','',24,2,'commonTemplate','Resource Id,Account Id,Region,Attached Sg,Detached Sg',NULL,'PaladinCloud autofix - Elasticsearch detected with public access','PaladinCloud - Elasticsearch with public access restored back','The access to this Elasticsearch will be automatically fixed by PaladinCloud after {days} days if no exception is granted.','PaladinCloud has now automatically revoked the public access of this Elasticsearch created by you as it was a violation of','Elasticsearch <b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) created by you is open to internet',24,'ASGC','2018-10-10','2018-12-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','aws_application_elb_should_not_be_publicly_accessible','ApplicationElbWithPublicAccess','Restrict Internet Access to Application ELB ','The security of a publicly accessible load balancer can be compromised by brute-force login attempts, potentially leading to data leaks or loss. To reduce security risks, it is important to prevent unauthorized access attempts. To restrict internet access to the application ELB, you can disable the \'Publicly Accessible\' flag for the database and update the security group associated with the instance in the VPC',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-to-elb','appelb','aws','ApplicationElbWithPublicAccess','{\"assetGroup\":\"aws\",\"policyId\":\"ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_application_elb_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"appelb\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-elb-public-access\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"igw\",\"key\":\"internetGateWay\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"encrypt\":false,\"value\":\"/aws/appelb_secgroups/_search\",\"key\":\"esElbWithSGUrl\"},{\"encrypt\":false,\"value\":\"/aws_routetable/routetable_associations/_search\",\"key\":\"esRoutetableAssociationsURL\"},{\"encrypt\":false,\"value\":\"/aws_routetable/routetable_routes/_search\",\"key\":\"esRoutetableRoutesURL\"},{\"encrypt\":false,\"value\":\"/aws_routetable/routetable/_search\",\"key\":\"esRoutetableURL\"},{\"encrypt\":false,\"value\":\"/aws_sg/sg_rules/_search\",\"key\":\"esSgRulesUrl\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"::/0\",\"key\":\"cidripv6\"},{\"isValueNew\":true,\"defaultVal\":\"192.168.0.0/16\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Default cidr IP\",\"description\":\"Any instance found with default route 0.0.0.0, then it will be replaced with given cird block during the time of autofix\",\"value\":\"192.168.0.0/16\",\"key\":\"defaultCidrIp\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"publicly-accessible-appelb\",\"key\":\"fixKey\"}],\"autofix\":false,\"alexaKeyword\":\"ApplicationElbWithPublicAccess\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_application_elb_should_not_be_publicly_accessible','critical','security','true','false','',24,2,'commonTemplate','Resource Id,Account Id,Region,Attached Sg,Detached Sg',NULL,'PaladinCloud autofix - Application ELB detected with public access','PaladinCloud autofix action - Application ELB with public access restored back','The access to this Application ELB will be automatically fixed by PaladinCloud after {days} days if no exception is granted.','PaladinCloud has now automatically revoked the public access of this Application ELB created by you as it was a violation of','an Application ELB (<b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) created by you is open to internet',24,'ASGC','2018-10-11','2018-12-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','aws_classic_elb_should_not_be_publicly_accessible','ClassicElbWithPublicAccess','Restrict Internet Access to Classic ELB','Elastic Load Balancing distributes app traffic across multiple targets like EC2 instances, containers, IP addresses, and virtual appliances. It offers four types of load balancers with high availability, auto-scaling, and security for fault-tolerant apps, across one or multiple Availability Zones. \nRestricting Internet access to a Classic Load Balancer (ELB) is an essential security measure that can help reduce the potential attack surface of your application and make it harder for attackers to access your resources. It provides protection against DDoS attacks, helps meet compliance requirements, and enables better control over access.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Restrict-Internet-Access-to-Classic-ELB','classicelb','aws','ClassicElbWithPublicAccess','{\"assetGroup\":\"aws\",\"policyId\":\"ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_classic_elb_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"classicelb\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-elb-public-access\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"igw\",\"key\":\"internetGateWay\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"encrypt\":false,\"value\":\"/aws/classicelb_secgroups/_search\",\"key\":\"esElbWithSGUrl\"},{\"encrypt\":false,\"value\":\"/aws_routetable/routetable_associations/_search\",\"key\":\"esRoutetableAssociationsURL\"},{\"encrypt\":false,\"value\":\"/aws_routetable/routetable_routes/_search\",\"key\":\"esRoutetableRoutesURL\"},{\"encrypt\":false,\"value\":\"/aws_routetable/routetable/_search\",\"key\":\"esRoutetableURL\"},{\"encrypt\":false,\"value\":\"/aws_sg/sg_rules/_search\",\"key\":\"esSgRulesUrl\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"::/0\",\"key\":\"cidripv6\"},{\"isValueNew\":true,\"defaultVal\":\"192.168.0.0/16\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Default cidr IP\",\"description\":\"Any instance found with default route 0.0.0.0, then it will be replaced with given cird block during the time of autofix\",\"value\":\"192.168.0.0/16\",\"key\":\"defaultCidrIp\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"publicly-accessible-classicelb\",\"key\":\"fixKey\"}],\"autofix\":false,\"alexaKeyword\":\"ClassicElbWithPublicAccess\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_classic_elb_should_not_be_publicly_accessible','critical','security','true','false','',24,2,'commonTemplate','Resource Id,Account Id,Region,Attached Sg,Detached Sg',NULL,'PaladinCloud autofix - Classic ELB detected with public access','PaladinCloud autofix action - Classic ELB with public access restored back','The access to this Classic ELB will be automatically fixed by PaladinCloud after {days} days if no exception is granted','PaladinCloud has now automatically revoked the public access of this Classic ELB created by you as it was a violation of','an Classic ELB (<b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) created by you is open to internet',24,'ASGC','2018-10-12','2018-12-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_API_Key_Application_Restrictions','Enable_API_Key_Application_Restrictions','Configure Application Restrictions for Google Cloud API Key','Configure Application Restrictions for Google Cloud API Key','Configuring application restrictions for a Google Cloud API key is important for securing your resources and protecting your applications from unauthorized access and malicious attacks. By limiting the usage of your API key to specific applications or APIs, you can ensure that only authorized requests are allowed and prevent potential security breaches, data loss, or financial loss.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#configure-application-restrictions-for-google-cloud-api-key','apikeys','gcp','Enable_API_Key_Application_Restrictions','{\"params\":[{\"encrypt\":false,\"value\":\"Check-for-API-Key-Application-Restrictions\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_API_Key_Application_Restrictions\",\"autofix\":false,\"alexaKeyword\":\"Enable_API_Key_Application_Restrictions\",\"policyRestUrl\":\"\",\"targetType\":\"apikeys\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_API_Key_Application_Restrictions\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_API_Key_Application_Restrictions','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-29','2022-11-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_API_Key_Restrictions','Enable_API_Key_Restrictions','Configure API Restriction for API Keys','Configure API Restriction for API Keys','Configuring API restrictions for API keys is important for securing your APIs and protecting your resources from unauthorized access or misuse. By limiting the usage of your API key to specific APIs or API methods, you can ensure that only authorized requests are allowed, and prevent potential security breaches or financial loss. This is a best practice for ensuring the security of your APIs and preventing unauthorized access to your resources.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#configure-api-restriction-for-api-keys','apikeys','gcp','Enable_API_Key_Restrictions','{\"params\":[{\"encrypt\":false,\"value\":\"Check-for-API-Key-API-Restrictions\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_API_Key_Restrictions\",\"autofix\":false,\"alexaKeyword\":\"Enable_API_Key_Restrictions\",\"policyRestUrl\":\"\",\"targetType\":\"apikeys\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_API_Key_Restrictions\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_API_Key_Restrictions','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-29','2022-11-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Addon_policies_for_AKS','Enable_Addon_policies_for_AKS','Enable Add-on Policies for AKS','Enable Add-on Policies for AKS','Enabling add-on policies for AKS can enhance security by enforcing best practices, improve management of resources and workloads, enable better monitoring of cluster health and performance, and provide automation capabilities for tasks and processes within the cluster.',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#in-ms-defender-ensure-that-all-users-with-the-following-roles-is-set-to-owner','kubernetes','azure','Enable_Addon_policies_for_AKS','{\"params\":[{\"encrypt\":false,\"value\":\"enable-addon-policies-for-kubernetes\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Ensure AKS uses Azure policies add-on.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"In Azure kubernetes services, add-on policies is enabled\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"AKS does not use Azure policies add-on.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Add-on Policies for AKS\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Addon_policies_for_AKS\",\"autofix\":false,\"alexaKeyword\":\"Enable_Addon_policies_for_AKS\",\"policyRestUrl\":\"\",\"targetType\":\"kubernetes\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_Addon_policies_for_AKS\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Addon_policies_for_AKS','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-22','2022-11-22','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Authentication_For_WebApp','azure_Enable_Authentication_For_WebApp','Enable_Authentication_For_WebApp','Enable App Service Web App Authentication','Enabling App Service Web App Authentication is a security measure that provides benefits such as improved security, compliance, simplified authentication, customizable authentication, and single sign-on. It improves security by preventing unauthorized access to web applications and protecting against security threats. It helps meet compliance requirements and simplifies the process of adding authentication to web applications. It allows for customization of authentication and supports single sign-on, enabling users to log in once and access multiple applications. It is an essential best practice for organizations that deploy web applications and need to protect sensitive data.','1. Go to App Services \n 2. Select Authentication/Authorisation \n 3. In App Service Authentication, select On and click Save','https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#enable-app-service-web-app-authentication','webapp','azure','Enable_Authentication_For_WebApp','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-auth-enabled-app-service\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"App Service web app authentication should be enabled\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Authentication_For_WebApp\",\"autofix\":false,\"alexaKeyword\":\"Enable_Authentication_For_WebApp\",\"policyRestUrl\":\"\",\"targetType\":\"webapp\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Authentication_For_WebApp\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Authentication_For_WebApp','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-16','2022-08-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Auto_Repair_for_GKE_nodes','Enable_Auto_Repair_for_GKE_nodes','Enable Auto-Repair for GKE nodes','Create Clusters with Private Nodes','Enabling auto-repair for Google Kubernetes Engine (GKE) nodes is important for ensuring the availability and reliability of your applications running on the Kubernetes cluster. Auto-repair detects and repairs or replaces unhealthy nodes automatically, helping to prevent downtime or other issues caused by unhealthy nodes. This is a best practice for ensuring the availability and reliability of your applications running on GKE.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#create-clusters-with-private-nodes','gkecluster','gcp','Kubernates','{\"params\":[{\"encrypt\":false,\"value\":\"enable-auto-repair-for-gke-nodes\",\"key\":\"policyKey\"},{\"key\":\"nodePoolKey\",\"value\":\"autoRepair\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure  Auto-Repair for GKE nodes enabled\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Auto-Repair for GKE nodes disabled\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Auto_Repair_for_GKE_nodes\",\"autofix\":false,\"alexaKeyword\":\"Kubernates\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Auto_Repair_for_GKE_nodes\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Auto_Repair_for_GKE_nodes','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-27','2022-10-27','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Auto_Upgrade_for_GKE_nodes','Enable_Auto_Upgrade_for_GKE_nodes','Enable Auto-Upgrade for GKE nodes','Enable Auto-Upgrade for GKE Nodes','Enabling auto-upgrade for Google Kubernetes Engine (GKE) nodes is important for ensuring the security and reliability of your Kubernetes cluster. Auto-upgrade automatically upgrades the nodes in your cluster to the latest version, ensuring that your cluster is always up-to-date with the latest security patches and improvements. This is a best practice for ensuring the security and reliability of your Kubernetes cluster, while reducing the burden of manual upgrades and maintenance.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-Auto-Upgrade-for-GKE-nodes','gkecluster','gcp','Kubernates','{\"params\":[{\"encrypt\":false,\"value\":\"enable-node-pool-managements\",\"key\":\"policyKey\"},{\"key\":\"nodePoolKey\",\"value\":\"autoUpgrade\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure  Auto-Upgrade for GKE nodes enabled\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Auto-Upgrade for GKE nodes disabled\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Auto_Upgrade_for_GKE_nodes\",\"autofix\":false,\"alexaKeyword\":\"Kubernates\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Auto_Upgrade_for_GKE_nodes\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Auto_Upgrade_for_GKE_nodes','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-27','2022-10-27','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Automated_backups_for_sql_database','Enable_Automated_backups_for_sql_database','Enable Automated Backups for Cloud SQL Database','Enable Automated Backups for Cloud SQL Database','Enabling automated backups for Google Cloud SQL databases is important for ensuring the availability and durability of your data, and minimizing the risk of data loss. Automated backups allow you to schedule regular backups of your database, customize backup frequency and retention, and enable point-in-time recovery. This is a best practice for ensuring that your data is always available and recoverable when you need it.','To enable automated backups for cloud SQL database instance you have to run sql instances patch command using the name of the Cloud SQL database instance that you want to reconfigure as identifier parameter ','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-automated-backups-for-cloud-sql-database','cloudstorage','gcp','Enable_Automated_backups_for_sql_database','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-cloud-storage-has-automated-backups-enabled\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"check if the automated backups are enabled for all Cloud SQL database instances\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Automated backups are not enabled for Google cloud sql database.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"cloudstorage\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Automated backups for cloud sql database\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Automated_backups_for_sql_database\",\"autofix\":false,\"alexaKeyword\":\"Enable_Automated_backups_for_sql_database\",\"policyRestUrl\":\"\",\"targetType\":\"cloudstorage\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Automated_backups_for_sql_database\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Automated_backups_for_sql_database','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-19','2022-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Create_Policy_Assignment_log_alert','azure_Enable_Azure_Account_Create_Policy_Assignment_log_alert','Enable_Azure_Account_Create_Policy_Assignment_log_alert','Create Policy Assignment Log Alert','It\'s advisable to configure an Azure activity log alert for detecting \"Create Policy Assignment\"\" events in your Microsoft Azure cloud account. This alert is triggered whenever a new activity log event matches the specified condition. Monitoring such events can help you gain visibility into changes made within the \"\"Policy Assignment\"\" Azure policy and quickly identify any unauthorized changes.\"','To create a Microsoft Azure activity log alert for detecting Create Policy Assignment events within your Azure cloud account','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Create_Policy_Assignment_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Authorization/policyAssignments/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Create Policy Assignment log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Create_Policy_Assignment_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Create_Policy_Assignment_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Azure_Account_Create_Policy_Assignment_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Azure_Account_Create_Policy_Assignment_log_alert','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-02','2022-05-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','azure_Enable_Account_Create_Update_MySQLDatabase_log_alert','Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','Enable log Alert for Create/Update MySQL DB','Enabling log alerts for create/update operations in a MySQL database is crucial for maintaining security, performance, and compliance. It helps in detecting unauthorized access, providing an audit trail, identifying performance bottlenecks, troubleshooting issues, ensuring accountability, enabling proactive maintenance, and aiding disaster recovery efforts.','create a Microsoft Azure activity log alert for Create or Update MySQL database policy (Microsoft.DBforMySQL/servers/databases/write) ','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.DBforMySQL/servers/databases/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Azure Account Create or Update MySQL Database log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Create_Update_MySQLDatabase_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Create_Update_MySQLDatabase_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','azure_Enable_Account_Create_Update_PostgreSQLDatabase_log_alert','Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','Enable log Alert for Create/Update PostgreSQL DB','Enabling log alerts for create/update operations in a PostgreSQL database is essential for maintaining security, performance, and compliance. It helps detect unauthorized access, provides an audit trail, identifies performance bottlenecks, enables troubleshooting, ensures accountability, allows proactive maintenance, and aids disaster recovery efforts.','create a Microsoft Azure activity log alert for Create or Update PostgreSQL Database (Microsoft.DBforPostgreSQL/servers/databases/write) ','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Create Policy postgress events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Create postgress  events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.DBforPostgreSQL/servers/databases/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Azure Account Create or Update PostgreSQL Database log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Create_Update_PostgreSQLDatabase_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Create_Update_PostgreSQLDatabase_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','azure_Enable_Account_Create_Update_Load_Balancer_log_alert','Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','Enable log Alert for Create/Update Load Balancer','Monitoring \"Create or Update Load Balancer\"\" events in your Azure account offers insights into changes and helps detect unauthorized or undesired activities. Configure an Azure activity log alert with the condition \"\"Category=\'Administrative\' and Signal name=\'Create or Update Load Balancer (loadBalancers)\'\"\" to ensure timely detection.\"','create a Microsoft Azure activity log alert for \"Create or Update Load Balancer (Microsoft.Network/loadBalancers) ','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not configured to fire whenever Create or Update Load Balancer events are triggered.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Load Balancer events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Network/loadBalancers/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Create or Update Load Balancer Assignment log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Create_Update_Load_Balancer_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Create_Update_Load_Balancer_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-16','2022-05-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','azure_Enable_Account_Create_Update_Virtual_Machine_log_alert','Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','Enable Log Alert for Create/Update Virtual Machine','Configure an Azure activity log alert for \"Create or Update Virtual Machine\"\" events to detect unauthorized activities quickly. The matching condition is When the Administrative Activity Log \"\"Create or Update Virtual Machine (Microsoft.Compute/virtualMachines)\"\" has \"\"any\"\" Event level, with \"\"any\"\" Status, and Event initiated by \"\"any\"\". This monitoring provides insights into changes related to Azure VMs within your cloud environment.\"','create a Microsoft Azure activity log alert for Create or Update Virtual Machine (Microsoft.Compute/virtualMachines) ','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Compute/virtualMachines/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Create or Update Virtual Machine Event log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Create_Update_Virtual_Machine_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Create_Update_Virtual_Machine_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-24','2022-05-24','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','azure_Enable_Account_Deallocate_Virtual_Machine_log_alert','Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','Enable Log Alert for Deallocate VM Event','Enabling log alerts for Deallocate VM events is essential for cost management, security, compliance, resource management, troubleshooting, and promoting accountability. It helps detect unauthorized activity, maintain audit trails, ensure efficient resource usage, minimize downtime, and encourage responsible practices within the organization.','create a Microsoft Azure activity log alert for \"Deallocate Virtual Machine Event (Microsoft.Compute/virtualMachines) ','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Deallocate Virtual Machine events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Deallocate Virtual Machine events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Compute/virtualMachines/deallocate/action\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Deallocate Virtual Machine log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Deallocate_Virtual_Machine_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Deallocate_Virtual_Machine_Event_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-24','2022-05-24','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','azure_Enable_Account_Delete_Load_Balancer_log_alert','Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','Enable log Alert for Load Balancer','Enabling log alerts for Load Balancer events in Azure is essential for security, compliance, performance, troubleshooting, resource management, and promoting accountability. It helps detect unauthorized activities, maintain audit trails, optimize network traffic distribution, minimize downtime, manage resources effectively, and encourage responsible practices within the organization.','create a Microsoft Azure activity log alert for Delete Load Balancer (Microsoft.Network/loadBalancers/delete) event','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Load Balancer events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Load Balancer events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Network/loadBalancers/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Delete LOad Balancer  log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Delete_Load_Balancer_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Delete_Load_Balancer_Event_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Delete_MySQLDatabase_log_alert','azure_Enable_Account_Delete_MySQLDatabase_log_alert','Enable_Azure_Account_Delete_MySQLDatabase_log_alert','Enable Log Alert for MySQL Database','Enabling log alerts for MySQL databases in Azure is essential for security, compliance, performance, troubleshooting, resource management, and promoting accountability. It helps detect unauthorized activities, maintain audit trails, optimize database performance, minimize downtime, manage resources effectively, and encourage responsible practices within the organization.','create a Microsoft Azure activity log alert for Delete MySQL Database (Microsoft.DBforMySQL/servers/databases/delete) ','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Delete_MySQLDatabase_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect delete SQL DB  events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect delete SQL DB events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.DBforMySQL/servers/databases/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Azure Account Delete MySQL Database log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Delete_MySQLDatabase_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_MySQLDatabase_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Delete_MySQLDatabase_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Delete_MySQLDatabase_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','azure_Enable_Account_Delete_Network_Security_Group_log_alert','Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','Enable log Alert for Network Security Group','Enabling log alerts for Network Security Group events in Azure is essential for security, compliance, configuration management, troubleshooting, visibility, and promoting accountability. It helps detect unauthorized activities, maintain audit trails, identify misconfigurations, minimize downtime, manage network traffic effectively, and encourage responsible practices within the organization.','create a Microsoft Azure activity log alert for Delete Network Security Group  (Microsoft.Network/networkSecurityGroups/delete) event','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Network Security Group  events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Network Security Group Rule events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Network/networkSecurityGroups/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Delete Network Security Group  log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Delete_Network_Security_Group_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Delete_Network_Security_Group_Event_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','azure_Enable_Acc_Delete_Network_Security_Group_Rule_log_alert','Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','Enable log Alert for Account Delete Network Security Group Rule','Enabling log alerts for Account Delete Network Security Group Rule events is essential for security, compliance, configuration management, troubleshooting, visibility, and promoting accountability. It helps detect unauthorized activities, maintain audit trails, identify misconfigurations, minimize downtime, manage network traffic effectively, and encourage responsible practices within the organization.','create a Microsoft Azure activity log alert for Delete Network Security Group Rule (Microsoft.Network/networkSecurityGroups/securityRules/delete) event','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Network Security Group Rule events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Network Security Group Rule  events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Network/networkSecurityGroups/securityRules/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Delete Network Security Group Rule log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Acc_Delete_Network_Security_Group_Rule_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Delete_Network_Security_Group_Rule_Event_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','azure_Enable_Account_Delete_Policy_Assignment_log_alert','Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','Enable Log Alert for PostgreSQL DB','Enabling log alerts for Delete Policy Assignment events in Azure is essential for security, compliance, configuration management, troubleshooting, visibility, and promoting accountability. It helps detect unauthorized activities, maintain audit trails, identify misconfigurations, minimize downtime, manage resources according to established policies, and encourage responsible practices within the organization.','create a Microsoft Azure activity log alert for Delete Policy Assignment  (Microsoft.Authorization/policyAssignments/delete) event','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Authorization/policyAssignments/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Delete Policy Assignment log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Delete_Policy_Assignment_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Delete_Policy_Assignment_Event_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','azure_Enable_Account_Delete_PostgreSQLDatabase_log_alert','Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','Enable Log Alert for PostgreSQL DB','Enabling log alerts for Delete PostgreSQL Database events in Azure is essential for security, compliance, data protection, troubleshooting, resource management, and promoting accountability. It helps detect unauthorized activities, maintain audit trails, protect valuable information, minimize downtime, manage resources effectively, and encourage responsible practices within the organization.','create a Microsoft Azure activity log alert for Delete PostgreSQL Database (Microsoft.DBforPostgreSQL/servers/databases/delete) ','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect delete Postgress DB events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect delete POstgress DB events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.DBforPostgreSQL/servers/databases/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Azure Account Delete PostgreSQL Database log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Delete_PostgreSQLDatabase_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Delete_PostgreSQLDatabase_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','azure_Enable_Account_Delete_Security_Solution_log_alert','Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','Enable log Alert for Create/Update Security Solution','Enabling log alerts for Delete Security Solution events in Azure is essential for security, compliance, configuration management, troubleshooting, visibility, and promoting accountability. It helps detect unauthorized activities, maintain audit trails, identify misconfigurations, minimize downtime, manage security infrastructure effectively, and encourage responsible practices within the organization.','create a Microsoft Azure activity log alert for Delete Security Solution  (Microsoft.Security/securitySolutions/delete) event','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Security Solution events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Security Solution events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Security/securitySolutions/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Delete Security Solution log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Delete_Security_Solution_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Security_Solution_Event_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Delete_Security_Solution_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Delete_Security_Solution_Event_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','azure_Enable_Account_Delete_Storage_Account_log_alert','Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','Enable Log Alert for Delete Storage Account','Enabling log alerts for deleting storage accounts in Microsoft Azure is crucial for preventing accidental or unauthorized deletion of critical data, maintaining data security and integrity, and ensuring compliance with regulatory requirements. This alert enables administrators to receive immediate notifications when a storage account is deleted, allowing them to take prompt action to restore any deleted data and investigate any unauthorized deletion attempts. Additionally, log alerts provide insights into who initiated the deletion and when it occurred, enabling administrators to track any suspicious or malicious activity.','create a Microsoft Azure activity log alert for Delete Storage Account (Microsoft.Storage/storageAccounts/delete) event','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Storage Account  events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Storage Account events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Storage/storageAccounts/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Delete Storage Account log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Delete_Storage_Account_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Storage_Account_Event_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Delete_Storage_Account_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Delete_Storage_Account_Event_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','azure_Enable_Account_Delete_Virtual_Machine_log_alert','Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','Enable Log Alert for Account Delete VM','Enabling log alerts for account deletion of virtual machines (VMs) in Microsoft Azure is crucial for preventing accidental or unauthorized deletion of critical VMs and their associated data, maintaining the security and integrity of an organization\'s cloud infrastructure, and ensuring compliance with regulatory requirements. This alert enables administrators to receive immediate notifications when a VM is deleted by a specific account, allowing them to take prompt action to restore any deleted VMs and investigate any unauthorized deletion attempts. Log alerts also provide valuable insights into who initiated the deletion and when it occurred, enabling administrators to track any suspicious or malicious activity.','create a Microsoft Azure activity log alert for Delete Virtual Machine (Microsoft.Compute/virtualMachines/delete) event','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Virtual Machine events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Virtual Machine events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Compute/virtualMachines/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable log Alert for Account Delete VM\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Delete_Virtual_Machine_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Delete_Virtual_Machine_Event_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','azure_Enable_Account_Power_Off_Virtual_Machine_log_alert','Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','Enable Log Alert for Delete VM','Enabling log alerts for deleting virtual machines (VMs) in Microsoft Azure is crucial for preventing accidental or unauthorized VM deletions and maintaining the security and integrity of an organization\'s cloud infrastructure. This alert provides immediate notifications when a VM is deleted, allowing administrators to take prompt action to restore any deleted VMs and investigate unauthorized deletion attempts. Log alerts also provide insights into who initiated the deletion and when it occurred, enabling administrators to track any suspicious or malicious activity. Moreover, log alerts for deleting VMs are important for compliance and regulatory requirements.','create a Microsoft Azure activity log alert for Power Off Virtual Machine (Microsoft.Compute/virtualMachines/powerOff/action) event','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Power Off Virtual Machine events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Power Off Virtual Machine events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Compute/virtualMachines/powerOff/action\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Power Off Virtual MAchine Event log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Power_Off_Virtual_Machine_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Power_Off_Virtual_Machine_Event_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','azure_Enable_Account_Rename_Azure_SQL_Database_log_alert','Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','Enable Log Alert for Rename SQL DB','Enabling log alerts for renaming SQL databases in Microsoft Azure is crucial for preventing accidental or unauthorized renaming of critical databases, maintaining the security and integrity of an organization\'s cloud infrastructure, and ensuring compliance with regulatory requirements. This alert provides immediate notifications when a database is renamed, allowing administrators to take prompt action to restore any renamed databases and investigate unauthorized renaming attempts. Log alerts also provide insights into who initiated the renaming and when it occurred, enabling administrators to track any suspicious or malicious activity. Moreover, log alerts for renaming databases are important for compliance and regulatory requirements. ','create a Microsoft Azure activity log alert for Rename Azure SQL Database (Microsoft.Sql/servers/databases/move/action) event','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Rename Azure SQL Database  events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Rename Azure SQL Database events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Sql/servers/databases/move/action\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Rename Azure SQL Database log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Rename_Azure_SQL_Database_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Rename_Azure_SQL_Database_Event_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Security_Solution_log_alert','azure_Enable_Azure_Account_Security_Solution_log_alert','Enable_Azure_Account_Security_Solution_log_alert','Enable Log Alert for Create/Update Security Solution','Enabling log alerts for creating or updating security solutions in Microsoft Azure is crucial for maintaining the security and integrity of an organization\'s cloud infrastructure. This alert provides immediate notifications when a \"Create\"\" or \"\"Update Security Solution\"\" event occurs, enabling administrators to take prompt action to investigate any unauthorized creation or modification attempts. Azure activity log alerts are activated whenever a new activity log event that matches the condition specified in the alert occurs, and in this case, the alert condition searches for Security Activity Logs that have \"\"any\"\" level, with \"\"any\"\" status and event initiated by \"\"any\"\".\n\nBy monitoring Azure accounts for \"\"Create\"\" or \"\"Update Security Solution\"\" events, administrators can gain insights into the changes made for their Azure Security Solutions and can reduce the time it takes to detect suspicious activity. Log alerts for creating or updating security solutions are also important for compliance and regulatory requirements, as most compliance frameworks require organizations to monitor and track activities that involve creating or modifying security solutions. \"','To create a Microsoft Azure activity log alert for Create or Update Security Solution (Microsoft.Security/securitySolutions)','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Security_Solution_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is configured to fire whenever Create or Update Security Solution events are triggered.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Security/securitySolutions/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Create or Update Security Solution log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Security_Solution_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Security_Solution_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Azure_Account_Security_Solution_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Azure_Account_Security_Solution_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-20','2022-05-20','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Update_KeyVault_log_alert','azure_Enable_Account_Update_KeyVault_log_alert','Enable_Azure_Account_Update_KeyVault_log_alert','Enable Log Alert for Update Key Vault Activity','Enabling log alerts for updating Key Vault activity in Microsoft Azure is crucial for maintaining the security and integrity of an organization\'s cloud infrastructure. This alert provides immediate notifications when an \"Update Key Vault\"\" event occurs, allowing administrators to take prompt action to investigate any unauthorized modification attempts. Azure activity log alerts are triggered whenever a new activity log event that matches the condition specified in the alert configuration occurs.\n\nTo comply with this rule, an Azure activity log alert must be fired whenever \"\"Update Key Vault\"\" events are triggered within the Microsoft Azure cloud account. The alert configuration should match the condition \"\"Whenever the Activity Log has an event with Category=\'Administrative\', Signal name=\'Update Key Vault (vaults)\'\"\".\n\nLog alerts for updating Key Vault activity are crucial for maintaining Azure security and ensuring compliance with regulatory requirements. By enabling log alerts for updating Key Vault activity, administrators can gain insights into the changes made to their Key Vault, reduce the time it takes to detect suspicious activity, and comply with regulatory requirements that mandate monitoring and tracking of data modifications and access.\"','create a Microsoft Azure activity log alert for Update Key vault (Microsoft.KeyVault/vaults/write) ','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Update_KeyVault_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.KeyVault/vaults/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Update Key Vault Activity Log Alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Update_KeyVault_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Update_KeyVault_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Update_KeyVault_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Update_KeyVault_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Account_Update_SecurityPolicy_log_alert','azure_Enable_Account_Update_SecurityPolicy_log_alert','Enable_Azure_Account_Update_SecurityPolicy_log_alert','Enable Log Alert for Update Security Policy','To quickly detect security policy changes and reduce the risk of unauthorized modifications in your Azure cloud account, it is recommended to monitor \"Update Security Policy\"\" events. You can achieve this by configuring an Azure activity log alert that triggers whenever a new event matching any level, any status, and any entity initiating the event occurs.\"','create a Microsoft Azure activity log alert for Update Security policy (Microsoft.Security/policies/write) ','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Update_SecurityPolicy_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Security/policies/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Azure Account Update Security Policy log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Account_Update_SecurityPolicy_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Update_SecurityPolicy_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Account_Update_SecurityPolicy_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Update_SecurityPolicy_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_BlobContainer_Immutability','azure_Enable_BlobContainer_Immutability','Enable_Azure_BlobContainer_Immutability','Enable Immutable Blob Storage','The Immutable Blob Storage feature in Microsoft Azure Storage provides an added layer of protection against modification and deletion of blob objects, making it suitable for storing sensitive data and meeting regulatory requirements. To ensure data protection, enable the feature for Azure Storage containers that hold critical information, which allows the data to be stored in a non-modifiable and non-erasable WORM state for a user-specified interval. The feature includes two policies: a time-based immutability policy for regulatory compliance and a legal hold policy for indefinite data retention. Once set, these policies protect the data from modifications and deletions.','Set hasLegalHold and hasImmutabilityPolicy to true for blob container storage to ensure immutability','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-immutable-blob-storage','blobcontainer','azure','BlobContainerImmutability','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-blob-container-is-immutable\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"Immutability is NOT enabled for Blob container\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"Immutability is enabled for Blob container \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Immutability for Blob Container\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_BlobContainer_Immutability\",\"autofix\":false,\"alexaKeyword\":\"BlobContainerImmutability\",\"policyRestUrl\":\"\",\"targetType\":\"blobcontainer\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_BlobContainer_Immutability\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_BlobContainer_Immutability','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Create_Update_Storage_Account_log_alert','azure_Enable_Azure_Create_Update_Storage_Account_log_alert','Enable_Azure_Create_Update_Storage_Account_log_alert','Enable log Alert for Create/Update Storage Account','To detect and prevent unauthorized activity in your Microsoft Azure cloud account, monitor for \"Create/Update Storage Account\"\" events using Azure activity log alerts. These alerts trigger notifications whenever events that match the specified configuration occur, which in this case includes \"\"Administrative\"\" category and \"\"Create/Update Storage Account (Microsoft.Storage/storageAccounts)\"\" signal name in the Activity Log.\"','To create a Microsoft Azure activity log alert for Create_Update Storage Account (Microsoft.Storage/storageAccounts)','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Create_Update_Storage_Account_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not configured to fire whenever Create_Update Storage Account events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is configured to fire whenever Create_Update Storage Account events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Storage/storageAccounts/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Create or Update Storage Account log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Create_Update_Storage_Account_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Create_Update_Storage_Account_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Azure_Create_Update_Storage_Account_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Azure_Account_Security_Solution_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-23','2022-05-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing','azure_Enable_Azure_Defender_for_App_Service','AppServiceAzureDefender','Enable Azure Defender for App Service','Ensure that Azure Defender is enabled for the Microsoft Azure App Service.','Set the pricingTier to \"Standard\" to turn on the Defender for Cloud pricing plan for App Service instances.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-azure-defender-for-app-service','securitypricings','azure','AppServiceAzureDefender','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-security-pricing-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing\",\"autofix\":false,\"alexaKeyword\":\"AppServiceAzureDefender\",\"policyRestUrl\":\"\",\"targetType\":\"securitypricings\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Azure_Defender_for_App_Service\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Azure_Defender_for_App_Service','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-19','2022-05-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing','azure_Enable_Azure_Defender_for_SQL_Database','SQLDatabaseAzureDefender','Enable Azure Defender for SQL Database','Enabling Microsoft Defender for Cloud is recommended for Azure SQL database servers to detect and mitigate potential vulnerabilities and anomalous activities. The security feature provides action-oriented security alerts and helps monitor servers for threats like SQL injection and privilege abuse. By default, Defender for Cloud is not enabled.','Set the pricingTier to \"Standard\" to turn on the Defender for Cloud pricing plan for Azure SQL databases.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-azure-defender-for-sql','securitypricings','azure','SQLDatabaseAzureDefender','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-security-pricing-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing\",\"autofix\":false,\"alexaKeyword\":\"SQLDatabaseAzureDefender\",\"policyRestUrl\":\"\",\"targetType\":\"securitypricings\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Azure_Defender_for_SQL_Database\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Azure_Defender_for_SQL_Database','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-19','2022-05-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Defender_for_Storage_Account_version-1_SecurityPricing','azure_Enable_Azure_Defender_for_Storage_Account','StorageAccountAzureDefender','Enable Azure Defender for SQL Database','Ensure that the Azure Defender feature is enabled for Azure Storage accounts','Set the pricingTier to \"Standard\" to turn on the Defender for Cloud pricing plan for storage accounts','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-azure-defender-for-storage-account','securitypricings','azure','StorageAccountAzureDefender','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-security-pricing-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Defender_for_Storage_Account_version-1_SecurityPricing\",\"autofix\":false,\"alexaKeyword\":\"StorageAccountAzureDefender\",\"policyRestUrl\":\"\",\"targetType\":\"securitypricings\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Azure_Defender_for_Storage_Account\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Azure_Defender_for_Storage_Account','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-19','2022-05-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing','azure_Enable_Azure_Defender_for_Virtual_Machine','VirtualMachineAzureDefender','Enable Azure Defender for Virtual Machine','It is recommended to enable Microsoft Defender for Cloud for virtual machines in an Azure cloud account. This security service provides advanced protection features including vulnerability scanning, file integrity monitoring, access monitoring, and network hardening. Enabling this service strengthens the defense-in-depth of the Azure environment, as it is not enabled by default.','Set the pricingTier to \"Standard\" to turn on the Defender for Cloud pricing plan for virtual machines','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-azure-defender-for-virtual-machines','securitypricings','azure','VirtualMachineAzureDefender','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-security-pricing-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing\",\"autofix\":false,\"alexaKeyword\":\"VirtualMachineAzureDefender\",\"policyRestUrl\":\"\",\"targetType\":\"securitypricings\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Azure_Defender_for_Virtual_Machine\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Azure_Defender_for_Virtual_Machine','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-19','2022-05-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_DiagnosticSettings_Mandatory_Tags','Enable_Azure_DiagnosticSettings_Mandatory_Tags','Enable_Azure_DiagnosticSettings_Mandatory_Tags','Configure Mandatory Categories in Diagnostics Setting','Configuring mandatory categories in diagnostics settings is a best practice that provides benefits such as improved visibility, compliance, simplified logging, and improved troubleshooting. It ensures important logs and metrics are collected for analysis, meets compliance requirements, simplifies logging, and improves troubleshooting by providing necessary information to identify and resolve issues. It is essential for organizations that need to monitor and analyze the health and performance of their applications and infrastructure to ensure optimal performance and reduce downtime.','1. Navigate to Azure monitor : https://portal.azure.com/#blade/Microsoft_Azure_Monitoring/AzureMonitoringBrowseBlade/overview\n2. Choose \"Activity log\" in left navigation bar\n3. Choose  the subscription you want to examine \n4. Click on the \"Export activity logs\" in top menu \n5. Create a new diagnostic setting or Edit existing diagnostic setting \n6. Select \"Administrative\",\"Alert,\"Policy\",\"Security\" in Category section \n7. Click on Save','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#include-mandatory-categories-in-the-diagnostics-setting','subscription','azure','MandatoryTagsDiagnosticSettings','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-diagnostic-setting-has-mandatory-tags\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"Mandatory categories is NOT enabled for diagnostic settings\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"Mandatory categories is enabled for Diagnostic settings\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Include mandatory categories in the diagnostics setting\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Azure_DiagnosticSettings_Mandatory_Tags\",\"autofix\":false,\"alexaKeyword\":\"MandatoryTagsDiagnosticSettings\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_Azure_DiagnosticSettings_Mandatory_Tags\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Azure_DiagnosticSettings_Mandatory_Tags','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-26','2022-09-26','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','azure_Enable_VM_disk_Volumes_Encrypted','Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','Enable Encryption for Application Tier Disk Volumes on VM','To meet security and compliance requirements, it is recommended to encrypt all disk volumes attached to Microsoft Azure virtual machines in the application tier. The Cloud Conformity engine can run a rule assuming that all Azure cloud resources in the app tier are tagged with a specific tag name and value. Enabling encryption ensures confidentiality and protects sensitive data from unauthorized access.','Enable encryption for your app-tier Azure virtual machines disk volumes','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#encrypt-app-tier-disk-volumes','virtualmachine','azure','Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','{\"assetGroup\":\"azure\",\"policyId\":\"Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"azure_Enable_VM_disk_Volumes_Encrypted\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"azure\",\"targetType\":\"virtualmachine\",\"params\":[{\"encrypt\":false,\"value\":\"check-encryption-enabled-for-app-tier-disk-volumes\",\"key\":\"policyKey\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\" App-tier disk volumes attached to the selected Microsoft Azure virtual machine (VM) are not encrypted. \",\"key\":\"failure\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"App-tier disk volumes attached to the selected Microsoft Azure virtual machine (VM) are not encrypted \",\"key\":\"SUCESS\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"VirtualMachines\",\"key\":\"name\"},{\"isValueNew\":true,\"defaultVal\":\"Standard\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Pricing tier\",\"description\":\"Pricing tier of VM\",\"value\":\"Standard\",\"key\":\"pricingTier\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"Enable Encryption for App-Tier Disk Volumes.\",\"key\":\"policyName\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_VM_disk_Volumes_Encrypted','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-12','2022-06-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Client_Certificate_Function_App','Enable_Client_Certificate_Function_App','Client certificates enabled for function app','Enable Incoming Client Certificates for Function App','Enabling incoming client certificates for a Function App can enhance security by implementing mutual TLS (mTLS) authentication. This process requires the client and the server to present their respective certificates during the TLS handshake, thus verifying each other\'s identities. As a result, only authorized clients can access the Function App, reducing the risk of unauthorized access and enhancing the system\'s overall security.','1. Go to function app in azure portal 2. Select your function app 3. Select Configuration->General Settings 4. In Client certificate mode, select Require and click Save','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-incoming-client-certificates-for-function-app','functionapp','azure','Enable_Client_Certificate_Function_App','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-functionapp-incoming-certificate-enabled\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"Incoming client certificate is NOT enabled for function app\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"Incoming client certificate is enabled for function app\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Incoming client certificates for function app\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Client_Certificate_Function_App\",\"autofix\":false,\"alexaKeyword\":\"Enable_Client_Certificate_Function_App\",\"policyRestUrl\":\"\",\"targetType\":\"functionapp\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_Client_Certificate_Function_App\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Client_Certificate_Function_App','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-23','2022-08-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Client_Certificate_for_webApp','Enable_Client_Certificate_for_webApp','Enable_Client_Certificate_for_webApp','Enable Client Certificate for Web Applications','Enabling client certificates for web applications using mutual TLS authentication enhances security by verifying both client and server identities. To implement this, obtain and configure SSL/TLS certificates, distribute client certificates to authorized users, enable mTLS on the web server, update the application\'s authentication mechanism, and test the setup for proper functioning.','Ensure to set on the web app client certificate.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-web-app-client-certificates','webapp','azure','Enable_Client_Certificate_for_webApp','{\"params\":[{\"encrypt\":false,\"value\":\"enable-client-cert-webapp-rule\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Enable  Client Certificate for Web App\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Client_Certificate_for_webApp\",\"autofix\":false,\"alexaKeyword\":\"Enable_Client_Certificate_for_webApp\",\"policyRestUrl\":\"\",\"targetType\":\"webapp\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_Client_Certificate_for_webApp\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Client_Certificate_for_webApp','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-16','2022-08-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Cloud_Asset_Inventory','Enable_Cloud_Asset_Inventory','Enable Cloud Asset Inventory','Enable Cloud Asset Inventory','Enabling Cloud Asset Inventory is important for maintaining visibility and control over your Google Cloud Platform (GCP) resources. It provides a unified view of all your resources, enables easy search and filtering, and allows you to monitor resource changes over time. Cloud Asset Inventory can help ensure compliance, detect security issues, and optimize your cloud resources. This is a best practice for maintaining a secure and efficient cloud environment.','Enable Cloud Asset Inventory','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-Cloud-Asset-Inventory','project','gcp','CloudAsset','{\"params\":[{\"encrypt\":false,\"value\":\"enable-cloud-asset-api\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Enable Cloud Asset Inventory\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Cloud_Asset_Inventory\",\"autofix\":false,\"alexaKeyword\":\"CloudAsset\",\"policyRestUrl\":\"\",\"targetType\":\"project\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Cloud_Asset_Inventory\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Cloud_Asset_Inventory','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-29','2022-09-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Cloud_Logging_Monitoring','Enable_Cloud_Logging_Monitoring','Enable Cloud Logging and Monitoring','Enable Cloud Logging and Monitoring for GKE Cluster','Enabling Cloud Logging and Monitoring for Google Kubernetes Engine (GKE) clusters is important for monitoring and troubleshooting applications running on Kubernetes, and ensuring their performance and reliability. Cloud Logging allows capturing and analyzing logs, while Cloud Monitoring allows monitoring performance and availability. Both features help identify and respond to issues in a timely manner, optimize resource usage, and ensure that applications are running smoothly. This is a best practice for maintaining the reliability and performance of applications running on GKE clusters.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-cloud-logging-and-monitoring','gkecluster','gcp','Kubernates','{\"params\":[{\"encrypt\":false,\"value\":\"enable-cloud-logging-monitoring\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Cloud_Logging_Monitoring\",\"autofix\":false,\"alexaKeyword\":\"Kubernates\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Disable_client_certificate_Authentication_for_Cluster\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Cloud_Logging_Monitoring','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Cluster_Monitoring_for_kubernetes','Enable_Cluster_Monitoring_for_kubernetes','Enable cluster monitoring','Enable AKS Cluster Monitoring','Enabling AKS cluster monitoring is crucial for gaining performance insights, proactive troubleshooting, resource optimization, custom alerting, compliance maintenance, and ensuring security. It aids in identifying and resolving issues promptly, enhancing overall efficiency and reducing downtime.','To enable monitoring of your AKS cluster in the Azure portal from Azure Monitor:\n.In the Azure portal, select Monitor. \n2.Select Containers from the list. \n3.On the Monitor - containers page, select Unmonitored clusters. \n4.From the list of unmonitored clusters, find the cluster in the list and select Enable. \n5.On the Configure Container insights page, select Configure. \n6.On the Configure Container insights page, fill in the following information: \nLog Analytics workspace        :Select a Log Analytics workspace from the dropdown list or select Create new to create a default Log Analytics workspace. The Log Analytics workspace must be in the same subscription as the AKS container.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Enable-azure-AKS-cluster-monitoring','kubernetes','azure','EnableClusterMonitoring','{\"params\":[{\"encrypt\":false,\"value\":\"enable-cluster-monitoring-for-kubernetes\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Enable azure AKS cluster monitoring\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"In Azure kubernetes services,cluster monitoring is enabled\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"In Azure kubernetes services,cluster monitoring is NOT enabled\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable azure AKS cluster monitoring\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Cluster_Monitoring_for_kubernetes\",\"autofix\":false,\"alexaKeyword\":\"EnableClusterMonitoring\",\"policyRestUrl\":\"\",\"targetType\":\"kubernetes\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_Cluster_Monitoring_for_kubernetes\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Cluster_Monitoring_for_kubernetes','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-22','2022-11-22','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Compute_Engine_using_instance_level_SSH_keys','Enable_Compute_Engine_using_instance_level_SSH_keys','Enable Compute Engine using instance-level SSH keys','Enable Compute Engine Using Instance-level SSH Keys','Enabling Compute Engine using instance-level SSH keys is important for securing access to your virtual machines (VMs) running on Google Cloud Platform (GCP). Using instance-level SSH keys provides finer-grained access control, reduces the risk of privilege escalation, and allows you to enforce key rotation policies on a per-VM basis. This is a best practice for ensuring the security of your VMs on GCP.','To block users with project-wide SSH keys from connecting to the instance, set block-project-wide-ssh-keys=true in instance metadata.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-compute-engine-using-instance-level-ssh-keys','vminstance','gcp','Enable_Compute_Engine_using_instance_level_SSH_keys','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-block-project-ssh-key\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"checks if instance-level SSH keys is enabled\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Compute Engine project-wide ssh keys is not enabled.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_vminstance/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Compute Engine using instance-level SSH keys\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Compute_Engine_using_instance_level_SSH_keys\",\"autofix\":false,\"alexaKeyword\":\"Enable_Compute_Engine_using_instance_level_SSH_keys\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Compute_Engine_using_instance_level_SSH_keys\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Compute_Engine_using_instance_level_SSH_keys','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-23','2022-08-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Confidential_Computing_for_Compute_Instance','Enable_Confidential_Computing_for_Compute_Instance','Enable Confidential Computing for Compute Instance','Enable Confidential Computing for Compute Instances','Enabling confidential computing for compute instances is important for protecting sensitive data and workloads from potential attacks or unauthorized access. It uses hardware-based Trusted Execution Environments (TEEs) to create secure enclaves that isolate the data and code being processed from the rest of the system. Enabling confidential computing can help meet compliance requirements and protect reputation in case of a security breach. This is a best practice for securing sensitive data and workloads and maintaining trust with customers and stakeholders.','NULL','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-Confidential-Computing-for-Compute-Instance','vminstance','gcp','confidential_computing','{\"params\":[{\"encrypt\":false,\"value\":\"enable-confidential-computing-instance\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Enable Confidential Computing for Compute Instance\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Confidential_Computing_for_Compute_Instance\",\"autofix\":false,\"alexaKeyword\":\"confidential_computing\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Confidential_Computing_for_Compute_Instance\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Confidential_Computing_for_Compute_Instance','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-04','2022-10-04','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','Azure_Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','Enable Log Alert for Create/Update Delete SQL Server Firewall Rule','To detect suspicious activity at the SQL server firewall level in your Microsoft Azure account, monitor for \"Create\"\", \"\"Update\"\", or \"\"Delete SQL Server Firewall Rule\"\" events using an Azure activity log alert. This alert triggers notifications whenever the specified events occur, matching the conditions of \"\"Administrative\"\" activity log and \"\"Create/Update server firewall rule (Microsoft.Sql/servers/firewallRules)\"\" signal name, with any level, any status, and initiated by any entity.\"','create a Microsoft Azure activity log alert for Create or Update or Delete SQL Firewall Servers (Microsoft.Sql/servers/firewallRules/write) ','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Azure_Account_Create_Update_Delete_SQL_Server_Firewall_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Create or update sql server firewall events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Create or update sql server firewall events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Sql/servers/firewallRules/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Create Policy Assignment log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Azure_Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-25','2022-05-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Create_or_Update_SQL_Database_Log_Alert','Enable_Create_or_Update_SQL_Database_Log_Alert','Enable log Alert for Create/Update SQL DB','Enable Log Alert for Create/Update SQL DB','Ensure that an activity log alert is created for Create/Update SQL Database Rule events.',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Create_or_Update_SQL_Database_Log_Alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect create or update SQL Database events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect create or update SQL Database Rule  events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Sql/servers/databases/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Create or Update SQL Database Log Alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Create_or_Update_SQL_Database_Log_Alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Create_or_Update_SQL_Database_Log_Alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_Create_or_Update_SQL_Database_Log_Alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Create_or_Update_SQL_Database_Log_Alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-07','2022-07-07','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Delete_SQL_Database_Log_Alert','Enable_Delete_SQL_Database_Log_Alert','Enable log Alert for Delete SQL DB','Enable Log Alert for Delete SQL DB','To improve security and availability of Azure SQL databases and reduce the impact of accidental or intentional deletions, monitor for \"Delete Azure SQL Database\"\" events using Microsoft Azure Monitor service and an Azure activity log alert. This alert triggers notifications whenever events matching the conditions of \"\"Administrative\"\" category and \"\"Delete Azure SQL Database (Microsoft.Sql/servers/databases)\"\" signal name in the Activity Log occur.\"',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert','subscription','azure','Enable_Delete_SQL_Database_Log_Alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect delete SQL Database events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect delete SQL Database Rule  events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Sql/servers/databases/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Delete SQL Database Log Alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Delete_SQL_Database_Log_Alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Delete_SQL_Database_Log_Alert\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_Delete_SQL_Database_Log_Alert\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Delete_SQL_Database_Log_Alert','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-07','2022-07-07','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Email_Subscription_Admin','Enable_Email_Subscription_Admin','Enable Also send email notifications to admins and subscription owners','Enable Vulnerability Assessment (VA) Setting \'Also Send email Notifications to Admins and Subscripti','Enabling the \"Also Send email Notifications to Admins and Subscription Owners\"\" setting in Vulnerability Assessment promotes timely remediation, improved security awareness, shared accountability, centralized communication, and comprehensive reporting. This helps maintain a proactive security posture and fosters a security-aware culture within the organization.\"','1.Go to SQL servers \n2.Select a server instance \n3.Click on Security Center \n4.Select Configure next to Enabled at subscription-level \n5.In Section Vulnerability Assessment Settings , configure Storage Accounts if not already \n6. Check/enable Also send email notifications to admins and subscription owners \n7. Click Save','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Enable-send-email-notifications-to-admins-and-subscription-owners-in-vulnerability-settings-for-sql-server','sqlserver','azure','EmailSubscriptionAdminSQLServer','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-emailSubscriptionAdmins-is-enabled\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Email_Subscription_Admin\",\"autofix\":false,\"alexaKeyword\":\"EmailSubscriptionAdminSQLServer\",\"policyRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_Email_Subscription_Admin\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Email_Subscription_Admin','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-20','2022-10-20','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Encryption_for_Unattached_Disk_Volumes','azure_Enable_Encryption_for_Unattached_Disk_Volumes','Enable_Encryption_for_Unattached_Disk_Volumes','Encrypt Unattached Disk Volumes','Unencrypted detached disk volumes pose a risk of sensitive information disclosure, even if they are not mounted to any virtual machine. We recommend encrypting all disk volumes attached to Azure virtual machines within the application tier to ensure confidentiality and meet compliance and security requirements. It is also important to encrypt detached disk volumes using Azure Disk Encryption, which uses BitLocker for Windows and DM-Crypt for Linux to encrypt the OS and data disks of Azure virtual machines. Integration with Azure Key Vault allows for control and management of disk encryption keys and secrets. Unencrypted detached disk volumes pose a risk of sensitive information disclosure, even if they are not mounted to any virtual machine.','enable encryption for your unattached Microsoft Azure VM disk volumes','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#encrypt-unattached-disk-volumes','disk','azure','Enable_Encryption_for_Unattached_Disk_Volumes','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-postgree-ssl-enforcement\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Enable Encryption for Unattached Disk Volumes\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Encryption_for_Unattached_Disk_Volumes\",\"autofix\":false,\"alexaKeyword\":\"Enable_Encryption_for_Unattached_Disk_Volumes\",\"policyRestUrl\":\"\",\"targetType\":\"disk\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_Encryption_for_Unattached_Disk_Volumes\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Encryption_for_Unattached_Disk_Volumes','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-19','2022-05-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_HTTPS_For_LoadBalancer','Enable_HTTPS_For_LoadBalancer','Enable https for load balancer','Enable HTTPS for Google Cloud Load Balancers','It is crucial to enforce HTTPS for your Google Cloud load balancers to protect the communication between clients and load balancers from eavesdropping and MITM attacks. This is especially important when sensitive data is involved. Configuring valid SSL/TLS certificates on GCP load balancers is essential to ensure encrypted web traffic between clients and load balancers.','1. Navigate to Cloud Load Balancing dashboard at https://console.cloud.google.com/net-services/loadbalancing.\n2. On the Load balancing page, select Load balancers to access the list with the Google Cloud load balancers created for the selected project\n3. Choose the HTTP load balancer that you want to reconfigure , click on the 3-dot button to access the options menu, then select Edit\n4. On the Edit HTTP(S) load balancer page, select Frontend configuration tab, and choose Add Frontend IP and port to create a new, secure frontend configuration for the selected load balancer\n5. On the Edit HTTP(S) load balancer page, click Update to associate the newly created HTTPS frontend configuration with the selected Google Cloud load balancer','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-HTTPS-for-Google-Cloud-Load-Balancers','gcploadbalancer','gcp','Enable_HTTPS_For_LoadBalancer','{\"params\":[{\"encrypt\":false,\"value\":\"enable-https-for-loadbalancer\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_HTTPS_For_LoadBalancer\",\"autofix\":false,\"alexaKeyword\":\"Enable_HTTPS_For_LoadBalancer\",\"policyRestUrl\":\"\",\"targetType\":\"gcploadbalancer\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_HTTPS_For_LoadBalancer\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_HTTPS_For_LoadBalancer','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-12-08','2022-12-08','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Https_For_Cloudfunc','Enable_Https_For_Cloudfunc','Enable_Https_For_Cloudfunc','Enable https for Cloud Functions','This policy identifies GCP Cloud Functions for which the HTTP trigger is not secured. When you configure HTTP functions to be triggered only with HTTPS, user requests will be redirected to use the HTTPS protocol, which is more secure. It is recommended to set the \'Require HTTPS\' for configuring HTTP triggers while deploying your function.','1. Login to GCP console\n2. Navigate to \'Cloud Functions\' service (Left Panel)\n3. Click on the alerting function\n4. Click on \'EDIT\'\n5. Under section \'Trigger\', click on \'EDIT\'\n6. Select the checkbox against the field \'Require HTTPS\'\n7. Click on \'SAVE\'\n8. Click on \'NEXT\'\n9. Click on \'DEPLOY\'','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#gcp-cloud-function-http-trigger-is-not-secured','cloudfunctiongen1','gcp','cloudfunctionhttps','{\"params\":[{\"encrypt\":false,\"value\":\"Enable-Https-For-Cloudfunc\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Https_For_Cloudfunc\",\"autofix\":false,\"policyRestUrl\":\"\",\"targetType\":\"cloudfunctiongen1\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Https_For_Cloudfunc\",\"policyType\":\"ManagePolicy\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Https_For_Cloudfunc','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'admin@paladincloud.io','2023-01-18','2023-01-18','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Integrity_Monitoring_For_Node_Pool','Enable_Integrity_Monitoring_For_Node_Pool','Integrity Monitoring should be enabled','Enable Integrity Monitoring for Shielded GKE Nodes','Enabling integrity monitoring for Shielded Google Kubernetes Engine (GKE) nodes is important for ensuring the security and integrity of your Kubernetes clusters. Shielded GKE nodes use advanced security features to protect the nodes from potential attacks or tampering, and integrity monitoring ensures that the nodes have not been modified in an unauthorized way. Enabling integrity monitoring can help detect potential security breaches, configure alerts and notifications, and respond to potential threats in a timely manner. This is a best practice for maintaining the security and integrity of your Kubernetes clusters.','Once a Node pool is provisioned, it cannot be updated to enable Integrity Monitoring. You must create new Node pools within the cluster with Integrity Monitoring enabled Using Google Cloud Console \n1. Go to Kubernetes Engine by visiting https://console.cloud.google.com/kubernetes/list \n2. From the list of clusters, click on the cluster requiring the update and click ADD NODE POOL \n3. Ensure that the Integrity monitoring checkbox is checked under the Shielded options Heading. \n4. Click SAVE.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-Integrity-Monitoring-for-Shielded-GKE-Nodes','gkecluster','gcp','IntegrityMonitoringForNodePool','{\"params\":[{\"encrypt\":false,\"value\":\"enable-node-pool-managements\",\"key\":\"policyKey\"},{\"key\":\"nodePoolKey\",\"value\":\"enableIntegrityMonitoring\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure Integrity monitoring for GKE nodes enabled\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Integrity monitoring for GKE nodes disabled\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Integrity_Monitoring_For_Node_Pool\",\"autofix\":false,\"alexaKeyword\":\"IntegrityMonitoringForNodePool\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Integrity_Monitoring_For_Node_Pool\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Integrity_Monitoring_For_Node_Pool','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-27','2022-10-27','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Log_connections_for_Postgres_Server_DB_Instances','Enable_Log_connections_for_Postgres_Server_DB_Instances','Enable Log_connections DB Flag for PostgreSQL','Enable Log_connections DB Flag for PostgreSQL','Enabling the log_connections flag in PostgreSQL can improve troubleshooting, security, performance tuning, and compliance by providing a record of connections made to the database, helping to identify issues related to the number of connections, and providing an audit trail for regulatory compliance.','1. Navigate cloud sql instances at https://console.cloud.google.com/sql/instances\n2. Click Filter tree box, select Type and PostGres \n3. Click the database you want to reconfigure\n4. In the navigation panel, select Overview\n5. Click on Edit button\n6. In the Configuration options, click on Flags\n7. Find the Log_connections flag and turn it on by selecting off from the flag configuration dropdown list\n8. Click Save','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-Log_connections-DB-Flag-for-PostgreSQL','cloudsql_postgres','gcp','postgres','{\"params\":[{\"encrypt\":false,\"value\":\"disable-enable-database-flags-for-cloudsql-server\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"gcp_cloudsql_postgres\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"log_connections\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagValue\",\"value\":\"on\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Log_connections DB Flag for PostgreSQL\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure that log_connections database flag is enabled for your Google Cloud PostgreSQL database instances. The log_connections flag causes each attempted connection to the database instance to be logged, including successful client authentication request\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"log_connections flag is disabled for your Google Cloud postgres Server database instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Log_connections_for_Postgres_Server_DB_Instances\",\"autofix\":false,\"alexaKeyword\":\"postgres\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_postgres\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Log_connections_for_Postgres_Server_DB_Instances\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Log_connections_for_Postgres_Server_DB_Instances','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-07','2022-10-07','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Log_disconnections_for_Postgres_Server_DB_Instances','Enable_Log_disconnections_for_Postgres_Server_DB_Instances','Enable Log_disconnections DB Flag for PostgreSQL','Enable Log_disconnections DB Flag for PostgreSQL','Enabling the log_disconnections flag in PostgreSQL allows the database server to log all client disconnections. This can help with debugging, security monitoring, and performance tuning. It provides useful information to identify unusual behavior, detect suspicious activity, and optimize performance.','choose the flag log_disconnections from the drop-down menu and set the value as on .','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-log_disconnections-db-flag-for-postgresql','cloudsql_postgres','gcp','postgres','{\"params\":[{\"encrypt\":false,\"value\":\"disable-enable-database-flags-for-cloudsql-server\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"gcp_cloudsql_postgres\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"log_disconnections\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagValue\",\"value\":\"on\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Log_disconnections DB Flag for PostgreSQL\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure that log_disconnections database flag is enabled for all your Google Cloud PostgreSQL database instances. When this flag is enabled, PostgreSQL database logs the end of each session. The log output provides information similar to the one generated by the log_connections flag, plus the duration of the session. The database flag can be changed at the session start, and it cannot be changed during a session.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"log_disconnections flag is disabled for your Google Cloud postgres Server database instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Log_disconnections_for_Postgres_Server_DB_Instances\",\"autofix\":false,\"alexaKeyword\":\"postgres\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_postgres\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Log_disconnections_for_Postgres_Server_DB_Instances\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Log_disconnections_for_Postgres_Server_DB_Instances','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-07','2022-10-07','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Logging_For_BackendServices_LoadBalancer','Enable_Logging_For_BackendServices_LoadBalancer','Enable logging for load balancer backend services','Enable HTTPS Logging for Load Balancing Backend Services','Enabling HTTPS logging for load-balancing backend services provides benefits such as enhanced security, compliance with regulatory requirements, improved troubleshooting capabilities, and performance tuning. It allows you to identify suspicious activity, troubleshoot issues, and optimize performance, contributing to your application\'s overall security, compliance, and performance.','1. Navigate to Cloud Load Balancing dashboard at https://console.cloud.google.com/net-services/loadbalancing. \n2. On the Load balancing page, select Load balancers to access the list with the Google Cloud load balancers created for the selected project \n3. Click on the 3-dot button to access the options menu, then select Edit \n4. On the Edit HTTP(S) load balancer page, select Backend configuration tab, and click on the Edit button (pencil icon) available next to the associated backend service, to enter the resource edit mode \n5. On the Edit backend service configuration panel, under Logging, select Enable logging checkbox and set the Sample rate fraction to a value between 0.0 and 1.0 \n6. On the Edit HTTP(S) load balancer page, click Update to save the changes','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-HTTPS-logging-for-Load-Balancing-Backend-Services','gcploadbalancer','gcp','Enable_Logging_For_BackendServices_LoadBalancer','{\"params\":[{\"encrypt\":false,\"value\":\"enable-https-logging-for-backend-services\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Logging_For_BackendServices_LoadBalancer\",\"autofix\":false,\"alexaKeyword\":\"Enable_Logging_For_BackendServices_LoadBalancer\",\"policyRestUrl\":\"\",\"targetType\":\"gcploadbalancer\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Logging_For_BackendServices_LoadBalancer\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Logging_For_BackendServices_LoadBalancer','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-12-08','2022-12-08','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Network_Security_for_SQLSERVER','enable_network_security_SQLSERVER','Enable_Network_Security_for_SQLSERVER','Deny Public Access to SQL Server Port 1434','To implement the principle of least privilege and reduce the attack surface, ensure that your Google Cloud Virtual Private Cloud (VPC) firewall rules do not  allow unrestricted access (i.e., 0.0.0.0/0) on TCP port 1434. If such rules are found, restrict them to only trusted IP addresses or IP ranges to ensure that only authorized traffic is allowed access.',' Access should be restricted for permissive Network Security Groups with Internet-facing SQLSERVER','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-sql-server-port-1433','nsg','azure','SQLSERVER','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"policyKey\"},{\"key\":\"protocol\",\"value\":\"udp\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"1434\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny public access to SQL Server port 1434\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Network_Security_for_SQLSERVER\",\"autofix\":false,\"alexaKeyword\":\"Enable Network Security for SQLSERVER\",\"policyRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_enable_network_security_SQLSERVER\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_enable_network_security_SQLSERVER','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-02','2022-05-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_PostgreSQL_Server_In_Transit_Encryption','azure_Enable_PostgreSQL_Server_In_Transit_Encryption','PostgreSQL_Server_In_Transit_Encryption','Enable In-transit Encryption for PostgreSQL Server','To fulfill security and compliance requirements, it is essential to ensure that data in transit for Microsoft Azure PostgreSQL servers is encrypted. This prevents unauthorized access to sensitive information stored in your Azure PostgreSQL databases. It is highly recommended to enable Secure Sockets Layer (SSL) connections between the PostgreSQL database servers and client applications when working with production data. This additional layer of security protects against Man-In-the-Middle (MITM) attacks and fulfills in-transit encryption compliance requirements within your organization.',' enable in-transit encryption by enforcing SSL connections between your PostgreSQL database servers and your client applications','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-in-transit-encryption-for-postgresql-server','postgresql','azure','PostgreSQL_Server_In_Transit_Encryption','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-postgree-ssl-enforcement\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Enable_PostgreSQL_Server_In-Transit_Encryption\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_PostgreSQL_Server_In_Transit_Encryption\",\"autofix\":false,\"alexaKeyword\":\"PostgreSQL_Server_In_Transit_Encryption\",\"policyRestUrl\":\"\",\"targetType\":\"postgresql\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_Enable_PostgreSQL_Server_In_Transit_Encryption\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_PostgreSQL_Server_In_Transit_Encryption','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-19','2022-05-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Quic_Protocol_For_Load_Balancer','Enable_Quic_Protocol_For_Load_Balancer','Enable Quic Protocol For Load Balancer','Configure HTTPS Target Proxy with Quic Protocol for Google Cloud Load Balancers','Configure gcp load balancer https target proxy with quic protocol','1. Login to GCP Portal \n2. Go to Network services \n3. Select Load balancing \n4. Click on advanced menu hyperlink to view target proxies \n5. Click on Target proxies tab \n6. Click on the reported HTTPS target proxy \n7. Click on the hyperlink under URL map \n 8. Click on the EDIT button \n 9. Select Frontend configuration, Click on HTTPS protocol rule \n10. Select Enabled from the dropdown for QUIC negotiation \n11. Click on Done \n12. Click on update','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#gcp-load-balancer-https-target-proxy-is-not-configured-with-quic-protocol','gcploadbalancer','gcp','Enable_Quic_Protocol_For_Load_Balancer','{\"params\":[{\"encrypt\":false,\"value\":\"enable-quic-protocol-for-loadbalancer\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Quic_Protocol_For_Load_Balancer\",\"autofix\":false,\"alexaKeyword\":\"Enable_Quic_Protocol_For_Load_Balancer\",\"policyRestUrl\":\"\",\"targetType\":\"gcploadbalancer\",\"pac_ds\":\"gcp\",\"policyId\":\"Enable_Quic_Protocol_For_Load_Balancer\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Quic_Protocol_For_Load_Balancer\",\"policyType\":\"ManagePolicy\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Https_For_Cloudfunc','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'admin@paladincloud.io','2023-01-18','2023-01-18','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Secure_Boot_For_Node_Pool','Enable_Secure_Boot_For_Node_Pool','Secure Boot should be enabled','Enable Secure Boot for Shielded GKE Nodes','Enabling secure boot for Shielded GKE nodes provides protection against rootkits, bootkits, firmware tampering, and ensures the verification of the OS image. It helps comply with security requirements and provides an additional layer of security that protects against firmware and operating system attacks, ensuring that only trusted images are used.','Once a Node pool is provisioned, it cannot be updated to enable Secure Boot. You must create new Node pools within the cluster with Secure Boot enabled. Using Google Cloud Console \n1. Go to Kubernetes Engine by visiting https://console.cloud.google.com/kubernetes/list \n2. From the list of clusters, click on the cluster requiring the update and click ADD NODE POOL \n3. Ensure that the Secure boot checkbox is checked under the Shielded options Heading \n4. Click SAVE.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-Secure-Boot-for-Shielded-GKE-Nodes','gkecluster','gcp','SecureBootForNodePool','{\"params\":[{\"encrypt\":false,\"value\":\"enable-node-pool-managements\",\"key\":\"policyKey\"},{\"key\":\"nodePoolKey\",\"value\":\"enableSecureBoot\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure secure boot for GKE nodes enabled\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Secure boot for GKE nodes disabled\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Secure_Boot_For_Node_Pool\",\"autofix\":false,\"alexaKeyword\":\"SecureBootForNodePool\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Secure_Boot_For_Node_Pool\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Secure_Boot_For_Node_Pool','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-27','2022-10-27','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Uniform_Bucket_Level_Access','Enable_Uniform_Bucket_Level_Access','Enable Uniform Bucket-Level Access for cloud storage Buckets','Enable Uniform Bucket Level Access','Enabling uniform bucket-level access in Google Cloud Storage simplifies access control management, ensures consistent access, helps comply with security requirements, provides better security, and makes migration easier. With uniform bucket-level access, all objects in a bucket are subject to the same access controls, eliminating the need for object-level IAM policies.','set 3625 DataBase Flag off for SQL SERVER Instance','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-uniform-bucket-level-access','cloudstorage','gcp','Enable_Uniform_Bucket_Level_Access','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-cloud-storage-has-uniform-bucket-level-access-enabled\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"check if cloud storage has uniform bucket level access enabled\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Uniform Bucket-level access is not enabled\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"cloudstorage\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_cloudstorage/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Uniform Bucket-Level Access for cloud storage Buckets\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Uniform_Bucket_Level_Access\",\"autofix\":false,\"alexaKeyword\":\"Enable_Uniform_Bucket_Level_Access\",\"policyRestUrl\":\"\",\"targetType\":\"cloudstorage\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_Uniform_Bucket_Level_Access\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Uniform_Bucket_Level_Access','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-23','2022-08-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_VPC_Flow_Logs_and_IntraNode_Visibility','Enable_VPC_Flow_Logs_and_IntraNode_Visibility','Enable VPC Flow Logs and IntraNode Visibility','Enable VPC Flow Logs and Intranode Visibility for GKE Cluster','Enabling VPC flow logs and intranode visibility for the GKE cluster provides benefits such as enhanced security, compliance with regulatory requirements, improved troubleshooting capabilities, and performance tuning. It lets you detect security threats, troubleshoot issues, optimize performance, and comply with security requirements.','Select Kubernetes clusters and set intraNode visibility to enabled','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-vpc-flow-logs-and-intranode-visibility','gkecluster','gcp','Enable_VPC_Flow_Logs_and_Intranode_Visibility','{\"params\":[{\"encrypt\":false,\"value\":\"check-intraNode-visibility\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Enabling IntraNode Visibility makes your intraNode pod to pod traffic visible to the networking fabric. With this feature, you can use VPC Flow Logs or other VPC features for intranode traffic.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"This rule will be violated if intraNodeVisibility flag is disabled\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_VPC_Flow_Logs_and_IntraNode_Visibility\",\"autofix\":false,\"alexaKeyword\":\"Enable_VPC_Flow_Logs_and_IntraNode_Visibility\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_VPC_Flow_Logs_and_IntraNode_Visibility\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_VPC_Flow_Logs_and_IntraNode_Visibility','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-27','2022-10-27','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_VPC_native_for_clusters','Enable_VPC_native_for_clusters','Enable VPC-native for clusters','Configure VPC-Native for Clusters in GKE','Configuring VPC-native for clusters in GKE provides benefits such as improved performance, security, compatibility with other Google Cloud services, compliance with security requirements, and simplified networking configuration. It allows for faster communication between pods and services, improved security and isolation, easier integration with other services, compliance with security requirements, and simplified networking.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#configure-vpc-native-for-clusters-in-gke','gkecluster','gcp','GKE','{\"params\":[{\"encrypt\":false,\"value\":\"enable-vpc-native-Clusters\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_VPC_native_for_clusters\",\"autofix\":false,\"alexaKeyword\":\"GKE\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_VPC_native_for_clusters\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_VPC_native_for_clusters','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-30','2022-10-30','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','Encrypt VM Disk Volume Using CMK','Microsoft Azure provides multiple layers of encryption protection for virtual machine managed disks using platform-managed keys. However, it is recommended to use customer-managed keys for finer control over encryption/decryption. This provides complete control over who can access the encrypted data on managed disks, reducing the risk of sensitive data disclosure even for unattached disks.','To configure Azure Disk Encryption (ADE) service to encrypt your Azure virtual machine disk volumes using your own customer-managed key (also known as Bring Your Own Key - BYOK ','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-database','virtualmachine','azure','Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','{\"params\":[{\"encrypt\":false,\"value\":\"check-encryption-enabled-with-customer-managed-keys-for-Azure_VM_disks\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"The Azure Disk Encryption (ADE) service is using a service-managed key instead of a customer-managed key \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"Azure Disk Encryption (ADE) service will use the  customer-managed key to encrypt the disk volumes attached to the selected Microsoft Azure virtual machine.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Compute/virtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Use CMK to Encrypt Database\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key\",\"autofix\":false,\"alexaKeyword\":\"Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-19','2022-05-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_Vulnerability_Assessment_Periodic_Recurring_Scans','Enable_Vulnerability_Assessment_Periodic_Recurring_Scans','Enable the Vulnerability Assessment \"Periodic Recurring Scans\"','Enable the Vulnerability Assessment \'Periodic Recurring Scans\'','Enabling periodic recurring scans in Vulnerability Assessment maintains continuous security, detects new threats, ensures compliance, tracks remediation progress, prioritizes risk management, and adapts to evolving threats. This provides ongoing protection for your systems and data by staying proactive and informed.',NULL,NULL,'sqlserver','azure','Enable_Vulnerability_Assessment_Periodic_Recurring_Scans','{\"params\":[{\"encrypt\":false,\"value\":\"periodic-scan-vulnerability-assessment\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"ruleId\",\"autofix\":false,\"alexaKeyword\":\"Enable_Vulnerability_Assessment_Periodic_Recurring_Scans\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_Vulnerability_Assessment_Periodic_Recurring_Scans\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Vulnerability_Assessment_Periodic_Recurring_Scans','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-20','2022-10-20','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_auto_provisioning_of_log_analytics_agent','Enable_auto_provisioning_of_log_analytics_agent','Enable auto provisioning of log analytics agent','Enable Auto-Provisioning Policy for Defender Log Analytics Agent','Enabling \'Auto-Provisioning Policy for Defender Log Analytics Agent\' streamlines deployment, ensures consistent security, minimizes human error, saves time and resources, supports scalability, and aids in compliance. This results in a comprehensive and efficient security monitoring solution across your infrastructure.','Set auto provision flag to On','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-auto-provisioning-of-log-analytics-agent','defender','azure','Enable_auto_provisioning_of_log_analytics_agent','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-Auto-Provisioning-is-enabled\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Ensure that automatic provisioning of the monitoring agent is enabled in your Microsoft Azure account to collect security data and events from your cloud compute resources in order to help you prevent, detect, and respond efficiently to security vulnerabilities and threats.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"In MS defender Auto provisioning is set to on.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"In MS defender Auto provisioning is set to off.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable auto provisioning of log analytics agent\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_auto_provisioning_of_log_analytics_agent\",\"autofix\":false,\"alexaKeyword\":\"Enable_auto_provisioning_of_log_analytics_agent\",\"policyRestUrl\":\"\",\"targetType\":\"defender\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_auto_provisioning_of_log_analytics_agent\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_auto_provisioning_of_log_analytics_agent','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-08','2022-11-08','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_keyvault_delete_protection','Enable_keyvault_delete_protection','Enable Delete Protection for the Key Vault','Enable Delete Protection for the Key Vault','Enabling delete protection for a Key Vault adds an extra layer of security against accidental or intentional deletion of sensitive data, minimizing the risk of unauthorized access and maintaining data integrity and confidentiality.','Enable softdelete and purgeProtection for the vaults','https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#enable-keyvault-delete-protection','vaults','azure','Enable_keyvault_delete_protection','{\"params\":[{\"encrypt\":false,\"value\":\"keyvault-delete-protection\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Enable keyvault delete protection\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_keyvault_delete_protection\",\"autofix\":false,\"alexaKeyword\":\"Enable_keyvault_delete_protection\",\"policyRestUrl\":\"\",\"targetType\":\"vaults\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_keyvault_delete_protection\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_keyvault_delete_protection','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-23','2022-08-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_latest_TLS_version','Enable_latest_TLS_version','Configure Latest Minimum TLS Version for Storage Account','Configure Latest Minimum TLS Version for Storage Account','Configuring the latest minimum TLS version for a storage account is crucial for maintaining strong security, protecting sensitive data, complying with regulatory frameworks, and staying up-to-date with industry standards. It helps prevent cyber threats, maintains data integrity, and ensures the use of the strongest encryption and security protocols.','For web app : \n 1.Go to Azure portal \n 2.Navigate to App Services blade at https://portal.azure.com/#blade/HubsExtension/BrowseResourceBlade/resourceType/Microsoft.Web%2Fsites. \n 3.Click on the name of the App Service web application that you want to examine. \n 4.In the navigation panel, under Settings, select TLS/SSL settings to access the Transport Layer Security (TLS)/Secure Sockets Layer (SSL) configuration settings available for the selected app. \n 5.On the TLS/SSL settings panel, under Protocol Settings, check the Minimum TLS Version configuration to determine the TLS version used by the application. If Minimum TLS Version setting value is not set to 1.2, the selected Microsoft Azure App Service web application is not configured to use the latest version of TLS protocol (i.e. TLS 1.2) to encrypt data in transit.\nFor mysql flexible server: \n 1. Go to azure portal \n 2. Search for MySQL flexible server \n 3. For each database , click on on Server parameters under Settings \n 4. Type tls_version in search box \n 5. Select value as TLSV1.2 \nFor storage account: \n 1.Go to Azure portal \n 2.Navigate to App Services blade at https://portal.azure.com/#blade/HubsExtension/BrowseResourceBlade/resourceType/Microsoft.Storage%2FStorageAccounts. \n 3.Click on the name of the Azure Storage accoun  that you want to examine. \n 4.In the navigation panel, under Settings, choose Configuration to access the selected storage account configuration settings. \n 5On the Configuration page, under Minimum TLS Version, select Version 1.2 to enable the latest version of the TLS protocol (TLS version 1.2) for the selected Microsoft Azure Storage account. Choose Save to apply the changes.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-latest-tls-version','storageaccount','azure','Enable_latest_TLS_version','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-latest-Tls-version-rule\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"SQLSERVER\",\"isValueNew\":true,\"encrypt\":false,\"isMandatory\":true,\"description\":\"Database type for checking\",\"defaultVal\":\"SQLSERVER\",\"displayName\":\"Database Type\"},{\"key\":\"minimumTlsVersion\",\"value\":\"TLS1_2\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Minimum TLS version needed\",\"defaultVal\":\"TLS1_2\",\"displayName\":\"Minimum TLS version\"},{\"key\":\"policyName\",\"value\":\"Enable storage account min Tls version set to latest\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_latest_TLS_version\",\"autofix\":false,\"alexaKeyword\":\"Enable_latest_TLS_version\",\"policyRestUrl\":\"\",\"targetType\":\"storageaccount\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_latest_TLS_version\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_latest_TLS_version','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-29','2022-08-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_log_hostname_for_Postgres_Server_DB_Instances','Enable_log_hostname_for_Postgres_Server_DB_Instances','Enable the log_hostname DB Flag for Postgres and Cloud SQL','Enable the log_hostname DB Flag for Postgres and Cloud SQL','Enabling the log_hostname flag for Postgres and Cloud SQL can improve logging by providing additional context, enhance security by identifying unauthorized connections, aid in performance tuning, and provide additional benefits such as cost optimization in Cloud SQL by tracking which applications are accessing the database.','1. Navigate cloud sql instances at https://console.cloud.google.com/sql/instances\n2. Click Filter tree box, select Type and MySQL \n3. Click the database you want to reconfigure\n4. In the navigation panel, select Overview\n5. Click on Edit button\n6. In the Configuration options, click on Flags\n7. Find the log_hostname flag and turn it on by selecting on from the flag configuration dropdown list\n8. Click Save','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-the-log_hostname-db-flag-for-postgres-and-cloud-sql','cloudsql_postgres','gcp','postgres','{\"params\":[{\"encrypt\":false,\"value\":\"disable-enable-database-flags-for-cloudsql-server\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"gcp_cloudsql_postgres\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"log_hostname\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagValue\",\"value\":\"on\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable log_hostname DB Flag for postgres, Cloud SQL\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure that the log_hostname database flag is enabled for your Postgres sql database instances, in order to follow data security best practices\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"log_hostname flag is disabled for your Postgres cloud Server database instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_log_hostname_for_Postgres_Server_DB_Instances\",\"autofix\":false,\"alexaKeyword\":\"postgres\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_postgres\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_log_hostname_for_Postgres_Server_DB_Instances\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_log_hostname_for_Postgres_Server_DB_Instances','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-06','2022-10-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_osLogin_for_a_project','Enable_osLogin_for_a_project','Enable OS Login for a project','Enable OS Login for a Project','Enabling OS Login for GCP projects can improve security by allowing you to manage access to VM instances using IAM roles and permissions, simplify user management by centralizing SSH access, provide detailed logging and audit trails for SSH access, and streamline SSH access using gcloud or the Google Cloud Console.','Enable OS Login for GCP Project.','https://github.com/PaladinCloud/CE/wiki/Gcp-Policy#enable-os-login-for-a-project','vminstance','gcp','Enable_osLogin_for_a_project','{\"params\":[{\"encrypt\":false,\"value\":\"enable-os-login-project-level\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Enable OS Login for a project\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_osLogin_for_a_project\",\"autofix\":false,\"alexaKeyword\":\"Enable_osLogin_for_a_project\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_osLogin_for_a_project\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_osLogin_for_a_project','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-23','2022-08-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_pgAudit_Database_Flag_for_Postgresql_Instance','Enable_pgAudit_Database_Flag_for_Postgresql_Instance','Enable cloudsql.enable_pgaudit Database Flag for PostgreSQL Instance','Enable cloudsql.enable_pgaudit Database Flag for PostgreSQL Instance','Enabling the cloudsql.enable_pgaudit database flag for a PostgreSQL instance in Google Cloud Platform (GCP) can help improve security by enabling the PostgreSQL Audit Extension to log all SQL statements and other activities on the database. It can also help meet compliance requirements, improve performance tuning, and provide valuable information for debugging issues with the application or database.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-cloudsqlenable_pgaudit-database-flag-for-postgresql-instance-1','cloudsql_postgres','gcp','postgres','{\"params\":[{\"encrypt\":false,\"value\":\"disable-enable-database-flags-for-cloudsql-server\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"gcp_cloudsql_postgres\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"cloudsql.enable_pgaudit\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagValue\",\"value\":\"on\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable cloudsql.enable_pgaudit Database Flag for Postgresql Instance\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure cloudsql.enable_pgaudit database flag for Cloud SQL PostgreSQL instance is set to on to allow for centralized logging.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"cloudsql.enable_pgaudit database flag for Cloud SQL PostgreSQL instance is off.\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_pgAudit_Database_Flag_for_Postgresql_Instance\",\"autofix\":false,\"alexaKeyword\":\"postgres\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_postgres\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_pgAudit_Database_Flag_for_Postgresql_Instance\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_pgAudit_Database_Flag_for_Postgresql_Instance','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-06','2022-10-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_private_cluster_for_AKS','Enable_private_cluster_for_AKS','Enable Private Cluster for AKS','Enable Private Cluster for AKS','Enabling private cluster for AKS can improve security by isolating the Kubernetes API server, reduce the attack surface by eliminating the need for public IPs and load balancers, help with compliance, and provide better network performance for Kubernetes workloads.',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#in-ms-defender-ensure-that-all-users-with-the-following-roles-is-set-to-owner','kubernetes','azure','Enable_private_cluster_for_AKS','{\"params\":[{\"encrypt\":false,\"value\":\"enable-private-cluster-for-kubernetes\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Enable the private cluster feature for your Azure Kubernetes Service cluster to ensure network traffic between your API server and your node pools remains on the private network only\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"AKS is enabled for private clusters\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"AKS is not enabled for private clusters\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Private Cluster for AKS\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_private_cluster_for_AKS\",\"autofix\":false,\"alexaKeyword\":\"Enable_private_cluster_for_AKS\",\"policyRestUrl\":\"\",\"targetType\":\"kubernetes\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_private_cluster_for_AKS\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_private_cluster_for_AKS','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-22','2022-11-22','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_rbac_for_azure_kubernetes','Enable_rbac_for_azure_kubernetes','Enable RBAC for Azure Kubernetes Services','Enable RBAC for Azure Kubernetes Services','Enabling Role-Based Access Control (RBAC) for Azure Kubernetes Services (AKS) is crucial for maintaining a secure and compliant environment. It provides granular control over access to AKS resources, limits the attack surface, ensures compliance with regulatory frameworks, enables audit trails, and provides flexibility in managing access to AKS resources.','1. Login to Azure and navigate to Kubernetes Services.\n2. For each Kubernetes Services instance, click on Automation Script. \n3. Ensure that each variable enableRBAC is set to true.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-role-based-access-control-rbac-within-azure-kubernetes-services','kubernetes','azure','EnableRbacForAzureKubernetes','{\"params\":[{\"encrypt\":false,\"value\":\"enable-rbac-role-for-kubernetes\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Enable RBAC for Azure Kubernetes Services.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"In Azure kubernetes services, role-based access control is enabled.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"In Azure kubernetes services, role-based access control is not enabled.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable RBAC for Azure Kubernetes Services\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_rbac_for_azure_kubernetes\",\"autofix\":false,\"alexaKeyword\":\"EnableRbacForAzureKubernetes\",\"policyRestUrl\":\"\",\"targetType\":\"kubernetes\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_rbac_for_azure_kubernetes\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_rbac_for_azure_kubernetes','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-27','2022-10-27','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_skip_show_database_for_MySQL_Server_DB_Instances','Enable_skip_show_database_for_MySQL_Server_DB_Instances','Enable skip_show_database Flag for Cloud SQL','Enable skip_show_database Flag for Cloud SQL','Enabling the skip_show_database flag for Cloud SQL can hide the names of databases from users who do not have the necessary privileges to view them, which can provide some additional security benefits. However, it may not be appropriate for all use cases, such as multi-tenant applications or cases where specific users or groups require access to specific databases. It\'s important to carefully consider whether this flag is appropriate for your specific use case and to use other methods to restrict access to specific databases if needed.',' Set skip_show_database database flag for Cloud SQL Mysql instance to on','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-skip_show_database-flag-for-cloud-sql','cloudsql_mysqlserver','gcp','mysqlserver','{\"params\":[{\"encrypt\":false,\"value\":\"disable-enable-database-flags-for-cloudsql-server\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"gcp_cloudsql_mysqlserver\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"skip_show_database\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagValue\",\"value\":\"on\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable skip_show_database Flag for Cloud SQL\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure that the skip_show_database database flag is enabled for your Google Cloud MySQL database instances in order to prevent users from using the SHOW DATABASES statement if they dont have this privilege.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Skip_show_database flag is not enabled for your Google Cloud MySQL Server database instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_skip_show_database_for_MySQL_Server_DB_Instances\",\"autofix\":false,\"alexaKeyword\":\"mysqlserver\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_mysqlserver\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enable_skip_show_database_for_MySQL_Server_DB_Instances\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_skip_show_database_for_MySQL_Server_DB_Instances','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-06','2022-10-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_soft_delete_for_Blob_storage','Enable_soft_delete_for_Blob_storage','Enable soft delete for  Blob storage','Enable Soft Delete for Blob Storage','Enabling Soft Delete for Blob Storage is crucial for protecting against accidental or malicious data deletion, ensuring compliance, simplifying data recovery, providing a cost-effective solution for data protection, and maintaining data integrity.','enable soft delete for blob service','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-soft-delete-for-blob-storage','blobservice','azure','Enable_soft_delete_for_Blob_storage','{\"params\":[{\"encrypt\":false,\"value\":\"enable-soft-delete-for-blob-storage-account\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Enable soft delete for  Blob storage\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_soft_delete_for_Blob_storage\",\"autofix\":false,\"alexaKeyword\":\"Enforce_cloud_SQL_incoming_Connections_To_Use_SSL\",\"policyRestUrl\":\"\",\"targetType\":\"blobservice\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_soft_delete_for_Blob_storage\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-15','2022-09-15','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enable_transparent_data_encryption_for_sql_db','Enable_transparent_data_encryption_for_sql_db','Enable Transparent Data Encryption for SQL Database','Enable Transparent Data Encryption for SQL Database','Enabling Transparent Data Encryption (TDE) for SQL Database is crucial for protecting sensitive data at rest, ensuring compliance, protecting data privacy, minimizing performance impact, and simplifying management of encrypted databases and backups. TDE encrypts the data stored in the database and associated backups, making it unreadable without the appropriate encryption keys, and has minimal performance impact on SQL Database.','set transparent data encryption  to On.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-transparent-data-encryption-for-sql-database','sqldatabase','azure','Enable_transparent_data_encryption_for_sql_db','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-transparent-data-encryption\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Enable transparent data encryption for sql database\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enable_transparent_data_encryption_for_sql_db\",\"autofix\":false,\"alexaKeyword\":\"Enable_transparent_data_encryption_for_sql_db\",\"policyRestUrl\":\"\",\"targetType\":\"sqldatabase\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Enable_transparent_data_encryption_for_sql_db\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_transparent_data_encryption_for_sql_db','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-19','2022-09-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Encrypt_App_Layer_secrets_for_GKE_Cluster','Encrypt_App_Layer_secrets_for_GKE_Cluster','Encrypt App layer secret in GKE Cluster','Encrypt Application Layer Secrets for GKE Cluster','Google Kubernetes Engine (GKE) automatically encrypts all customer content, including Secrets, when it\'s at rest without requiring additional input. Application-layer secrets encryption is another security measure for sensitive data kept in etcd by allowing data encryption at the application level with a Cloud KMS key. This provides added protection against offline attacks. To use this encryption method, it is necessary to first create a Cloud KMS key and give GKE service account access. The Cloud KMS key should be situated in the same location as the cluster to decrease latency and prevent problems with multiple failure domains. When the encryption feature is enabled, both new and existing Secrets are encrypted utilizing the designated encryption key.','update GKE cluster configuration to enable App-layer secrets encryption.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#encrypt-application-layer-secrets-for-gke-cluster','gkecluster','gcp','Kubernate_Engine_cluster','{\"params\":[{\"encrypt\":false,\"value\":\"encrypt-App-layer-secret-in-GKE-Cluster\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Use CMK to encrypt App layer secrets for GKE cluster\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"App-Layer secrets encryption is not enable using cmk.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_gkecluster/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Encrypt App layer secret in GKE Cluster\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Encrypt_App_Layer_secrets_for_GKE_Cluster\",\"autofix\":false,\"alexaKeyword\":\"Kubernate_Engine_cluster\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"azure\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Encrypt_App_Layer_secrets_for_GKE_Cluster\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Encrypt_App_Layer_secrets_for_GKE_Cluster','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-19','2022-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Encrypt_GKE_Cluster_Node_with_CMK','Encrypt_GKE_Cluster_Node_with_CMK','Encrypt GKE Cluster Node using CMK','Encrypt GKE Cluster Node using CMK','To gain finer control over your GKE data encryption/decryption process, use Customer-Managed Keys (CMKs) to encrypt cluster nodes. Cloud KMS allows you to create and manage your own CMKs, offering secure encryption key management. Although GKE automatically encrypts data at rest, using your own CMKs is recommended for meeting strict compliance requirements and protecting sensitive GKE data.','To enable encryption with Customer-Managed Keys (CMKs) for your Google Kubernetes Engine (GKE) cluster nodes, you have to re-create the existing GKE cluster node pools with the appropriate encryption configuration ','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#encrypt-gke-cluster-node-using-cmk','gkecluster','gcp','Kubernate_Engine_cluster','{\"params\":[{\"encrypt\":false,\"value\":\"check-node-encryption-access-for-gke-cluster\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Use CMK to encrypt GKE Cluster Node\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"GKE Cluster node encryption is not enable using cmk.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_gkecluster/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Use CMK to encrypt GKE Cluster Node\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Encrypt_GKE_Cluster_Node_with_CMK\",\"autofix\":false,\"alexaKeyword\":\"Kubernate_Engine_cluster\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Encrypt_GKE_Cluster_Node_with_CMK\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Use CMK to encrypt GKE Cluster Node','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-19','2022-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enforce_Separate_Service_Account_Duties_for_Users','Enforce_Separate_Service_Account_Duties_for_Users','Enforce Separate Service Account Duties for Users','Enforce Separate Service Account Duties for Users','Ensure that the principle of separation of duties (SoD) is applied to all Google Cloud Platform (GCP) service-account related roles. SoD, aimed at preventing fraud and human error, distributes tasks and associated privileges for a specific business process among multiple users/members. Adhering to security best practices, GCP service accounts should not concurrently have the Service Account Admin and Service Account User roles assigned. Enforcing SoD helps eliminate the need for high-privileged IAM members, reducing the risk of malicious or unwanted actions.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enforce-separate-service-account-duties-for-users','iamusers','gcp','Enforce_Separate_Service_Account_Duties_for_Users','{\"params\":[{\"encrypt\":false,\"value\":\"enforce-Separate-Service-Account-Duties-for-Users\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enforce_Separate_Service_Account_Duties_for_Users\",\"autofix\":false,\"alexaKeyword\":\"Enforce_Separate_Service_Account_Duties_for_Users\",\"policyRestUrl\":\"\",\"targetType\":\"iamusers\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enforce_Separate_Service_Account_Duties_for_Users\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce_Separate_Service_Account_Duties_for_Users','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-01','2022-11-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enforce_Separation_Of_Duties_For_KMS_Roles','Enforce_Separation_Of_Duties_For_KMS_Roles','Separation of duties','Enforce Separation of Duties while Assigning KMS Related Roles to Users','Enforcing separation of duties while assigning Key Management Service (KMS) related roles to users can provide benefits such as reduced risk of unauthorized access, compliance with regulatory standards, improved accountability, and better resource management.','1.Go to IAM & Admin/IAM using https://console.cloud.google.com/iam-admin/iam \n2.For any member having Cloud KMS Admin and any of the Cloud KMS CryptoKey Encrypter/Decrypter , Cloud KMS CryptoKey Encrypter , Cloud KMS CryptoKey Decrypter roles granted/assigned, click the Delete Bin icon to remove the role from the member.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enforce-Separation-of-Duties-While-Assigning-KMS-Related-Roles-to-Users','iamusers','gcp','EnforceSeparationOfDutiesForKMS','{\"params\":[{\"encrypt\":false,\"value\":\"enforce-separation-of-duties-for-kms\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Enforce Separation of Duties While Assigning KMS Related Roles to Users\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Separation of Duties While Assigning KMS Related Roles to Users is NOT Enforced\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"Separation of Duties While Assigning KMS Related Roles to Users is enforced\",\"key\":\"SUCCESS\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enforce_Separation_Of_Duties_For_KMS_Roles\",\"autofix\":false,\"alexaKeyword\":\"EnforceSeparationOfDutiesForKMS\",\"policyRestUrl\":\"\",\"targetType\":\"iamusers\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enforce_Separation_Of_Duties_For_KMS_Roles\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce_Separation_Of_Duties_For_KMS_Roles','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-29','2022-11-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','Enforce user Connections Database Flag for  Sql Server Instance is Set to  Non-limiting Value','Enforce user Connections Database Flag for Sql Server Instance is Set to Non-limiting Value','Enforcing a non-limiting value for a SQL Server instance\'s \"user connections\"\" database flag can improve stability, optimize resource usage, improve security, and ensure compliance with license restrictions. Limiting the number of concurrent connections can prevent overloading, optimize system resources, reduce the attack surface, and ensure compliance with licensing restrictions.\"',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enforce-user-Connections-Database-Flag-for-Sql-Server-Instance-is-Set-to-Non-limiting-Value','cloudsql_sqlserver','gcp','sqlserver','{\"params\":[{\"encrypt\":false,\"value\":\"disable-enable-database-flags-for-cloudsql-server\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"gcp_cloudsql_sqlserver\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"user connections\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagValue\",\"value\":\"0\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enforce user Connections Database Flag for Sql Server Instance is Set to Non-limiting Value\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"Ensure that the user connections database flag configured for your Google Cloud SQL Server database instances has the optimal value, in accordance with your organization or project guidelines.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"user connections DataBase flag  for your Google Cloud SQL Server database instances is not set to organization defined value.\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting\",\"autofix\":false,\"alexaKeyword\":\"sqlserver\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_sqlserver\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-06','2022-10-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','Enforce cloud SQL incoming Connections To Use SSL','Enforce cloud SQL Incoming Connections To Use SSL','Enforcing SSL for incoming connections to Cloud SQL can improve security by encrypting data in transit, meet compliance requirements, provide authentication, and adhere to best practices for database security.','Enable SSL for Cloud SQL database instances','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enforce-cloud-sql-incoming-connections-to-use-ssl','cloudsql','gcp','Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','{\"params\":[{\"encrypt\":false,\"value\":\"enforce-ssl-to-cloud-sql\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Enforce cloud SQL incoming Connections To Use SSL\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enforce_cloud_SQL_incoming_Connections_To_Use_SSL\",\"autofix\":false,\"alexaKeyword\":\"Enforce_cloud_SQL_incoming_Connections_To_Use_SSL\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enforce_cloud_SQL_incoming_Connections_To_Use_SSL\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-16','2022-08-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','Set log_min_error_statement database flag for Postgres Instance to Error or Stricter','Set log_min_error_statement Database Flag for Postgres Instance to Error or Stricter','Setting the log_min_error_statement database flag for a PostgreSQL instance to \"error\"\" or a stricter level can improve error tracking, enhance performance by reducing disk usage, help identify potential security issues, and meet compliance requirements for auditing and reporting.\"','To set a flag that has not been set on the instance before click Add item choose the flag log_min_error_statement from the drop-down menu and set appropriate value.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#set-log_min_error_statement-database-flag-for-postgres-instance-to-error-or-stricter','cloudsql_postgres','gcp','postgres','{\"params\":[{\"encrypt\":false,\"value\":\"disable-enable-database-flags-for-cloudsql-server\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"gcp_cloudsql_postgres\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"log_min_error_statement\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagValue\",\"value\":\"ERROR\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enforce log_min_error_statement database flag for postgres Instance is set to Error or Stricter\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"The log_min_error_statement flag defines the minimum message severity level that are considered as an error statement. Messages for error statements are logged with the SQL statement.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\" log_min_error_statement flag is not set to ERROR or stricter\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance\",\"autofix\":false,\"alexaKeyword\":\"mysqlserver\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_postgres\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-06','2022-10-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ensure_Active_Directory_Web_App','Ensure_Active_Directory_Web_App','Active directory for App services','Enable Active Directory on Application Services','Enabling Active Directory (AD) on Application Services provides several benefits, including single sign-on, centralized access control, security, compliance, and simplified management of user identities and access control.','1. Navigate to App services\n2. Select the webapp you want to configure\n3. Under Settings, select identity\n4. On the identity panel, select On for the Status configuration setting to enable system assigned manged identity','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Enable-Active-Directory-on-AppServices','webapp','azure','Ensure_Active_Directory_Web_App','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-active-directory-enabled\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Active directory needs to be enabled for app services so that user\'s application can connect to other azure cloud services without need of credentials like user names and password\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Active directory is not enabled on app service\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/azure_webapp/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Active Directory on AppServices\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Ensure_Active_Directory_Web_App\",\"autofix\":false,\"alexaKeyword\":\"Ensure_Active_Directory_Web_App\",\"policyRestUrl\":\"\",\"targetType\":\"webapp\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Ensure_Active_Directory_Web_App\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_Active_Directory_Web_App','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-29','2022-09-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','Enable DNSSEC Security Feature for Google Cloud DNS-Managed Zones','Enabling DNSSEC security feature for Google Cloud DNS-managed zones can improve security by preventing DNS spoofing and other attacks, provide authentication, meet compliance requirements, and improve reputation management by ensuring trustworthy DNS data.','enable security Config state for Google Cloud DNS','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-dnssec-security-feature-for-google-cloud-dns-managed-zones','clouddns','gcp','clouddns','{\"params\":[{\"encrypt\":false,\"value\":\"check-DNS-Sec-config-state-enabled\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Ensure DNSSEC security feature is enabled for Google Cloud DNS managed zones\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones\",\"autofix\":false,\"alexaKeyword\":\"sqlserver\",\"policyRestUrl\":\"\",\"targetType\":\"clouddns\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-16','2022-08-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','Redirect All Traffic from HTTP to HTTPS','Redirecting all web application traffic from HTTP to HTTPS in Azure provides several benefits, including improved security through encryption, compliance with regulatory requirements, improved search engine optimization, and avoiding mixed content warnings. It is considered a best practice to ensure a seamless and secure user experience.','create webapp in appesrvice and select the webapplicationa and In general settings enable HttpsOnly','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Ensure-Web-App-Redirects-All-HTTP-traffic-to-HTTPS','webapp','azure','Redirect_all_HTTP_to_HTTPS','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-https-only-rule\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Ensure Web App Redirects All HTTP traffic to HTTPS\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"web apps does not alllow Http traffic to Https\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Ensure Web App Redirects All HTTP traffic to HTTPS\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS\",\"autofix\":false,\"alexaKeyword\":\"web_app_using_latest_version_of_the_HTTP_protocol\",\"policyRestUrl\":\"\",\"targetType\":\"webapp\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-19','2022-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ensure_Web_App_latest_TLS_version','Ensure_Web_App_latest_TLS_version','Enable WebApp min TLS version is latest','Configure the Latest TLS Version for WebApp','Configuring the latest TLS version for a WebApp in Azure provides several benefits, including improved security through encryption, compliance with regulatory requirements, improved compatibility with modern web browsers and applications, and potential performance improvements. Keeping up with the latest security protocols is considered a best practice to protect user data and maintain customer trust.','For web app : \n 1.Go to Azure portal \n 2.Navigate to App Services blade at https://portal.azure.com/#blade/HubsExtension/BrowseResourceBlade/resourceType/Microsoft.Web%2Fsites. \n 3.Click on the name of the App Service web application that you want to examine. \n 4.In the navigation panel, under Settings, select TLS/SSL settings to access the Transport Layer Security (TLS)/Secure Sockets Layer (SSL) configuration settings available for the selected app. \n 5.On the TLS/SSL settings panel, under Protocol Settings, check the Minimum TLS Version configuration to determine the TLS version used by the application. If Minimum TLS Version setting value is not set to 1.2, the selected Microsoft Azure App Service web application is not configured to use the latest version of TLS protocol (i.e. TLS 1.2) to encrypt data in transit.\nFor mysql flexible server: \n 1. Go to azure portal \n 2. Search for MySQL flexible server \n 3. For each database , click on on Server parameters under Settings \n 4. Type tls_version in search box \n 5. Select value as TLSV1.2 \nFor storage account: \n 1.Go to Azure portal \n 2.Navigate to App Services blade at https://portal.azure.com/#blade/HubsExtension/BrowseResourceBlade/resourceType/Microsoft.Storage%2FStorageAccounts. \n 3.Click on the name of the Azure Storage accoun  that you want to examine. \n 4.In the navigation panel, under Settings, choose Configuration to access the selected storage account configuration settings. \n 5On the Configuration page, under Minimum TLS Version, select Version 1.2 to enable the latest version of the TLS protocol (TLS version 1.2) for the selected Microsoft Azure Storage account. Choose Save to apply the changes.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-latest-tls-version','webapp','azure','Ensure_Web_App_min_TLS_version_latest','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-Tls-version-rule\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"check TLS Protocol Latest Version\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"webapp min Tls version is not 1.2\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/azure_webapp/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable WebApp min TLS version is 1.2\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"1.2\",\"key\":\"minTlsVersion\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"WebApp minimum tls version\",\"defaultVal\":\"1.2\",\"displayName\":\"Minimum tls version\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Ensure_Web_App_latest_TLS_version\",\"autofix\":false,\"alexaKeyword\":\"Ensure_Web_App_min_TLS_version_latest\",\"policyRestUrl\":\"\",\"targetType\":\"webapp\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Ensure_Web_App_latest_TLS_version\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_Web_App_latest_TLS_version','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-19','2022-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ensure_clusters_created_with_pvt_endpoints','Ensure_clusters_created_with_pvt_endpoints','Enforce clusters are created with Private end points','Secure GKE Clusters with Private Cluster Configuration','Enable private cluster when creating Kubernetes clusters. A private cluster prevents workloads from being accessible to the public internet by providing the nodes with reserved IP addresses.','1. Go to Kubernetes Engine by visiting https://console.cloud.google.com/kubernetes/list \n2. Select the desired cluster, and within the Details pane, make sure the \'Endpoint\' does not have a public IP address.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#create-clusters-with-private-endpoints','gkecluster','gcp','EnsureClustersCreatedWithPrivateEndPoints','{\"params\":[{\"encrypt\":false,\"value\":\"ensure-clusters-with-private-end-points\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Disable access to the Kubernetes API from outside the node network if it is not required.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Cluster is not having private end points or has public access.\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"Cluster is created with private end points and public access is disabled.\",\"key\":\"SUCCESS\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Ensure_clusters_created_with_pvt_endpoints\",\"autofix\":false,\"alexaKeyword\":\"EnsureClustersCreatedWithPrivateEndPoints\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Ensure_clusters_created_with_pvt_endpoints\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_clusters_created_with_pvt_endpoints','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-03','2022-11-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ensure_clusters_created_with_pvtnodes','Ensure_clusters_created_with_pvtnodes','Enforce clusters are created with Private  Nodes','Create Clusters with Private Nodes','Creating clusters with private nodes can improve security by reducing the attack surface and preventing unauthorized access, reducing exposure to the public internet, meeting compliance requirements for protecting sensitive data, enhancing performance by reducing network latency, and reducing costs associated with network egress.','1. Go to Kubernetes Engine by visiting https://console.cloud.google.com/kubernetes/list \n2. Select the desired cluster, and within the Details pane, make sure \'Private Clusters\' is set to \'Enabled\' ','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#ensure-clusters-are-created-with-private-nodes','gkecluster','gcp','EnsureClustersCreatedWithPrivateNodes','{\"params\":[{\"encrypt\":false,\"value\":\"ensure-clusters-with-private-nodes\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Disable public IP addresses for cluster nodes, so that they only have private IP addresses. Private Nodes are nodes with no public IP addresses.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Cluster is not created with private nodes.\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"Cluster is created with private nodes.\",\"key\":\"SUCCESS\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Ensure_clusters_created_with_pvtnodes\",\"autofix\":false,\"alexaKeyword\":\"EnsureClustersCreatedWithPrivateNodes\",\"policyRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Ensure_clusters_created_with_pvtnodes\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce clusters are created with Private  Nodes','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-03','2022-11-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ensure_cross_DB_ownership_flag_disabled_for_SQL','Ensure_cross_DB_ownership_flag_disabled_for_SQL','Ensure_cross_DB_ownership_flag_disabled_for_SQL','Disable Cross DB Ownership Flag for SQL DB Server','Ensure the \"cross db ownership chaining\"\" flag is disabled for Google Cloud SQL Server database instances, as enabling it may have security implications. Only activate this flag if all hosted databases must participate in cross-database ownership chaining and you understand the potential risks.\"','create DB Instance and select DB instance and disable db ownership changing flag ','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-cross-db-ownership-flag-for-sql-db-server','cloudsql','gcp','CrossDBOwnership','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-sql-instance-owner-changing-flag-disabled\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Use CMK to encrypt GKE Cluster Node\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"GKE Cluster node encryption is not enable using cmk.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_gkecluster/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Ensure cross DB ownership flag is disabled for SQL DB Server\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Ensure_cross_DB_ownership_flag_disabled_for_SQL\",\"autofix\":false,\"alexaKeyword\":\"CrossDBOwnership\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Ensure_cross_DB_ownership_flag_disabled_for_SQL\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_cross_DB_ownership_flag_disabled_for_SQL','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-19','2022-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Ensure_web_app_using_latest_version_of_the_HTTP_protocol','Ensure_web_app_using_latest_version_of_the_HTTP_protocol','Ensure_web_app_using_latest_version_of_the_HTTP_protocol','Enable the HTTP/2 Protocol Azure App Service Web Applications','Enabling the HTTP/2 protocol for Azure App Service web applications can improve performance by reducing page load times, improve security with mandatory SSL/TLS encryption, ensure compatibility with modern web browsers, and provide SEO benefits by improving search engine rankings.','enable Http protocol 2.0 for the webapps','https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#enable-the-http/2-protocol-azure-app-service-web-applications','webapp','azure','web_app_using_latest_version_of_the_HTTP_protocol','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-webapp-Http-protocal-latest-vesion\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\" Ensure that your Microsoft Azure App Service web applications are using the latest version of the HTTP protocol\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Microsoft Azure App Service web applications are not using the latest version of the HTTP protocol\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Ensure  Azure App Service web applications are using the latest version of the HTTP protocol 2.0\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Ensure_web_app_using_latest_version_of_the_HTTP_protocol\",\"autofix\":false,\"alexaKeyword\":\"web_app_using_latest_version_of_the_HTTP_protocol\",\"policyRestUrl\":\"\",\"targetType\":\"webapp\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Ensure_web_app_using_latest_version_of_the_HTTP_protocol\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_web_app_using_latest_version_of_the_HTTP_protocol','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-19','2022-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Expired_AWS_IAMCertificate_version-1_Expired_IAMCertificate_iamcertificate','aws_expired_iamcertificate','Expired IAM certificates should be removed','Delete Expired IAM Certificates','Deleting expired IAM certificates is essential for security, resource optimization, compliance, maintaining trust, and reducing confusion. By removing outdated certificates, you minimize security risks, simplify management, adhere to industry regulations, and ensure that only valid certificates are used within your AWS environment.','Remove the expired IAM certificate.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Delete-Expired-IAM-Certificates','iamcertificate','aws','Expired_AWS_IAMCertificate','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-expired-iam-certificate\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Expired_AWS_IAMCertificate_version-1_Expired_IAMCertificate_iamcertificate\",\"autofix\":false,\"alexaKeyword\":\"Expired_AWS_IAMCertificate\",\"policyRestUrl\":\"\",\"targetType\":\"iamcertificate\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_expired_iamcertificate\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_expired_iamcertificate','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-08-19','2022-08-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_Cloud_Function_not_enabled_with_VPC_connector','GCP_Cloud_Function_not_enabled_with_VPC_connector','GCP_Cloud_Function_not_enabled_with_VPC_connector','GCP Cloud Function not enabled with VPC connector','This policy identifies GCP Cloud Functions that are not configured with a VPC connector. VPC connector helps function to connect to a resource inside a VPC in the same project. Setting up the VPC connector allows you to set up a secure perimeter to guard against data exfiltration and prevent functions from accidentally sending any data to unwanted destinations. It is recommended to configure the GCP Cloud Function with a VPC connector.\nNote: For the Cloud Functions function to access the public traffic with Serverless VPC connector, you have to introduce Cloud NAT.\nLink: https://cloud.google.com/functions/docs/networking/network-settings#route-egress-to-vpc','1. Login to GCP console\n2. Navigate to \'Cloud Functions\' service (Left Panel)\n3. Click on the alerting function\n4. Click on \'EDIT\'\n5. Click on \'Runtime, build, connections and security settings’ drop-down to get the detailed view\n6. Click on the \'CONNECTIONS\' tab\n7. Under Section \'Egress settings\', select a VPC connector from the dropdown\n8. In case VPC connector is not available, select \'Custom\' and\n9. Click on \'Create a Serverless VPC Connector\', follow the link to create a Serverless VPC connector: https://cloud.google.com/vpc/docs/configure-serverless-vpc-access\n10. Once the Serverless VPC connector is available, select it from the dropdown\n11. Click on \'NEXT\'\n12. Click on \'DEPLOY\'','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#gcp-cloud-function-not-enabled-with-vpc-connector','cloudfunction','gcp','cloudfunctionvpc','{\"params\":[{\"encrypt\":false,\"value\":\"GCP-Cloud-Function-not-enabled-with-VPC-connector\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_Cloud_Function_not_enabled_with_VPC_connector\",\"autofix\":false,\"policyRestUrl\":\"\",\"targetType\":\"cloudfunction\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"GCP_Cloud_Function_not_enabled_with_VPC_connector\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_Cloud_Function_not_enabled_with_VPC_connector','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'admin@paladincloud.io','2023-01-18','2023-01-18','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_DataProc_CMK_Encryption','GCP_DataProc_CMK_Encryption','GCP_DataProc_CMK_Encryption','Encrypt Dataproc Clusters Using Customer-Managed Encryption Keys','Ensure your Google Cloud Dataproc clusters on Compute Engine use Customer-Managed Keys (CMKs) for controlling encryption/decryption processes. Cloud KMS enables the creation and management of CMKs, providing secure encryption key management. While Dataproc encrypts data at rest by default, using your own CMKs offers an additional security layer, particularly in environments with strict compliance and security controls.','Create a new cluster with CMEK as encryption, then copy the previous configuration of cluster to the new one','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#encrypt-dataproc-clusters-using-customer-managed-encryption-keys','dataproc','gcp','DataProcCMKEncryption','{\"params\":[{\"encrypt\":false,\"value\":\"check-customer-managed-key-encryption\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Ensure that data proc clusters are encrypted using Customer-Managed Keys (CMKs).\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Google Dataproc clusters is not encrypted using a Customer-Managed Key (CMK)\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_dataproc/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Dataproc clusters Encryption with Customer-Managed Keys\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_DataProc_CMK_Encryption\",\"autofix\":false,\"alexaKeyword\":\"DataProcCMKEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"dataproc\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"GCP_DataProc_CMK_Encryption\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_DataProc_CMK_Encryption','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-19','2022-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_PubSub_CMK_Encryption','GCP_PubSub_CMK_Encryption','GCP_PubSub_CMK_Encryption','Encrypt Pub/Sub topics using CMK','To have full control over data encryption and decryption, use Customer-Managed Keys (CMKs) for Google Cloud Pub/Sub topics. Although Pub/Sub encrypts messages by default, using your own CMKs provides independent management of encryption. The service utilizes envelope encryption with CMKs, where Cloud KMS encrypts Data Encryption Keys (DEKs) created by Pub/Sub for each topic.','Configure your pubsub to be encrypted with customer managed key','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#use-cmek-to-encrypt-pubsub','pubsub','gcp','PubSubCMKEncryption','{\"params\":[{\"encrypt\":false,\"value\":\"check-customer-managed-key-encryption\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Ensure that Pub/Sub topics are encrypted using Customer-Managed Keys (CMKs).\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Google Pub sub is not encrypted using a Customer-Managed Key (CMK)\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_pubsub/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Pub sub Encryption with Customer-Managed Keys\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_PubSub_CMK_Encryption\",\"autofix\":false,\"alexaKeyword\":\"PubSubCMKEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"pubsub\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"GCP_PubSub_CMK_Encryption\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_PubSub_CMK_Encryption','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-07-01','2022-07-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_VM_Instance_Migrate','GCP_VM_Instance_Migrate','GCP_VM_Instance_Migrate','Migrate VM Instance during Maintenance','Compute Engine service performs maintenance events that may require moving virtual machine (VM) instances to a different host, which can cause disruptions to production applications. To prevent this, set the VM instance\'s availability policy to use live migration instead of instance termination, which ensures uninterrupted application availability. Periodic infrastructure maintenance can also migrate VM instances to new hardware. To ensure VM instances are migrated instead of terminated during maintenance events, set the \"On Host Maintenance\"\" configuration setting to \"\"Migrate\"\".\"','Select the vm instance,Select EDIT mode,In the Availability policies section, select Migrate VM instance','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#migrate-vm-instance-during-maintenance','vminstance','gcp','VMInstanceMigrate','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vminstance-migrate-on-maintenance\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"checks if virtual machine instance will be migrated on maintenance\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VM instance will be terminated on maintenance event\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_vminstance/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"VM instance should be migrated during maintenance\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_VM_Instance_Migrate\",\"autofix\":false,\"alexaKeyword\":\"VMInstanceMigrate\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"GCP_VM_Instance_Migrate\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_VM_Instance_Migrate','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-01','2022-08-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','Default Service Account for compute instances','Deny Usage of Service Accounts with Full Cloud API Access for VM Instances','Denying the usage of service accounts with full Cloud API access for VM instances can improve security by reducing the risk of unauthorized access or data breaches, meeting compliance requirements, following the principle of least privilege, and improving audibility by providing a clearer audit trail.','To ensure the principle of least privilege execute one of the two options:\n1.replace default service account with a secure and compliant service account\n2.change the access scope for default service account','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Deny-usage-of-service-accounts-with-full-cloud-API-access-for-VM-instances','vminstance','gcp','GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vminstance-serviceaccount-cloud-access\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Deny usage of service accounts with full cloud API access for VM instances\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VM instance service account has cloud api access\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_vminstance/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny usage of service accounts with full cloud API access for VM instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access\",\"autofix\":false,\"alexaKeyword\":\"GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-30','2022-09-30','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_VM_Instance_Shielded_Config','GCP_VM_Instance_Shielded_Config','Compute instances should be shielded','Enable Shielded VM for Compute Instance','Enabling Shielded VM for compute instances can improve security by protecting against malicious software, enhance compliance by providing advanced security measures, increase trustworthiness by ensuring the integrity of the boot process, and provide flexibility in deployment options.','1. Select the VM instance you want to reconfigure \n 2. Stop the VM \n 3. Click Edit to enter the Edit mode \n 4. Under \"Shielded VM\" : select \"turn on vTPM\" , \"Turn on Integrity Monitoring\" and \"Turn on Secure Boot \" \n 5. Click on Save \n 6. Click on Start','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-shielded-vm-for-compute-instance','vminstance','gcp','VMInstanceShieldedConfig','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-vminstance-has-shielded-config\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"checks if virtual machine instance has shielded config\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VM instance does not have shielded config\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_vminstance/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Shielded VM for compute instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_VM_Instance_Shielded_Config\",\"autofix\":false,\"alexaKeyword\":\"VMInstanceShieldedConfig\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"GCP_VM_Instance_Shielded_Config\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_VM_Instance_Shielded_Config','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-13','2022-09-13','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_Virtual_Machine_2FA_Rule','GCP_Virtual_Machine_2FA_Rule','GCP_Virtual_Machine_2FA_Rule','Enable MFA on Google Cloud VM Instances for OS Login','Two-Factor Authentication, also called Multi-Factor Authentication (MFA), offers an extra layer of security besides the existing login credentials. By implementing 2FA/MFA, you can effectively fortify your production and mission-critical applications against malicious actors. Configuring 2FA in conjunction with OS Login requires the user (such as the instance administrator) to provide two or more distinct forms of authorization before being granted access, significantly lowering the risk of attack.\n\nTo secure access to your Google Cloud VM instances, it is recommended to configure Two-Factor Authentication (2FA) with the OS Login feature enabled at the virtual machine instance level.','configure your production and mission-critical VM instances to use OS Login with Two-Factor Authentication (2FA)','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-mfa-for-os-login','vminstance','gcp','VirtualMachine2FA','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vm-two-factor-authentication\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"VM Instance does NOT have 2 Factor Authorisation\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"VM Instance has two factor authorisation \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Ensure VM instances has 2 factor Authentication\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_Virtual_Machine_2FA_Rule\",\"autofix\":false,\"alexaKeyword\":\"VirtualMachine2FA\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"GCP_Virtual_Machine_2FA_Rule\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_Virtual_Machine_2FA_Rule','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-21','2022-06-21','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','Encrypt VM Disk with Customer-Managed Encryption Keys','To gain greater control over sensitive data encryption and decryption, use Customer-Managed Keys (CMKs) to encrypt persistent disks on Google Compute Engine instances. Create and manage CMKs with Cloud KMS, which provides secure key management. Although Compute Engine encrypts data at rest by default, using your own CMKs allows independent control of disk encryption, especially in environments with strict compliance and security requirements.','enable encryption with Customer-managed Keys (CMKs) for all the disks attached to your business critical Google Compute Engine instances','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#use-cmek-to-encrypt-vm-disk','vminstance','gcp','VirtualMachineDiskEncryptionCMK','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-disk-encryption-cmk\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"VM Instance Disk is not encrypted with Customer managed key\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"VM Instance Disk is encrypted with Customer managed key \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Ensure VM instances Disk is encrypted with customer managed key\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_Virtual_Machine_Disk_Encryption_CMK_Rule\",\"autofix\":false,\"alexaKeyword\":\"VirtualMachineDiskEncryptionCMK\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"GCP_Virtual_Machine_Disk_Encryption_CMK_Rule\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-15','2022-06-15','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','Encrypt VM Disk with Customer-Supplied Encryption Keys','To have complete control over data-at-rest encryption and decryption and meet strict compliance requirements, use Customer-Supplied Encryption Keys (CSEKs) for disks attached to Google Compute Engine instances. While Compute Engine automatically encrypts data at rest, providing your own encryption keys allows for independent control and management of instance disk encryption.','enable encryption with Customer-Supplied Encryption Keys (CSEKs) for all the disks attached to your business critical Google Compute Engine instances','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#encrypt-vm-disk-with-customer-supplied-encryption-keys','vminstance','gcp','VirtualMachineDiskEncryptionCSEK','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-disk-encryption-csek\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"VM Instance Disk is not encrypted with Customer supplied key\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"VM Instance Disk is encrypted with Customer supplied key \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Ensure VM instances Disk is encrypted with customer supplied key\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule\",\"autofix\":false,\"alexaKeyword\":\"VirtualMachineDiskEncryptionCSEK\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-15','2022-06-15','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_Virtual_Machine_public_access_version-1_Rule','GCP_Virtual_Machine_public_access_Rule','VirtualMachinePublicAccess','Deny Public Access to VM Instance','A newly created VM instance in Google Cloud Platform (GCP) is assigned a public IP address by default, which allows it to be accessed from anywhere on the internet. However, this also increases the risk of unauthorized access, data breaches, and security threats. To mitigate these risks, denying public access to the VM instance is highly recommended. By doing so, you can limit access to only authorized users or networks, gain greater control over who can access the instance, and reduce the attack surface of your infrastructure. You can use a VPN connection or a bastion host to securely access the VM instance remotely. These methods provide a secure channel for remote access, further reducing the risk of unauthorized access and enhancing the security of your infrastructure.','Remove the public (external) IP address from VM instances.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-vm-instance','vminstance','gcp','VirtualMachinePublicIP','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vminstnace-public-access\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\"VM Instance is having public IP \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"VM Instance in not having public access \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Ensure VM instances are not using public IP addresses\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_Virtual_Machine_public_access_version-1_Rule\",\"autofix\":false,\"alexaKeyword\":\"VirtualMachinePublicIP\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"GCP_Virtual_Machine_public_access_Rule\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_Virtual_Machine_public_access_Rule','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_bigquery_dataset_public_access_rule','gcp_bigquery_dataset_public_access_rule','BigqueryDatasetPublicAccess','Deny Public Access to Big Query','To ensure the security and privacy of sensitive data in Google Cloud Platform (GCP) BigQuery datasets, it is crucial to restrict access to authorized users or groups. Allowing public access may lead to data breaches, security threats, and compliance violations. To mitigate these risks, custom IAM roles should be created and granted to users or groups based on their roles and responsibilities, designed to provide the least privilege necessary for each user. Additionally, monitoring and auditing dataset access can detect unauthorized or suspicious activity, by enabling BigQuery audit logs and setting up alerting and monitoring systems. Following these security measures reduces the risk of unauthorized access or data breaches and maintains the security and privacy of BigQuery datasets.','Remove allUsers and allAuthenticatedUsers member bindings from the dataset ACLs in order to restrict anonymous and public access to your Google Cloud BigQuery datasets','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-big-query','bigquerydataset','gcp','BigqueryDatasetPublicAccess','{\"params\":[{\"encrypt\":false,\"value\":\"check-bigquery-dataset-public-access\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Do not allow public access to Big Query. Granting permissions to allUsers and allAuthenticatedUsers members can allow anyone to access your datasets.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"One or more roles are using the allUsers or allAuthenticatedUsers member bindings in the dataset ACLs\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_bigquerydataset/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny public access to Big Query\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_bigquery_dataset_public_access_rule\",\"autofix\":false,\"alexaKeyword\":\"BigqueryDatasetPublicAccess\",\"policyRestUrl\":\"\",\"targetType\":\"bigquerydataset\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"gcp_bigquery_dataset_public_access_rule\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_bigquery_dataset_public_access_rule','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-23','2022-06-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_bigquery_table_encryption_cmks_rule','gcp_bigquery_table_encryption_cmks_rule','BigqueryTableEncryptionCMKs','Encrypt Big Query Using Customer-Managed Encryption Keys','For more granular control over data encryption and decryption, encrypt Google Cloud BigQuery dataset tables with Customer-Managed Keys (CMKs). Although BigQuery automatically encrypts content at rest, using CMKs allows you to independently manage encryption for sensitive or confidential data with Google Cloud Key Management Service (Cloud KMS).','Enable encryption with Cloud KMS Customer-Managed Keys (CMKs) for all of your BigQuery dataset tables.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#use-cmek-to-encrypt-big-query','bigquerytable','gcp','BigqueryTableEncryptionCMKs','{\"params\":[{\"encrypt\":false,\"value\":\"check-customer-managed-key-encryption\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Ensure that Big Query dataset is encrypted with Customer Managed Encryption Keys (CMEK) to protect your data-at-rest.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Google Cloud BigQuery dataset table is not encrypted using a Customer-Managed Key (CMK)\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_bigquerytable/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Use CMEK to encrypt Big Query\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_bigquery_table_encryption_cmks_rule\",\"autofix\":false,\"alexaKeyword\":\"BigqueryTableEncryptionCMKs\",\"policyRestUrl\":\"\",\"targetType\":\"bigquerytable\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"gcp_bigquery_table_encryption_cmks_rule\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_bigquery_table_encryption_cmks_rule','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-24','2022-06-24','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_cloud_sql_encryption_cmks_rule','gcp_cloud_sql_encryption_cmks_rule','CloudSqlEncryptionCMKs','Encrypt Cloud SQL Using CMEK','For greater control over data encryption and decryption in Google Cloud SQL database instances, use Customer-Managed Keys (CMKs). Create and manage CMKs with Cloud Key Management Service (Cloud KMS). Although Google Cloud SQL encrypts data at rest by default, using your own CMKs allows for independent management of encryption, particularly in environments with strict security and compliance requirements.','Enable encryption with Cloud KMS Customer-Managed Keys (CMKs) for all of your Cloud SQL database instances.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#encrypt-cloud-sql-using-cmek','cloudsql','gcp','CloudSqlEncryptionCMKs','{\"params\":[{\"encrypt\":false,\"value\":\"check-customer-managed-key-encryption\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Ensure Cloud SQL is encrypted with Customer Managed Encryption Keys (CMEK) to protect your data-at-rest.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Google Cloud SQL database instance is not encrypted using a Customer-Managed Key (CMK)\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_cloudsql/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Use CMEK to encrypt Cloud SQL\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_cloud_sql_encryption_cmks_rule\",\"autofix\":false,\"alexaKeyword\":\"CloudSqlEncryptionCMKs\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"gcp_cloud_sql_encryption_cmks_rule\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_cloud_sql_encryption_cmks_rule','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-29','2022-06-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_kms_public_access_rule','gcp_kms_public_access_rule','KMSPublicAccessRule','Check for Publicly Accessible Cloud KMS Keys','To ensure the security of your Cloud Key Management Service (KMS) keys, it is crucial to configure the associated Cloud Identity and Access Management (IAM) policies to restrict access by anonymous and public users. To achieve this, it is recommended that you remove the \"allUsers\"\" and \"\"allAuthenticatedUsers\"\" members from the KMS key\'s IAM policy bindings. This is because allowing access permissions to these members can pose a significant security risk to your KMS keys and encrypted data, making them susceptible to unauthorized access. Therefore, taking this step is essential in preventing data loss and leakage.\"','Remove \"allUsers\" and/or \"allAuthenticatedUsers\" IAM member bindings from the required IAM policy in order to restrict anonymous and/or public access to your Cloud Key Management Service (KMS) keys','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#check-for-publicly-accessible-cloud-kms-keys','kmskey','gcp','KMSPublicAccessRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-kms-key-public-access\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Ensure there are no publicly accessible KMS cryptographic keys available within your Google Cloud account.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Google Cloud key is publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_kmskey/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Check for Publicly Accessible Cloud KMS Keys\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_kms_public_access_rule\",\"autofix\":false,\"alexaKeyword\":\"KMSPublicAccessRule\",\"policyRestUrl\":\"\",\"targetType\":\"kmskey\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"gcp_kms_public_access_rule\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_kms_public_access_rule','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-07-14','2022-07-14','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GCP_sql_database_high_availability_rule','GCP_sql_database_high_availability_rule','SQL database should be highly available','Configure Production Cloud SQL Database Instances for High Availability','Enabling High Availability (HA) configuration in Google Cloud SQL service provides data redundancy and reduces downtime during outages or planned maintenance disruptions. A regional instance with a primary and standby instance is created when configuring a Cloud SQL database instance for high availability. All writes are synchronously replicated to each zone\'s persistent disk, ensuring data availability to client applications in case of instance, network, or zone failure. To ensure the availability and automatic failover support of production and mission-critical Google Cloud SQL database instances, configure them for High Availability (HA).','1. Select the sql instance \n 2. Select \"overview\" in navigation  panel \n 3. Click on \"Edit\" button to enter edit mode \n 4. In \"Confguration options\", click on \"Backups,recovery and availability\" \n 5. Under \"Availability\", enable \"point in time recovery\" and \"High availability(regional)\" \n 6. Save the changes ','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#configure-production-cloud-sql-database-instances-for-high-availability','cloudsql','gcp','SQLDatabaseHighAvilability','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-sql-db-is-highly-available\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Configure sql db instances for high availability\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"SQL db instances are not highly available\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_cloudsql/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Production Cloud SQL database instances should be configured for high availability\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"GCP_sql_database_high_availability_rule\",\"autofix\":false,\"alexaKeyword\":\"SQLDatabaseHighAvilability\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"GCP_sql_database_high_availability_rule\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_sql_database_high_availability_rule','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-09','2022-08-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('GuardDutyFindingsExists_version-1_GuardDutyFindingsExists_ec2','aws_ec2_should_not_have_guardduty_findings','GuardDutyFindingsExists','Ensure that no Guard Duty Findings are found for an EC2 Instance','Address AWS GuardDuty findings to protect your AWS infrastructure from security threats. GuardDuty, a managed threat detection service, monitors logs for malicious activity and generates findings for suspicious behavior. By using these findings, you can evaluate your AWS infrastructure in an automated manner without additional security hardware or software, and integrate alerts into various communication channels.','Follow the step by step guide line provided for each finding from the Guard Duty console,Please reach out to paladincloud.io in case of any queries about how to fix a finding','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Ensure-that-no-Guard-Duty-Findings-are-Found-for-an-EC2-Instance','ec2','aws','GuardDutyFindingsExists','{\"params\":[{\"encrypt\":false,\"value\":\"check-guard-duty-findings-exists\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"key\":\"esGuardDutyUrl\",\"value\":\"/guardduty/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[],\"policyId\":\"GuardDutyFindingsExists_version-1_GuardDutyFindingsExists_ec2\",\"autofix\":false,\"alexaKeyword\":\"GuardDutyFindingsExists\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ec2_should_not_have_guardduty_findings\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_should_not_have_guardduty_findings','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-02-12','2018-09-19','ENABLED');
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aws_image_high_vulnerabilities_aqua_scanned_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aqua_aws_image_high_vulnerabilities_scanned_rule';
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('HighImageVulnerabilitiesScannedByAqua','aqua_aws_image_high_vulnerabilities_scanned_rule','Scan and Remediate High Vulnerability Images Policy','Aqua found High Vulnerabilities for AWS ECR','Vulnerabilities in images created or updated within a configurable threshold timeline of 10 days are scanned using Aqua\'s vulnerability data to gather key information about the vulnerabilities, including the CVE number, NVD URL, solution, resource, Aqua severity classification, and description.\n\nScanning and remediating high-vulnerability images in AWS can proactively identify and mitigate potential security threats, minimizing the risk of security breaches and other damage to the cloud infrastructure.','create/register in Aqua Sass platform and add image repositories for scan and get it scanned regularly','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#scan-and-remediate-high-vulnerability-images-policy','ecr','aws','HighVulnerableImagesReportedByAqua','{\"assetGroup\":\"aws\",\"policyId\":\"ImagesVulnerabilitiesByAqua\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aqua_aws_image_high_vulnerabilities_scanned_rule\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"ecr\",\"params\":[{\"defaultVal\":\"30\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Target\",\"description\":\"Target in days\",\"value\":\"30\",\"key\":\"target\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aqua-image-vulnerability/_search\",\"key\":\"esAquaImageUrl\"},{\"isValueNew\":true,\"defaultVal\":\"7\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Discovered days range\",\"description\":\"Discovered days in number\",\"value\":\"7\",\"key\":\"discoveredDaysRange\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"check-for-image-vulnerabilities-scanned-by-aqua\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"autofix\":false,\"alexaKeyword\":\"HighVulnerableImagesReportedByAqua\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aqua_aws_image_high_vulnerabilities_scanned_rule','high','security','0','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2023-05-05','2023-05-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('IAMCertificate_Expiry_For_X_Days_version-1_IAMCertificate_Expiry_For_X_Days_iamcertificate','aws_iamcertificate_expiry','IAMCertificate_Expiry_For_X_Days','Check the Expiry status of the IAM Certificate','Regularly checking the expiry status of IAM certificates is crucial to ensure that they are valid and have not expired. IAM certificates are used for authentication and encryption purposes in AWS, and an expired certificate can lead to security breaches and service interruptions. Renewing IAM certificates before they expire helps maintain the security and availability of AWS resources.','Rotate the keys before the expiry','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Check-the-Expiry-Status-of-the-IAM-Certificate','iamcertificate','aws','IAMCertificate_Expiry_For_X_Days','{\"assetGroup\":\"aws\",\"policyId\":\"IAMCertificate_Expiry_For_X_Days_version-1_IAMCertificate_Expiry_For_X_Days_iamcertificate\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_iamcertificate_expiry\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"iamcertificate\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-iam-certificate-expiry\",\"key\":\"policyKey\"},{\"defaultVal\":\"90\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Target expiration duration\",\"description\":\"Checks if expiry date is under given number of days\",\"value\":\"90\",\"key\":\"targetExpireDuration\",\"isMandatory\":true},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"autofix\":false,\"alexaKeyword\":\"IAMCertificate_Expiry_For_X_Days\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_iamcertificate_expiry','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-02-18','2019-03-01','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole','aws_iamrole_shouldnothave_network_privileges','IAMRoleNetworkPrivilegesRule','Deny Networking Privileges to Non-Allow Listed IAM Roles','When a new IAM role is created in AWS, it is given complete network access. However, not all roles necessarily need network access and granting it to non-allow listed roles can increase the risk of security threats. To reduce these risks, it is advised to identify and establish security groups that only permit network access to the essential IAM roles.','Attach deny policy / remove elevated permissions,If you want exception you may please request exception for this rule through PacBot.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-networking-privileges-to-non-allow-listed-iam-roles','iamrole','aws','networkprivileges','{\"params\":[{\"key\":\"policyKey\",\"value\":\"iam-role-with-unapproved-access\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"roleIdentifyingString\",\"value\":\"role/paladincloud_ro\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"unApprovedIamActions\",\"value\":\"ec2:CreateDefaultSubnet,ec2:CreateDefaultVpc,ec2:CreateInternetGateway,ec2:CreateSubnet,ec2:CreateVpc,ec2:CreateVpcEndpoint,ec2:CreateVpcEndpointConnectionNotification,ec2:CreateVpcEndpointServiceConfiguration,ec2:CreateVpcPeeringConnection,ec2:CreateVpnConnection,ec2:CreateVpnConnectionRoute,ec2:CreateVpnGateway,ec2:ModifySubnetAttribute,ec2:ModifyVpcAttribute,ec2:ModifyVpcEndpoint,ec2:ModifyVpcEndpointConnectionNotification,ec2:ModifyVpcEndpointServiceConfiguration,ec2:ModifyVpcEndpointServicePermissions,ec2:ModifyVpcPeeringConnectionOptions,ec2:ModifyVpcTenancy,ec2:MoveAddressToVpc,ec2:AttachInternetGateway,ec2:CreateEgressOnlyInternetGateway,ec2:AttachVpnGateway.ec2:*,*\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"IAM roles should not have these permissions\",\"defaultVal\":\"ec2:CreateDefaultSubnet,ec2:CreateDefaultVpc,ec2:CreateInternetGateway,ec2:CreateSubnet,ec2:CreateVpc,ec2:CreateVpcEndpoint,ec2:CreateVpcEndpointConnectionNotification,ec2:CreateVpcEndpointServiceConfiguration,ec2:CreateVpcPeeringConnection,ec2:CreateVpnConnection,ec2:CreateVpnConnectionRoute,ec2:CreateVpnGateway,ec2:ModifySubnetAttribute,ec2:ModifyVpcAttribute,ec2:ModifyVpcEndpoint,ec2:ModifyVpcEndpointConnectionNotification,ec2:ModifyVpcEndpointServiceConfiguration,ec2:ModifyVpcEndpointServicePermissions,ec2:ModifyVpcPeeringConnectionOptions,ec2:ModifyVpcTenancy,ec2:MoveAddressToVpc,ec2:AttachInternetGateway,ec2:CreateEgressOnlyInternetGateway,ec2:AttachVpnGateway.ec2:*,*\",\"displayName\":\"Unapproved IAM actions\"},{\"key\":\"splitterChar\",\"value\":\",\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole\",\"autofix\":false,\"alexaKeyword\":\"networkprivileges\",\"policyRestUrl\":\"\",\"targetType\":\"iamrole\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_iamrole_shouldnothave_network_privileges\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_iamrole_shouldnothave_network_privileges','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'asgc','2019-02-06','2019-02-26','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('IP_Forwarding_version-1_IPF_virtualmachine','azure_IPF_virtualmachine','IPF','Disable IP Forwarding on VM Network Interfaces','Regularly review Microsoft Azure network interfaces with IP forwarding enabled for security and compliance. IP forwarding is mainly used by VMs acting as network virtual appliances. Assess each interface to determine if IP forwarding is necessary.','Enabling IP forwarding on a virtual machine should be reviewed by the network security team','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#disable-ip-forwarding','virtualmachine','azure','IPF','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"bd352bd5-2853-4985-bf0d-73806b4a5744\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"IP_Forwarding_version-1_IPF_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"IPF\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_IPF_virtualmachine\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_IPF_virtualmachine','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-26','2019-11-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('IP_forwarding_for_Instances','IP_forwarding_for_Instances','Disable IP Forwarding for Compute Instances','Disable IP Forwarding for Compute Instances','Disabling IP forwarding for compute instances can improve security by preventing IP spoofing attacks, meeting compliance requirements, reducing network traffic, and simplifying network management.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-ip-forwarding-for-compute-instances','vminstance','gcp','IPFORWARDING','{\"params\":[{\"encrypt\":false,\"value\":\"ip-forward-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"IP_forwarding_for_Instances\",\"autofix\":false,\"alexaKeyword\":\"IPFORWARDING\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"IP_forwarding_for_Instances\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/IP_forwarding_for_Instances','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-29','2022-09-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('IamAccessKeyRotatedInEvery90Days_version-1_IamAccessKeyRotatedInEvery90Days_iamuser','aws_iam_keys_should_be_rotated_every_target_period','IamAccessKeyRotatedInEvery90Days','Set the Rotation Period of IAM Access Key to 90 Days','\nUpdating Identity and Access Management (IAM) credentials periodically significantly lowers the probability of an undetected compromised access key is used to access parts of your AWS account. Make sure to rotate all IAM user access keys monthly, reducing the risk of unintentional exposure and safeguarding your AWS resources from unauthorized access.','Rotate the access keys every 90 days','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#rotate-iam-access-keys-every-90-days','iamuser','aws','IamAccessKeyRotatedInEvery90Days','{\"assetGroup\":\"aws\",\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyUUID\":\"aws_iam_keys_should_be_rotated_every_target_period\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"iamuser\",\"params\":[{\"encrypt\":\"false\",\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":\"false\",\"value\":\"check-for-accesskeys-rotated-in-every-90-days\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"policyId\":\"IamAccessKeyRotatedInEvery90Days_version-1_IamAccessKeyRotatedInEvery90Days_iamuser\",\"autofix\":false,\"alexaKeyword\":\"IamAccessKeyRotatedInEvery90Days\",\"policyRestUrl\":\"\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_iam_keys_should_be_rotated_every_target_period','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'1205352','2017-08-30','2018-01-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','aws_accounts_should_follow_iam_password_policy','IamPasswordPolicy','Enable IAM Policy Password','\nTo maintain the security of your AWS account, it\'s crucial to enforce strong password policies, including password strength, pattern, and rotation. A strong password policy can significantly decrease the risk of password-guessing and brute-force attacks. It\'s essential to ensure that all AWS IAM users use a strong password policy specifying password requirements, such as minimum length, expiration date, and whether a specific pattern is necessary. By doing this, you can ensure that your account is well-protected against potential security breaches. ','Log into your AWS console,Go to the IAM service,On the left menu select Password Policy which should be the bottom option,Set the Minimum Password Length form field to 12 (or higher) and Select each of the checkboxes so that all four required  complexity options are selected,Depending on your corporate policy you may wish to allow users to change their own passwords,We recommend that you permit users to do so,Apply your new password policy and you have satisfied this security remediation','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-iam-password-policy','account','aws','IamPasswordPolicy','{\"assetGroup\":\"aws\",\"policyId\":\"IamPasswordPolicy_version-1_IamPasswordPolicy_account\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_accounts_should_follow_iam_password_policy\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"account\",\"params\":[{\"encrypt\":false,\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"check-iam-password-policy\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"defaultVal\":\"90\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Max password age\",\"description\":\"Maximum age of password in days\",\"value\":\"90\",\"key\":\"maxPasswordAge\",\"isMandatory\":true},{\"defaultVal\":\"true\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Require symbols\",\"description\":\"Does password require symbols\",\"value\":\"true\",\"key\":\"requireSymbols\",\"isMandatory\":true},{\"defaultVal\":\"true\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Require numbers\",\"description\":\"Does password require numbers\",\"value\":\"true\",\"key\":\"requireNumbers\",\"isMandatory\":true},{\"defaultVal\":\"true\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Require uppercase characters\",\"description\":\"Does password require uppercase characters\",\"value\":\"true\",\"key\":\"requireUppercaseCharacters\",\"isMandatory\":true},{\"defaultVal\":\"true\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Require lowercase characters\",\"description\":\"Does password reuire lowecase characters\",\"value\":\"true\",\"key\":\"requireLowercaseCharacters\",\"isMandatory\":true},{\"defaultVal\":\"true\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Allow users to change password\",\"description\":\"Will the user be able to change the password\",\"value\":\"true\",\"key\":\"allowUsersToChangePassword\",\"isMandatory\":true},{\"defaultVal\":\"true\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Expire password\",\"description\":\"Does password expire\",\"value\":\"true\",\"key\":\"expirePasswords\",\"isMandatory\":true},{\"defaultVal\":\"true\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Hard expiry\",\"description\":\"Does the password need Hard expiry\",\"value\":\"false\",\"key\":\"hardExpiry\",\"isMandatory\":true},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"defaultVal\":\"14\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Minimum password length\",\"description\":\"Minimum length of the password\",\"value\":\"14\",\"key\":\"minPasswordLength\",\"isMandatory\":true},{\"defaultVal\":\"24\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Last password to remember\",\"description\":\"Last password to remember\",\"value\":\"24\",\"key\":\"lastPasswordsToRemember\",\"isMandatory\":true}],\"autofix\":false,\"alexaKeyword\":\"IamPasswordPolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_accounts_should_follow_iam_password_policy','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'1205352','2018-01-08','2018-06-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('IamUserWithMultipleAccessKey_version-1_IAMUserShouldUseSingleKey_iamuser','aws_iam_user_should_have_single_access_key','AWS IAM user should have single access key','Use Single Access Key for IAM User','Using a single access key for an IAM user is not a recommended best practice, as it can compromise security. However, organizations might use a single access key for simplified management, limited use cases, or small-scale environments. It is crucial to weigh the trade-offs and risks of using a single access key and determine if it suits a specific use case.','Update to make the key inactive or delete the access keys which are no longer used.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#use-single-access-key-for-iam-user','iamuser','aws','IamUserWithMultipleAccessKey','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-user-with-multiple-accesskeys\",\"encrypt\":false},{\"key\":\"esIamUserKeyUrl\",\"value\":\"/aws/iamuser_keys/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"IamUserWithMultipleAccessKey_version-1_IAMUserShouldUseSingleKey_iamuser\",\"autofix\":false,\"alexaKeyword\":\"IamUserWithMultipleAccessKey\",\"policyRestUrl\":\"\",\"targetType\":\"iamuser\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_iam_user_should_have_single_access_key\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_iam_user_should_have_single_access_key','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-08-16','2022-08-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('IdleLoadBalancerRule_version-1_IdleLoadbalancerRule_classicelb','aws_classic_elb_should_not_be_in_idle_state','IdleLoadbalancerRule','Delete Idle Load Balancers','To reduce the cost of your monthly AWS bill, it\'s recommended to identify any Amazon Elastic Load Balancers (ELBs) that are not being used and terminate them. An ELB is considered idle when it records less than 100 requests made to it in the past 7 days. The AWS CloudWatch metric \'RequestCount (Sum)\' is used to detect such idle ELBs, which records the number of requests completed or connections made during a specified timeframe (1 or 5 minutes) for the HTTP/HTTPS or TCP/SSL listeners.','If your load balancer has no active back-end instance then consider registering instances or deleting your load balancer, See Registering Your Amazon EC2 Instances with Your Load Balancer or Delete Your Load Balancer,If your load balancer has had a low request count then consider deleting your load balancer. ','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#delete-idle-load-balancers','classicelb','aws','IdleLoadBalancer','{\"assetGroup\":\"aws\",\"policyId\":\"IdleLoadBalancerRule_version-1_IdleLoadbalancerRule_classicelb\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_classic_elb_should_not_be_in_idle_state\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"classicelb\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-idle-load-balancers\",\"key\":\"policyKey\"},{\"defaultVal\":\"hjLMh88uM8\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Check Id\",\"description\":\"Check Id Keyword\",\"value\":\"hjLMh88uM8\",\"key\":\"checkId\",\"isMandatory\":true},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"cost\",\"key\":\"policyCategory\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_checks/checks_resources/_search\",\"key\":\"esServiceURL\"}],\"autofix\":false,\"alexaKeyword\":\"IdleLoadBalancer\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_classic_elb_should_not_be_in_idle_state','high','cost','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-02-25','2018-09-19','ENABLED');
UPDATE cf_PolicyTable SET policyDisplayName='Delete Idle CLB' where policyId='IdleLoadBalancerRule_version-1_IdleLoadbalancerRule_classicelb';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aws_image_aqua_scanned_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aqua_aws_image_scanned_rule';
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('ImagesScannedByAqua','aqua_aws_image_scanned_rule','Scanning Amazon ECR Image with Aqua Security','Scan Amazon ECR Image with Aqua Security','Aqua Security\'s container security platform can scan images stored in a client\'s Amazon Elastic Container Registry (ECR) to identify any images not scanned for vulnerabilities. There are four possible reasons for a resource (image) not being scanned: it is not present in the ECR repository, it does not have the latest tag, it has no vulnerabilities, or its metadata has not been collected by cloud discovery. \n\nThe primary objective of this process is to ensure that all images in the ECR repository are scanned for vulnerabilities, thereby mitigating potential security risks.','create/register in Aqua Sass platform and add image repositories for scan and get it scanned regularly','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Scan-Amazon-ECR-Image-with-Aqua-Security','ecr','aws','ImagesScannedByAqua','{\"assetGroup\":\"aws\",\"policyId\":\"ImagesScannedByAqua\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aqua_aws_image_scanned_rule\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"ecr\",\"params\":[{\"defaultVal\":\"30\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Target\",\"description\":\"Target in days\",\"value\":\"30\",\"key\":\"target\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aqua-image-vulnerability/_search\",\"key\":\"esAquaImageUrl\"},{\"isValueNew\":true,\"defaultVal\":\"7\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Discovered days range\",\"description\":\"Discovered days in number\",\"value\":\"7\",\"key\":\"discoveredDaysRange\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"check-for-images-scanned-by-aqua\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"autofix\":false,\"alexaKeyword\":\"ImagesScannedByAqua\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aqua_aws_image_scanned_rule','high','security','0','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2023-05-05','2023-05-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('LambdaFunWithAdmin-OrIamPrivileges_version-1_LambdaFunWithAdminOrIamPrivileges_lambda','aws_lambda_function_should_not_have_administrative_privilege','LambdaFunWithAdminOrIamPrivileges','Deny Administrative Permissions to Lambda Functions','Denying administrative permissions to Lambda functions is crucial for adhering to the principle of least privilege, enhancing security, meeting compliance standards, improving auditability, and maintaining system stability. Limiting permissions reduces the risk of unauthorized actions, data breaches, and unintended changes while simplifying monitoring and ensuring regulatory compliance.','Remove AdministratorAccess policy associated with lambda functions,Remove IAM privileges associated with the lambda function','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Deny-Administrative-Permissions-to-Lambda-Functions','lambda','aws','LambdaFunWithAdmin-OrIamPrivileges','{\"params\":[{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"check-for-lambda-fun-with-admin-or-IAM-privileges\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole\",\"key\":\"nonAdminAccntsWithIAMFullAccessRuleId\"},{\"key\":\"esNonAdminAccntsWithIAMFullAccessUrl\",\"value\":\"/aws/issue_iamrole/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[],\"policyId\":\"LambdaFunWithAdmin-OrIamPrivileges_version-1_LambdaFunWithAdminOrIamPrivileges_lambda\",\"autofix\":false,\"alexaKeyword\":\"LambdaFunWithAdmin-OrIamPrivileges\",\"policyRestUrl\":\"\",\"targetType\":\"lambda\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_lambda_function_should_not_have_administrative_privilege\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_lambda_function_should_not_have_administrative_privilege','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-02-15','2018-09-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Legacy_Subnet_should_Not_Exist_in_a_Project','Legacy_Subnet_should_Not_Exist_in_a_Project','subnet mode should be custom','Deny Legacy Subnet Mode for VPC','Denying the use of legacy subnet mode for Virtual Private Clouds (VPCs) can improve security by reducing the attack surface, meeting compliance requirements, providing better network segmentation and improving scalability.','1. Create a new VPC with subnet mode as CUSTOM \n 2. Migrate the old VPC to this newly created VPC','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-legacy-subnet-mode-for-vpc-1','networks','gcp','Cloud Vpc Networks','{\"params\":[{\"encrypt\":false,\"value\":\"check-subnet-mode-is-legacy-vpc\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Subnet mode for VPC should not be legacy\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Legacy_Subnet_should_Not_Exist_in_a_Project\",\"autofix\":false,\"alexaKeyword\":\"Cloud Vpc Networks\",\"policyRestUrl\":\"\",\"targetType\":\"networks\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Legacy_Subnet_should_Not_Exist_in_a_Project\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Legacy_Subnet_should_Not_Exist_in_a_Project','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-12','2022-09-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('LowUtilizationAmazonEC2InstancesRule_version-1_LowUtilizationAmazonEC2InstancesRule_ec2','aws_ec2_low_utilization','LowUtilizationAmazonEC2InstancesRule','Check for Underutilized EC2 Instances','Downsizing underutilized EC2 instances can result in cost savings, resource optimization, improved performance, and better scalability. By paying only for the needed resources, you can free up CPU, memory, and storage, improve the performance of other applications, and allocate resources more efficiently.','Consider stopping or terminating instances that have low utilization, or scale the number of instances by using Auto Scaling.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#downsize-EC2-Instances-with-Low-Utilization','ec2','aws','LowUtilizationAmazonEC2InstancesRule','{\"assetGroup\":\"aws\",\"policyId\":\"LowUtilizationAmazonEC2InstancesRule_version-1_LowUtilizationAmazonEC2InstancesRule_ec2\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_ec2_low_utilization\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"ec2\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-low-utilization-amazon-ec2-instance\",\"key\":\"policyKey\"},{\"defaultVal\":\"\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Check Id\",\"description\":\"Check Id Keyword\",\"value\":\"\",\"key\":\"checkId\",\"isMandatory\":true},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"cost\",\"key\":\"policyCategory\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_checks/checks_resources/_search\",\"key\":\"esServiceURL\"}],\"autofix\":false,\"alexaKeyword\":\"LowUtilizationAmazonEC2InstancesRule\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_low_utilization','high','cost','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-08-05','2019-08-05','ENABLED');
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aws_image_medium_vulnerabilities_aqua_scanned_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aqua_aws_image_medium_vulnerabilities_scanned_rule';
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('MediumImageVulnerabilitiesScannedByAqua','aqua_aws_image_medium_vulnerabilities_scanned_rule','Scan and Remediate Medium Vulnerability Images Policy','Aqua found Medium Vulnerabilities for AWS ECR','Vulnerabilities in images created or updated within a configurable threshold timeline of 10 days are scanned using Aqua\'s vulnerability data to gather key information about the vulnerabilities, including the CVE number, NVD URL, solution, resource, Aqua severity classification, and description.\n\nScanning and remediating medium vulnerability images in AWS can proactively identify and mitigate potential security threats, minimizing the risk of security breaches and other damage to the cloud infrastructure.\n','create/register in Aqua Sass platform and add image repositories for scan and get it scanned regularly','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#scan-and-remediate-medium-vulnerability-images-policy','ecr','aws','MediumVulnerableImagesReportedByAqua','{\"assetGroup\":\"aws\",\"policyId\":\"ImagesVulnerabilitiesByAqua\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aqua_aws_image_medium_vulnerabilities_scanned_rule\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"ecr\",\"params\":[{\"defaultVal\":\"30\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Target\",\"description\":\"Target in days\",\"value\":\"30\",\"key\":\"target\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aqua-image-vulnerability/_search\",\"key\":\"esAquaImageUrl\"},{\"isValueNew\":true,\"defaultVal\":\"7\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Discovered days range\",\"description\":\"Discovered days in number\",\"value\":\"7\",\"key\":\"discoveredDaysRange\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"check-for-image-vulnerabilities-scanned-by-aqua\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"autofix\":false,\"alexaKeyword\":\"MediumVulnerableImagesReportedByAqua\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aqua_aws_image_medium_vulnerabilities_scanned_rule','medium','security','0','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2023-05-05','2023-05-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Missing_Endpoint_Protection_version-1_MEP_virtualmachine','azure_MEP_virtualmachine','MEP','Monitor Missing Endpoint Protection on VM in Security Center','Enable endpoint protection monitoring in Azure Security Center to safeguard Azure virtual machines from viruses, spyware, and malicious software. This feature provides comprehensive security recommendations and ensures all Windows virtual machines have endpoint protection for enhanced security.','Servers should be installed with  Endpoint Protection agent ','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#monitor-missing-endpoint-protection-in-security-center','virtualmachine','azure','MEP','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"af6cd1bd-1635-48cb-bde7-5b15693900b9\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Missing_Endpoint_Protection_version-1_MEP_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"MEP\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_MEP_virtualmachine\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_MEP_virtualmachine','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-26','2019-11-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort22_networkacl','aws_nacl_should_not_have_rule_with_public_access_on_port22','Network ACL should not allow public access to administration server port 22','Restrict Inbound Traffic on Remote Server Administration Port 22','Restricting inbound traffic on port 22 is crucial for enhancing security, adhering to the principle of least privilege, preventing brute-force and MITM attacks, and improving auditability. This practice ensures only trusted IPs have access, protects your servers from unauthorized access, and simplifies security audits.','Update or delete the inbound rules to deny the unrestricted inbound traffic','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#restrict-inbound-traffic-on-remote-server-administration-port-22','networkacl','aws','NACLWithPublicAccessForPort22','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-nacl-with-public-access-configured-ports\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"22\",\"key\":\"portToCheck\"},{\"key\":\"esNaclEntryUrl\",\"value\":\"/aws/networkacl_entries/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort22_networkacl\",\"autofix\":false,\"alexaKeyword\":\"NACLWithPublicAccessForPort22\",\"policyRestUrl\":\"\",\"targetType\":\"networkacl\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_nacl_should_not_have_rule_with_public_access_on_port22\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_nacl_should_not_have_rule_with_public_access_on_port22','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-09-14','2022-09-14','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort3389_networkacl','aws_nacl_should_not_have_rule_with_public_access_on_port3389','Network ACL should not allow public access to administration server port 3389','Restrict Inbound Traffic on Remote Server Administration Port 3389','Ensure Amazon VPC NACLs restrict inbound traffic on TCP ports 22 (SSH) and 3389 (RDP) to trusted IPs or IP ranges, implementing the Principle of Least Privilege and minimizing attack surfaces. Exposing these ports to the internet increases the risk of malicious activities; therefore, limit access to known and trusted IP addresses.','Update or delete the inbound rules to deny the unrestricted inbound traffic','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#restrict-inbound-traffic-on-remote-server-administration-port-3389','networkacl','aws','NACLWithPublicAccessForPort3389','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-nacl-with-public-access-configured-ports\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"3389\",\"key\":\"portToCheck\"},{\"key\":\"esNaclEntryUrl\",\"value\":\"/aws/networkacl_entries/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort3389_networkacl\",\"autofix\":false,\"alexaKeyword\":\"NACLWithPublicAccessForPort3389\",\"policyRestUrl\":\"\",\"targetType\":\"networkacl\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_nacl_should_not_have_rule_with_public_access_on_port3389\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_nacl_should_not_have_rule_with_public_access_on_port3389','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-09-14','2022-09-14','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Namespaces_DiagnosticLogs_version-1_NDL_namespaces','azure_NDL_namespaces','NDL','Enable Diagnostics Logs in Namespaces','Enabling diagnostics logs in namespaces in Azure provides several benefits, including troubleshooting issues with your application, monitoring performance, complying with regulatory requirements, and optimizing costs. By capturing detailed information about the behavior of your application, you can gain valuable insights that can help you improve the quality of your application and optimize resource consumption. It is considered a best practice to enable diagnostics logs to ensure the smooth operation of your application and meet compliance requirements.','This enables you to recreate activity trails to use for investigation purposes,when a security incident occurs or when your network is compromised','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-diagnostics-logs-in-namespaces','namespaces','azure','NDL','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"83a214f7-d01a-484b-91a9-ed54470c9a6a\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Namespaces_DiagnosticLogs_version-1_NDL_namespaces\",\"autofix\":false,\"alexaKeyword\":\"NDL\",\"policyRestUrl\":\"\",\"targetType\":\"namespaces\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_NDL_namespaces\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_NDL_namespaces','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-30','2019-11-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Network_Security_Group_Flow_Log_retention_more_than_90_days','Network_Security_Group_Flow_Log_retention_more_than_90_days','Enforce Network Security Group Flow Log retention for more than 90 days','Configure Network Security Group Flow Log Retention Period to more than 90 Days','Configuring the Network Security Group (NSG) flow log retention period to more than 90 days in Azure provides several benefits, including compliance with regulatory requirements, improved incident response capabilities, the ability to perform forensic analysis, and historical analysis to optimize network performance. Retaining NSG flow logs for a longer period is considered a best practice to gain valuable insights into network behavior and improve the security and performance of your Azure environment.','Enable Rentention and Retention days should be Greater than or equal to 90 days for NSG log flow','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enforce-network-security-group-flow-log-retention-for-more-than-90-days','nsg','azure','Network_Security_Group_Flow_Log_retention_more_than_90_days','{\"params\":[{\"encrypt\":false,\"value\":\"Enforce-Network-Security-Group-Flow-Log-retention-for-more-than-90-days\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Network_Security_Group_Flow_Log_retention_more_than_90_days\",\"autofix\":false,\"alexaKeyword\":\"Network_Security_Group_Flow_Log_retention_more_than_90_days\",\"policyRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Network_Security_Group_Flow_Log_retention_more_than_90_days\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Network_Security_Group_Flow_Log_retention_more_than_90_days','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-20','2022-09-20','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole','aws_non_admin_iam_role_should_not_have_iam_full_access','IAMAccessGrantForNonAdminAccountRule','Restrict full IAM Access to Non-Admin IAM Roles','Restricting full IAM access to non-admin roles is vital for adhering to the principle of least privilege, enhancing security, ensuring compliance, improving auditability, and maintaining system stability. This practice minimizes the risk of unauthorized actions, breaches, and unintended changes while simplifying audits and promoting regulatory compliance.','Remove the IAM privilleges from that role.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Restrict-full-IAM-Access-to-Non-Admin-IAM-Roles','iamrole','aws','IAMAccessGrantForNonAdminAccountRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole\",\"policyRestUrl\":\"\",\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyUUID\":\"aws_non_admin_iam_role_should_not_have_iam_full_access\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"iamrole\",\"params\":[{\"encrypt\":\"false\",\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"defaultVal\":\"Admin\",\"encrypt\":\"false\",\"isEdit\":true,\"displayName\":\"Admin roles to compare\",\"description\":\"Admin roles to compare for the access\",\"value\":\"Admin\",\"key\":\"adminRolesToCompare\",\"isMandatory\":true},{\"encrypt\":\"false\",\"value\":\"check-non-admin-accounts-for-iamfullccess\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"}],\"autofix\":false,\"alexaKeyword\":\"IAMAccessGrantForNonAdminAccountRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_non_admin_iam_role_should_not_have_iam_full_access','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'710383','2017-08-31','2018-02-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_ApiWithNonStandardRule_api','aws_api_resource_should_not_be_there_in_non_standard_region','ApiWithNonStandardRule','Assign Standard Region to API Resource','Assigning a standard region to an API resource is a best practice that brings several benefits, such as improved performance, compliance with regulations, disaster recovery, availability, and simplified management. It also helps organizations avoid legal or regulatory issues and maintain customer trust by ensuring data is stored in compliance with regulations. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions, and if assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-API-Resource','api','aws','ApiWithNonStandardRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_ApiWithNonStandardRule_api\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_api_resource_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"api\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"ApiWithNonStandardRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_api_resource_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-03','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_AppelbWithNonStandardRule_appelb','aws_app_elb_should_not_be_there_in_non_standard_region','AppelbWithNonStandardRule','Assign Standard Region to App ELB Resource','Assigning a standard region to an App ELB (Elastic Load Balancer) resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region that is closest to your users and replicating your App ELB across multiple regions, you can improve latency, ensure data compliance, and maintain application availability. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions, and if assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-APP-ELB-Resource','appelb','aws','AppelbWithNonStandardRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_AppelbWithNonStandardRule_appelb\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_app_elb_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"appelb\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"AppelbWithNonStandardRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_app_elb_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-03','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_DynamodbWithNonStandardRule_dynamodb','aws_dynamodb_should_not_be_there_in_non_standard_region','DynamodbWithNonStandardRule','Assign Standard Region to DynamoDB','Assigning a standard region to DynamoDB resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your DynamoDB across multiple regions, you can improve latency, ensure data compliance, and maintain application availability. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-Dynamodb','dynamodb','aws','DynamodbWithNonStandardRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_DynamodbWithNonStandardRule_dynamodb\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_dynamodb_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"dynamodb\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"DynamodbWithNonStandardRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_dynamodb_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-03','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_EfsWithNonStandardRule_efs','aws_efs_should_not_be_there_in_non_standard_region','EfsWithNonStandardRule','Assign Standard Region to EFS Resource','Assigning a standard region to EFS resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your EFS resource across multiple regions, you can improve latency, ensure data compliance, and maintain application availability. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-EFS-Resource','efs','aws','EfsWithNonStandardRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_EfsWithNonStandardRule_efs\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_efs_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"efs\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"EfsWithNonStandardRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_efs_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-03','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_ElasticacheWithNonStandardRule_elasticache','aws_elasticahe_should_not_be_there_in_non_standard_region','ElasticacheWithNonStandardRule','Assign Standard Region to Elasticache Resource','Assigning a standard region to Elasticache resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your Elasticache resource across multiple regions, you can improve latency, ensure data compliance, and maintain application availability. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-Elasticache-Resource','elasticache','aws','ElasticacheWithNonStandardRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_ElasticacheWithNonStandardRule_elasticache\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_elasticahe_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"elasticache\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"ElasticacheWithNonStandardRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_elasticahe_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-03','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_ElasticipWithNonStandardRule_elasticip','aws_elasticip_should_not_be_there_in_non_standard_region','ElasticipWithNonStandardRule','Assign Standard Region to Elastic IP Resource','Assigning a standard region to ElasticIP resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your Elastic resource across multiple regions, you can improve latency, ensure data compliance, and maintain application availability. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#assign-resource-standard-region','elasticip','aws','ElasticipWithNonStandardRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_ElasticipWithNonStandardRule_elasticip\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_elasticip_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"elasticip\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"ElasticipWithNonStandardRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_elasticip_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-03','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_ElasticsearchWithNonStandardRule_elasticsearch','aws_elasticsearch_should_not_be_there_in_non_standard_region','ElasticsearchWithNonStandardRule','Assign Standard Region to Elasticsearch Resource','Assigning a standard region to Elasticsearch resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. You can improve latency, ensure data compliance, and maintain application availability by choosing a region closest to your users and replicating your Elasticsearch resource across multiple regions. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-Elasticsearch-Resource','elasticsearch','aws','ElasticsearchWithNonStandardRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_ElasticsearchWithNonStandardRule_elasticsearch\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_elasticsearch_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"elasticsearch\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"ElasticsearchWithNonStandardRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_elasticsearch_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-03','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_EmrWithNonStandardRule_emr','aws_emr_should_not_be_there_in_non_standard_region','EmrWithNonStandardRule','Assign Standard Region to EMR Resource','Assigning a standard region to EMR resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your EMR resource across multiple regions, you can improve latency, ensure data compliance, and maintain application availability. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-EMR-Resource','emr','aws','EmrWithNonStandardRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_EmrWithNonStandardRule_emr\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_emr_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"emr\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"EmrWithNonStandardRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_emr_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-03','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_EniWithNonStandardRule_eni','aws_eni_should_not_be_there_in_non_standard_region','EniWithNonStandardRule','Assign Standard Region to Elastic Network Interfaces (ENI) Resource','Assigning a standard region to ENI resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your ENI resource across multiple regions, you can improve latency, ensure data compliance, and maintain application availability. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#assign-resource-standard-region','eni','aws','EniWithNonStandardRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_EniWithNonStandardRule_eni\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_eni_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"eni\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"EniWithNonStandardRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_eni_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-03','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_KmsWithNonStandardRule_kms','aws_kms_should_not_be_there_in_non_standard_region','KmsWithNonStandardRule','Assign Standard Region to KMS Resource','Assigning a standard region to KMS resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your KMS resource across multiple regions, you can improve latency, ensure data compliance, and maintain application availability. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-KMS-Resource','kms','aws','KmsWithNonStandardRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_KmsWithNonStandardRule_kms\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_kms_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"kms\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"KmsWithNonStandardRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_kms_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-03','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_RdsdbWithNonStandardRule_rdsdb','aws_rdsdb_should_not_be_there_in_non_standard_region','RdsdbWithNonStandardRule','Assign Standard Region to RDS DB Resource','Assigning a standard region to RDS DB resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your RDS DB resource across multiple regions, you can improve latency, ensure data compliance, and maintain application availability. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-RDS-DB-Resource','rdsdb','aws','RdsdbWithNonStandardRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_RdsdbWithNonStandardRule_rdsdb\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_rdsdb_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"rdsdb\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"RdsdbWithNonStandardRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_rdsdb_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-03','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_RedshiftWithNonStandardRule_redshift','aws_redshift_should_not_be_there_in_non_standard_region','RedshiftWithNonStandardRule','Assign Standard Region to Redshift Resource','Assigning a standard region to Redshift resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your Redshift resource across multiple regions, you can improve latency, ensure data compliance, and maintain application availability. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-Redshift-Resource','redshift','aws','RedshiftWithNonStandardRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_RedshiftWithNonStandardRule_redshift\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_redshift_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"redshift\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"RedshiftWithNonStandardRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_redshift_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-03','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_VpcWithNonStandardRule_vpc','aws_vpc_should_not_be_there_in_non_standard_region','VpcWithNonStandardRule','Assign Standard Region to VPC Resource','Assigning a standard region to VPC resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your VPC resource across multiple regions, you can improve latency, ensure data compliance, and maintain application availability. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-VPC-Resource','vpc','aws','VpcWithNonStandardRule','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_VpcWithNonStandardRule_vpc\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_vpc_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"vpc\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"VpcWithNonStandardRule\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_vpc_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-03','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_version-1_AsgWithNonStandardRegion_asg','aws_asg_should_not_be_there_in_non_standard_region','AsgWithNonStandardRegion','Assign Standard Region to ASG Resource','Assigning a standard region to ASG resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your ASG resource across multiple regions, you can improve latency, ensure data compliance, and maintain application availability. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-ASG-Resource','asg','aws','AsgWithNonStandardRegion','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_version-1_AsgWithNonStandardRegion_asg\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_asg_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"asg\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"AsgWithNonStandardRegion\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_asg_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-30','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_version-1_ClassicelbWithNonStandardRegion_classicelb','aws_classicelb_should_not_be_there_in_non_standard_region','ClassicelbWithNonStandardRegion','Assign Standard Region to Classic ELB Resource','Assigning a standard region to Classic ELB resource is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your Classic ELB resource across multiple regions, you can improve latency, ensure data compliance, and maintain application availability. Additionally, a policy can be configured to define the customer\'s intent to create their assets in specific regions. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-Classic-ELB-Resource','classicelb','aws','ClassicelbWithNonStandardRegion','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_version-1_ClassicelbWithNonStandardRegion_classicelb\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_classicelb_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"classicelb\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"ClassicelbWithNonStandardRegion\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_classicelb_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-30','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_version-1_LambdaWithNonStandardRegion_lambda','aws_lambda_should_not_be_there_in_non_standard_region','LambdaWithNonStandardRegion','Assign Standard Region to Lambda','Assigning a standard region to a Lambda function in AWS is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, disaster recovery and availability, and potential cost savings. By choosing a region closest to your users and replicating your Lambda function across multiple regions, you can reduce latency, ensure data compliance, and maintain application availability. Using a standard region can simplify management and lower costs, making it an important best practice for many organizations. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-Lambda','lambda','aws','LambdaWithNonStandardRegion','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_version-1_LambdaWithNonStandardRegion_lambda\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_lambda_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"lambda\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"LambdaWithNonStandardRegion\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_lambda_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-30','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_version-1_LaunchconfigWithNonStandardRegion_launchconfig','aws_launchconfig_should_not_be_there_in_non_standard_region','LaunchconfigWithNonStandardRegion','Assign Standard Region to Launchconfig','Assigning a standard region to a Launch Configuration in AWS is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, disaster recovery and availability, and consistency. By choosing a region closest to your users and replicating your instances across multiple regions, you can reduce latency, ensure data compliance, and maintain instance availability. Using a standard region can simplify management, ensure consistency, and simplify troubleshooting and managing instances, making it an important best practice for many organizations. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-Launchconfig','launchconfig','aws','LaunchconfigWithNonStandardRegion','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_version-1_LaunchconfigWithNonStandardRegion_launchconfig\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_launchconfig_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"launchconfig\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"LaunchconfigWithNonStandardRegion\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_launchconfig_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-30','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_version-1_RdsSnapshotWithNonStandardRegion_rdssnapshot','aws_rdssnapshot_should_not_be_there_in_non_standard_region','RdsSnapshotWithNonStandardRegion','Assign Standard Region to RDS Snapshot','Assigning a standard region to an RDS snapshot in AWS is a best practice that can provide several benefits, including disaster recovery and availability, improved performance, compliance with regulations, and simplified management. You can ensure database availability even during a regional outage by replicating your RDS snapshot across multiple regions. Choosing a region closest to your users can improve performance, and using a standard region can simplify management and ensure compliance with regulations. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-RDS-Snapshot','rdssnapshot','aws','RdsSnapshotWithNonStandardRegion','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_version-1_RdsSnapshotWithNonStandardRegion_rdssnapshot\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_rdssnapshot_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"rdssnapshot\",\"params\":[{\"encrypt\":false,\"value\":\"true\",\"key\":\"threadsafe\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"}],\"autofix\":false,\"alexaKeyword\":\"RdsSnapshotWithNonStandardRegion\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_rdssnapshot_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-30','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_version-1_ResourceWithNonStandardRule_ec2','aws_ec2_should_not_be_there_in_non_standard_region','ResourceWithNonStandardRule','Assign Standard Region to EC2 Instance','Assigning a standard region to an EC2 instance in AWS is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, disaster recovery and availability, and potential cost savings. By choosing a region closest to your users and replicating your instances across multiple regions, you can reduce latency, ensure data compliance, and maintain instance availability. Using a standard region can simplify management, lower costs, and make maintaining and scaling your instances easier.  If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-EC2-Instance','ec2','aws','Ec2WithNonStandardRegion','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_version-1_ResourceWithNonStandardRule_ec2\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_ec2_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"ec2\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"Ec2WithNonStandardRegion\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-30','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_version-1_S3WithNonStandardRegion_s3','aws_s3_should_not_be_there_in_non_standard_region','S3WithNonStandardRegion','Assign Standard Region to S3 Buckets','Assigning a standard region to an S3 bucket in AWS is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, disaster recovery and availability, and potential cost savings. By choosing a region closest to your users and replicating your bucket across multiple regions, you can reduce latency, ensure data compliance, and maintain bucket availability. Using a standard region can also simplify management, lower costs, and make it easier to maintain and scale your buckets. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#assign-resource-standard-region','s3','aws','S3WithNonStandardRegion','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_version-1_S3WithNonStandardRegion_s3\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_s3_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"s3\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"S3WithNonStandardRegion\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_s3_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-30','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_version-1_SgWithNonStandardRegion_sg','aws_sg_should_not_be_there_in_non_standard_region','SgWithNonStandardRegion','Assign Standard Regions to Security Groups','Assigning standard regions to security groups in AWS is a best practice that can provide several benefits, including improved security, compliance with regulations, simplified management, and disaster recovery and availability. Using a standard region, you can ensure that your security policies are consistently applied to your instances and comply with regional data processing requirements. Using a standard region can simplify management and make maintaining and scaling your security groups easier over time.  If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#assign-resource-standard-region','sg','aws','SgWithNonStandardRegion','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_version-1_SgWithNonStandardRegion_sg\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_sg_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"sg\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"SgWithNonStandardRegion\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_sg_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-30','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_version-1_SnapshotWithNonStandardRegion_snapshot','aws_snapshot_should_not_be_there_in_non_standard_region','SnapshotWithNonStandardRegion','Assign Standard Region to Snapshot','Assigning a standard region to a snapshot in AWS is a best practice that can provide several benefits, including disaster recovery and availability, improved performance, compliance with regulations, and simplified management. By replicating your snapshot across multiple regions, you can ensure its availability even during a regional outage. Choosing a region closest to your users can improve performance, and using a standard region can simplify management and ensure compliance with regulations. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-snapshot','snapshot','aws','SnapshotWithNonStandardRegion','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_version-1_SnapshotWithNonStandardRegion_snapshot\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_snapshot_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"snapshot\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"SnapshotWithNonStandardRegion\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_snapshot_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-30','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_version-1_SnstopicWithNonStandardRegion_snstopic','aws_snstopic_should_not_be_there_in_non_standard_region','SnstopicWithNonStandardRegion','Assign Standard Region to SNS Topic','Assigning a standard region to an SNS topic in AWS is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your topic across multiple regions, you can reduce latency, ensure data compliance, and maintain topic availability. Using a standard region can simplify management and make maintaining and scaling your topics easier over time.  If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-sns-topic','snstopic','aws','SnstopicWithNonStandardRegion','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_version-1_SnstopicWithNonStandardRegion_snstopic\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_snstopic_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"snstopic\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"SnstopicWithNonStandardRegion\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_snstopic_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-30','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_version-1_StackWithNonStandardRegion_stack','aws_stack_should_not_be_there_in_non_standard_region','StackWithNonStandardRegion','Assign Standard Region to Stack','Assigning a standard region to a stack in AWS CloudFormation is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your stack across multiple regions, you can reduce latency, ensure data compliance, and maintain stack availability. Using a standard region can simplify management and make maintaining and scaling your stack easier over time.  If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-stack','stack','aws','StackWithNonStandardRegion','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_version-1_StackWithNonStandardRegion_stack\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_stack_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"stack\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"StackWithNonStandardRegion\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_stack_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-30','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_version-1_SubnetWithNonStandardRegion_subnet','aws_subnet_should_not_be_there_in_non_standard_region','SubnetWithNonStandardRegion','Assign Standard Region to AWS Subnet','Assigning a standard region to an AWS subnet is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, disaster recovery and availability, and network traffic optimization. By choosing a region closest to your users and replicating your subnet across multiple regions, you can reduce latency, ensure data compliance, and maintain subnet availability. Using a standard region can simplify management, optimize network traffic, and make maintaining and scaling your subnet easier over time.  If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-resource','subnet','aws','SubnetWithNonStandardRegion','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_version-1_SubnetWithNonStandardRegion_subnet\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_subnet_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"subnet\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"SubnetWithNonStandardRegion\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_subnet_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-30','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('NonStandardRegionRule_version-1_version-1_VolumeWithNonStandardRegion_volume','aws_volume_should_not_be_there_in_non_standard_region','VolumeWithNonStandardRegion','Assign Standard Region to EBS Volume','Assigning a standard region to an EBS (Elastic Block Store) volume in AWS is a best practice that can provide several benefits, including improved performance, compliance with regulations, simplified management, and disaster recovery and availability. By choosing a region closest to your users and replicating your volume across multiple regions, you can reduce latency and ensure data compliance, as well as maintain volume availability. Using a standard region can also simplify management and make it easier to maintain and scale your volume over time. If assets are created in other regions, a notification or alert is generated for those assets to bring them into compliance with the policy.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Standard-Region-to-ebs-volume','volume','aws','VolumeWithNonStandardRegion','{\"assetGroup\":\"aws\",\"policyId\":\"NonStandardRegionRule_version-1_version-1_VolumeWithNonStandardRegion_volume\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_volume_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"volume\",\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-non-standard-region-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"key\":\"standardRegions\",\"value\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Standard regions for the rule\",\"defaultVal\":\"us-west-2,us-east-1,us-east-2,us-west-1\",\"displayName\":\"Standard regions\"}],\"autofix\":false,\"alexaKeyword\":\"VolumeWithNonStandardRegion\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_volume_should_not_be_there_in_non_standard_region','low','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-30','2018-10-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('RDSDBEnableAutoMinorVersionUpgrade_version-1_EnableAutoMinorVersionUpgrade_rdsdb','aws_rds_db_enable_auto_minor_version_upgrade','RDS Auto Minor Version UpgradeRDS Auto Minor Version Upgrade should be enabled','Enable RDS Auto Minor Version Upgrade','Enabling RDS Auto Minor Version Upgrade is important for maintaining security, improving performance, simplifying maintenance, ensuring compliance, maintaining high availability, and reducing technical debt. By automating the update process, you ensure your database instances are regularly patched with the latest security updates and performance enhancements, while minimizing administrative overhead and downtime.','If the DB instances have not enabled the flag for auto minor version upgrade.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-rds-auto-minor-version-upgrade','rdsdb','aws','RDSDBEnableAutoMinorVersionUpgrade','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-rds-auto-minor-version-upgrade\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"RDSDBEnableAutoMinorVersionUpgrade_version-1_EnableAutoMinorVersionUpgrade_rdsdb\",\"autofix\":false,\"alexaKeyword\":\"RDSDBEnableAutoMinorVersionUpgrade\",\"policyRestUrl\":\"\",\"targetType\":\"rdsdb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_rds_db_enable_auto_minor_version_upgrade\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_rds_db_enable_auto_minor_version_upgrade','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-09-23','2022-09-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('RdsSnapshotWithPublicAccess_version-1_RdsSnapshotWithPublicAccess_rdssnapshot','aws_rdssnapshot_should_not_be_there_in_non_standard_region','RdsSnapshotWithPublicAccess','Deny Public Access to RDS Snapshot','To ensure data security, denying public access to RDS snapshots is essential since they can contain sensitive information, such as database usernames, passwords, and data. Allowing public access could lead to data breaches, theft, or misuse, making controlling access to RDS snapshots necessary. Doing so reduces the risk of unauthorized access or data exposure, thus ensuring the data remains secure. It is crucial to grant access only to those who need it and follow the principle of least privilege while monitoring security measures.','Make the snapshot private','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-to-rds-snapshots','rdssnapshot','aws','RdsSnapshotWithPublicAccess','{\"assetGroup\":\"aws\",\"policyId\":\"RdsSnapshotWithPublicAccess_version-1_RdsSnapshotWithPublicAccess_rdssnapshot\",\"policyRestUrl\":\"\",\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyUUID\":\"aws_rdssnapshot_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"rdssnapshot\",\"params\":[{\"encrypt\":\"false\",\"value\":\"check-for-rds-snapshot-with-public-access\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"defaultVal\":\"rSs93HQwa1\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Check Id\",\"description\":\"Check Id Keyword\",\"value\":\"rSs93HQwa1\",\"key\":\"checkId\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_checks/checks_resources/_search\",\"key\":\"esServiceURL\"}],\"autofix\":false,\"alexaKeyword\":\"RdsSnapshotWithPublicAccess\"}','0 0/23 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_rdssnapshot_should_not_be_there_in_non_standard_region','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-08-31','2018-12-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','aws_redshift_should_not_be_publicly_accessible','RedShiftPublicAccess','Deny Public Access to Redshift Attached Security Group','Amazon Redshift clusters can be accessed through different methods, including the internet, EC2 Instances outside the VPC through VPN, bastion hosts in the public subnet, or the Publicly Accessible option. The Publicly Accessible option allows Redshift clusters to be fully accessible outside the VPC while disabling it can prevent external access. Allowing public access to Redshift clusters can increase the risk of malicious activities such as SQL injections or DDoS attacks, so evaluating the security implications and implementing security measures like network security and encryption methods is essential.','Make the snapshot private','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Deny-Public-Access-to-Redshift-Attached-Security-Group','redshift','aws','RedShift','{\"assetGroup\":\"aws\",\"policyId\":\"RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift\",\"policyRestUrl\":\"\",\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyUUID\":\"aws_redshift_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"redshift\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-redshift-public-access\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws/redshift_secgroups/_search\",\"key\":\"esRedshiftSgURL\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_routetable/routetable_associations/_search\",\"key\":\"esRoutetableAssociationsURL\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_routetable/routetable_routes/_search\",\"key\":\"esRoutetableRoutesURL\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_routetable/routetable/_search\",\"key\":\"esRoutetableURL\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_sg/sg_rules/_search\",\"key\":\"esSgRulesUrl\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"::/0\",\"key\":\"cidripv6\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"igw\",\"key\":\"internetGateWay\"},{\"isValueNew\":true,\"defaultVal\":\"192.168.0.0/16\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Default cidr IP\",\"description\":\"Any instance found with default route 0.0.0.0, then it will be replaced with given cird block during the time of autofix\",\"value\":\"192.168.0.0/16\",\"key\":\"defaultCidrIp\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"publicly-accessible-redshift\",\"key\":\"fixKey\"}],\"autofix\":false,\"alexaKeyword\":\"RedShift\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_redshift_should_not_be_publicly_accessible','critical','security','true','false','',24,2,'commonTemplate','Resource Id,Account Id,Region,Attached Sg,Detached Sg',NULL,'PaladinCloud autofix - Redshift detected with public access','PaladinCloud - Redshift with public access restored back','The access to this Redshift will be automatically fixed by PaladinCloud after {days} days if no exception is granted.','PaladinCloud has now automatically revoked the public access of this Redshift created by you as it was a violation of','Redshift <b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) created by you is open to internet',24,'ASGC','2017-10-09','2018-12-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('RemoveRootUserAccessKey_version-1_RemoveRootUserAccessKey_account','aws_remove_root_user_account_access_key','Remove access keys associated with the root user','Remove Root User Account Access Key','Removing the root user account access key in AWS is essential for security, following the principle of least privilege, separation of duties, auditing, monitoring, and compliance. Using IAM users and roles helps mitigate the risk of unauthorized access, human error, and insider threats while simplifying access management and meeting regulatory requirements.','Delete Account access keys for Root user','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#remove-root-user-account-access-key','account','aws','RemoveRootUserAccessKey','{\"params\":[{\"key\":\"policyKey\",\"value\":\"remove-root-user-account-access-key\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"RemoveRootUserAccessKey_version-1_RemoveRootUserAccessKey_account\",\"autofix\":false,\"alexaKeyword\":\"RemoveRootUserAccessKey\",\"policyRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_remove_root_user_account_access_key\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_remove_root_user_account_access_key','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Remove_custom_owner_roles','Remove_custom_owner_roles','Remove custom Owner roles','Remove Custom Owner Roles','Removing custom owner roles can be beneficial in simplifying access control, enhancing security, ensuring compliance, promoting standardization, reducing redundancy, and aligning with changing organizational needs. However, it\'s crucial to carefully evaluate the potential impact and consult with stakeholders before making changes to avoid unintended consequences.','remove the custom subscription owner roles','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#remove-custom-owner-roles','subscription','azure','Remove_custom_owner_roles','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-custom-owner-roles\",\"key\":\"policyKey\"},{\"key\":\"failure\",\"value\":\" if there are custom subscription owner roles available in your Azure account\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\" if there are no custom subscription owner roles available in your Azure account\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Remove custom Owner roles\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Remove_custom_owner_roles\",\"autofix\":false,\"alexaKeyword\":\"Remove_custom_owner_roles\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Remove_custom_owner_roles\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Remove_custom_owner_roles','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-12','2022-11-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Remove_user_options_for_SQLServer','Remove_user_options_for_SQLServer','Remove user options database flag','Remove User Options Database Flag for Cloud SQL SERVER Instance','Removing the user options database flag for Cloud SQL SERVER instance can improve security by preventing unauthorized changes, improve stability by avoiding changes that can cause issues, help with compliance by ensuring all options and settings are monitored by the database administrator, and promote standardization of the database environment.','1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting  https://console.cloud.google.com/sql/instances. \n2. Select the SQL server instance where the database flag needs to be enabled. \n3. Click Edit . \n4. Scroll down to the Flags section. \n5. Delete user options flag from database flags section \n6. Click Save . \n7. Confirm the changes under Flags on the Overview page.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#remove-user-options-database-flag-for-cloud-sql-server-instance','cloudsql_sqlserver','gcp','sqlserver','{\"params\":[{\"encrypt\":false,\"value\":\"disable-enable-database-flags-for-cloudsql-server\",\"key\":\"policyKey\"},{\"key\":\"dataBaseType\",\"value\":\"gcp_cloudsql_sqlserver\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagName\",\"value\":\"user options\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"dbFlagValue\",\"value\":\"NULL\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Remove user options database flag for Cloud SQL SERVER instance\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"description\",\"value\":\"In order to avoid defining global defaults for all database users, delete user options database flag\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"user options flag is enabled for your Google Cloud SQL Server database instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Remove_user_options_for_SQLServer\",\"autofix\":false,\"alexaKeyword\":\"sqlserver\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql_sqlserver\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Remove_user_options_for_SQLServer\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Remove_user_options_for_SQLServer','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-16','2022-10-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Rotate_Google_Cloud_API_Keys','Rotate_Google_Cloud_API_Keys','Rotate Google Cloud API Keys','Rotate Google Cloud API Keys','Rotating Google Cloud API keys can improve security by reducing the risk of unauthorized access or data breaches, meeting compliance requirements, following best practices in security, and providing better control over access to resources.',NULL,'https://github.com/PaladinCloud/CE/wiki/GCP-Policy#rotate-google-cloud-api-keys','apikeys','gcp','Rotate_Google_Cloud_API_Keys','{\"params\":[{\"encrypt\":false,\"value\":\"rotate-API-Keys\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Rotate_Google_Cloud_API_Keys\",\"autofix\":false,\"alexaKeyword\":\"Rotate_Google_Cloud_API_Keys\",\"policyRestUrl\":\"\",\"targetType\":\"apikeys\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Rotate_Google_Cloud_API_Keys\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Rotate_Google_Cloud_API_Keys','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-29','2022-11-29','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('S3AccessLogsRule_version-1_S3AccessLogsRule_s3','aws_s3_accesslogs','S3AccessLogsRule','Enable Private S3 Buckets with Access Logs','To track access requests for security and access auditability, enable Amazon S3\'s Server Access Logging feature for your S3 buckets. This feature creates detailed records of request type, resources, and processing date/time, which can provide valuable data for security, compliance audits, user behavior analysis, and S3 billing insights. Note that the feature is not enabled by default.','Protected S3 buckets should be server access logs enabled','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Enable-Private-S3-Buckets-with-Access-Logs','s3','aws','S3AccessLogsRule','{\"assetGroup\":\"aws\",\"policyId\":\"S3AccessLogsRule_version-1_S3AccessLogsRule_s3\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_s3_accesslogs\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"s3\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-s3-access-logs\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"/aws_s3/issue_s3/_search\",\"key\":\"esS3PubAccessIssueUrl\"},{\"encrypt\":false,\"value\":\"S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3\",\"key\":\"s3PublicAccessRuleId\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"isValueNew\":true,\"defaultVal\":\"\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Access log enabled regions\",\"description\":\"Access log enabled regions for s3\",\"value\":\"\",\"key\":\"accessLogsEnabledRegions\",\"isMandatory\":true},{\"isValueNew\":true,\"defaultVal\":\"paladin-s3-accesslog-ACCOUNT_ID-REGION-dev\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Destination bucket for autofix\",\"description\":\"Destination bucket name for auto fix\",\"value\":\"paladin-s3-accesslog-ACCOUNT_ID-REGION-dev\",\"key\":\"destinationBucketForAutofix\",\"isMandatory\":true},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"autofix\":false,\"alexaKeyword\":\"S3AccessLogsRule\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_s3_accesslogs','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-08-05','2019-08-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('S3BucketAllowHTTPRequest_version-1_S3BucketAllowHTTPRequest_s3','aws_s3_bucket_should_not_allow_http_requests','S3 bucket policy to deny HTTP requests','Deny HTTP Requests to S3 Bucket','Denying HTTP requests to S3 buckets is crucial for enhancing security, data privacy, compliance, and data integrity while promoting industry best practices. By using encrypted protocols like HTTPS instead of HTTP, you protect data during transmission, ensure regulatory compliance, and maintain data integrity.','Create a bucket policy that explicitly denies access when SecureTransport:false','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-http-requests-to-s3-bucket','s3','aws','S3BucketAllowHTTPRequest','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-s3-bucket-policy-denies-http\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"S3BucketAllowHTTPRequest_version-1_S3BucketAllowHTTPRequest_s3\",\"autofix\":false,\"alexaKeyword\":\"S3BucketAllowHTTPRequest\",\"policyRestUrl\":\"\",\"targetType\":\"s3\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_s3_bucket_should_not_allow_http_requests\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_s3_bucket_should_not_allow_http_requests','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-09-21','2022-09-21','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('S3BucketEncryption_version-1_S3BucketWithoutEncryption_s3','aws_s3_bucket_should_be_encrypted','All S3 buckets should employ encryption-at-rest','Encrypt S3 Buckets at Rest','Enable encryption at rest for Amazon S3 buckets to protect sensitive content using AWS S3-managed or KMS-managed keys. Implement encryption at both the bucket and object levels to defend against unauthorized access and ensure secure data storage and retrieval.','Enable encryption for S3 buckets','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-s3-buckets-at-rest','s3','aws','S3BucketWithoutEncryption','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-s3-bucket-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"S3BucketEncryption_version-1_S3BucketWithoutEncryption_s3\",\"autofix\":false,\"alexaKeyword\":\"S3BucketWithoutEncryption\",\"policyRestUrl\":\"\",\"targetType\":\"s3\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_s3_bucket_should_be_encrypted\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_s3_bucket_should_be_encrypted','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-09-16','2022-09-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','aws_s3_should_not_be_publicly_accessible','S3BucketShouldnotpubliclyaccessble','Deny Public Access to Non-Allow Listed S3 Buckets','To protect against malicious public data exposure, ensure that public access is not enabled for your S3 buckets. By default, S3 buckets and objects are created without public access, but an IAM principal with sufficient S3 permissions can grant public access at either the bucket or object level. ','S3 buckets should be protected by using the bucket ACL and bucket policies,If you want to share data via S3 buckets to other users,you could create pre-signed URLs which will be valid only for short duration.For all automation related work use the bucket policy and grant access to the required roles.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Deny-Public-Access-to-Non-allow-Listed-S3-Buckets','s3','aws','s3GlobalAccess','{\"assetGroup\":\"aws\",\"policyId\":\"S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_s3_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"s3\",\"params\":[{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"/aws_checks/checks_resources/_search\",\"key\":\"esServiceURL\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"apiGWURL\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"check-for-s3-global-access\",\"key\":\"policyKey\"},{\"isValueNew\":true,\"defaultVal\":\"Pfx0RwqBli\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Check Id\",\"description\":\"Check Id Keyword\",\"value\":\"Pfx0RwqBli\",\"key\":\"checkId\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"s3-global-access-fix\",\"key\":\"fixKey\"}],\"autofix\":false,\"alexaKeyword\":\"s3GlobalAccess\"}','0 0/2 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_s3_should_not_be_publicly_accessible','critical','security','true','false','',24,2,'commonTemplate','',NULL,'PaladinCloud autofix - S3 bucket detected with anonymous access','PaladinCloud - S3 bucket policy with anonymous read/write access restored back','The permissions for this S3 bucket will be automatically fixed by PaladinCloud after {days} days if no exception is granted.','PaladinCloud has now automatically revoked the public permissions of s3 bucket (<b>${RESOURCE_ID}</b>) created by you as it was a violation of','a S3 bucket  (<b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) created by you is open to internet for anonymous access',24,'ASGC','2018-10-09','2018-12-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('S3HostsWebsiteRule_version-1_S3HostsWebsiteRule_s3','s3_should_not_have_host_website_or_redirect_req','S3HostsWebsiteRule','Deny Hosting Website or Redirecting Requests for S3 Bucket','Denying hosting websites or redirecting requests for S3 buckets enhances security, prevents data leakage, ensures access control, maintains compliance, and simplifies resource management. This practice safeguards sensitive data, adheres to regulatory requirements, and promotes efficient infrastructure management.','','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Deny-Hosting-Website-or-Redirecting-Requests-for-S3-Bucket','s3','aws','S3HostsWebsiteRule','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-s3-hosting-website\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"S3HostsWebsiteRule_version-1_S3HostsWebsiteRule_s3\",\"autofix\":false,\"alexaKeyword\":\"S3HostsWebsiteRule\",\"policyRestUrl\":\"\",\"targetType\":\"s3\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"s3_should_not_have_host_website_or_redirect_req\",\"policyType\":\"ManagePolicy\"}','0 0/2 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/s3_should_not_have_host_website_or_redirect_req','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-06-10','2019-06-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('S3MFADeleteEnabled_version-1_MFADeleteEnabled_s3','s3_mfa_delete_enabled','MFA delete should be enabled on S3 bucket','Enable MFA Delete on S3 Bucket','Enabling MFA (Multi-Factor Authentication) Delete on S3 bucket can enhance security by adding an extra layer of authentication, ensure compliance with regulations such as PCI DSS, protect against data loss, and provide control over the deletion process.','Enable MFA Delete on S3 Bucket','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-mfa-delete-on-s3-bucket','s3','aws','S3MFADeleteEnabled','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-s3-MFA-delete-enabled\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"S3MFADeleteEnabled_version-1_MFADeleteEnabled_s3\",\"autofix\":false,\"alexaKeyword\":\"S3MFADeleteEnabled\",\"policyRestUrl\":\"\",\"targetType\":\"s3\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"s3_mfa_delete_enabled\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/s3_mfa_delete_enabled','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('S3ObjectLevelReadLogging_version-1_ObjectLevelReadLogging_s3','aws_s3_object_level_read_logging','S3 object level read operations should be logged','Enable S3 Bucket Object-Level Logging for Read Events','Enabling S3 bucket object-level logging for read events is also important for security, compliance, and forensic analysis. Logging read events for S3 objects allows you to track access to your data, detect unauthorized access or suspicious activity, and investigate potential security incidents. It can also help you meet regulatory requirements and support forensic analysis in the event of a security breach.','Configure Object-level logging for S3 bucket read events','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Enable-S3-Bucket-Object-Level-Logging-for-Read-Events','s3','aws','S3ObjectLevelReadLogging','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-s3-object-level-read-logging-rule\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"S3ObjectLevelReadLogging_version-1_ObjectLevelReadLogging_s3\",\"autofix\":false,\"alexaKeyword\":\"S3ObjectLevelReadLogging\",\"policyRestUrl\":\"\",\"targetType\":\"s3\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_s3_object_level_read_logging\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_s3_object_level_read_logging','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-02','2022-11-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('S3ObjectLevelWriteLogging_version-1_ObjectLevelWriteLogging_s3','aws_s3_object_level_write_logging','S3 object level write operations should be logged','Enable S3 Bucket Object-Level Logging for Write Events','Enabling S3 bucket object-level logging for write events is important for security, data integrity, compliance, forensic analysis, and following best practices. It helps you track changes to your data, detect potential security threats, ensure data authenticity, meet regulatory requirements, and follow recommended security practices.','Configure Object-level logging for S3 bucket write events','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Enable-S3-Bucket-Object-Level-Logging-for-Write-Events','s3','aws','S3ObjectLevelWriteLogging','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-s3-object-level-write-logging-rule\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"S3ObjectLevelWriteLogging_version-1_ObjectLevelWriteLogging_s3\",\"autofix\":false,\"alexaKeyword\":\"S3ObjectLevelWriteLogging\",\"policyRestUrl\":\"\",\"targetType\":\"s3\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_s3_object_level_write_logging\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_s3_object_level_write_logging','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-11-02','2022-11-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg','aws_sg_should_not_have_anywhere_access_with_anyport','SgWithAnywhereAccess','Deny Public Access to any Port','To protect against attackers who use brute force methods to gain access to Amazon EC2 instances, it is important to ensure that the associated security groups do not allow unrestricted access (i.e., 0.0.0.0/0 or::/0) on uncommon ports. Uncommon ports are any TCP/UDP ports not included in the commonly used service ports such as HTTP, HTTPS, FTP, SSH, Telnet, DNS, RDP, SMTP, MySQL, PostgreSQL, Oracle Database, SQL Server, RPC, and SMB/CIFS. Allowing unrestricted inbound access to EC2 instances on uncommon ports can increase the risk of malicious activities such as hacking, data capture, and Denial-of-Service attacks.','Edit the security groups and allow only specific IP ranges and ports','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Restrict-Inbound-Rules-Allowing-0.0.0.0/0-for-Any-Port','sg','aws','SgWithAnywhereAccess','{\"params\":[{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"workerThreadCount\",\"value\":\"50\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"portToCheck\",\"value\":\"ANY\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyKey\",\"value\":\"check-for-security-group-global-access\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"cidripv6\",\"value\":\"::/0\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyId\":\"SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg\",\"autofix\":false,\"alexaKeyword\":\"SgWithAnywhereAccess\",\"policyRestUrl\":\"\",\"targetType\":\"sg\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_sg_should_not_have_anywhere_access_with_anyport\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_sg_should_not_have_anywhere_access_with_anyport','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-08-11','2018-11-08','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('SGWithAnywhereAccess_version-1_SgWithSshPort22OpenToInternetAccess_sg','aws_sg_should_not_have_public_access_with_port22','SgWithSshPort22OpenToInternetAccess','Restrict Internet access to Security Group with SSH Port 22','Restricting internet access to the Security Group with SSH Port 22 enhances security by minimizing potential entry points for unauthorized users, controlling access, reducing the risk of brute force attacks, improving auditing and monitoring, and ensuring compliance with security policies.','Edit the security groups and allow only specific IP ranges and ports','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-security-group-public-access-to-ssh-port-22','sg','aws','SgWithSshPort22OpenToInternetAccess','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-security-group-global-access\",\"encrypt\":false},{\"key\":\"severity\",\"value\":\"high\",\"encrypt\":false},{\"key\":\"policyCategory\",\"value\":\"security\",\"encrypt\":false},{\"key\":\"cidrIp\",\"value\":\"0.0.0.0/0\",\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"encrypt\":false},{\"key\":\"portToCheck\",\"value\":\"22\",\"encrypt\":false},{\"key\":\"cidripv6\",\"value\":\"::/0\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[],\"policyId\":\"SGWithAnywhereAccess_version-1_SgWithSshPort22OpenToInternetAccess_sg\",\"autofix\":false,\"alexaKeyword\":\"SgWithSshPort22OpenToInternetAccess\",\"policyRestUrl\":\"\",\"targetType\":\"sg\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_sg_should_not_have_public_access_with_port22\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_sg_should_not_have_public_access_with_port22','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-10-01','2018-11-02','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_memcached_port_11211_open_to_internet_access','aws_sg_should_not_have_public_access_to_memcached_port_11211','Sg_with_memcached_port_11211_open_to_internet_access','Deny Security Group Public Access on Memcached Port 11211','Memcached is an open-source, high-performance, distributed memory object caching system that helps optimize dynamic websites and web applications by reducing database load.\n\nAllowing unrestricted inbound access on TCP and/or UDP port 11211 (Memcached) to your Amazon EC2 instances can increase the risk of malicious activities such as DDoS amplification attacks, which can significantly impact the health and stability of your web services and applications.\n\nTo protect the Memcached cache server instances associated with your EC2 security groups and reduce the attack surface, check your Amazon EC2 security groups for inbound rules that allow unrestricted access (i.e., 0.0.0.0/0 or::/0) on TCP and/or UDP port 11211.','Edit the security groups and allow only specific IP ranges and ports','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-security-group-public-access-on-memcached-port-11211','sg','aws','Sg_with_memcached_port_11211_open_to_internet_access','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-security-group-global-access\",\"encrypt\":false},{\"key\":\"cidrIp\",\"value\":\"0.0.0.0/0\",\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"encrypt\":false},{\"key\":\"portToCheck\",\"value\":\"11211\",\"encrypt\":false},{\"key\":\"cidripv6\",\"value\":\"::/0\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"SGWithAnywhereAccess_version-1_Sg_with_memcached_port_11211_open_to_internet_access\",\"autofix\":false,\"alexaKeyword\":\"Sg_with_memcached_port_11211_open_to_internet_access\",\"policyRestUrl\":\"\",\"targetType\":\"sg\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_sg_should_not_have_public_access_to_memcached_port_11211\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_sg_should_not_have_public_access_to_memcached_port_11211','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-19','2022-05-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_redis_port_6379_open_to_internet_access','aws_sg_should_not_have_public_access_to_redis_port_6379','Sg_with_redis_port_6379_open_to_internet_access','Deny Security Group Public Access on Redis port 6379','Redis is an open-source, in-memory data structure store commonly used as a database, cache server, and message broker. To prevent malicious activities such as cross-site scripting, remote code execution, and crypto-jacking attacks, it is important to restrict inbound access to TCP port 6379 (Redis) on your Amazon EC2 instances.\n\nThe security groups associated with your Redis cache server instances should be configured to limit communication to only those hosts or networks that require legitimate access. It is crucial to check your Amazon EC2 security groups for inbound rules that allow unrestricted access (i.e., 0.0.0.0/0 or::/0) on TCP port 6379 to minimize the risk of security breaches','Edit the security groups and allow only specific IP ranges and ports','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-security-group-public-access-on-redis-port-6379','sg','aws','Sg_with_redis_port_6379_open_to_internet_access','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-security-group-global-access\",\"encrypt\":false},{\"key\":\"cidrIp\",\"value\":\"0.0.0.0/0\",\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"encrypt\":false},{\"key\":\"portToCheck\",\"value\":\"6379\",\"encrypt\":false},{\"key\":\"cidripv6\",\"value\":\"::/0\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"SGWithAnywhereAccess_version-1_Sg_with_redis_port_6379_open_to_internet_access\",\"autofix\":false,\"alexaKeyword\":\"Sg_with_redis_port_6379_open_to_internet_access\",\"policyRestUrl\":\"\",\"targetType\":\"sg\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_sg_should_not_have_public_access_to_redis_port_6379\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_sg_should_not_have_public_access_to_redis_port_6379','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-12','2022-05-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('SQL_Auditing_Retention_version-1_SAR_sqlserver','azure_SAR_sqlserver','SAR','Set SQL Audit Retention Duration','Setting SQL Audit Retention Duration is essential for maintaining compliance with industry regulations, optimizing storage management, enhancing data security, simplifying data analysis, and ensuring consistency with overall data retention policies.','Audit SQL servers configured with an auditing retention period of less than 90 days','https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#set-sql-audit-retention-duration','sqlserver','azure','SAR','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"89099bee-89e0-4b26-a5f4-165451757743\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"SQL_Auditing_Retention_version-1_SAR_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"SAR\",\"policyRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_SAR_sqlserver\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_SAR_sqlserver','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-30','2019-11-07','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('SQL_TDE_Encryption_version-1_TPS_sqlserver','azure_TPS_sqlserver','TPS','Check Encryption for SQL TDE Protector','Checking the encryption for SQL TDE Protector is important to ensure the security and integrity of sensitive data stored in a Microsoft SQL Server database. It helps identify vulnerabilities or weaknesses in the security measures and ensures compliance with data protection regulations.','Transparent Data Encryption (TDE) with your own key support provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#check-encryption-for-sql-tde-protector','sqlserver','azure','TPS','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"0d134df8-db83-46fb-ad72-fe0c9428c8dd\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"SQL_TDE_Encryption_version-1_TPS_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"TPS\",\"policyRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_TPS_sqlserver\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_TPS_sqlserver','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-30','2019-11-07','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('SQL_Vulnerability_Assessment_version-1_SVA_sqlserver','azure_SVA_sqlserver','SVA','Enable Vulnerability Assessment on SQL Servers','Enabling Vulnerability Assessment on SQL Servers is important to identify and address potential security vulnerabilities in the database environment, prevent security breaches and data loss, ensure compliance with data protection regulations, and establish a culture of security awareness and best practices for database security.','Audit Azure SQL servers which do not have recurring vulnerability assessment scans enabled. Vulnerability assessment can discover, track, and help you remediate potential database vulnerabilities','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-vulnerability-assessment-on-sql-servers','sqlserver','azure','SVA','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"ef2a8f2a-b3d9-49cd-a8a8-9a3aaaf647d9\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"SQL_Vulnerability_Assessment_version-1_SVA_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"SVA\",\"policyRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_SVA_sqlserver\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_SVA_sqlserver','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-30','2019-11-07','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('SQS_Public_Access_Rule_version-1_SQS_Public_access_rule_sqs','aws_sqs_should_not_have_public_access','SQS_Public_access_rule','Deny Public access to Non-Allow listed SQS Resources','AWS SQS is a cloud-based queue service that enables the integration of distributed software systems and components. It offers a web services API that is compatible with any programming language that is supported by AWS SDK.\n\nWhen SQS queues are public, they can expose existing interfaces to unwanted third parties, potentially leading to data leaks.\n\nTo ensure security, SQS policies must restrict access to the queues. In line with the security principle of least privilege, an SQS policy should grant access only to essential principals.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-to-non-allow-listed-sqs-resources','sqs','aws','sqs public access','{\"params\":[{\"key\":\"severity\",\"value\":\"critical\",\"encrypt\":false},{\"key\":\"policyCategory\",\"value\":\"security\",\"encrypt\":false},{\"key\":\"policyKey\",\"value\":\"check-for-sqs-public-access\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"threadsafe\",\"value\":\"true\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[],\"policyId\":\"SQS_Public_Access_Rule_version-1_SQS_Public_access_rule_sqs\",\"autofix\":false,\"alexaKeyword\":\"sqs public access\",\"policyRestUrl\":\"\",\"targetType\":\"sqs\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_sqs_should_not_have_public_access\",\"policyType\":\"ManagePolicy\"}','0 0/2 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_sqs_should_not_have_public_access','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-11-10','2018-11-14','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Secure_SSL_Cipher_Suites','Secure_SSL_Cipher_Suites','Secure SSL Cipher Suites','Secure SSL Cipher Suites','Securing SSL cipher suites can improve security by providing stronger encryption algorithms and key exchange protocols, meet compliance requirements, improve reputation, and ensure compatibility with modern browsers and operating systems.','1. Navigate to Cloud Load Balancing dashboard at https://console.cloud.google.com/net-services/loadbalancing. \n2. On the Load balancing page, select Load balancers to access the list with the Google Cloud load balancers created for the selected project \n3. Click on the 3-dot button to access the options menu, then select Edit \n4. On the Edit HTTP(S) load balancer page, select the Frontend configuration tab, and click on the frontend configuration listed on the right panel.\n5. On the frontend configuration panel, select Create policy from the SSL policy dropdown list to initiate the setup process.\n6. Click Create to create the new, secure SSL policy.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Secure-SSL-Cipher-Suites','gcploadbalancer','gcp','Secure_SSL_Cipher_Suites','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-Insecure-SSL-Cipher-Suites\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Secure_SSL_Cipher_Suites\",\"autofix\":false,\"alexaKeyword\":\"Secure_SSL_Cipher_Suites\",\"policyRestUrl\":\"\",\"targetType\":\"gcploadbalancer\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"Secure_SSL_Cipher_Suites\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Secure_SSL_Cipher_Suites','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-12-08','2022-12-08','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Send_Scan_Reports_Should_Be_Configured','Send_Scan_Reports_Should_Be_Configured','Email should be configured for SQL defender','\nConfigure \'Send Scan Report to\' within Vulnerability Assessment under SQL Server','Configuring the \"Send Scan Report to\"\" option within SQL Server\'s Vulnerability Assessment is important for timely notifications, accountability, centralized documentation, compliance, improved collaboration, and monitoring remediation progress. It helps ensure potential security risks are addressed proactively and promotes a robust security posture within the organization.\"','1.Go to SQL servers \n2.Select a server instance \n3.Click on Security Center \n4.Ensure that Azure Defender for SQL is set to Enabled \n5.Select Configure next to Enabled at subscription-level \n6.In Section Vulnerability Assessment Settings , configure Storage Accounts if not already \n7. Configure email ids for concerned data owners/stakeholders at Send scan reports to \n8. Click Save','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Ensure-that-Vulnerability-Assessment-setting-Send-scan-reports-to-is-configured-for-a-SQL-server','sqlserver','azure','SendScanReportsSQLServer','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-send-scan-reports-is-configured\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Send_Scan_Reports_Should_Be_Configured\",\"autofix\":false,\"alexaKeyword\":\"SendScanReportsSQLServer\",\"policyRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Send_Scan_Reports_Should_Be_Configured\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Send_Scan_Reports_Should_Be_Configured','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-19','2022-10-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Sensitive_Data_SQL_version-1_SDS_sqldatabase','azure_SDS_sqldatabase','SDS','Classify Sensitive Data in SQL Database','Classifying sensitive data in SQL databases is important to identify and manage access to sensitive data, define appropriate security controls, comply with regulatory requirements, and manage data storage and retention effectively.','Sensitive data in your SQL databases should be classified','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#classify-sensitive-data-in-sql-database','sqldatabase','azure','SDS','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"cc9835f2-9f6b-4cc8-ab4a-f8ef615eb349\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Sensitive_Data_SQL_version-1_SDS_sqldatabase\",\"autofix\":false,\"alexaKeyword\":\"SDS\",\"policyRestUrl\":\"\",\"targetType\":\"sqldatabase\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_SDS_sqldatabase\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_SDS_sqldatabase','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-26','2019-11-07','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('ServiceAccountPrivilegesRule_version-1_UnapprovedServiceAccountAccess_iamuser','aws_iamuser_service-acc-shouldnothave_unauth_privileges','UnapprovedServiceAccountAccess','Deny Listed Privileges to Service Account','Denying listed privileges to a service account in AWS is crucial for securing your AWS resources from unauthorized access or misuse. It helps minimize the risk of unauthorized access, ensures compliance with security standards, prevents accidental changes, and limits the impact of a security breach. \n\nBy denying privileges to service accounts, you can reduce the risk of damage to your resources caused by compromised accounts, comply with regulatory frameworks and avoid penalties, and prevent unauthorized actions that could lead to accidental changes or disruptions to your environment. ','Remove write permissions from service accounts.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Deny-Listed-Privileges-to-Service-Account','iamuser','aws','UnapprovedServiceAccountAccess','{\"params\":[{\"key\":\"policyKey\",\"value\":\"iam-serviceaccount-privileges-rule\",\"encrypt\":false},{\"key\":\"splitterChar\",\"value\":\",\",\"encrypt\":false},{\"key\":\"roleIdentifyingString\",\"value\":\"role/paladincloud_ro\",\"encrypt\":false},{\"key\":\"unApprovedIamActions\",\"value\":\"ec2:TerminateInstances,ec2:RunInstances,s3:DeleteBucket,s3:PutBucketPolicy,ec2:ModifyInstanceAttribute,s3:DeleteObject,ec2:*,*,s3:*,s3:Put*,cloudtrail:*,cloudtrail:DeleteTrail,config:*,config:DeleteConfigRule\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"IAM roles should not have these permissions\",\"defaultVal\":\"ec2:TerminateInstances,ec2:RunInstances,s3:DeleteBucket,s3:PutBucketPolicy,ec2:ModifyInstanceAttribute,s3:DeleteObject,ec2:*,*,s3:*,s3:Put*,cloudtrail:*,cloudtrail:DeleteTrail,config:*,config:DeleteConfigRule\",\"displayName\":\"Unapproved IAM actions\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"ServiceAccountPrivilegesRule_version-1_UnapprovedServiceAccountAccess_iamuser\",\"autofix\":false,\"alexaKeyword\":\"UnapprovedServiceAccountAccess\",\"policyRestUrl\":\"\",\"targetType\":\"iamuser\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_iamuser_service-acc-shouldnothave_unauth_privileges\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_iamuser_service-acc-shouldnothave_unauth_privileges','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'asgc','2019-04-26','2019-04-26','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('ServiceLimitRule_version-1_ServiceLimitRule_account','aws_account_service_limit_rule','ServiceLimitRule','Increase AWS Service Limits to Meet Growing Needs','Increasing AWS service limits is crucial for ensuring scalability, performance optimization, cost optimization, innovation, and future-proofing your AWS infrastructure. It helps accommodate more users, resources, and workloads, reduce bottlenecks, optimize costs, explore new use cases, and prepare for future growth and expansion. Increasing AWS service limits is a recommended best practice for managing your AWS environment and meeting growing needs and demands.','Open a case with AWS and increase the service limits','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Increase-AWS-Service-Limits-to-Meet-Growing-Needs','account','aws','ServiceLimitRule','{\"assetGroup\":\"aws\",\"policyId\":\"ServiceLimitRule_version-1_ServiceLimitRule_account\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_account_service_limit_rule\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"account\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-service-limit\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"true\",\"key\":\"threadsafe\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"isValueNew\":true,\"defaultVal\":\"eW7HH0l7J9\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Check Id\",\"description\":\"Check Id Keyword\",\"value\":\"eW7HH0l7J9\",\"key\":\"checkId\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_checks/checks_resources/_search\",\"key\":\"esServiceURL\"}],\"autofix\":false,\"alexaKeyword\":\"ServiceLimitRule\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_service_limit_rule','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-10-17','2018-09-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Set_Retention_Days_Greater_Than_Ninety','Set_Retention_Days_Greater_Than_Ninety','Retention days should be greater than 90','Set Retention Duration to \'Greater than 90 days\' for SQL Server','Setting the retention duration to greater than 90 days for SQL Server in Azure can benefit data recovery, compliance, auditing and reporting, troubleshooting, and disaster recovery. However, consider the potential increase in storage costs and management resources before determining the appropriate retention duration for your organization\'s needs.','1. Go to SQL servers\n2. For each server instance\n3. Click on Auditing\n4. If storage is selected, expand Advanced properties\n5. Set the Retention (days) setting greater than 90 days or 0 for unlimited retention.\n6. Select Save','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Set-Retention-days-greater-than-90-for-SQL-Server','sqlserver','azure','RetentionDaysGreaterThan90','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-retention-days-is-greater-than-ninety\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Set_Retention_Days_Greater_Than_Ninety\",\"autofix\":false,\"alexaKeyword\":\"RetentionDaysGreaterThan90\",\"policyRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Set_Retention_Days_Greater_Than_Ninety\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Set_Retention_Days_Greater_Than_Ninety','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-11-17','2022-11-17','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Set_all_users_to_owner_email_notifications','Set_all_users_to_owner_email_notifications','Set All MS Defender Email Notification options to \"Owner\"','Set all Users Option to Owner in email Notifications for MS Defender','Setting all users as owners in email notifications for Microsoft Defender in Azure is not recommended due to security risks and management challenges. Instead, follow best practices such as the principle of least privilege, role-based access control, targeted notifications, separation of duties, and regular monitoring and auditing to maintain a secure and efficient environment.',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#in-ms-defender-ensure-that-all-users-with-the-following-roles-is-set-to-owner','defender','azure','SetAllUsersOptionToOwnerInEmailNotificationsForMSDefender','{\"params\":[{\"encrypt\":false,\"value\":\"set-all-users-to-owner-email-notification\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"In MS defender email notifications for security alerts for a subscription, \'All users with the following roles\' should be set to \'Owner\'.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"In MS defender email notifications for security alerts for a subscription, \'All users with following rules\' is not set to owner\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Set all users option to owner in email notifications for MS defender\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Set_all_users_to_owner_email_notifications\",\"autofix\":false,\"alexaKeyword\":\"SetAllUsersOptionToOwnerInEmailNotificationsForMSDefender\",\"policyRestUrl\":\"\",\"targetType\":\"defender\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Set_all_users_to_owner_email_notifications\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Set_all_users_to_owner_email_notifications','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-04','2022-10-04','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Set_notify_alerts_severity_to_high','Set_notify_alerts_severity_to_high','Set the severity of the notification alerts in MS Defender to high','Set the severity of the notification alerts in MS Defender to high','Setting the severity of notification alerts in Microsoft Defender to \"high\"\" helps prioritize critical issues, allocate resources effectively, reduce alert fatigue, enable faster response times, and ensure compliance with regulations. However, it\'s crucial to maintain a comprehensive strategy for managing security alerts across all severity levels to maintain a robust security posture.\"',NULL,'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#in-ms-defender-ensure-that-notify-about-alerts-with-the-following-severity-is-set-to-high','defender','azure','Set_notify_alerts_severity_to_high','{\"params\":[{\"encrypt\":false,\"value\":\"set-notify-alerts-severity-to-high\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Set notify email alerts severity to high in MS defender.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"In MS defender email settings, notify alerts severity is set to high.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"In MS defender email settings, notify alerts severity is not set to high.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Set notify alerts severity to high in MS defender\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Set_notify_alerts_severity_to_high\",\"autofix\":false,\"alexaKeyword\":\"Set_notify_alerts_severity_to_high\",\"policyRestUrl\":\"\",\"targetType\":\"defender\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Set_notify_alerts_severity_to_high\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Set_notify_alerts_severity_to_high','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-10-18','2022-10-18','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Subnet_NSG_rule_version-1_SNR_subnets','azure_SNR_subnets','SNR','Assign Subnet to Network Security Group','Assigning a subnet to a Network Security Group (NSG) is important for managing network traffic flow in Azure Virtual Networks, protecting resources from unauthorized access and potential security threats, enabling centralized control and management of network security policies, and ensuring consistent security policies across all resources within the subnet.','Protect your subnet from potential threats by restricting access to it with a Network Security Group (NSG)','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-network-security-group-to-subnet','subnets','azure','SNR','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"e71308d3-144b-4262-b144-efdc3cc90517\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Subnet_NSG_rule_version-1_SNR_subnets\",\"autofix\":false,\"alexaKeyword\":\"SNR\",\"policyRestUrl\":\"\",\"targetType\":\"subnets\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_SNR_subnets\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_SNR_subnets','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-30','2019-11-07','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('System_Updates_version-1_SSU_virtualmachine','azure_SSU_virtualmachine','SSU','Install System Updates on Virtual Machines','Installing system updates on virtual machines is essential to ensure the security and stability of the virtual environment, reduce the risk of cyber-attacks and other security threats, and comply with regulatory requirements related to data protection. It helps fix vulnerabilities and software bugs that attackers can exploit and maintain the integrity and availability of the virtual environment.','System updates should be up to date','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#install-system-updates-on-virtual-machines','virtualmachine','azure','SSU','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"86b3d65f-7626-441e-b690-81a8b71cff60\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"System_Updates_version-1_SSU_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"SSU\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_SSU_virtualmachine\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_SSU_virtualmachine','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-26','2019-11-07','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TLS_Version_MySQL_Flexible_Server','TLS_Version_MySQL_Flexible_Server','latestTLSVersion','Ensure that MySQL Flexible Database Server has the Latest TLS Version','Ensuring that your MySQL Flexible Database Server has the latest TLS version is crucial for enhanced security, compliance with regulations, compatibility with other systems, improved performance, and maintaining trust and reputation. Regularly updating and monitoring TLS configurations helps maintain a secure environment and protects sensitive data.','For web app : \n 1.Go to Azure portal \n 2.Navigate to App Services blade at https://portal.azure.com/#blade/HubsExtension/BrowseResourceBlade/resourceType/Microsoft.Web%2Fsites. \n 3.Click on the name of the App Service web application that you want to examine. \n 4.In the navigation panel, under Settings, select TLS/SSL settings to access the Transport Layer Security (TLS)/Secure Sockets Layer (SSL) configuration settings available for the selected app. \n 5.On the TLS/SSL settings panel, under Protocol Settings, check the Minimum TLS Version configuration to determine the TLS version used by the application. If Minimum TLS Version setting value is not set to 1.2, the selected Microsoft Azure App Service web application is not configured to use the latest version of TLS protocol (i.e. TLS 1.2) to encrypt data in transit.\nFor mysql flexible server: \n 1. Go to azure portal \n 2. Search for MySQL flexible server \n 3. For each database , click on on Server parameters under Settings \n 4. Type tls_version in search box \n 5. Select value as TLSV1.2 \nFor storage account: \n 1.Go to Azure portal \n 2.Navigate to App Services blade at https://portal.azure.com/#blade/HubsExtension/BrowseResourceBlade/resourceType/Microsoft.Storage%2FStorageAccounts. \n 3.Click on the name of the Azure Storage accoun  that you want to examine. \n 4.In the navigation panel, under Settings, choose Configuration to access the selected storage account configuration settings. \n 5On the Configuration page, under Minimum TLS Version, select Version 1.2 to enable the latest version of the TLS protocol (TLS version 1.2) for the selected Microsoft Azure Storage account. Choose Save to apply the changes.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-latest-tls-version','mysqlflexible','azure','MysqlFlexibleTLS','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-tls-version-mysql-flexible-server\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"TLSV1.2\",\"key\":\"supportedTlsVersions\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Minimum TLS version needed\",\"defaultVal\":\"TLSV1.2\",\"displayName\":\"Supported TLS versions\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TLS_Version_MySQL_Flexible_Server\",\"autofix\":false,\"alexaKeyword\":\"MysqlFlexibleTLS\",\"policyRestUrl\":\"\",\"targetType\":\"mysqlflexible\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"TLS_Version_MySQL_Flexible_Server\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/TLS_Version_MySQL_Flexible_Server','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-06','2022-09-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_AppelbTaggingRule_appelb','aws_app_elb_should_be_tagged_with_mandatory_tags','AppelbTaggingRule','Assign Mandatory Tags to Application ELB','Assigning mandatory tags to Application Elastic Load Balancers (ELBs) is important for identifying resources, allocating costs, automation, security, and compliance purposes. Mandatory tags ensure consistency, manageability, cost-effectiveness, security, and compliance across your AWS infrastructure.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-Application-ELB','appelb','aws','AppelbTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_AppelbTaggingRule_appelb\",\"autofix\":false,\"alexaKeyword\":\"AppelbTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"appelb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_app_elb_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_app_elb_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_AsgTaggingRule_asg','aws_asg_should_be_tagged_with_mandatory_tags','AsgTaggingRule','Assign Mandatory Tags to Auto-Scaling Groups','Assigning mandatory tags to Auto-Scaling Groups (ASGs) is important for identifying resources, cost allocation, and automation purposes. This practice guarantees consistency, manageability, and cost-effectiveness across your AWS infrastructure.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','asg','aws','AsgTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_AsgTaggingRule_asg\",\"autofix\":false,\"alexaKeyword\":\"AsgTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"asg\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_asg_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_asg_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_BigQueryDatasetTagging_bigquerydataset','gcp_bigquerydataset_should_be_tagged_with_mandatory_tags','BigQueryDatasetTaggingRule','Assign Mandatory Tags to BigQueryDataset','Assigning mandatory tags to BigQuery datasets provides several benefits, including improved visibility and organization, enhanced security and compliance, simplified billing and cost management, and streamlined operations and automation. Mandatory tags can help categorize and manage datasets, enforce access controls and audit policies, track and manage costs, and automate certain tasks.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#assign-mandatory-tags-to-bigquerydataset','bigquerydataset','gcp','BigQueryDatasetTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_BigQueryDatasetTagging_bigquerydataset\",\"autofix\":false,\"alexaKeyword\":\"BigQueryDatasetTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"bigquerydataset\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"gcp_bigquerydataset_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_bigquerydataset_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-16','2022-06-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_BigQueryTableTagging_bigquerytable','gcp_bigquerytable_should_be_tagged_with_mandatory_tags','BigQueryTableTaggingRule','Assign Mandatory Tags with BigQueryTable','Assigning mandatory tags with BigQuery tables can provide several benefits, including improved data governance, better resource allocation, enhanced data visibility, improved security, and streamlined operations. These tags help to properly classify and label data, track resource usage, restrict access to sensitive data, automate routine tasks, and optimize resource allocation.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#assign-mandatory-tags-with-bigquerytable','bigquerytable','gcp','BigQueryTableTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_BigQueryTableTagging_bigquerytable\",\"autofix\":false,\"alexaKeyword\":\"BigQueryTableTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"bigquerytable\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"gcp_bigquerytable_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_bigquerytable_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-16','2022-06-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_BlobcontainerTaggingRule_blobcontainer','azure_blobcontainer_should_be_tagged_with_mandatory_tags','BlobcontainerTaggingRule','Assign Mandatory Tags to Blob Container','Assigning mandatory tags to Blob containers can provide several benefits, including improved data governance, better resource allocation, enhanced data visibility, improved security, and streamlined operations. These tags help to properly classify and label data, track resource usage, restrict access to sensitive data, automate routine tasks, and optimize resource allocation.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','blobcontainer','azure','BlobcontainerTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_BlobcontainerTaggingRule_blobcontainer\",\"autofix\":false,\"alexaKeyword\":\"BlobcontainerTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"blobcontainer\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_blobcontainer_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_blobcontainer_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_ClassicelbTaggingRule_classicelb','aws_classic_elb_should_be_tagged_with_mandatory_tags','ClassicelbTaggingRule','Assign Mandatory Tags to Classic ELB','Assigning mandatory tags to Classic ELB (Elastic Load Balancer) can provide several benefits, including improved resource management, better cost tracking, enhanced visibility, improved security, and streamlined operations. These tags can help track and manage ELBs, optimize resource allocation, analyze cost, identify and group related ELBs, restrict access to load balancers, and automate routine tasks.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-Classic-ELB','classicelb','aws','ClassicelbTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_ClassicelbTaggingRule_classicelb\",\"autofix\":false,\"alexaKeyword\":\"ClassicelbTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"classicelb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_classic_elb_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_classic_elb_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_CloudSqlTagging_cloudsql','gcp_cloudsql_should_be_tagged_with_mandatory_tags','CloudSQLTaggingRule','Assign Mandatory Tags to CloudSQL','Assigning mandatory tags to CloudSQL resources can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#assign-mandatory-tags-to-cloudsql','cloudsql','gcp','CloudSQLTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_CloudSqlTagging_cloudsql\",\"autofix\":false,\"alexaKeyword\":\"CloudSqlTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"cloudsql\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"gcp_cloudsql_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_cloudsql_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-16','2022-06-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_CloudStorageTagging_cloudstorage','gcp_cloudstorage_should_be_tagged_with_mandatory_tags','CloudStorageTaggingRule','Assign Mandatory Tags to CloudStorage','Assigning mandatory tags to Cloud Storage can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#assign-mandatory-tags-to-cloudstorage','cloudstorage','gcp','CloudStorageTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_CloudStorageTagging_cloudstorage\",\"autofix\":false,\"alexaKeyword\":\"CloudStorageTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"cloudstorage\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"gcp_cloudstorage_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_cloudstorage_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-16','2022-06-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_CloudfrontTaggingRule_cloudfront','aws_cloudfront_should_be_tagged_with_mandatory_tags','CloudfrontTaggingRule','Assign Mandatory Tags to CloudFront','Assigning mandatory tags to Cloud Front can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-CloudFront','cloudfront','aws','CloudfrontTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_CloudfrontTaggingRule_cloudfront\",\"autofix\":false,\"alexaKeyword\":\"CloudfrontTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"cloudfront\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_cloudfront_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_cloudfront_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_DatabricksTaggingRule_databricks','azure_databricks_should_be_tagged_with_mandatory_tags','DatabricksTaggingRule','Assign Mandatory Tags to Databricks','Assigning mandatory tags to Data Bricks can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','databricks','azure','DatabricksTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_DatabricksTaggingRule_databricks\",\"autofix\":false,\"alexaKeyword\":\"DatabricksTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"databricks\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_databricks_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_databricks_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_DiskTaggingRule_disk','azure_disk_should_be_tagged_with_mandatory_tags','DiskTaggingRule','Assign Mandatory Tags to Disk','Assigning mandatory tags to Disks can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','disk','azure','DiskTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_DiskTaggingRule_disk\",\"autofix\":false,\"alexaKeyword\":\"DiskTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"disk\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_disk_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_disk_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_DynamodbTaggingRule_dynamodb','aws_dynamodb_should_be_tagged_with_mandatory_tags','DynamodbTaggingRule','Assign Mandatory Tags to DynamoDB','Assigning mandatory tags to DynamoDB can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-DynamoDB','dynamodb','aws','DynamodbTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_DynamodbTaggingRule_dynamodb\",\"autofix\":false,\"alexaKeyword\":\"DynamodbTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"dynamodb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_dynamodb_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_dynamodb_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_ECSClusterTaggingRule_ecscluster','aws_ecs_cluster_should_be_tagged_with_mandatory_tags','ECSClusterTaggingRule','Assign Mandatory Tags to ECS Cluster ','Assigning mandatory tags to ECS Cluster can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','ecscluster','aws','ECSClusterTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_ECSClusterTaggingRule_ecscluster\",\"autofix\":false,\"alexaKeyword\":\"ECSClusterTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"ecscluster\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ecs_cluster_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 * * * ? *\"','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ecs_cluster_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-10-13','2022-10-13','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_ECSTaskDefinitionTaggingRule_ecstaskdefinition','aws_ecs_task_definition_should_be_tagged_with_mandatory_tags','ECSTaskDefinitionTaggingRule','Assign Mandatory Tags to ECS Task Definition','Assigning mandatory tags to ECS Task Definition can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-ECS-Task-Definition','ecstaskdefinition','aws','ECSTaskDefinitionTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_ECSTaskDefinitionTaggingRule_ecstaskdefinition\",\"autofix\":false,\"alexaKeyword\":\"ECSTaskDefinitionTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"ecstaskdefinition\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ecs_task_definition_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 * * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ecs_task_definition_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-10-13','2022-10-13','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_Ec2TaggingRule_ec2','aws_ec2_should_be_tagged_with_mandatory_tags','Ec2TaggingRule','Assign Mandatory Tags to EC2 Instance','Assigning mandatory tags to EC2 Instance can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-EC2-Instance','ec2','aws','Ec2TaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_Ec2TaggingRule_ec2\",\"autofix\":false,\"alexaKeyword\":\"Ec2TaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"ec2\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ec2_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ec2_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-02','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_EfsTaggingRule_efs','aws_efs_should_be_tagged_with_mandatory_tags','EfsTaggingRule','Assign Mandatory Tags to AWS Elastic File System','Assigning mandatory tags to AWS Elastic File System can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-AWS-Elastic-File-System','efs','aws','EfsTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_EfsTaggingRule_efs\",\"autofix\":false,\"alexaKeyword\":\"EfsTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"efs\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_efs_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_efs_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_ElasticacheTaggingRule_elasticache','aws_elasticache_should_be_tagged_with_mandatory_tags','ElasticacheTaggingRule','Assign Mandatory Tags to Elasticache','Assigning mandatory tags to Elasticache can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','elasticache','aws','ElasticacheTaggingRule','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-missing-mandatory-tags\",\"encrypt\":false},{\"key\":\"splitterChar\",\"value\":\",\",\"encrypt\":false},{\"key\":\"severity\",\"value\":\"high\",\"encrypt\":false},{\"key\":\"mandatoryTags\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\",\"value\":\"Application,Environment,Stack,Role\",\"encrypt\":false},{\"key\":\"policyCategory\",\"value\":\"tagging\",\"encrypt\":false}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_ElasticacheTaggingRule_elasticache\",\"autofix\":false,\"alexaKeyword\":\"ElasticacheTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"elasticache\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_elasticache_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_elasticache_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-09-10','2018-09-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_EmrTaggingRule_emr','aws_emr_should_be_tagged_with_mandatory_tags','EmrTaggingRule','Assign Mandatory Tags to AWS Elastic MapReduce','Assigning mandatory tags to AWS Elastic MapReduce can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-AWS-Elastic-MapReduce','emr','aws','EmrTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_EmrTaggingRule_emr\",\"autofix\":false,\"alexaKeyword\":\"EmrTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"emr\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_emr_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_emr_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_KmsTaggingRule_kms','aws_kms_should_be_tagged_with_mandatory_tags','KmsTaggingRule','Assign Mandatory Tags to AWS Key Management Services','Assigning mandatory tags to AWS Key Management Services can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','kms','aws','KmsTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_KmsTaggingRule_kms\",\"autofix\":false,\"alexaKeyword\":\"KmsTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"kms\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_kms_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_kms_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_LambdaTaggingRule_lambda','aws_lambda_should_be_tagged_with_mandatory_tags','LambdaTaggingRule','Assign Mandatory Tags to Lambda Functions ','Assigning mandatory tags to Lambda functions can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','lambda','aws','LambdaTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_LambdaTaggingRule_lambda\",\"autofix\":false,\"alexaKeyword\":\"LambdaTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"lambda\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_lambda_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_lambda_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_LoadbalancerTaggingRule_loadbalancer','azure_loadbalancer_should_be_tagged_with_mandatory_tags','LoadbalancerTaggingRule','Assign Mandatory Tags to Load Balancer','Assigning mandatory tags to Load balancer can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','loadbalancer','azure','LoadbalancerTaggingRule','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-missing-mandatory-tags\",\"encrypt\":false},{\"key\":\"splitterChar\",\"value\":\",\",\"encrypt\":false},{\"key\":\"mandatoryTags\",\"value\":\"Application,Environment,Stack,Role\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_LoadbalancerTaggingRule_loadbalancer\",\"autofix\":false,\"alexaKeyword\":\"LoadbalancerTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"loadbalancer\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_loadbalancer_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_loadbalancer_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_MysqlserverTaggingRule_mysqlserver','azure_mysqlserver_should_be_tagged_with_mandatory_tags','MysqlserverTaggingRule','Assign Mandatory tags to MySQL Server','Assigning mandatory tags to MySQL Server can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','mysqlserver','azure','MysqlserverTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_MysqlserverTaggingRule_mysqlserver\",\"autofix\":false,\"alexaKeyword\":\"MysqlserverTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"mysqlserver\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_mysqlserver_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_mysqlserver_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_NetworkinterfaceTaggingRule_networkinterface','azure_networkinterface_should_be_tagged_with_mandatory_tags','NetworkinterfaceTaggingRule','Assign Mandatory Tags to Network Interface','Assigning mandatory tags to Network Interface can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','networkinterface','azure','NetworkinterfaceTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_NetworkinterfaceTaggingRule_networkinterface\",\"autofix\":false,\"alexaKeyword\":\"NetworkinterfaceTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"networkinterface\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_networkinterface_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_networkinterface_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_NsgTaggingRule_nsg','azure_nsg_should_be_tagged_with_mandatory_tags','NsgTaggingRule','Assign Mandatory Tags to Network Security Group ','Assigning mandatory tags to Network Security Group can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-Network-Security-Group','nsg','azure','NsgTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_NsgTaggingRule_nsg\",\"autofix\":false,\"alexaKeyword\":\"NsgTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_nsg_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_nsg_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_PubSubTagging_pubsub','gcp_pubsub_should_be_tagged_with_mandatory_tags','PubSubTaggingRule','Assign Mandatory Tags to PubSub Topics','Assigning mandatory tags to PubSub Topics can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#assign-mandatory-tags-to-pubsub-topics','pubsub','gcp','PubSubTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_PubSubTagging_pubsub\",\"autofix\":false,\"alexaKeyword\":\"PubSubTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"pubsub\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"gcp_pubsub_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_pubsub_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-16','2022-06-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_RdsdbTaggingRule_rdsdb','aws_rdsdb_should_be_tagged_with_mandatory_tags','RdsdbTaggingRule','Assign Mandatory Tags to RDS Database','Assigning mandatory tags to RDS database can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-RDS-Database','rdsdb','aws','RdsdbTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_RdsdbTaggingRule_rdsdb\",\"autofix\":false,\"alexaKeyword\":\"RdsdbTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"rdsdb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_rdsdb_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_rdsdb_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_RedshiftTaggingRule_redshift','aws_redshift_should_be_tagged_with_mandatory_tags','RedshiftTaggingRule','Assign Mandatory Tags to Redshift','Assigning mandatory tags to Redshift can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-Redshift','redshift','aws','RedshiftTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_RedshiftTaggingRule_redshift\",\"autofix\":false,\"alexaKeyword\":\"RedshiftTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"redshift\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_redshift_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_redshift_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_ResourcegroupTaggingRule_resourcegroup','azure_resourcegroup_should_be_tagged_with_mandatory_tags','ResourcegroupTaggingRule','Assign Mandatory Tags to Resource Group','Assigning mandatory tags to Resource Group can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','resourcegroup','azure','ResourcegroupTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_ResourcegroupTaggingRule_resourcegroup\",\"autofix\":false,\"alexaKeyword\":\"ResourcegroupTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"resourcegroup\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_resourcegroup_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_resourcegroup_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_S3TaggingRule_s3','aws_s3_should_be_tagged_with_mandatory_tags','S3TaggingRule','Assign Mandatory Tags to S3','Assigning mandatory tags to S3 can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-S3','s3','aws','S3TaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_S3TaggingRule_s3\",\"autofix\":false,\"alexaKeyword\":\"S3TaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"s3\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_s3_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_s3_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-02','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_SecuritycenterTaggingRule_securitycenter','azure_securitycenter_should_be_tagged_with_mandatory_tags','SecuritycenterTaggingRule','Assign Mandatory Tags to Security Center','Assigning mandatory tags to Security center can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','securitycenter','azure','SecuritycenterTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_SecuritycenterTaggingRule_securitycenter\",\"autofix\":false,\"assetGroup\":\"azure\",\"alexaKeyword\":\"SecuritycenterTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"securitycenter\",\"pac_ds\":\"azure\",\"policyUUID\":\"azure_securitycenter_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_securitycenter_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_SgTaggingRule_sg','aws_sg_should_be_tagged_with_mandatory_tags','SgTaggingRule','Assign Mandatory Tags to Network Security Group','Assigning mandatory tags to Network Security Group center can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','sg','aws','SgTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_SgTaggingRule_sg\",\"autofix\":false,\"alexaKeyword\":\"SgTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"sg\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_sg_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_sg_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_SnapshotTaggingRule_snapshot','aws_snapshot_should_be_tagged_with_mandatory_tags','SnapshotTaggingRule','Assign Mandatory Tags to EBS snapshots','Assigning mandatory tags to EBS Snapshots center can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','snapshot','aws','SnapshotTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"true\",\"key\":\"threadsafe\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_SnapshotTaggingRule_snapshot\",\"autofix\":false,\"alexaKeyword\":\"SnapshotTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"snapshot\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_snapshot_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/23 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_snapshot_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_SqldatabaseTaggingRule_sqldatabase','azure_sqldatabase_should_be_tagged_with_mandatory_tags','SqldatabaseTaggingRule','Assign Mandatory Tags to SQL Database','Assigning mandatory tags to SQL Database center can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','sqldatabase','azure','SqldatabaseTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_SqldatabaseTaggingRule_sqldatabase\",\"autofix\":false,\"alexaKeyword\":\"SqldatabaseTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"sqldatabase\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_sqldatabase_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_sqldatabase_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_SqlserverTaggingRule_sqlserver','azure_sqlserver_should_be_tagged_with_mandatory_tags','SqlserverTaggingRule','Assign Mandatory Tags to SQL Server','Assigning mandatory tags to SQL Server center can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','sqlserver','azure','SqlserverTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_SqlserverTaggingRule_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"SqlserverTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_sqlserver_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_sqlserver_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_StackTaggingRule_stack','aws_stack_should_be_tagged_with_mandatory_tags','StackTaggingRule','Assign Mandatory Tags to Cloud Formation Stacks','Assigning mandatory tags to Cloud Formation Stacks can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-Cloud-Formation-Stacks','stack','aws','StackTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_StackTaggingRule_stack\",\"autofix\":false,\"alexaKeyword\":\"StackTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"stack\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_stack_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_stack_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_StorageaccountTaggingRule_storageaccount','azure_storageaccount_should_be_tagged_with_mandatory_tags','StorageaccountTaggingRule','Assign Mandatory Tags to Storage Account','Assigning mandatory tags to Storage Account can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','storageaccount','azure','StorageaccountTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_StorageaccountTaggingRule_storageaccount\",\"autofix\":false,\"alexaKeyword\":\"StorageaccountTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"storageaccount\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_storageaccount_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_storageaccount_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_SubnetTaggingRule_subnet','aws_subnet_should_be_tagged_with_mandatory_tags','SubnetTaggingRule','Assign Mandatory Tags to Subnets','Assigning mandatory tags to Subnets can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-Subnets','subnet','aws','SubnetTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_SubnetTaggingRule_subnet\",\"autofix\":false,\"alexaKeyword\":\"SubnetTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"subnet\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_subnet_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_subnet_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_VMInstanceTagging_vminstance','gcp_virtualmachine_should_be_tagged_with_mandatory_tags','VirtualmachineTaggingRule','Assign Mandatory Tags to VM','Assigning mandatory tags to VMs can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','vminstance','gcp','VirtualmachineTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_VMInstanceTagging_vminstance\",\"autofix\":false,\"alexaKeyword\":\"VmInstanceTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"gcp_vm_instance_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_vm_instance_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-16','2022-06-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_VPNGatewayMandatoryTagging_vpngateway','aws_vpngateway_mandatory_tag_rule','VpnGatewayTaggingRule','Assign Mandatory Tags to VPNGateway','Assigning mandatory tags to VPN Gateway can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-VPNGateway','vpngateway','aws','VpnGatewayTaggingRule','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-missing-mandatory-tags\",\"encrypt\":false},{\"key\":\"splitterChar\",\"value\":\",\",\"encrypt\":false},{\"key\":\"mandatoryTags\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\",\"value\":\"Application,Environment,Stack,Role\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_VPNGatewayMandatoryTagging_vpngateway\",\"autofix\":false,\"alexaKeyword\":\"VPNGatewayTagging\",\"policyRestUrl\":\"\",\"targetType\":\"vpngateway\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_vpngateway_mandatory_tag_rule\",\"policyType\":\"ManagePolicy\"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_vpngateway_mandatory_tag_rule','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-08-05','2019-08-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_VirtualmachineTaggingRule_virtualmachine','azure_virtualmachine_should_be_tagged_with_mandatory_tags','VirtualmachineTaggingRule','Assign Mandatory Tags to Virtual Machine','Assigning mandatory tags to Virtual Machine can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','virtualmachine','azure','VirtualmachineTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_VirtualmachineTaggingRule_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"VirtualmachineTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_virtualmachine_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_virtualmachine_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_VnetTaggingRule_vnet','azure_vnet_should_be_tagged_with_mandatory_tags','VnetTaggingRule','Assign Mandatory Tags Virtual Network ','Assigning mandatory tags to Virtual Network can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags','vnet','azure','VnetTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_VnetTaggingRule_vnet\",\"autofix\":false,\"alexaKeyword\":\"VnetTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"vnet\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_vnet_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_vnet_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-10-25','2019-10-25','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_VolumeTaggingRule_volume','aws_volume_should_be_tagged_with_mandatory_tags','VolumeTaggingRule','Assign Mandatory Tags to EBS Volumes','Assigning mandatory tags to EBS Volumes can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-EBS-Volumes','volume','aws','VolumeTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_VolumeTaggingRule_volume\",\"autofix\":false,\"alexaKeyword\":\"VolumeTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"volume\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_volume_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/23 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_volume_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_VpcFirewallTagging_vpcfirewall','gcp_vpcfirewall_should_be_tagged_with_mandatory_tags','VpcFirewallTaggingRule','Assign Mandatory Tags to VPC Firewall','Assigning mandatory tags to VPC Firewall can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#assign-mandatory-tags-to-vpc-firewall','vpcfirewall','gcp','VpcFirewallTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_VpcFirewallTagging_vpcfirewall\",\"autofix\":false,\"alexaKeyword\":\"VpcFirewallTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"gcp_vpcfirewall_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_vpcfirewall_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-16','2022-06-16','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_VpcTaggingRule_vpc','aws_vpc_should_be_tagged_with_mandatory_tags','VpcTaggingRule','Assign Mandatory Tags to VPC','Assigning mandatory tags to VPC can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-vpc','vpc','aws','VpcTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_VpcTaggingRule_vpc\",\"autofix\":false,\"alexaKeyword\":\"VpcTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"vpc\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_vpc_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_vpc_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-11-03','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('TaggingRule_version-1_version-1_ElasticSearchTaggingRule_elasticsearch','aws_elasticsearch_should_be_tagged_with_mandatory_tags','ElasticSearchTaggingRule','Assign Mandatory Tags to Elastic Search Resources','Assigning mandatory tags to Elastic Search Resources can help with cost management, resource management, access management, and automation. Mandatory tags can streamline operations and reduce the risk of mismanaging resources.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Assign-Mandatory-Tags-to-Elastic-Search-Resources','elasticsearch','aws','ElasticSearchTaggingRule','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-missing-mandatory-tags\",\"encrypt\":false},{\"key\":\"splitterChar\",\"value\":\",\",\"encrypt\":false},{\"key\":\"severity\",\"value\":\"high\",\"encrypt\":false},{\"key\":\"mandatoryTags\",\"isEdit\":true,\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\",\"value\":\"Application,Environment,Stack,Role\",\"encrypt\":false},{\"key\":\"policyCategory\",\"value\":\"tagging\",\"encrypt\":false}],\"environmentVariables\":[],\"policyId\":\"TaggingRule_version-1_version-1_ElasticSearchTaggingRule_elasticsearch\",\"autofix\":false,\"alexaKeyword\":\"ElasticSearchTaggingRule\",\"policyRestUrl\":\"\",\"targetType\":\"elasticsearch\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_elasticsearch_should_be_tagged_with_mandatory_tags\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_elasticsearch_should_be_tagged_with_mandatory_tags','high','tagging','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-08-29','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole','aws_iamrole_shouldnothave_lambda_privilege','UnapprovedIamRoleLambdaAccess','Deny Lambda Privilege to Non-Allow Listed IAM Roles','To safeguard AWS resources against unauthorized access or misuse, denying Lambda privilege to non-allow listed IAM roles is essential. This practice reduces the likelihood of unauthorized access, helps maintain compliance with security standards, mitigates the risk of accidental changes, and minimizes the impact of security breaches. By limiting the actions that non-allow listed IAM roles can take on your Lambda functions, you can prevent them from harming your resources and ensure that only required privileges are granted.','Remove lambda create permission from role or if you want exception you may please request exception for this rule through PacBot.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-lambda-privilege-to-non-allow-listed-iam-roles','iamrole','aws','UnapprovedIamRoleWithLambdaAccess','{\"params\":[{\"key\":\"policyKey\",\"value\":\"iam-role-with-unapproved-access\",\"encrypt\":false},{\"key\":\"roleIdentifyingString\",\"value\":\"role/paladincloud_ro\",\"encrypt\":false},{\"key\":\"unApprovedIamActions\",\"value\":\"lambda:CreateFunction,lambda:Create*,*,lambda:*\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"IAM roles should not have these permissions\",\"defaultVal\":\"lambda:CreateFunction,lambda:Create*,*,lambda:*\",\"displayName\":\"Unapproved IAM actions\"},{\"key\":\"splitterChar\",\"value\":\",\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole\",\"autofix\":false,\"alexaKeyword\":\"UnapprovedIamRoleWithLambdaAccess\",\"policyRestUrl\":\"\",\"targetType\":\"iamrole\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_iamrole_shouldnothave_lambda_privilege\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_iamrole_shouldnothave_lambda_privilege','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'asgc','2019-02-07','2019-02-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Unauthorized-Cloudfront-Distribution_version-1_Unauthorized-Cloudfront-Distribution_cloudfront','cloudfront_should_have_auth_dist','Unauthorized-Cloudfront-Distribution','Prevent Unauthorized Cloudfront Content Distribution','Preventing unauthorized CloudFront content distribution is essential for content protection, data privacy, compliance, reputation management, and resource optimization. It helps maintain data privacy, protect against data breaches, ensure compliance with regulations, and maintain the integrity of your brand. Preventing unauthorized CloudFront content distribution is a recommended best practice for managing your AWS environment and ensuring that your content is used appropriately.','','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Prevent-Unauthorized-Cloudfront-Content-Distribution','cloudfront','aws','CloudfrontUnauthorizedContentDistributionRule','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-unauthorized-cloudfront-distribution\",\"encrypt\":false},{\"key\":\"threadsafe\",\"value\":\"true\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"Unauthorized-Cloudfront-Distribution_version-1_Unauthorized-Cloudfront-Distribution_cloudfront\",\"autofix\":false,\"alexaKeyword\":\"CloudfrontUnauthorizedContentDistributionRule\",\"policyRestUrl\":\"\",\"targetType\":\"cloudfront\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"cloudfront_should_have_auth_dist\",\"policyType\":\"ManagePolicy\"}','0 0/2 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/cloudfront_should_have_auth_dist','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2019-06-10','2019-06-10','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Underutilized-Amazon-EBS-Volumes_version-1_Underutilized-EBS-Volumes_volume','aws_ebs_volume_should_not_be_under_utilized','Underutilized EBS Volumes','Check for Underutilized Amazon EBS Volumes','Deleting unused Elastic Block Store (EBS) volumes can result in cost savings, improved security, simplified maintenance, and compliance with regulatory requirements. By removing unused volumes, you can reduce costs, decrease your attack surface, simplify maintenance, and meet compliance requirements.','Consider creating a snapshot and deleting the volume to reduce costs','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#check-for-underutilized-amazon-ebs-volumes','volume','aws','Underutilized Amazon EBS Volumes','{\"assetGroup\":\"aws\",\"policyId\":\"Underutilized-Amazon-EBS-Volumes_version-1_Underutilized-EBS-Volumes_volume\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_ebs_volume_should_not_be_under_utilized\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"volume\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-underutilized-EBS-Volumes\",\"key\":\"policyKey\"},{\"defaultVal\":\"DAvU99Dc4C\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Check Id\",\"description\":\"Check Id Keyword\",\"value\":\"DAvU99Dc4C\",\"key\":\"checkId\",\"isMandatory\":true},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"cost\",\"key\":\"policyCategory\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_checks/checks_resources/_search\",\"key\":\"esServiceURL\"}],\"autofix\":false,\"alexaKeyword\":\"Underutilized Amazon EBS Volumes\"}','0 0/23 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ebs_volume_should_not_be_under_utilized','high','cost','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-05-14','2018-09-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('UnderutilizedAmazonRedshiftClustersRule_version-1_UnderutilizedAmazonRedshiftClustersRule_redshift','aws_redshift_clusters_should_not_be_under_utilized','UnderutilizedAmazonRedshiftClustersRule','Check for Underutilized Amazon Redshift Clusters','Downsizing underused Amazon Redshift clusters can result in cost savings, resource optimization, improved performance, and better scalability. By paying only for the needed resources, you can free up CPU, memory, and storage, improve the performance of other applications, and allocate resources more efficiently.','Consider shutting down the cluster and taking a final snapshot, or downsizing the cluster\n','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Check-for-Underutilized-Amazon-Redshift-Clusters','redshift','aws','UnderutilizedAmazonRedshiftClustersRule','{\"assetGroup\":\"aws\",\"policyId\":\"UnderutilizedAmazonRedshiftClustersRule_version-1_UnderutilizedAmazonRedshiftClustersRule_redshift\",\"policyRestUrl\":\"\",\"environmentVariables\":[],\"policyUUID\":\"aws_redshift_clusters_should_not_be_under_utilized\",\"policyType\":\"ManagePolicy\",\"pac_ds\":\"aws\",\"targetType\":\"redshift\",\"params\":[{\"encrypt\":false,\"value\":\"check-for-under-utilized-amazon-redshift-clusters\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"defaultVal\":\"G31sQ1E9U\",\"encrypt\":false,\"isEdit\":true,\"displayName\":\"Check Id\",\"description\":\"Check Id Keyword\",\"value\":\"G31sQ1E9U\",\"key\":\"checkId\",\"isMandatory\":true},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"cost\",\"key\":\"policyCategory\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"/aws_checks/checks_resources/_search\",\"key\":\"esServiceURL\"}],\"autofix\":false,\"alexaKeyword\":\"UnderutilizedAmazonRedshiftClustersRule\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_redshift_clusters_should_not_be_under_utilized','high','cost','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2018-03-14','2018-09-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('UnrestrictedSqlDatabaseAccessRule_version-1','azure_should_not_allow_unrestricted_sqlDatabase_access','SqlUnRestrictedDBAccessRule','Deny Public Access to SQL Database','To ensure security against unauthorized connections, it is important to set up the Microsoft Azure SQL server firewall to only allow inbound access from authorized networks. This can be done by specifying the range of IP addresses from these networks and creating firewall rules with specific IP addresses. This will reduce the risk of attacks on your SQL servers.','Update the StartIpAddress and EndIpAddress attribute values for the SQL server firewall rule, in order to restrict the database access to a specific IP address/IP address range only.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-sql-database-access','sqldatabase','azure','SqlUnrestrictedDBAccessRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-unrestricted-sql-database-access\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"UnrestrictedSqlDatabaseAccessRule_version-1\",\"autofix\":false,\"alexaKeyword\":\"SqlUnrestrictedDBAccessRule\",\"policyRestUrl\":\"\",\"targetType\":\"sqldatabase\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_should_not_allow_unrestricted_sqlDatabase_access\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_should_not_allow_unrestricted_sqlDatabase_access','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-05-05','2022-05-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Unrestricted_MySQL_Database_Access','unrestricted_MySQL_Database_Access','MySqlDatabaseAccess','Deny Public Access to MySQL Server Port 3306','To protect against malicious actors and reduce the attack surface, it is important to ensure that Microsoft Azure network security groups (NSGs) do not permit unrestricted access (e.g., 0.0.0.0/0) on TCP port 3306.','restrict MySQL Database access on TCP port 3306 to trusted IP address','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-mysql-server-port-3306','nsg','azure','EnableNetworkSecurityforSQLDatabase','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"policyKey\"},{\"key\":\"protocol\",\"value\":\"tcp\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"3306\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny public access to MySQL Server port 3306\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Unrestricted_MySQL_Database_Access\",\"autofix\":false,\"alexaKeyword\":\"EnableNetworkSecurityforSQLDatabase\",\"policyRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"unrestricted_MySQL_Database_Access\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/unrestricted_MySQL_Database_Access','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-05','2022-05-05','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Unrestricted_Oracle_Database_Access','unrestricted_Oracle_Database_Access','OracleDatabaseAccess','Deny Public Access to Oracle Port 1521','To implement the principle of least privilege and enhance the security of your Microsoft Azure network, it is important to restrict inbound/ingress access on TCP port 1521 to trusted entities (i.e., specific IP addresses). By limiting access to trusted entities, you can reduce the attack surface and protect your network against potential threats.',' Access should be restricted for permissive Network Security Groups with Internet-facing oracle server','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-oracle-port-1521','nsg','azure','EnableNetworkSecurityforOracleDatabase','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"policyKey\"},{\"key\":\"protocol\",\"value\":\"tcp\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"1521\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Access@should@be@restricted@for@permissive@Network@Security@Groups@with@Internet-facing@OracleDatabase\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Unrestricted_Oracle_Database_Access\",\"autofix\":false,\"alexaKeyword\":\"EnableNetworkSecurityforOracleDatabase\",\"policyRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"unrestricted_Oracle_Database_Access\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/unrestricted_Oracle_Database_Access','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2022-05-09','2022-05-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Unused-Security-group_version-1_UnusedSecurityGroup_sg','aws_security_groups_should_not_be_unused','UnusedSecurityGroup','Delete Unused Security Groups','Deleting unused security groups in AWS is important to ensure security and effective management of AWS resources. Unused security groups can pose a security risk if they contain outdated or unnecessary rules or if they are created for temporary purposes and forgotten. They can also clutter the AWS environment and make it challenging to manage security groups effectively. Regularly reviewing and deleting unused security groups is a security best practice to help prevent unauthorized access and ensure AWS resources are secure and well-managed.','Delete the unused security groups','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#unused-security-groups','sg','aws','UnusedSecurityGroup','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-unused-security-group\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"key\":\"fixKey\",\"value\":\"unused-sg-auto-fix\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esServiceWithSgUrl\",\"value\":\"/aws/ec2_secgroups/_search,/aws/rdsdb_secgroups/_search,/aws/rdscluster_secgroups/_search,/aws/redshift_secgroups/_search,/aws_lambda/lambda_secgroups/_search,/aws_appelb/appelb_secgroups/_search,/aws_classicelb/classicelb_secgroups/_search,/aws/elasticsearch/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[],\"policyId\":\"Unused-Security-group_version-1_UnusedSecurityGroup_sg\",\"autofix\":false,\"alexaKeyword\":\"UnusedSecurityGroup\",\"policyRestUrl\":\"\",\"targetType\":\"sg\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_security_groups_should_not_be_unused\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_security_groups_should_not_be_unused','high','operations','true','false','',24,2,'commonTemplate','Resource Id,Account Id,Region,Group Name',NULL,'PaladinCloud autofix - Found Unused AWS Security Group','PaladinCloud - Unused AWS Security Group Auto Deleted Report which are created by PaladinCloud','The unused Security group will be automatically deleted by PaladinCloud after {days} days if no exception is granted.','PaladinCloud has now automatically deleted the following list of unused security group resources which are created by PaladinCloud','Security group (<b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) is unused.',24,'ASGC','2017-10-16','2018-12-18','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('UnusedApplicationElbRule_version-1_UnusedApplicationElbRule_appelb','aws_app_elb_should_not_be_unused','UnusedApplicationElbRule','Delete Unused Application ELB','Deleting unused Application Elastic Load Balancers (ELBs) can result in cost savings, resource optimization, improved performance, simplified management, and free up resources for other applications. By removing unused ELBs, you can save money, prevent conflicts, simplify your infrastructure, and optimize your AWS usage.','Terminate the ELB if it is no longer required','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#delete-unused-application-elb','appelb','aws','UnusedApplicationElbRule','{\"params\":[{\"encrypt\":\"false\",\"value\":\"check-for-unused-application-elb\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"cost\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"key\":\"esAppElbWithInstanceUrl\",\"value\":\"/aws/appelb_instances/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyId\":\"UnusedApplicationElbRule_version-1_UnusedApplicationElbRule_appelb\",\"autofix\":false,\"alexaKeyword\":\"UnusedApplicationElbRule\",\"policyRestUrl\":\"\",\"targetType\":\"appelb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_app_elb_should_not_be_unused\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_app_elb_should_not_be_unused','high','cost','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-09-28','2018-11-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('UnusedClassicElbRule_version-1_UnusedClassicElbRule_classicelb','aws_classic_elb_should_not_be_unused','UnusedClassicElbRule','Clean up Unused ELB','Cleaning up unused Elastic Load Balancers (ELBs) can result in cost savings, resource optimization, improved performance, simplified management, improved security, and free up resources for other applications. By removing unused ELBs, you can save money, prevent conflicts, simplify your infrastructure, improve security, and optimize your AWS usage.','Terminate the ELB if it is no longer required','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#cleanup-unused-elb','classicelb','aws','UnusedClassicElbRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-unused-classic-elb\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"true\",\"key\":\"threadsafe\"},{\"encrypt\":false,\"value\":\"cost\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"key\":\"esClassicElbWithInstanceUrl\",\"value\":\"/aws/classicelb_instances/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[{\"encrypt\":false,\"value\":\"sdfsd\",\"key\":\"sdf\"}],\"policyId\":\"UnusedClassicElbRule_version-1_UnusedClassicElbRule_classicelb\",\"autofix\":false,\"alexaKeyword\":\"UnusedClassicElbRule\",\"policyRestUrl\":\"\",\"targetType\":\"classicelb\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_classic_elb_should_not_be_unused\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_classic_elb_should_not_be_unused','high','cost','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-09-28','2018-11-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('UnusedEBSRule_version-1_UnusedEbsRule_volume','aws_ebs_volume_should_not_be_unused','UnusedEbsRule','Delete Unused EBS Volumes','Deleting unused Elastic Block Store (EBS) volumes can result in cost savings, resource optimization, improved security, simplified maintenance, and compliance with regulatory requirements. By removing unused volumes, you can save money, decrease your attack surface, simplify maintenance, meet compliance requirements, and optimize your AWS usage.','Delete the volume if it is no longer required','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#unused-ebs-volume','volume','aws','UnusedEBSRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-unused-ebs-rule\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"cost\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"key\":\"esEbsWithInstanceUrl\",\"value\":\"/aws/volume_attachments/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyId\":\"UnusedEBSRule_version-1_UnusedEbsRule_volume\",\"autofix\":false,\"alexaKeyword\":\"UnusedEBSRule\",\"policyRestUrl\":\"\",\"targetType\":\"volume\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_ebs_volume_should_not_be_unused\",\"policyType\":\"ManagePolicy\"}','0 0/23 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_ebs_volume_should_not_be_unused','high','cost','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-10-13','2018-11-12','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','aws_elasticip_should_not_be_unused','UnusedElasticIpRule','Delete Unused Elastic IPs','Deleting unused Elastic IPs can result in cost savings, resource optimization, simplified management, improved security, and compliance with regulatory requirements. By removing unused Elastic IPs, you can save money, reduce the complexity of your infrastructure, improve security, meet compliance requirements, and optimize your AWS usage.','Associate the EIP with a running active instance, or release the unassociated EIP','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#unused-elasticip','elasticip','aws','UnusedElasticIpRule','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-unused-elastic-ip\",\"key\":\"policyKey\"},{\"key\":\"threadsafe\",\"value\":\"true\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"fixKey\",\"value\":\"unused-elastic-ip-fix\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"cost\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip\",\"autofix\":false,\"alexaKeyword\":\"UnusedElasticIpRule\",\"policyRestUrl\":\"\",\"targetType\":\"elasticip\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_elasticip_should_not_be_there_in_non_standard_region\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_elasticip_should_not_be_unused','high','cost','true','false','',24,1,'commonTemplate','Resource Id,Account Id,Region,Allocation Id','silent',NULL,'PaladinCloud autofix action - AWS Unassociated Elastic IP Addresses Auto Delete Report','The access to this Application ELB will be automatically fixed by PaladinCloud after {days} days if no exception is granted.','PaladinCloud has now automatically deleted the following list of Unassociated Elastic IP Addresses',NULL,48,'ASGC','2018-02-01','2018-09-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Use_CMK_to_encrypt_OS_and_Data_disk','Use_CMK_to_encrypt_OS_and_Data_disk','Encrypt OS and Data Disk with CMK','Encrypt OS and Data Disk with CMK','Encrypting OS and data disks with a CMK provides enhanced data protection, custom key management, auditing and monitoring capabilities, key rotation, and compliance with industry regulations. Using services like Azure Disk Encryption and following best practices for key management helps maintain a secure environment and protect sensitive data.','Ensure that the OS disk and Data disks have encryption set to CMK.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-os-and-data-disk','disk','azure','Use_CMK_to_encrypt_OS_and_Data_disk','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-os-data-disks\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\"Use CMK to  Encrypt OS and Data disk\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Use_CMK_to_encrypt_OS_and_Data_disk\",\"autofix\":false,\"alexaKeyword\":\"Use_CMK_to_encrypt_OS_and_Data_disk\",\"policyRestUrl\":\"\",\"targetType\":\"disk\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Use_CMK_to_encrypt_OS_and_Data_disk\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Use_CMK_to_encrypt_OS_and_Data_disk','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-23','2022-08-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','Encrypt Storage Account for Activity Logs using CMK','Encrypt Storage Account for Activity Logs using CMK','Encrypting a storage account for activity logs using a CMK provides data protection, custom key management, auditing and monitoring, key rotation, and compliance with industry regulations. Using services like Azure Storage Service Encryption and following key management best practices helps maintain a secure environment and protect sensitive log data.','Configure the storage account containing activity logs to use a customer-manager key.','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-storage-account-for-activity-logs','subscription','azure','Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-storageAcc-activitylog-encryption\",\"key\":\"policyKey\"},{\"key\":\"policyName\",\"value\":\" Use CMK to encrypt Storage Account for Activity logs\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Use_CMK_to_encrypt_Storage_Account_for_Activity_logs\",\"autofix\":false,\"alexaKeyword\":\"Use_CMK_to_encrypt_Storage_Account_for_Activity_logs\",\"policyRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"Use_CMK_to_encrypt_Storage_Account_for_Activity_logs\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-08-23','2022-08-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VPC_UnCommon_ports_should_not_be_publicly_accessible','VPC_UnCommon_ports_should_not_be_publicly_accessible','UncommonPortsAccess','Deny Public Access to Uncommon Ports','A TCP/UDP port that is not included in the common service ports category is considered uncommon. A VPC network firewall rule that allows unrestricted access (0.0.0.0/0) to uncommon ports can increase the risk of hacking, data capture, and all kinds of attacks (brute-force attacks, man-in-the-middle attacks, and DDoS attacks). Configure your VPC network firewall rules to allow only trusted, authorized IP addresses or IP ranges to access uncommon TCP/UDP ports.','update your VPC network firewall rules configuration in order to restrict access on uncommon TCP or UDP ports to trusted, authorized IP addresses or IP ranges','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-uncommon-ports','vpcfirewall','gcp','VPC_UnCommon_ports_should_not_be_publicly_accessible','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vpc-network-firewall-security-uncommon-ports\",\"key\":\"policyKey\"},{\"key\":\"port\",\"value\":\"80,443,20,21,22,23,53,3389,25,465,587,3306,5432,1521,1433,135,137,138,139,445\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"Ports to deny access\",\"defaultVal\":\"80,443,20,21,22,23,53,3389,25,465,587,3306,5432,1521,1433,135,137,138,139,445\",\"displayName\":\"Port\"},{\"key\":\"description\",\"value\":\"Ensure there are no VPC firewall rules that allow unrestricted inbound access on TCP or udp 1494 and 8010\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VPC Firewall with uncommon ports was publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"wall with Uncommon ports  should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"VPC_UnCommon_ports_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"VPC_UnCommon_ports_should_not_be_publicly_accessible\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"VPC_UnCommon_ports_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_UnCommon_ports_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','DNSPortAcess','Deny Public Access to DNS Port 53','The practice of allowing unrestricted DNS access to Google Cloud virtual machines (VMs) via VPC network firewall rules can increase the risk of malicious activities such as DoS and DDoS attacks. Instead, VPC firewall rules should be configured to restrict access to specific resources based on legitimate business requirements. To protect VM instances associated with these rules, Google Cloud VPC network firewall rules should not allow unrestricted access on TCP and UDP port 53, which is used by the Domain Name System during DNS resolution.','update your VPC network firewall rule configuration in order to restrict DNS access to trusted, authorized IP addresses','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-dns-port-53','vpcfirewall','gcp','DNS_port_53_should_not_be_publicly_accessible','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vpc-network-firewall-security\",\"key\":\"policyKey\"},{\"key\":\"port\",\"value\":\"tcp:53,tcp:0-65535,udp:53,udp:0-65535\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":false,\"isMandatory\":true,\"description\":\"Ports to deny access\",\"defaultVal\":\"tcp:53,tcp:0-65535,udp:53,udp:0-65535\",\"displayName\":\"Port\"},{\"key\":\"description\",\"value\":\"Ensure there are no VPC firewall rules that allow unrestricted inbound access on TCP and UDP port 53\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VPC Firewall with DNS port 53 was publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"VPC Firewall with DNS port 53 should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"VPC_firewall_DNS_port_53_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"DNS_port_53_should_not_be_publicly_accessible\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"VPC_firewall_DNS_port_53_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VPC_firewall_FTP_port_should_not_be_publicly_accessible','VPC_firewall_FTP_port_should_not_be_publicly_accessible','FTPPortAcess','Deny Public Access to FTP Ports 20 and 21','To prevent malicious activities, such as brute-force attacks, FTP bounce attacks, spoofing, and packet capture attacks on virtual machines (VMs) hosted on Google Cloud, it\'s crucial to prevent unrestricted FTP access through VPC network firewall rules. Specifically, the firewall rules must not allow unrestricted access to TCP ports 20 and 21, which File Transfer Protocol (FTP) client-server applications use for data transfer and communication. By implementing this measure, potential attackers can be prevented from using brute-force methods to gain unauthorized access to VMs associated with the firewall rules.','update your VPC network firewall rules configuration in order to restrict File Transfer Protocol  access to trusted, authorized IP addresses or IP ranges','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-ftp-ports-20-and-21','vpcfirewall','gcp','VPC_firewall_FTP_port_should_not_be_publicly_accessible','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vpc-network-firewall-security\",\"key\":\"policyKey\"},{\"key\":\"port\",\"value\":\"tcp:20,tcp:21,tcp:0-65535\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":false,\"isMandatory\":true,\"description\":\"Ports to deny access\",\"defaultVal\":\"tcp:20,tcp:21,tcp:0-65535\",\"displayName\":\"Port\"},{\"key\":\"description\",\"value\":\"Ensure there are no VPC firewall rules that allow unrestricted inbound access on TCP 20 and 21\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VPC Firewall with Tcp port 20 and 21 was publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"VPC Firewall with FTP port 20 and 21 should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"VPC_firewall_FTP_port_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"VPC_firewall_FTP_port_should_not_be_publicly_accessible\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"VPC_firewall_FTP_port_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_FTP_port_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VPC_firewall_ICMP_port_should_not_be_publicly_accessible','VPC_firewall_ICMP_port_should_not_be_publicly_accessible','ICMPPortAcess','Deny Public Access to ICMP','To follow the principle of least privilege (POLP) and reduce the attack surface, it is recommended to review your Google Cloud VPC network firewall rules for inbound rules that grant unrestricted access (0.0.0.0/0) to any hosts using ICMP. Instead, access via ICMP should be restricted to trusted IP addresses/IP ranges only. Although ICMP is not a transport protocol, it is an error-reporting protocol commonly used for troubleshooting TCP/IP networks by generating error messages for IP packet delivery issues. However, it can also be used to exploit network vulnerabilities.','update your VPC network firewall rules configuration in order to restrict Internet Control Message Protocol (ICMP) access to trusted, authorized IP addresses or IP ranges','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-icmp','vpcfirewall','gcp','VPC_firewall_ICMP_port_should_not_be_publicly_accessible','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vpc-network-firewall-security\",\"key\":\"policyKey\"},{\"key\":\"port\",\"value\":\"icmp:00\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":false,\"isMandatory\":true,\"description\":\"Ports to deny access\",\"defaultVal\":\"icmp:00\",\"displayName\":\"Port\"},{\"key\":\"description\",\"value\":\"Ensure there are no VPC firewall rules that allow unrestricted inbound access on icmp \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VPC Firewall with icmp port was publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny Firewall public access to ICMP\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"VPC_firewall_ICMP_port_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"VPC_firewall_ICMP_port_should_not_be_publicly_accessible\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"VPC_firewall_ICMP_port_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_ICMP_port_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','MYSQLPortAcess','Deny Public Access to MySQL Port 3306','Enabling unrestricted access on TCP port 3306 can heighten the probability of malicious actions like brute-force, bypass authentication attacks, and SQL injection attacks. To prevent this, VPC firewall rules should be set up to limit access to specific resources solely for those hosts or networks with legitimate access needs. Google Cloud VPC network firewall rules should be set up to disallow unrestricted access on TCP port 3306 to minimize security threats and safeguard the virtual machine (VM) instances targeted by the firewall rules.','update your VPC network firewall rules configuration in order to restrict MySQL Database Server access to trusted entities','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-mysql-port-3306','vpcfirewall','gcp','VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vpc-network-firewall-security\",\"key\":\"policyKey\"},{\"key\":\"port\",\"value\":\"tcp:3306,tcp:0-65535\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":false,\"isMandatory\":true,\"description\":\"Ports to deny access\",\"defaultVal\":\"tcp:3306,tcp:0-65535\",\"displayName\":\"Port\"},{\"key\":\"description\",\"value\":\"Ensure there are no VPC firewall rules that allow unrestricted inbound access on Mysql port 3306 \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VPC Firewall with MYDQL port  3306 was publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"VPC Firewall with MYSQL port 3306  should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"VPC_firewall_MYSQL_port_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"VPC_firewall_MYSQL_port_should_not_be_publicly_accessible\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"VPC_firewall_MYSQL_port_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','ORACLEPortAcess','Deny Public Access to Oracle Port 1521','TCP port 1521 is utilized by the Oracle Database (Oracle RDBMS) for communication. Allowing unrestricted ingress access on TCP port 1521 through VPC network firewall rules can open up opportunities for malicious activities like denial-of-service attacks, brute-force, and man-in-the-middle (MITM) attacks, which can ultimately lead to data loss. To prevent this, it is recommended to configure VPC firewall rules that restrict access to specific resources only for those hosts or networks with a legitimate business need for access. To reduce the attack surface and protect the virtual machine (VM) instances that are targeted by the firewall rules, it is advised that Google Cloud VPC network firewall rules should not allow unrestricted access on TCP port 1521.','update your VPC network firewall rules configuration in order to restrict Oracle Database access to trusted entities only (i.e. authorized IP addresses or IP ranges)','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-oracle-port-1521','vpcfirewall','gcp','VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vpc-network-firewall-security\",\"key\":\"policyKey\"},{\"key\":\"port\",\"value\":\"tcp:1521,tcp:0-65535\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":false,\"isMandatory\":true,\"description\":\"Ports to deny access\",\"defaultVal\":\"tcp:1521,tcp:0-65535\",\"displayName\":\"Port\"},{\"key\":\"description\",\"value\":\"Ensure there are no VPC firewall rules that allow unrestricted inbound access on ORACLE DB port 1521 \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VPC Firewall with ORACLE DB port  1521 was publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"VPC Firewall with Oracle DB  port 1521  should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"VPC_firewall_ORACLE_port_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"VPC_firewall_ORACLE_port_should_not_be_publicly_accessible\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"VPC_firewall_ORACLE_port_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','SMTPPortAccess','Deny Public Access to Egress on all Ports','Allowing unrestricted outbound/egress access on all TCP/UDP ports can create opportunities for malicious activities such as Distributed Denial of Service (DDoS) attacks. To minimize security risks, reviewing your Google Cloud VPC network firewall for any egress rules that allow unrestricted access (i.e., 0.0.0.0/0) to any TCP/UDP ports is recommended. Access should be limited to IP addresses and/or IP ranges that require implementing the principle of least privilege and reducing the attack surface.','update your VPC network firewall rules configuration in order to restrict egress access to trusted entities only','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-egress-on-all-ports','vpcfirewall','gcp','VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vpc-network-firewall-outbound-security\",\"key\":\"policyKey\"},{\"key\":\"port\",\"value\":\"udp:0-65535,tcp:0-65535\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":false,\"isMandatory\":true,\"description\":\"Ports to deny access\",\"defaultVal\":\"udp:0-65535,tcp:0-65535\",\"displayName\":\"Port\"},{\"key\":\"description\",\"value\":\"Ensure there are no VPC firewall rules that allow unrestricted outbound access \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VPC Firewall with  unrestricted outbound  access\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"VPC Firewall with Egress ports  should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','POSTGRESPortAccess','Deny Public Access to PostgreSQL Port 5432','To secure your Google Cloud Virtual Private Cloud (VPC) and reduce the attack surface, it is important to set firewall rules that restrict access to the PostgreSQL Server Port 5432 to trusted IP addresses or ranges only. Ensure only authorized traffic is allowed by blocking unrestricted access to this port (i.e., 0.0.0.0/0)','update your VPC network firewall rules configuration in order to restrict PostgreSQL Database Server access to trusted, authorized IP addresses or IP ranges','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-postgresql-port-5432','vpcfirewall','gcp','VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vpc-network-firewall-security\",\"key\":\"policyKey\"},{\"key\":\"port\",\"value\":\"tcp:5432,tcp:0-65535\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":false,\"isMandatory\":true,\"description\":\"Ports to deny access\",\"defaultVal\":\"tcp:5432,tcp:0-65535\",\"displayName\":\"Port\"},{\"key\":\"description\",\"value\":\"Ensure there are no VPC firewall rules that allow unrestricted inbound access on Postgres DB port 5432 \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VPC Firewall with Postgres DB port  5432 was publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"VPC Firewall with POSTGRES DB  port 5432  should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','RPDPortAcess','Deny Public Access to RDP Port 3389','To secure your Google Cloud Virtual Private Cloud (VPC) and reduce the attack surface, it is important to set firewall rules that restrict access to the Remote Desktop Protocol (RDP) on TCP port 3389 to trusted IP addresses or ranges only. Ensure only authorized traffic is allowed by blocking unrestricted access to this port (i.e., 0.0.0.0/0).','update your VPC network firewall rule configuration in order to restrict Remote Desktop Protocol access to trusted, authorized IP addresses','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-rdp-port-3389','vpcfirewall','gcp','RDP_port_3389_should_not_be_publicly_accessible','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vpc-network-firewall-security\",\"key\":\"policyKey\"},{\"key\":\"port\",\"value\":\"tcp:3389,tcp:0-65535\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":false,\"isMandatory\":true,\"description\":\"Ports to deny access\",\"defaultVal\":\"tcp:3389,tcp:0-65535\",\"displayName\":\"Port\"},{\"key\":\"description\",\"value\":\"Ensure there are no VPC firewall rules that allow unrestricted inbound access on RDP port 3389\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VPC Firewall with RDP port 3389 was publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"VPC Firewall with RDP port 3389 should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"RDP_port_3389_should_not_be_publicly_accessible\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VPC_firewall_RPC_port_should_not_be_publicly_accessible','VPC_firewall_RPC_port_should_not_be_publicly_accessible','RPCPortAccess','Deny Public Access to RPC Port 135','To reduce the attack surface and implement the principle of least privilege, ensure that Microsoft Azure network security groups (NSGs) do not allow unrestricted access to TCP port 135 (i.e., 0.0.0.0/0). MSMQ (Message Queuing Message Queue) and other Microsoft Windows/Windows Server software use RPC TCP port 135 for client-server communications.','update your VPC network firewall rules configuration in order to restrict Remote Procedure Call (RPC)  to trusted, authorized IP addresses or IP ranges','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-rpc-port-25','vpcfirewall','gcp','VPC_firewall_RPC_port_should_not_be_publicly_accessible','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vpc-network-firewall-security\",\"key\":\"policyKey\"},{\"key\":\"port\",\"value\":\"tcp:135,tcp:0-65535\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":false,\"isMandatory\":true,\"description\":\"Ports to deny access\",\"defaultVal\":\"tcp:135,tcp:0-65535\",\"displayName\":\"Port\"},{\"key\":\"description\",\"value\":\"Ensure there are no VPC firewall rules that allow unrestricted inbound access on  RPC port 135 \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VPC Firewall with Postgres RPC port  135 was publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"VPC Firewall with RPC  port 135  should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"VPC_firewall_RPC_port_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"VPC_firewall_RPC_port_should_not_be_publicly_accessible\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"VPC_firewall_RPC_port_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_RPC_port_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VPC_firewall_SMTP_port_should_not_be_publicly_accessible','VPC_firewall_SMTP_port_should_not_be_publicly_accessible','SMTPPortAccess','Deny Public Access to SMTP Port 25','TCP port 25 is typically utilized by Simple Mail Transfer Protocol (SMTP) servers for email transmission. Enabling unrestricted inbound/ingress access on TCP port 25 (SMTP) through VPC network firewall rules can create opportunities for various malicious activities, including hacking, spamming, Shellshock, and Distributed Denial-of-Service (DDoS) attacks.\n\nTo reduce the risk of common security threats for the SMTP server instances associated with these firewall rules, Google Cloud VPC network firewall rules should not allow unrestricted access (i.e., 0.0.0.0/0) on TCP port 25. ','update your VPC network firewall rules configuration in order to restrict Simple Mail Transfer Protocol (SMTP) access to trusted, authorized IP addresses or IP ranges','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-smtp-port-25','vpcfirewall','gcp','VPC_firewall_SMTP_port_should_not_be_publicly_accessible','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vpc-network-firewall-security\",\"key\":\"policyKey\"},{\"key\":\"port\",\"value\":\"tcp:25,tcp:0-65535\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":false,\"isMandatory\":true,\"description\":\"Ports to deny access\",\"defaultVal\":\"tcp:25,tcp:0-65535\",\"displayName\":\"Port\"},{\"key\":\"description\",\"value\":\"Ensure there are no VPC firewall rules that allow unrestricted inbound access on  SMTP port 25 \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VPC Firewall with Postgres SMTP port  25 was publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"VPC Firewall with SMTP  port 25  should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"VPC_firewall_SMTP_port_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"VPC_firewall_SMTP_port_should_not_be_publicly_accessible\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"VPC_firewall_SMTP_port_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_SMTP_port_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','SMTPPortAccess','Deny Public Access to SQL Port 1433','Enabling unrestricted inbound access on TCP port 1433 through VPC network firewall rules for Microsoft SQL Server can increase the risk of hacking, brute-force attacks, and SQL injection attacks. To reduce the attack surface for the virtual machine instances associated with these firewall rules, Google Cloud VPC network firewall rules should not permit unrestricted access (i.e., 0.0.0.0/0) on TCP port 1433. ','update your VPC network firewall rules configuration in order to restrict SQL Server access to trusted, authorized IP addresses or IP ranges','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-sql-port-1433','vpcfirewall','gcp','VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vpc-network-firewall-security\",\"key\":\"policyKey\"},{\"key\":\"port\",\"value\":\"tcp:1433,tcp:0-65535\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":false,\"isMandatory\":true,\"description\":\"Ports to deny access\",\"defaultVal\":\"tcp:1433,tcp:0-65535\",\"displayName\":\"Port\"},{\"key\":\"description\",\"value\":\"Ensure there are no VPC firewall rules that allow unrestricted inbound access on  SQL server port 1433 \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VPC Firewall with Postgres SMTP port  25 was publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"VPC Firewall with SQL server  port 1433  should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','SSHPortAcess','Deny Public Access to SSH Port 22','To implement the principle of least privilege and reduce the attack surface, review the inbound rules of your Google Cloud Virtual Private Cloud (VPC) firewall for any rules that allow unrestricted access (i.e., 0.0.0.0/0) on TCP port 22. If such rules are found, restrict them to only trusted IP addresses or IP ranges to ensure that only authorized traffic is allowed access.','update your VPC network firewall rule configuration in order to restrict SSH access to trusted, authorized IP addresses','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-ssh-port-22','vpcfirewall','gcp','SSH_port_22_should_not_be_publicly_accessible','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vpc-network-firewall-security\",\"key\":\"policyKey\"},{\"key\":\"port\",\"value\":\"tcp:22,tcp:0-65535\",\"isValueNew\":true,\"encrypt\":false,\"isEdit\":false,\"isMandatory\":true,\"description\":\"Ports to deny access\",\"defaultVal\":\"tcp:22,tcp:0-65535\",\"displayName\":\"Port\"},{\"key\":\"description\",\"value\":\"Ensure that no VPC firewall rules allow unrestricted inbound access on SSH port 22\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"VPC Firewall with SSH port 22 was publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"VPC Firewall with RDP port 3389 should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"VPC_firewall_SSH_port_22_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"SSH_port_22_should_not_be_publicly_accessible\",\"policyRestUrl\":\"\",\"targetType\":\"vpcfirewall\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"VPC_firewall_SSH_port_22_should_not_be_publicly_accessible\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-09','2022-06-09','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Vaults_DiagnosticLogs_version-1_VDR_vaults','azure_VDR_vaults','VDR','Enable Diagnostic Logs in Key Vault','Enabling diagnostic logs in Key Vault is important to monitor and audit activities, troubleshoot issues, comply with regulatory requirements related to data protection and security, and improve overall security posture by identifying potential vulnerabilities and taking proactive measures to prevent security threats.','Diagnostic logs in Key Vault should be enabled','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#disable-key-vault-diagnostic-logs','vaults','azure','VDR','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"cf820ca0-f99e-4f3e-84fb-66e913812d21\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Vaults_DiagnosticLogs_version-1_VDR_vaults\",\"autofix\":false,\"alexaKeyword\":\"VDR\",\"policyRestUrl\":\"\",\"targetType\":\"vaults\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_VDR_vaults\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_VDR_vaults','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-30','2019-11-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('VpcFlowLogsEnabled_version-1_VpcFlowLogsEnabled_vpc','aws_account_should_have_vpclogs_enabled','VpcFlowLogsEnabled','Enable VPC Flowlogs for all VPCs','Enabling VPC Flow Logs for all VPCs is important to monitor and analyze network traffic within a VPC environment, investigate security incidents, comply with regulatory requirements related to data protection and security, and improve overall security posture by identifying potential vulnerabilities and taking proactive measures to prevent security threats.','Enable VPC flow logs','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-vpc-flow-logs','vpc','aws','VpcFlowLogsEnabled','{\"params\":[{\"encrypt\":\"false\",\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":\"false\",\"value\":\"check-for-vpc-flowlog-enabled\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[{\"encrypt\":false,\"value\":\"123\",\"key\":\"abc\"}],\"policyId\":\"VpcFlowLogsEnabled_version-1_VpcFlowLogsEnabled_vpc\",\"autofix\":false,\"alexaKeyword\":\"VpcFlowLogsEnabled\",\"policyRestUrl\":\"\",\"targetType\":\"vpc\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_account_should_have_vpclogs_enabled\",\"policyType\":\"ManagePolicy\"}','0 0/12 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_account_should_have_vpclogs_enabled','high','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2017-08-11','2018-08-31','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('Workflows_DiagnlsticLogs_version-1_WDR_workflows','azure_WDR_workflows','WDR','Enable Diagnostic Logs for Azure Logic Apps Workflows','Enabling diagnostic logs in Logic Apps in Azure is important because it provides valuable information for troubleshooting, performance analysis, and activity monitoring. Diagnostic logs capture information such as request and response details, workflow run history, and errors encountered during execution. Without diagnostic logs, identifying the root cause of issues or errors can be difficult and lead to longer downtimes that can negatively impact business operations.','This enables you to recreate activity trails to use for investigation purposes,when a security incident occurs or when your network is compromised','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#disable-logic-app-diagnostic-logs','workflows','azure','WDR','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"34f95f76-5386-4de7-b824-0d8478470c9d\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"Workflows_DiagnlsticLogs_version-1_WDR_workflows\",\"autofix\":false,\"alexaKeyword\":\"WDR\",\"policyRestUrl\":\"\",\"targetType\":\"workflows\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"azure_WDR_workflows\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/azure_WDR_workflows','high','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2019-09-30','2019-11-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('cloudfront-check-for-unauthorized-html_version-1_Cloudfront_Unauthorized_HTML_Content_cloudfront','aws_cloudfront_shouldnothave_unauthorized_html_content','Cloudfront_Unauthorized_HTML_Content','Restrict Unauthorized HTML Content on Cloudfront','To prevent security risks in Cloudfront, only approved HTML content should be served to users. This can be done by configuring Cloudfront to whitelist approved sources through custom headers or cookies to verify the source of the HTML content. AWS WAF can also block requests that do not meet specific criteria. These measures can protect against various security risks, such as cross-site scripting attacks, phishing attacks, and malware infections.',NULL,'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Restrict-Unauthorized-HTML-Content-on-Cloudfront','cloudfront','aws','Cloudfront_Unauthorized_HTML_Content','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-unauthorized-html-cloudfront-distribution\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"cloudfront-check-for-unauthorized-html_version-1_Cloudfront_Unauthorized_HTML_Content_cloudfront\",\"autofix\":false,\"alexaKeyword\":\"Cloudfront_Unauthorized_HTML_Content\",\"policyRestUrl\":\"\",\"targetType\":\"cloudfront\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_cloudfront_shouldnothave_unauthorized_html_content\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_cloudfront_shouldnothave_unauthorized_html_content','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'asgc','2019-04-26','2019-04-26','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser','aws_iamuser_shouldnothave_corenetwork_privileges','core-networking-iam-user-with-unapproved-access','Restrict Core Networking Privileges to Non-Allow listed IAM Users ','Restricting core networking privileges to non-allowlisted IAM users is an important security best practice in AWS that reduces the risk of unauthorized access to your network resources. This is important because it minimizes the attack surface, mitigates the risk of insider threats, and ensures compliance with regulatory and compliance frameworks. By limiting access to only non-allowlisted IAM users with specific permissions, you can protect your network resources from unauthorized access, reduce the risk of data breaches, and ensure that only legitimate users have access.','Attach deny policy / remove elevated permissions,If you want exception you may please request exception for this rule through PacBot.','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Restrict-Core-Networking-Privileges-to-Non-Allow-listed-IAM-Users','iamuser','aws','core-networking-iam-user-with-unapproved-access','{\"params\":[{\"key\":\"roleIdentifyingString\",\"value\":\"role/paladincloud_ro\",\"encrypt\":false},{\"key\":\"unApprovedIamActions\",\"value\":\"ec2:CreateDefaultSubnet,ec2:CreateDefaultVpc,ec2:CreateInternetGateway,ec2:CreateSubnet,ec2:CreateVpc,ec2:CreateVpcEndpoint,ec2:CreateVpcEndpointConnectionNotification,ec2:CreateVpcEndpointServiceConfiguration,ec2:CreateVpcPeeringConnection,ec2:CreateVpnConnection,ec2:CreateVpnConnectionRoute,ec2:CreateVpnGateway,ec2:ModifySubnetAttribute,ec2:ModifyVpcAttribute,ec2:ModifyVpcEndpoint,ec2:ModifyVpcEndpointConnectionNotification,ec2:ModifyVpcEndpointServiceConfiguration,ec2:ModifyVpcEndpointServicePermissions,ec2:ModifyVpcPeeringConnectionOptions,ec2:ModifyVpcTenancy,ec2:MoveAddressToVpc,ec2:AttachInternetGateway,ec2:CreateEgressOnlyInternetGateway,ec2:AttachVpnGateway.ec2:*,*\",\"encrypt\":false,\"isEdit\":true,\"isMandatory\":true,\"description\":\"IAM roles should not have these permissions\",\"defaultVal\":\"ec2:CreateDefaultSubnet,ec2:CreateDefaultVpc,ec2:CreateInternetGateway,ec2:CreateSubnet,ec2:CreateVpc,ec2:CreateVpcEndpoint,ec2:CreateVpcEndpointConnectionNotification,ec2:CreateVpcEndpointServiceConfiguration,ec2:CreateVpcPeeringConnection,ec2:CreateVpnConnection,ec2:CreateVpnConnectionRoute,ec2:CreateVpnGateway,ec2:ModifySubnetAttribute,ec2:ModifyVpcAttribute,ec2:ModifyVpcEndpoint,ec2:ModifyVpcEndpointConnectionNotification,ec2:ModifyVpcEndpointServiceConfiguration,ec2:ModifyVpcEndpointServicePermissions,ec2:ModifyVpcPeeringConnectionOptions,ec2:ModifyVpcTenancy,ec2:MoveAddressToVpc,ec2:AttachInternetGateway,ec2:CreateEgressOnlyInternetGateway,ec2:AttachVpnGateway.ec2:*,*\",\"displayName\":\"Unapproved IAM actions\"},{\"key\":\"splitterChar\",\"value\":\",\",\"encrypt\":false},{\"key\":\"policyKey\",\"value\":\"iam-user-with-unapproved-access\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser\",\"autofix\":false,\"alexaKeyword\":\"core-networking-iam-user-with-unapproved-access\",\"policyRestUrl\":\"\",\"targetType\":\"iamuser\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"aws_iamuser_shouldnothave_corenetwork_privileges\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_iamuser_shouldnothave_corenetwork_privileges','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'asgc','2019-02-12','2019-02-23','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('kms_keys_rotation_period_within_90_days','kms_keys_rotation_period_within_90_days','Enforce 90 days rotation period of KMS encryption keys','Rotate Key Management Service Encryption Keys Every 90 Days','Rotating Key Management Service (KMS) encryption keys every 90 days can improve security by reducing the risk of unauthorized access or data breaches, meet compliance requirements, follow best practices in security, and provide better control over access to sensitive data.','set the kms keys rotation period flag to 90 days','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#rotate-key-management-service-encryption-keys-every-90-days-1','kmskey','gcp','kms_keys_rotation_period_within_90_days','{\"params\":[{\"encrypt\":false,\"value\":\"check-kms-key-rotation-period\",\"key\":\"policyKey\"},{\"key\":\"description\",\"value\":\"Ensure that all your Cloud Key Management Service (KMS) keys are rotated within a period of 90 days in order to meet security and compliance requirements.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Kms key rotation period is greater than 90 days.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_kmskey/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enforce 90 days rotation period of KMS encryption keys\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"kms_keys_rotation_period_within_90_days\",\"autofix\":false,\"alexaKeyword\":\"kms_keys_rotation_period_within_90_days\",\"policyRestUrl\":\"\",\"targetType\":\"kmskey\",\"pac_ds\":\"gcp\",\"assetGroup\":\"gcp\",\"policyUUID\":\"kms_keys_rotation_period_within_90_days\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/kms_keys_rotation_period_within_90_days','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-09-06','2022-09-06','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('trusted_ms_services_access_storage_account','trusted_ms_services_access_storage_account','Enable trusted microsoft services to access Storage Account','Enable Trusted Microsoft Services to Access Storage Account','Enabling Trusted Microsoft Services to access your storage account provides seamless integration, simplified management, security, scalability, and improved productivity. It allows for secure and efficient integration with various Azure services while adhering to the principle of least privilege, making it easier to scale and manage access permissions.',NULL,'https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#enable-trusted-microsoft-services-to-access-storage-account','storageaccount','azure','trustedMicrosoftservicesAccesstoStorageAccount','{\"params\":[{\"encrypt\":false,\"value\":\"Enable-Trusted-Microsoft-Services-for-storage-Account-Access\",\"key\":\"policyKey\"},{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\",\"isMandatory\":true,\"description\":\"Assets should have these mandatory tags\",\"defaultVal\":\"Application,Environment,Stack,Role\",\"displayName\":\"Mandatory tags\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"operations\",\"key\":\"policyCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"policyOwner\"}],\"environmentVariables\":[],\"policyId\":\"trusted_ms_services_access_storage_account\",\"autofix\":false,\"alexaKeyword\":\"CheckStorageAccountPublicAccess\",\"policyRestUrl\":\"\",\"targetType\":\"storageaccount\",\"pac_ds\":\"azure\",\"assetGroup\":\"azure\",\"policyUUID\":\"trusted_ms_services_access_storage_account\",\"policyType\":\"ManagePolicy\"}','0 0/6 * * ? *',NULL,NULL,'ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/trusted_ms_services_access_storage_account','medium','operations','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2022-06-03','2022-06-03','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('remove_unused_load_balancer','remove_unused_load_balancer','Delete Unused Load Balancer','Delete Unused Load Balancer','Identify any unused load balancers available within your Azure cloud account and delete them in order to eliminate unnecessary costs and meet compliance requirements when it comes to cloud resource management.','Every unused load balancer should be deleted for cost optimization and better management of your cloud resources.','','loadbalancer','azure','remove_unused_load_balancer','{"params":[{"encrypt":false,"value":"Check-for-Unused-Load-Balancers","key":"policyKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags","isMandatory":true,"description":"Assets should have these mandatory tags","defaultVal":"Application,Environment,Stack,Role","displayName":"Mandatory tags"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"policyCategory"},{"encrypt":false,"value":"","key":"policyOwner"}],"environmentVariables":[],"policyId":"remove_unused_load_balancer","autofix":false,"alexaKeyword":"remove_unused_load_balancer","policyRestUrl":"","targetType":"loadbalancer","pac_ds":"azure","assetGroup":"azure","policyUUID":"remove_unused_load_balancer","policyType":"ManagePolicy"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/remove_unused_load_balancer','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2023-07-19','2023-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('remove_unused_scale_set','remove_unused_scale_set',' Delete Unused Scale Set',' Delete Unused Scale Set','Identify any empty virtual machine scale sets available within your Microsoft Azure cloud account and delete them in order to eliminate unnecessary costs and meet compliance requirements when it comes to unused resources.','Every empty virtual machine scale set should be removed for cost optimization and better management of your cloud resources.','','virtualmachine','azure','remove_unused_scale_set','{"params":[{"encrypt":false,"value":"check-for-unused-Virtual-machine-scale-set","key":"policyKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags","isMandatory":true,"description":"Assets should have these mandatory tags","defaultVal":"Application,Environment,Stack,Role","displayName":"Mandatory tags"},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"policyCategory"},{"encrypt":false,"value":"","key":"policyOwner"}],"environmentVariables":[],"policyId":"remove_unused_scale_set","autofix":false,"alexaKeyword":"remove_unused_scale_set","policyRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","assetGroup":"azure","policyUUID":"remove_unused_scale_set","policyType":"ManagePolicy"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/remove_unused_scale_set','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2023-07-19','2023-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('remove_unused_vm_disk','remove_unused_vm_disk','Delete Unused VM Disk',' Delete Unused VM Disk','Identify any unattached (unused) Microsoft Azure virtual machine disk volumes available within your Azure cloud account and delete them in order to lower the cost of your monthly bill and reduce the risk of sensitive data leakage.','Every unused virtual machine disk should be removed for cost optimization and better management of your cloud resources.','','disk','azure','remove_unused_vm_disk','{"params":[{"encrypt":false,"value":"check-for-unused-disk","key":"policyKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags","isMandatory":true,"description":"Assets should have these mandatory tags","defaultVal":"Application,Environment,Stack,Role","displayName":"Mandatory tags"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"policyCategory"},{"encrypt":false,"value":"","key":"policyOwner"}],"environmentVariables":[],"policyId":"remove_unused_vm_disk","autofix":false,"alexaKeyword":"remove_unused_vm_disk","policyRestUrl":"","targetType":"disk","pac_ds":"azure","assetGroup":"azure","policyUUID":"remove_unused_vm_disk","policyType":"ManagePolicy"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/remove_unused_vm_disk','medium','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2023-07-19','2023-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('delete_unused_load_balancer','delete_unused_load_balancer','Delete Unused Load Balancer','Delete Unused Load Balancer','Identify any unused load balancers available within your Gcp cloud account and delete them in order to eliminate unnecessary costs and meet compliance requirements when it comes to cloud resource management.','Every unused load balancer should be deleted for cost optimization and better management of your cloud resources.','','gcploadbalancer','gcp','delete_unused_load_balancer','{"params":[{"encrypt":false,"value":"delete-unused-load-balancer","key":"policyKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags","isMandatory":true,"description":"Assets should have these mandatory tags","defaultVal":"Application,Environment,Stack,Role","displayName":"Mandatory tags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"cost","key":"policyCategory"},{"encrypt":false,"value":"","key":"policyOwner"}],"environmentVariables":[],"policyId":"delete_unused_load_balancer","autofix":false,"alexaKeyword":"delete_unused_load_balancer","policyRestUrl":"","targetType":"gcploadbalancer","pac_ds":"gcp","assetGroup":"gcp","policyUUID":"delete_unused_load_balancer","policyType":"ManagePolicy"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/delete_unused_load_balancer','high','cost','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2023-07-19','2023-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('delete_unused_vm_disk','delete_unused_vm_disk',' Delete Unused VM Disk','Delete Unused VM Disk','Identify any unattached (unused) Gcp virtual machine disk volumes available within yourcloud account and delete them in order to lower the cost of your monthly bill and reduce the risk of sensitive data leakage.','Every unused virtual machine disk should be removed for cost optimization and better management of your cloud resources.','','vminstance','gcp','delete_unused_vm_disk','{"params":[{"encrypt":false,"value":"delete-unused-vm-disk","key":"policyKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags","isMandatory":true,"description":"Assets should have these mandatory tags","defaultVal":"Application,Environment,Stack,Role","displayName":"Mandatory tags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"cost","key":"policyCategory"},{"encrypt":false,"value":"","key":"policyOwner"}],"environmentVariables":[],"policyId":"delete_unused_vm_disk","autofix":false,"alexaKeyword":"delete_unused_vm_disk","policyRestUrl":"","targetType":"vminstance","pac_ds":"gcp","assetGroup":"gcp","policyUUID":"delete_unused_vm_disk","policyType":"ManagePolicy"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/delete_unused_vm_disk','high','cost','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2023-07-19','2023-07-19','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('deny_public_access_to_rdp_Port_3389','deny_public_access_to_rdp_Port_3389','Deny Public Access to Security Group on RDP Port 3389','Deny Public Access to Security Group on RDP Port 3389','','','','sg','aws','deny_public_access_to_rdp_Port_3389','{\"params\":[{\"key\":\"policyKey\",\"value\":\"check-for-security-group-global-access\",\"encrypt\":false},{\"key\":\"cidrIp\",\"value\":\"0.0.0.0/0\",\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"encrypt\":false},{\"key\":\"portToCheck\",\"value\":\"3389\",\"encrypt\":false},{\"key\":\"cidripv6\",\"value\":\"::/0\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"policyCategory\"}],\"environmentVariables\":[],\"policyId\":\"deny_public_access_to_rdp_Port_3389\",\"autofix\":false,\"alexaKeyword\":\"deny_public_access_to_rdp_Port_3389\",\"policyRestUrl\":\"\",\"targetType\":\"sg\",\"pac_ds\":\"aws\",\"assetGroup\":\"aws\",\"policyUUID\":\"deny_public_access_to_rdp_Port_3389\",\"policyType\":\"ManagePolicy\"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/deny_public_access_to_rdp_Port_3389','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'','2023-10-04','2023-10-04','ENABLED');
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('enable_aws_config_service','enable_aws_config_service','Enable AWS Config service','Enable AWS Config service','AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.','Enabled aws config in all regions.','','account','aws','enable_aws_config_service','{"params":[{"encrypt":false,"value":"check-aws-config-enabled","key":"policyKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags","isMandatory":true,"description":"Assets should have these mandatory tags","defaultVal":"Application,Environment,Stack,Role","displayName":"Mandatory tags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"policyCategory"},{"encrypt":false,"value":"","key":"policyOwner"}],"environmentVariables":[],"policyId":"enable_aws_config_service","autofix":false,"alexaKeyword":"enable_aws_config_service","policyRestUrl":"","targetType":"account","pac_ds":"aws","assetGroup":"aws","policyUUID":"enable_aws_config_service","policyType":"ManagePolicy"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/enable_aws_config_service','high','security','0','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2023-10-31','2023-10-31','ENABLED');

DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aws_vm_tenable_scanned_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='tenable_aws_vm_scanned_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='remove_unused_scale_set';
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('remove_unused_scale_set','remove_unused_scale_set',' Delete Unused Scale Set',' Delete Unused Scale Set','Identify any empty virtual machine scale sets available within your Microsoft Azure cloud account and delete them in order to eliminate unnecessary costs and meet compliance requirements when it comes to unused resources.','Every empty virtual machine scale set should be removed for cost optimization and better management of your cloud resources.','','virtualmachinescaleset','azure','remove_unused_scale_set','{"params":[{"encrypt":false,"value":"check-for-unused-Virtual-machine-scale-set","key":"policyKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags","isMandatory":true,"description":"Assets should have these mandatory tags","defaultVal":"Application,Environment,Stack,Role","displayName":"Mandatory tags"},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"policyCategory"},{"encrypt":false,"value":"","key":"policyOwner"}],"environmentVariables":[],"policyId":"remove_unused_scale_set","autofix":false,"alexaKeyword":"remove_unused_scale_set","policyRestUrl":"","targetType":"virtualmachinescaleset","pac_ds":"azure","assetGroup":"azure","policyUUID":"remove_unused_scale_set","policyType":"ManagePolicy"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/remove_unused_scale_set','low','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2023-07-19','2023-07-19','ENABLED');

DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='delete_unused_vm_disk';
INSERT  IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('delete_unused_vm_disk','delete_unused_vm_disk',' Delete Unused VM Disk','Delete Unused VM Disk','Identify any unattached (unused) Gcp virtual machine disk volumes available within yourcloud account and delete them in order to lower the cost of your monthly bill and reduce the risk of sensitive data leakage.','Every unused virtual machine disk should be removed for cost optimization and better management of your cloud resources.','','gcpdisks','gcp','delete_unused_vm_disk','{"params":[{"encrypt":false,"value":"delete-unused-vm-disk","key":"policyKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags","isMandatory":true,"description":"Assets should have these mandatory tags","defaultVal":"Application,Environment,Stack,Role","displayName":"Mandatory tags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"cost","key":"policyCategory"},{"encrypt":false,"value":"","key":"policyOwner"}],"environmentVariables":[],"policyId":"delete_unused_vm_disk","autofix":false,"alexaKeyword":"delete_unused_vm_disk","policyRestUrl":"","targetType":"gcpdisks","pac_ds":"gcp","assetGroup":"gcp","policyUUID":"delete_unused_vm_disk","policyType":"ManagePolicy"}','0 0/6 * * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/delete_unused_vm_disk','high','cost','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'ASGC','2023-07-19','2023-07-19','ENABLED');
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#articleTOC_104',policyDesc='Deleting unused VM disks in GCP is essential for cost savings, resource management, security, and performance optimization. It streamlines your cloud environment, reduces expenses, and ensures compliance with data protection regulations.' where policyId='delete_unused_vm_disk';

INSERT IGNORE INTO cf_PolicyTable (policyId,policyUUID,policyName,policyDisplayName,policyDesc,resolution,resolutionUrl,targetType,assetGroup,alexaKeyword,policyParams,policyFrequency,policyExecutable,policyRestUrl,policyType,policyArn,status,userId,createdDate,modifiedDate,severity,category,autoFixAvailable,autoFixEnabled,allowList,waitingTime,maxEmailNotification,templateName,templateColumns,fixType,warningMailSubject,fixMailSubject,warningMessage,fixMessage,violationMessage,elapsedTime)VALUES('AWSVMScannedByTenable','tenable_aws_vm_scanned_rule','Scanning Amazon VMs with Tenable Security','Scan Amazon VM with Tenable Security','Tenable Security\'s container security platform can scan VMs in a client\'s Amazon account to identify any VMs not scanned for vulnerabilities. There are two possible reasons for a resource (VM) not being scanned:  it has no vulnerabilities, or its metadata has not been collected by cloud discovery. The primary objective of this process is to ensure that all VMs in the account are scanned for vulnerabilities, thereby mitigating potential security risks.','create/register in tenable Sass platform and add AWS connector for scan and get it scanned regularly','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#Scan-Amazon-EC2-Image-with-Tenable-Security','ec2','aws','AWSVMScannedByTenable','{"assetGroup":"aws","policyId":"AWSVMScannedByTenable","policyRestUrl":"","environmentVariables":[],"policyUUID":"tenable_aws_vm_scanned_rule","policyType":"ManagePolicy","pac_ds":"aws","targetType":"ec2","params":[{"defaultVal":"30","encrypt":false,"isEdit":true,"displayName":"Target","description":"Target in days","value":"30","key":"target","isMandatory":true},{"isValueNew":true,"defaultVal":"7","encrypt":false,"isEdit":true,"displayName":"Discovered days range","description":"Discovered days in number","value":"7","key":"discoveredDaysRange","isMandatory":true},{"isValueNew":true,"encrypt":false,"value":"check-for-vms-scanned-by-tenable","key":"policyKey"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"policyCategory"}],"autofix":false,"alexaKeyword":"AWSVMScannedByTenable"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/tenable_aws_vm_scanned_rule','ENABLED','ASGC',now(),now(),'high','security',false,false,null,24,1,null,null,null,null,null,null,null,null,24);
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aws_vm_high_vulnerabilities_tenable_scanned_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='tenable_aws_vm_high_vulnerabilities_scanned_rule';
INSERT IGNORE INTO cf_PolicyTable (policyId,policyUUID,policyName,policyDisplayName,policyDesc,resolution,resolutionUrl,targetType,assetGroup,alexaKeyword,policyParams,policyFrequency,policyExecutable,policyRestUrl,policyType,policyArn,status,userId,createdDate,modifiedDate,severity,category,autoFixAvailable,autoFixEnabled,allowList,waitingTime,maxEmailNotification,templateName,templateColumns,fixType,warningMailSubject,fixMailSubject,warningMessage,fixMessage,violationMessage,elapsedTime)VALUES('HighVMVulnerabilitiesScannedByTenable','tenable_aws_vm_high_vulnerabilities_scanned_rule','Scan and Remediate High Vulnerability VM Policy','Tenable found High Vulnerabilities for AWS VM','Vulnerabilities in VM created or updated within a configurable threshold timeline of 10 days are scanned using Tenable\'s vulnerability data to gather key information about the vulnerabilities, including the CVE number, solution, resource, Tenable severity classification, and description.Scanning and remediating high-vulnerability VMs in AWS can proactively identify and mitigate potential security threats, minimizing the risk of security breaches and other damage to the cloud infrastructure.','create/register in Tenable Sass platform and add image repositories for scan and get it scanned regularly','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#scan-and-remediate-high-vulnerability-images-policy','ec2','aws','HighVMVulnerabilitiesScannedByTenable','{"assetGroup":"aws","policyId":"HighVMVulnerabilitiesScannedByTenable","policyRestUrl":"","environmentVariables":[],"policyUUID":"tenable_aws_vm_high_vulnerabilities_scanned_rule","policyType":"ManagePolicy","pac_ds":"aws","targetType":"ec2","params":[{"defaultVal":"30","encrypt":false,"isEdit":true,"displayName":"Target","description":"Target in days","value":"30","key":"target","isMandatory":true},{"isValueNew":true,"encrypt":false,"value":"/tenable-vm-vulnerability/_search","key":"esTenableVMUrl"},{"isValueNew":true,"defaultVal":"7","encrypt":false,"isEdit":true,"displayName":"Discovered days range","description":"Discovered days in number","value":"7","key":"discoveredDaysRange","isMandatory":true},{"isValueNew":true,"encrypt":false,"value":"check-for-vm-vulnerabilities-scanned-by-tenable","key":"policyKey"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"policyCategory"}],"autofix":false,"alexaKeyword":"HighVMVulnerabilitiesScannedByTenable"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/tenable_aws_vm_high_vulnerabilities_scanned_rule','ENABLED','ASGC',now(),now(),'high','security',false,false,null,24,1,null,null,null,null,null,null,null,null,24);
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aws_vm_critical_vulnerabilities_tenable_scanned_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='tenable_aws_vm_critical_vulnerabilities_scanned_rule';
INSERT IGNORE INTO cf_PolicyTable (policyId,policyUUID,policyName,policyDisplayName,policyDesc,resolution,resolutionUrl,targetType,assetGroup,alexaKeyword,policyParams,policyFrequency,policyExecutable,policyRestUrl,policyType,policyArn,status,userId,createdDate,modifiedDate,severity,category,autoFixAvailable,autoFixEnabled,allowList,waitingTime,maxEmailNotification,templateName,templateColumns,fixType,warningMailSubject,fixMailSubject,warningMessage,fixMessage,violationMessage,elapsedTime)VALUES('CriticalVMVulnerabilitiesScannedByTenable','tenable_aws_vm_critical_vulnerabilities_scanned_rule','Scan and Remediate Critical Vulnerability VM Policy','Tenable found Critical Vulnerabilities for AWS VM','Vulnerabilities in VM created or updated within a configurable threshold timeline of 10 days are scanned using Tenable\'s vulnerability data to gather key information about the vulnerabilities, including the CVE number, solution, resource, Tenable severity classification, and description.Scanning and remediating high-vulnerability VMs in AWS can proactively identify and mitigate potential security threats, minimizing the risk of security breaches and other damage to the cloud infrastructure.','create/register in Tenable Sass platform and add image repositories for scan and get it scanned regularly','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#scan-and-remediate-critical-vulnerability-images-policy','ec2','aws','CriticalVMVulnerabilitiesScannedByTenable','{"assetGroup":"aws","policyId":"CriticalVMVulnerabilitiesScannedByTenable","policyRestUrl":"","environmentVariables":[],"policyUUID":"tenable_aws_vm_critical_vulnerabilities_scanned_rule","policyType":"ManagePolicy","pac_ds":"aws","targetType":"ec2","params":[{"defaultVal":"30","encrypt":false,"isEdit":true,"displayName":"Target","description":"Target in days","value":"30","key":"target","isMandatory":true},{"isValueNew":true,"encrypt":false,"value":"/tenable-vm-vulnerability/_search","key":"esTenableVMUrl"},{"isValueNew":true,"defaultVal":"7","encrypt":false,"isEdit":true,"displayName":"Discovered days range","description":"Discovered days in number","value":"7","key":"discoveredDaysRange","isMandatory":true},{"isValueNew":true,"encrypt":false,"value":"check-for-vm-vulnerabilities-scanned-by-tenable","key":"policyKey"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"policyCategory"}],"autofix":false,"alexaKeyword":"CriticalVMVulnerabilitiesScannedByTenable"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/tenable_aws_vm_critical_vulnerabilities_scanned_rule','ENABLED','ASGC',now(),now(),'critical','security',false,false,null,24,1,null,null,null,null,null,null,null,null,24);
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='aws_vm_medium_vulnerabilities_tenable_scanned_rule';
DELETE IGNORE FROM  cf_PolicyTable  where policyUUID='tenable_aws_vm_medium_vulnerabilities_scanned_rule';
INSERT IGNORE INTO cf_PolicyTable (policyId,policyUUID,policyName,policyDisplayName,policyDesc,resolution,resolutionUrl,targetType,assetGroup,alexaKeyword,policyParams,policyFrequency,policyExecutable,policyRestUrl,policyType,policyArn,status,userId,createdDate,modifiedDate,severity,category,autoFixAvailable,autoFixEnabled,allowList,waitingTime,maxEmailNotification,templateName,templateColumns,fixType,warningMailSubject,fixMailSubject,warningMessage,fixMessage,violationMessage,elapsedTime)VALUES('MediumVMVulnerabilitiesScannedByTenable','tenable_aws_vm_medium_vulnerabilities_scanned_rule','Scan and Remediate Medium Vulnerability VM Policy','Tenable found Medium Vulnerabilities for AWS VM','Vulnerabilities in VM created or updated within a configurable threshold timeline of 10 days are scanned using Tenable\'s vulnerability data to gather key information about the vulnerabilities, including the CVE number, solution, resource, Tenable severity classification, and description.Scanning and remediating high-vulnerability VMs in AWS can proactively identify and mitigate potential security threats, minimizing the risk of security breaches and other damage to the cloud infrastructure.','create/register in Tenable Sass platform and add image repositories for scan and get it scanned regularly','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#scan-and-remediate-medium-vulnerability-images-policy','ec2','aws','MediumVMVulnerabilitiesScannedByTenable','{"assetGroup":"aws","policyId":"MediumVMVulnerabilitiesScannedByTenable","policyRestUrl":"","environmentVariables":[],"policyUUID":"tenable_aws_vm_medium_vulnerabilities_scanned_rule","policyType":"ManagePolicy","pac_ds":"aws","targetType":"ec2","params":[{"defaultVal":"30","encrypt":false,"isEdit":true,"displayName":"Target","description":"Target in days","value":"30","key":"target","isMandatory":true},{"isValueNew":true,"encrypt":false,"value":"/tenable-vm-vulnerability/_search","key":"esTenableVMUrl"},{"isValueNew":true,"defaultVal":"7","encrypt":false,"isEdit":true,"displayName":"Discovered days range","description":"Discovered days in number","value":"7","key":"discoveredDaysRange","isMandatory":true},{"isValueNew":true,"encrypt":false,"value":"check-for-vm-vulnerabilities-scanned-by-tenable","key":"policyKey"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"policyCategory"}],"autofix":false,"alexaKeyword":"MediumVMVulnerabilitiesScannedByTenable"}','0 0 ? * MON *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/tenable_aws_vm_medium_vulnerabilities_scanned_rule','ENABLED','ASGC',now(),now(),'medium','security',false,false,null,24,1,null,null,null,null,null,null,null,null,24);
update cf_PolicyTable set policyUUID='deny_public_access_to_ebs_snapshot' where policyId='EbsSnapShot_version-1_EbsSnapShot_snapshot';
update cf_PolicyTable set policyUUID='aws_rdssnapshot_with_public_access' where policyId='RdsSnapshotWithPublicAccess_version-1_RdsSnapshotWithPublicAccess_rdssnapshot';
-- Below line can be removed in future
UPDATE cf_PolicyTable SET policyDisplayName = 'Deny Public Access to RPC Port 135' WHERE policyId = 'VPC_firewall_RPC_port_should_not_be_publicly_accessible';
UPDATE cf_PolicyTable SET policyDisplayName = 'Delete Unused Elastic IPs' WHERE policyId = 'UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';
CREATE TABLE IF NOT EXISTS `cf_PolicyParams` (
  `policyParamsID` int(11) NOT NULL AUTO_INCREMENT,
  `policyID` varchar(200) NOT NULL,
  `paramKey` varchar(100) NOT NULL,
  `paramValue` varchar(2000) DEFAULT NULL,
  `defaultVal` varchar(2000) DEFAULT NULL,
  `isEdit` varchar(45) NOT NULL DEFAULT 'false',
  `isMandatory` varchar(45) NOT NULL DEFAULT 'false',
  `encrypt` varchar(45) NOT NULL DEFAULT 'false',
  `displayName` varchar(100) DEFAULT NULL,
  `description` varchar(2000) DEFAULT NULL,
  PRIMARY KEY (`policyParamsID`),
  UNIQUE KEY `policy_params_policyID_paramKey` (`policyID`, `paramKey`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- This procedure create unique_key constraint if not exists
DELIMITER $$
DROP PROCEDURE IF EXISTS create_unique_key_if_not_exists_for_policy_params $$
CREATE PROCEDURE create_unique_key_if_not_exists_for_policy_params()
BEGIN
 IF((SELECT COUNT(1) AS index_exists FROM information_schema.statistics WHERE TABLE_SCHEMA = DATABASE() and table_name='cf_PolicyParams' AND index_name='policy_params_policyID_paramKey') < 1) THEN
    SET @query = 'ALTER TABLE cf_PolicyParams ADD CONSTRAINT policy_params_policyID_paramKey UNIQUE (policyID,paramKey)';
    PREPARE stmt FROM @query;
    EXECUTE stmt;
  END IF;
END $$
DELIMITER ;
CALL create_unique_key_if_not_exists_for_policy_params();

INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ACMCertificate_Expiry_For_X_Days_version-1_ACMCertificate_Expiry_acmcertificate','policyKey','check-for-acm-certificate-expiry','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ACMCertificate_Expiry_For_X_Days_version-1_ACMCertificate_Expiry_acmcertificate','targetExpireDuration','90','90','true','true','false','Target expiration duration','Checks if expiry date is under given number of days');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWSAMIUnused_version-1_Unused_ami','policyKey','check-unused-ami','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWSEC2InstanceGeneration_version-1_InstanceGeneration_ec2','policyKey','check-ec2-instance-generation','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWSEC2InstanceGeneration_version-1_InstanceGeneration_ec2','oldVersions','m1.small,m1.medium,m1.large,m1.xlarge,m3.medium,m3.large,m3.xlarge,m3.2xlarge,c1.medium,c1.xlarge,c2.8xlarge,c3.large,c3.xlarge,c3.2xlarge,c3.4xlarge,c3.8xlarge,g2.2xlarge*,g2.8xlarge**,m2.xlarge,m2.2xlarge,m2.4xlarge,cr1.8xlarge,r3.large,r3.xlarge,r3.2xlarge,r3.4xlarge,r3.8xlarge,i2.xlarge,i2.2xlarge,i2.4xlarge,i2.8xlarge,hs1.8xlarge,t1.micro','m1.small,m1.medium,m1.large,m1.xlarge,m3.medium,m3.large,m3.xlarge,m3.2xlarge,c1.medium,c1.xlarge,c2.8xlarge,c3.large,c3.xlarge,c3.2xlarge,c3.4xlarge,c3.8xlarge,g2.2xlarge*,g2.8xlarge**,m2.xlarge,m2.2xlarge,m2.4xlarge,cr1.8xlarge,r3.large,r3.xlarge,r3.2xlarge,r3.4xlarge,r3.8xlarge,i2.xlarge,i2.2xlarge,i2.4xlarge,i2.8xlarge,hs1.8xlarge,t1.micro','true','true','false','Old versions','Old EC2 versions');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWSKMSKeyRotationEnabled_version-1_KeyRotationEnabled_kms','policyKey','check-kms-key-rotation-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWSVMScannedByTenable','target','30','30','true','true','false','Target','Target in days');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWSVMScannedByTenable','esTenableVMUrl','/tenable-vm-vulnerability/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWSVMScannedByTenable','discoveredDaysRange','7','7','true','true','false','Discovered days range','Discovered days in number');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWSVMScannedByTenable','policyKey','check-for-vms-scanned-by-tenable','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWSVMScannedByTenable','pluginType','tenable','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_ACM_Certificate_Expired_version-1_AWS_ACM_Certificate_Expired','policyKey','check-for-expired-acm-certificate','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_CloudTrail_Global_Services_version-1_Enable_CloudTrail_Global_Services_cloudtrail','policyKey','check-cloudtrail-global-services-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_EMR_Clusters_Enabled_Encryption_version-1_Enable_Amazon_EMR_clusters_encryption','policyKey','check-for-emr-clusters-encrypted','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_ElastiCache_Clusters_Enabled_Encryption_version-1_Enable_CloudTrail_Global_Services_cloudtrail','policyKey','check-for-elasticache-clusters-encrypted','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_ElastiCache_Clusters_Enabled_Encryption_version-1_Enable_CloudTrail_Global_Services_cloudtrail','engineType','redis','redis','true','true','false','Engine Type','Engine type for cache');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_ElastiCache_Clusters_Enabled_Encryption_version-1_Enable_CloudTrail_Global_Services_cloudtrail','engineVersion','3.2.6','3.2.6','true','true','false','Engine version','Engine version for the given engine type');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_ElasticSearch_Domain_At_Rest_Encryption_version-1_ElasticSearchDomainAtRestEncryption','policyKey','check-for-es-encrypted-at-rest','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_ElasticSearch_Domain_Encryption_Using_CMK_KMS_Key_version-1_Enable_CloudTrail_Global_Services_cloudtrail','policyKey','check-es-encrypted-using-kms-cmks','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_ElasticSearch_Domain_Node_to_Node_Encryption_version-1_ElasticSearchDomainNodeToNodeEncryption','policyKey','check-for-es-node-to-node-encrypted','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_IAM_Customer_Mnged_Policy_With_Admin_Previlege_version-1_Admin_Previlege_iampolicies','policyKey','iam-cutomer-managed-policy-with-admin-previlege','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_IAM_Role_Full_Admin_Privilege_version-1_Admin_Previlege_iamrole','policyKey','iam-role-with-admin-privilege-policy','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_IAM_Role_Full_Admin_Privilege_version-1_Admin_Previlege_iamrole','esIamPoliciesUrl','/aws/iampolicies/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_IAM_User_Full_Admin_Privilege_version-1_Admin_Privilege_iamuser','policyKey','iam-user-with-admin-privilege-policy','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_IAM_User_Full_Admin_Privilege_version-1_Admin_Privilege_iamuser','esIamPoliciesUrl','/aws/iampolicies/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_IAM_User_Full_Admin_Privilege_version-1_Admin_Privilege_iamuser','esIamGroupUrl','/aws/iamgroup/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_Support_Access_Role_version-1_Support_Access_account','policyKey','iam-role-for-aws-support-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_Support_Access_Role_version-1_Support_Access_account','policyName','AWSSupportAccess','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_Support_Access_Role_version-1_Support_Access_account','esIamRoleUrl','/aws/iamrole/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_account_security_hub_exists_version-1_enable_security_hub_account','policyKey','check-security-hub-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_account_security_hub_exists_version-1_enable_security_hub_account','regions','us-east-1','us-east-1','true','true','false','Regions','Regions to check');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_eks_cluster_encryption_enabled_version-1_enable_cluster_encryption_eks','policyKey','check-eks-cluster-encryption-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_eks_cluster_logs_enabled_version-1_enable_cluster_logs_eks','policyKey','check-eks-cluster-control-plane-logs-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_eks_cluster_public_access_disabled_version-1_disable_cluster_public_access_eks','policyKey','check-eks-cluster-endpoint-public-access-disabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_eks_cluster_version_upgrade_version-1_update_cluster_version_eks','policyKey','check-eks-cluster-version-update','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_eks_cluster_version_upgrade_version-1_update_cluster_version_eks','latestversion','1.23','1.23','true','true','false','Latest EKS cluster version','EKS version should be equal to or higher than the given version');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_rootaccount_hardware_MFA_version-1_enable_harware_mfa_account','policyKey','check-for-hardware-MFA-root-account','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWS_user_permissions_without_group_version-1_user_policy_via_group_iamuser','policyKey','iam-permissions-through-group','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Access_Through_Internet_version-1_AIE_virtualmachine','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Access_Through_Internet_version-1_AIE_virtualmachine','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Access_Through_Internet_version-1_AIE_virtualmachine','policyDefinitionName','9daedab3-fb2d-461e-b861-71790eead4f6','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Access_Through_Internet_version-1_AIE_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account','filtername','AWS_CONF_CHANGES_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account','filtername','AWS_ORG_CHANGES_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account','filtername','CT_CFGN_CHANGES_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account','filtername','CUST_CMK_CHANGES_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account','filtername','IAM_POL_CHANGES_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account','filtername','MC_AUTH_FAIL_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account','filtername','MC_SIGNIN_WO_MFA_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account','filtername','NACL_CHANGES_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account','filtername','NTWK_GTWY_CHANGES_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account','filtername','USAGE_OF_ROOT_ACC_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account','filtername','ROUTE_TBL_CHANGES_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account','filtername','S3_BUCK_CHANGES_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1_EnableCloudwatchAlarm_account','filtername','SEC_GRP_CHANGES_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account','filtername','UNAUTH_API_CALLS_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account','policyKey','check-cloudwatch-alarm-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account','metricname','CloudTrailEventCount','CloudTrailEventCount','true','true','false','Metric name for cloudwatch alarm','Metric name should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account','metricnamespace','CloudTrailMetrics','CloudTrailMetrics','true','true','false','Metric namespace for cloudwatch alarm','Metric namespace should be equal to the given name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account','filtername','VPC_CHANGES_FILTER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Adaptive_App_Control_version-1_AAC_virtualmachine','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Adaptive_App_Control_version-1_AAC_virtualmachine','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Adaptive_App_Control_version-1_AAC_virtualmachine','policyDefinitionName','47a6b606-51aa-4496-8bb7-64b11cf66adc','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Adaptive_App_Control_version-1_AAC_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AmazonRDSIdleDBInstancesRule_version-1_AmazonRDSIdleDBInstancesRule_rdsdb','checkId','Ti39halfu8','Ti39halfu8','false','true','false','Check Id','Check Id Keyword');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AmazonRDSIdleDBInstancesRule_version-1_AmazonRDSIdleDBInstancesRule_rdsdb','policyKey','check-for-amazon-RDS-idle-DB-instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AmazonRDSIdleDBInstancesRule_version-1_AmazonRDSIdleDBInstancesRule_rdsdb','esServiceURL','/aws_checks/checks_resources/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Attached-EBS-volumes-are-encrypted_version-1_Attached_EBS_volumes_should_be_encrypted','policyKey','check-for-ebs-snapshot-should-be-encrypted','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Attached-EBS-volumes-are-encrypted_version-1_Attached_EBS_volumes_should_be_encrypted','esEbsWithInstanceUrl','/aws/volume_attachments/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Auditing_Advanced_Data_Security_version-1_SADS_sqlserver','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Auditing_Advanced_Data_Security_version-1_SADS_sqlserver','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Auditing_Advanced_Data_Security_version-1_SADS_sqlserver','policyDefinitionName','a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Auditing_Advanced_Data_Security_version-1_SADS_sqlserver','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Avoid_Service_roles_to_IAM_user_at_project_level','policyKey','avoid-assigning-service-roles-to-iam-user-at-project-level','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Avoid_Service_roles_to_IAM_user_at_project_level','description','Ensure that Service Account User (iam.serviceAccountUser) and Service Account Token Creator (iam.serviceAccountTokenCreator) roles to a user for a specific service account rather than assigning the role to a user at project level.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Avoid_Service_roles_to_IAM_user_at_project_level','violationReason','Assigned Service roles to IAM users at project level.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Avoid_Service_roles_to_IAM_user_at_project_level','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsAsgInactiveSecurityGroup_version-1_AwsAsgInactiveSecurityGroup_asg','policyKey','check-for-asg-referencing-inactive-sg','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsAsgInactiveSecurityGroup_version-1_AwsAsgInactiveSecurityGroup_asg','esSgURL','/aws/sg/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsAsgInactiveSecurityGroup_version-1_AwsAsgInactiveSecurityGroup_asg','esAsgLcURL','/aws/asg_launchconfig/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsAsgMissingAMI_version-1_AwsAsgMissingAMI_asg','policyKey','check-for-asg-referencing-missing-ami','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsAsgMissingAMI_version-1_AwsAsgMissingAMI_asg','esAmiUrl','/aws/ami/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsAsgMissingAMI_version-1_AwsAsgMissingAMI_asg','esAsgLcURL','/aws/asg_launchconfig/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsClassicELBListenerSecurity_version-1_AwsListenerSecurity_classicelb','policyKey','check-for-secured-classic-elb-listener-protocols','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsClassicELBListenerSecurity_version-1_AwsListenerSecurity_classicelb','esClassicELBListenerURL','/aws/classicelb_listeners/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsElbV2ListenerSecurity_version-1_AwsListenerSecurity_appelb','policyKey','check-for-secured-elb-v2-listener-protocols','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsElbV2ListenerSecurity_version-1_AwsListenerSecurity_appelb','esElbV2ListenerURL','/aws/appelb_listeners/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_appelb','policyKey','check-for-elb-unrestrcted-security-group','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_appelb','esElbWithSGUrl','/aws/appelb_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_appelb','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_appelb','esElbV2ListenerURL','/aws/appelb_listeners/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_classicelb','policyKey','check-for-classic-elb-unrestrcted-security-group','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_classicelb','esClassicElbWithSGUrl','/aws/classicelb_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_classicelb','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_classicelb','esClassicELBListenerURL','/aws/classicelb_listeners/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsPublicAccessDefaultSecurityGroup_version-1_AwsPublicAccessDefaultSecurityGroup_sg','policyKey','check-for-default-security-group-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsPublicAccessDefaultSecurityGroup_version-1_AwsPublicAccessDefaultSecurityGroup_sg','securityGroupName','default','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsPublicAccessDefaultSecurityGroup_version-1_AwsPublicAccessDefaultSecurityGroup_sg','esSgURL','/aws/sg/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsPublicAccessDefaultSecurityGroup_version-1_AwsPublicAccessDefaultSecurityGroup_sg','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsPublicAccessDefaultSecurityGroup_version-1_AwsPublicAccessDefaultSecurityGroup_sg','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsPublicAccessDefaultSecurityGroup_version-1_AwsPublicAccessDefaultSecurityGroup_sg','cidripv6','::/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsVaultMissingAccessPolicy_version-1_AwsVaultMissingAccessPolicy_backupvault','policyKey','check-for-bakup-vault-delete-policy','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsVpcExternalPeeringConnection_version-1_AwsVpcExternalPeeringConnection_peeringconnection','policyKey','check-for-external-vpc-peering-connections','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AwsVpcExternalPeeringConnection_version-1_AwsVpcExternalPeeringConnection_peeringconnection','accountEsURL','/aws/account/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_AMI_encryption_version-1_aws_enable_encryption_ami','policyKey','check-for-ami-blockdevice-is-encrypted','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_AMI_encryption_version-1_aws_enable_encryption_ami','esAmiBlockDeviceMappingUrl','/aws/ami_blockdevicemap/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_Attached_EBS_volumes_are_custom_kms_key_encrypted_version-1_Attached_EBS_volumes_should_be_custom_kms_key_encrypted','policyKey','check-for-ebs-volume-should-be-encrypted-with-kms-keys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_Attached_EBS_volumes_are_custom_kms_key_encrypted_version-1_Attached_EBS_volumes_should_be_custom_kms_key_encrypted','esEbsWithInstanceUrl','/aws/volume_attachments/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_Attached_EBS_volumes_are_custom_kms_key_encrypted_version-1_Attached_EBS_volumes_should_be_custom_kms_key_encrypted','esKmsUrl','/aws/kms/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_DocumentDB_should_be_encrypted_version-1_aws_enable_cluster_encryption_documentdb','policyKey','check-for-document-db-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_DocumentDB_should_be_encrypted_with_kms_cmks_version-1_aws_enable_cluster_kms_cmks_encryption_documentdb','policyKey','check-for-document-db-encrypted-with-kms-cmks','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_DocumentDB_should_be_encrypted_with_kms_cmks_version-1_aws_enable_cluster_kms_cmks_encryption_documentdb','esKmsUrl','/aws/kms/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_DynamoDB_should_use_aws_managed_cmk_for_sse_version-1_aws_managed_cmk_for_sse_dynamodb','policyKey','check-for-dynamodb-uses-aws-managed-cmks-for-sse','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_EFS_should_be_encrypted_version-1_aws_enable_encryption_efs','policyKey','check-for-efs-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_EKS_secrets_should_be_encrypted_version-1_aws_enable_secret_encryption_eks','policyKey','check-for-eks-secrets-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_appflow_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_appflow','policyKey','check-for-app-flow-encrypted-with-cmks','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_appflow_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_appflow','esKmsUrl','/aws/kms/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_athena_query_results_should_be_encrypted_version-1_aws_enable_query_results_encryption_awsathena','policyKey','check-for-athena-query-results-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_comprehend_job_results_should_be_encrypted_version-1_aws_enable_job_results_encryption_awscomprehend','policyKey','check-for-comprehend-job-results-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_dax_should_be_encrypted_version-1_aws_enable_encryption_dax','policyKey','check-for-dynamodb-accelerator-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_dms_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_dms','policyKey','check-for-dms-encrypted-with-kms-cmks','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_dms_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_dms','esKmsUrl','/aws/kms/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_dms_should_not_be_publicly_accessible_version-1_aws_public_access_dms','policyKey','check-for-dms-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_ecs_task_should_use_log_driver_version-1_aws_enable_task_log_driver_ecs','policyKey','check-for-ecs-task-log-driver-in-use','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_efs_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_efs','policyKey','check-for-efs-encrypted-with-kms-cmks','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_efs_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_efs','esKmsUrl','/aws/kms/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_iam_access_analyser_findings_version-1_aws_active_findings_accessanalyzer','policyKey','check-for-access-analyzer-findings','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Aws_iam_access_analyser_findings_version-1_aws_active_findings_accessanalyzer','esFindingsUrl','/aws/accessanalyzer_findings/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureAuditNetworkAccessToStorageAccounts_version-1_ConfigureNetworkRulesOnStorageAccount_storageaccount','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureAuditNetworkAccessToStorageAccounts_version-1_ConfigureNetworkRulesOnStorageAccount_storageaccount','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureAuditNetworkAccessToStorageAccounts_version-1_ConfigureNetworkRulesOnStorageAccount_storageaccount','policyDefinitionName','34c877ad-507e-4c82-993e-3452a6e0ad3c','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureAuditNetworkAccessToStorageAccounts_version-1_ConfigureNetworkRulesOnStorageAccount_storageaccount','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureAuditStorageVnetIntegration_version-1_AuditStorageVnetIntegration_storageaccount','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureAuditStorageVnetIntegration_version-1_AuditStorageVnetIntegration_storageaccount','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureAuditStorageVnetIntegration_version-1_AuditStorageVnetIntegration_storageaccount','policyDefinitionName','deb3d6f0-8113-4ed4-8492-d64f90919223','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureAuditStorageVnetIntegration_version-1_AuditStorageVnetIntegration_storageaccount','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureAuditTransferToStorageAccounts_version-1_EnableSecureTransferToStorageAccounts_storageaccount','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureAuditTransferToStorageAccounts_version-1_EnableSecureTransferToStorageAccounts_storageaccount','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureAuditTransferToStorageAccounts_version-1_EnableSecureTransferToStorageAccounts_storageaccount','policyDefinitionName','404c3081-a854-4457-ae30-26a93ef643f9','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureAuditTransferToStorageAccounts_version-1_EnableSecureTransferToStorageAccounts_storageaccount','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureBatchAccountMetricAlertRules_version-1_ConfigureMetricAlertRules_batchaccounts','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureBatchAccountMetricAlertRules_version-1_ConfigureMetricAlertRules_batchaccounts','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureBatchAccountMetricAlertRules_version-1_ConfigureMetricAlertRules_batchaccounts','policyDefinitionName','26ee67a2-f81a-4ba8-b9ce-8550bd5ee1a7','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureBatchAccountMetricAlertRules_version-1_ConfigureMetricAlertRules_batchaccounts','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureBatchAccountsDiagnosticLogs_version-1_EnableDiagnosticLogsInBatchAccount_batchaccounts','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureBatchAccountsDiagnosticLogs_version-1_EnableDiagnosticLogsInBatchAccount_batchaccounts','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureBatchAccountsDiagnosticLogs_version-1_EnableDiagnosticLogsInBatchAccount_batchaccounts','policyDefinitionName','428256e6-1fac-4f48-a757-df34c2b3336d','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureBatchAccountsDiagnosticLogs_version-1_EnableDiagnosticLogsInBatchAccount_batchaccounts','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureNamespacesDiagnosticLogs_version-1_EnableDiagnosticLogsInServiceBus_namespaces','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureNamespacesDiagnosticLogs_version-1_EnableDiagnosticLogsInServiceBus_namespaces','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureNamespacesDiagnosticLogs_version-1_EnableDiagnosticLogsInServiceBus_namespaces','policyDefinitionName','f8d36e2f-389b-4ee4-898d-21aeb69a0f45','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureNamespacesDiagnosticLogs_version-1_EnableDiagnosticLogsInServiceBus_namespaces','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureSQLAuditLogging_version-1_ConfigureActionGroupsInSQLAuditSettings_sqlserver','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureSQLAuditLogging_version-1_ConfigureActionGroupsInSQLAuditSettings_sqlserver','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureSQLAuditLogging_version-1_ConfigureActionGroupsInSQLAuditSettings_sqlserver','policyDefinitionName','7ff426e2-515f-405a-91c8-4f2333442eb5','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureSQLAuditLogging_version-1_ConfigureActionGroupsInSQLAuditSettings_sqlserver','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureSQLServerAuthenticationSettings_version-1_EnableAzureADAuthentication_sqlserver','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureSQLServerAuthenticationSettings_version-1_EnableAzureADAuthentication_sqlserver','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureSQLServerAuthenticationSettings_version-1_EnableAzureADAuthentication_sqlserver','policyDefinitionName','1f314764-cb73-4fc9-b863-8eca98ac36e9','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AzureSQLServerAuthenticationSettings_version-1_EnableAzureADAuthentication_sqlserver','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Account_Delete_Azure_Key_Valut_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Account_Delete_Azure_Key_Valut_log_alert','failure','selected alert rule is not  configured to detect Delete Key Vault events are triggered','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Account_Delete_Azure_Key_Valut_log_alert','SUCCESS','selected alert rule is  configured to Delete Key Vault events are triggered','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Account_Delete_Azure_Key_Valut_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Account_Delete_Azure_Key_Valut_log_alert','equals','Microsoft.KeyVault/vaults/delete','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Account_Delete_Azure_Key_Valut_log_alert','policyName','Enable Delete Key Valut log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Account_Delete_Azure_Key_Valut_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Check_Public_Access_For_Storage_Account','policyKey','check-public-access-for-storage-account','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Check_Public_Access_For_Storage_Account','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Check_Public_Access_For_Storage_Account','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Check_Public_Access_For_Storage_Account','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Close_management_ports_version-1_SecurityCenter_virtualmachine','policyKey','check-for-azure-security-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Close_management_ports_version-1_SecurityCenter_virtualmachine','policyName','Management@ports@should@be@closed@on@your@virtual@machines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Close_management_ports_version-1_SecurityCenter_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Create_Network_Security_Group_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Create_Network_Security_Group_log_alert','failure','selected alert rule is not  configured to create or  Update Network Security Group','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Create_Network_Security_Group_log_alert','SUCCESS','selected alert rule is  configured to create or  Update Network Security Group','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Create_Network_Security_Group_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Create_Network_Security_Group_log_alert','equals','Microsoft.Network/networkSecurityGroups/write','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Create_Network_Security_Group_log_alert','policyName','Create or Update Network Security Group log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Create_Network_Security_Group_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Adaptive_Application_controls_version-1_SecurityCenter_virtualmachine','policyKey','check-for-azure-security-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Adaptive_Application_controls_version-1_SecurityCenter_virtualmachine','policyName','Adaptive@Application@Controls@should@be@enabled@on@virtual@machines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Adaptive_Application_controls_version-1_SecurityCenter_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_CMK_Encryption_For_Storage_Account_version-1_storageaccount','policyKey','check-customer-managed-keys-encryption-enabled-for-storage-account','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_CMK_Encryption_For_Storage_Account_version-1_storageaccount','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_CMK_Encryption_For_Storage_Account_version-1_storageaccount','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_CMK_Encryption_For_Storage_Account_version-1_storageaccount','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Database_Tier_Customer_Managed_Key','policyKey','check-for-azure-keyvault-rule-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Database_Tier_Customer_Managed_Key','failure','selected Customer Master Key  is not an Database-tier resource','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Database_Tier_Customer_Managed_Key','SUCCESS','selected Customer Master Key  is an Database-tier resource','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Database_Tier_Customer_Managed_Key','keyValutName','cc-production-vault,cc-user-access-vault','cc-production-vault,cc-user-access-vault','true','true','false','Keyvault name','Keyvault name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Database_Tier_Customer_Managed_Key','keyVaultKey','Owner','Owner','true','true','false','Keyvault key','Keyvault key');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Database_Tier_Customer_Managed_Key','keyVaultValue','AzSQLManager','AzSQLManager','true','true','false','Keyvault value','Keyvault value');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Database_Tier_Customer_Managed_Key','policyName','Ensure Database Tier Customer-Managed Key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Database_Tier_Customer_Managed_Key','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Email_Alerts_for_SQL_Threat_Detection_Service_version-1_sqldatabase','policyKey','check-email-alerts-enabled-for-sql-threat-detection','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Email_Alerts_for_SQL_Threat_Detection_Service_version-1_sqldatabase','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Email_Alerts_for_SQL_Threat_Detection_Service_version-1_sqldatabase','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Email_Alerts_for_SQL_Threat_Detection_Service_version-1_sqldatabase','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Encryption_for_Boot_Disk_Volumes_version-1_virtualmachine','policyKey','check-encryption-enabled-for-boot-disk-volumes','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Encryption_for_Boot_Disk_Volumes_version-1_virtualmachine','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Encryption_for_Boot_Disk_Volumes_version-1_virtualmachine','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Encryption_for_Boot_Disk_Volumes_version-1_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_FTP','policyKey','check-for-azure-nsg-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_FTP','protocol','tcp','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_FTP','port','20,21','','false','false','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_FTP','policyName','Deny unresticted access to FTP port NNN','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_FTP','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_RPC','policyKey','check-for-azure-nsg-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_RPC','protocol','tcp','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_RPC','port','135','','false','false','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_RPC','policyName','Deny public access to RPC port 135','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_RPC','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_SQLSERVER','policyKey','check-for-azure-nsg-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_SQLSERVER','protocol','tcp','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_SQLSERVER','port','1433','','false','false','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_SQLSERVER','policyName','Deny public access to SQL Server port 1433','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_SQLSERVER','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_SSH','policyKey','check-for-azure-nsg-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_SSH','protocol','tcp','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_SSH','port','22','','false','false','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_SSH','policyName','Deny public access to SSH port 22','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_SSH','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_UDP','policyKey','check-for-azure-nsg-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_UDP','protocol','UDP','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_UDP','port','*','','false','false','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_UDP','policyName','Deny public UDP access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_for_UDP','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_version-1_SecurityCenter_virtualmachine','policyKey','check-for-azure-security-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_version-1_SecurityCenter_virtualmachine','policyName','Access@should@be@restricted@for@permissive@Network@Security@Groups@with@Internet-facing@VMs','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Network_Security_version-1_SecurityCenter_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Web_Tier_Customer_Managed_Key','policyKey','check-for-azure-keyvault-rule-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Web_Tier_Customer_Managed_Key','failure','selected Customer Master Key  is not an web-tier resource','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Web_Tier_Customer_Managed_Key','SUCCESS','selected Customer Master Key  is an Web-tier resource','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Web_Tier_Customer_Managed_Key','keyValutName','cc-main-key-vault,cc-user-access-vault','cc-main-key-vault,cc-user-access-vault','true','true','false','Keyvault name','Keyvault name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Web_Tier_Customer_Managed_Key','keyVaultKey','Environment','Environment','true','true','false','Keyvault key','Keyvault key');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Web_Tier_Customer_Managed_Key','keyVaultValue','Production','Production','true','true','false','Keyvault value','Keyvault value');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Web_Tier_Customer_Managed_Key','policyName','Ensure web Tier Customer-Managed Key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_Web_Tier_Customer_Managed_Key','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_key_Vault_Customer_Managed_Key','policyKey','check-for-azure-keyvault-rule-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_key_Vault_Customer_Managed_Key','failure','selected Customer Master Key  is not an app-tier resource','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_key_Vault_Customer_Managed_Key','SUCCESS','selected Customer Master Key  is an app-tier resource','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_key_Vault_Customer_Managed_Key','keyValutName','cc-project5-key-vault,cc-user-access-vault','cc-project5-key-vault,cc-user-access-vault','true','true','false','Keyvault name','Keyvault name');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_key_Vault_Customer_Managed_Key','keyVaultKey','ProjectName','ProjectName','true','true','false','Keyvault key','Keyvault key');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_key_Vault_Customer_Managed_Key','keyVaultValue','Project5','Project5','true','true','false','Keyvault value','Keyvault value');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_key_Vault_Customer_Managed_Key','policyName','Enable Azure key Vault Customer-Managed Key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Enable_key_Vault_Customer_Managed_Key','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Encryption_for_Data_in_RedisCache','policyKey','check-for-azure-rediscache-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Encryption_for_Data_in_RedisCache','policyName','Enable Encryption for Data in RedisCache','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Encryption_for_Data_in_RedisCache','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Install_a_vulnerability_version-1_SecurityCenter_virtualmachine','policyKey','check-for-azure-security-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Install_a_vulnerability_version-1_SecurityCenter_virtualmachine','policyName','Vulnerability@assessment@solution@should@be@installed@on@your@virtual@machines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Install_a_vulnerability_version-1_SecurityCenter_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Install_monitoring_agent_version-1_SecurityCenter_virtualmachine','policyKey','check-for-azure-security-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Install_monitoring_agent_version-1_SecurityCenter_virtualmachine','policyName','Monitoring@agent@should@be@installed@on@your@machines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Install_monitoring_agent_version-1_SecurityCenter_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Just_in_time_network_access_version-1_SecurityCenter_virtualmachine','policyKey','check-for-azure-security-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Just_in_time_network_access_version-1_SecurityCenter_virtualmachine','policyName','Just-In-Time@network@access@control@should@be@applied@on@virtual@machines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Just_in_time_network_access_version-1_SecurityCenter_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Key_ExpiryDate','policyKey','key-should-have-expiration-date','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Key_ExpiryDate','failure','Key vault key does not have expiration date','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Key_ExpiryDate','SUCCESS','Key vault key has expiration date','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Key_ExpiryDate','policyName','Set expiration date for key in vault key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Key_ExpiryDate','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Key_ExpiryDate_RBAC','policyKey','key-should-have-expiration-date','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Key_ExpiryDate_RBAC','failure','Key vault key does not have expiration date with access of RBAC','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Key_ExpiryDate_RBAC','SUCCESS','Key vault key has expiration date with access of RBAC','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Key_ExpiryDate_RBAC','policyName','Set expiration date for key in vault key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Key_ExpiryDate_RBAC','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Secret_ExpiryDate','policyKey','secret-should-have-expiration-date','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Secret_ExpiryDate','failure','Key vault Secret does not have expiration date','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Secret_ExpiryDate','SUCCESS','Key vault Secret has expiration date','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Secret_ExpiryDate','policyName','Set expiration date for key in vault key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Secret_ExpiryDate','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Secret_ExpiryDate_RBAC','policyKey','secret-should-have-expiration-date','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Secret_ExpiryDate_RBAC','failure','Key vault Secret does not have expiration date with access of RBAC','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Secret_ExpiryDate_RBAC','SUCCESS','Key vault Secret has expiration date with access of RBAC','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Secret_ExpiryDate_RBAC','policyName','Set expiration date for key in vault key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_KeyVault_Secret_ExpiryDate_RBAC','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Remediate_vulnerabilities_version-1_SecurityCenter_virtualmachine','policyKey','check-for-azure-security-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Remediate_vulnerabilities_version-1_SecurityCenter_virtualmachine','policyName','Vulnerabilities@should@be@remediated@by@a@Vulnerability@Assessment@solution','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Remediate_vulnerabilities_version-1_SecurityCenter_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Resolve_monitoring_agent_version-1_SecurityCenter_virtualmachine','policyKey','check-for-azure-security-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Resolve_monitoring_agent_version-1_SecurityCenter_virtualmachine','policyName','Monitoring@agent@health@issues@should@be@resolved@on@your@machines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Resolve_monitoring_agent_version-1_SecurityCenter_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_SQLServerDataSecuritySettings_version-1_ConfigureEmailInDataSecuritySettings_sqlserver','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_SQLServerDataSecuritySettings_version-1_ConfigureEmailInDataSecuritySettings_sqlserver','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_SQLServerDataSecuritySettings_version-1_ConfigureEmailInDataSecuritySettings_sqlserver','policyDefinitionName','9677b740-f641-4f3c-b9c5-466005c85278','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_SQLServerDataSecuritySettings_version-1_ConfigureEmailInDataSecuritySettings_sqlserver','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_SSH_Authentication_Type_version-1_SSH_virtualmachine','policyKey','check-for-ssh-authentication-type','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_SSH_Authentication_Type_version-1_SSH_virtualmachine','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_SSH_Authentication_Type_version-1_SSH_virtualmachine','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_SSH_Authentication_Type_version-1_SSH_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','policyKey','check-for-azure-nsg-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','protocol','TCP','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','port','3389','','false','false','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','policyName','Security Groups with RDP port 3389 should not be publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Threat_Detection_on_SQL_Server','policyKey','check-for-threat-detection-on-sql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Threat_Detection_on_SQL_Server','policyName','azure enable threat detection on sql server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Threat_Detection_on_SQL_Server','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Virtual_Machine_Endpoint_Protection','policyKey','check-endpoint-protection-installed-for-virtual-machines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Virtual_Machine_Endpoint_Protection','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_Virtual_Machine_Endpoint_Protection','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_harden-NSGs_internet_version-1_SecurityCenter_virtualmachine','policyKey','check-for-azure-security-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_harden-NSGs_internet_version-1_SecurityCenter_virtualmachine','policyName','Harden@Network@Security@Group@rules@of@internet@facing@virtual@machines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_harden-NSGs_internet_version-1_SecurityCenter_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_policies-Container_Security_Configurations_version-1_CSC_virtualmachine','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_policies-Container_Security_Configurations_version-1_CSC_virtualmachine','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_policies-Container_Security_Configurations_version-1_CSC_virtualmachine','policyDefinitionName','e8cbc669-f12d-49eb-93e7-9273119e9933','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_policies-Container_Security_Configurations_version-1_CSC_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_policies-Disk_Encryption_version-1_DE_virtualmachine','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_policies-Disk_Encryption_version-1_DE_virtualmachine','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_policies-Disk_Encryption_version-1_DE_virtualmachine','policyDefinitionName','0961003e-5a0a-4549-abde-af6a37f2724d','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Azure_policies-Disk_Encryption_version-1_DE_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Centralized_CloudTrail_version-1_Centralized_Cloudtrail_account','policyKey','check-cloudtrail-multiRegion-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Centralized_CloudTrail_version-1_Centralized_Cloudtrail_account','inputCloudTrailName','paladin-cloud-trail','','true','true','false','Input Cloudtrail name','Name of the cloudtrail to check');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CheckGuardDutyIsEnabledForAllAccount_version-1_CheckGuardDutyIsEnabledForAllAccount_account','policyKey','check-guard-duty-enabled-for-all-accounts','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CheckInactiveIamUser_version-1_CheckInactiveIamUser_iamuser','pwdInactiveDuration','90','90','true','true','false','Inactive duration in days','Max inactive duration allowed for IAM users');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CheckInactiveIamUser_version-1_CheckInactiveIamUser_iamuser','policyKey','check-for-inactive-iam-users','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CheckInactiveIamUser_version-1_CheckInactiveIamUser_iamuser','threadsafe','true','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Check_MFA_RootUSer_version-1_Check_MFA_RootUser_account','policyKey','check-for-MFA-RootUser','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Check_MFA_RootUSer_version-1_Check_MFA_RootUser_account','roleIdentifyingString','role/paladincloud_ro','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Check_for_Unrestricted_PostgreSQL_Database_Access','policyKey','check-for-azure-nsg-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Check_for_Unrestricted_PostgreSQL_Database_Access','protocol','tcp','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Check_for_Unrestricted_PostgreSQL_Database_Access','port','5432','','false','false','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Check_for_Unrestricted_PostgreSQL_Database_Access','policyName','Deny public access to PostgreSQL Server port 5432','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Check_for_Unrestricted_PostgreSQL_Database_Access','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Check_for_Unrestricted_PostgreSQL_Database_Access','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Check_permission_of_Ingress_Setting_of_GCP_cloud_Function','policyKey','GCP_Cloud_Function_configured_with_overly_permissive_Ingress_setting','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Check_permission_of_Ingress_Setting_of_GCP_cloud_Function','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CloudFront_AccessLogs_version-1_CloudFront_AccessLogs_cloudfront','policyKey','check-access-log-for-cloudfront','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CloudFront_AccessLogs_version-1_CloudFront_AccessLogs_cloudfront','accessLogBucketName','paladin-cloudfront-bucket','','true','true','false','Access log bucket name','Cloudfront access log bucket name to check');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CloudTrailLogFileValidation_version-1_EnableLogFileValidation_cloudtrail','policyKey','check-cloudtrail-log-file-validation-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CloudTrailLogsEncryptedByKMS_version-1_EnableKMSEncryption_cloudtrail','policyKey','check-cloudtrail-logs-encrypted-by-kms','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CloudWatchEventsForAllAccounts_version-1_CloudWatchEventsForAllAccounts_account','policyKey','check-cloudwatch-event-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CloudWatchEventsForAllAccounts_version-1_CloudWatchEventsForAllAccounts_account','roleIdentifyingString','role/pac_ro','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CloudWatchEventsForAllAccounts_version-1_CloudWatchEventsForAllAccounts_account','ruleName','DO-NOT-DELETE-all-events-to-eventbus-in-ACCOUNTID','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Cloud_Storage_should_be_encrypted_with_CMK','policyKey','check-if-cloud-storage-has-cmk-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Cloud_Storage_should_be_encrypted_with_CMK','description','checks if cloud storage has customer managed key to encrypt data','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Cloud_Storage_should_be_encrypted_with_CMK','violationReason','Google cloud storage is not encrypted with customer managed key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Cloud_Storage_should_be_encrypted_with_CMK','name','cloudstorage','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Cloud_Storage_should_be_encrypted_with_CMK','policyName','cloud storage should be encrypted with customer managed key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Cloud_Storage_should_be_encrypted_with_CMK','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Cloud_Storage_should_not_be_public','policyKey','check-if-cloud-storage-has-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Cloud_Storage_should_not_be_public','description','Ensure there are no cloud storage buckets with public access ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Cloud_Storage_should_not_be_public','violationReason','Google cloud storage should not have public access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Cloud_Storage_should_not_be_public','name','cloudstorage','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Cloud_Storage_should_not_be_public','policyName','cloud storage should not have public access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Cloud_Storage_should_not_be_public','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Configure_email_in_ms_defender','policyKey','configure-additional-email-address-ms-defender','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Configure_email_in_ms_defender','description','In MS defender email alert settings, Ensure additional email address is configured.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Configure_email_in_ms_defender','SUCCESS','In MS defender email settings, additional email address is configured.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Configure_email_in_ms_defender','violationReason','In MS defender email alert settings, additional email address is not configured.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Configure_email_in_ms_defender','policyName','Configure additional email address in MS defender email notifications settings','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Configure_email_in_ms_defender','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CriticalImageVulnerabilitiesScannedByAqua','target','30','30','true','true','false','Target','Target in days');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CriticalImageVulnerabilitiesScannedByAqua','esAquaImageUrl','/aqua-image-vulnerability/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CriticalImageVulnerabilitiesScannedByAqua','discoveredDaysRange','7','7','true','true','false','Discovered days range','Discovered days in number');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CriticalImageVulnerabilitiesScannedByAqua','policyKey','check-for-image-vulnerabilities-scanned-by-aqua','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CriticalImageVulnerabilitiesScannedByAqua','pluginType','aqua','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CriticalVMVulnerabilitiesScannedByTenable','target','30','30','true','true','false','Target','Target in days');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CriticalVMVulnerabilitiesScannedByTenable','esTenableVMUrl','/tenable-vm-vulnerability/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CriticalVMVulnerabilitiesScannedByTenable','discoveredDaysRange','7','7','true','true','false','Discovered days range','Discovered days in number');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CriticalVMVulnerabilitiesScannedByTenable','policyKey','check-for-vm-vulnerabilities-scanned-by-tenable','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('CriticalVMVulnerabilitiesScannedByTenable','pluginType','tenable','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Data_Encryption_SQL_version-1_SDE_sqldatabase','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Data_Encryption_SQL_version-1_SDE_sqldatabase','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Data_Encryption_SQL_version-1_SDE_sqldatabase','policyDefinitionName','17k78e20-9358-41c9-923c-fb736d382a12','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Data_Encryption_SQL_version-1_SDE_sqldatabase','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Default_Network_should_Not_Exist_in_a_Project','policyKey','check-default-vpc-used-in-project','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Default_Network_should_Not_Exist_in_a_Project','policyName','Default Network should Not Exist in a Project','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Default_Network_should_Not_Exist_in_a_Project','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Define_Authorised_IP_for_kubernetes','policyKey','define-authorised-ip-ranges-for-kubernetes','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Define_Authorised_IP_for_kubernetes','description','Define authorised IP ranges for Azure Kubernetes Services.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Define_Authorised_IP_for_kubernetes','SUCCESS','In Azure kubernetes services, authorised IP ranges are defined','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Define_Authorised_IP_for_kubernetes','violationReason','In Azure kubernetes services,authorised IP ranges are NOT defined','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Define_Authorised_IP_for_kubernetes','policyName','Define authorised IP ranges for Azure Kubernetes Services','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Define_Authorised_IP_for_kubernetes','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Admin_Privilege_Service_Account','policyKey','least-privilege-service-accounts','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Admin_Privilege_Service_Account','policyName','Deny admin Privileges to service accounts','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Admin_Privilege_Service_Account','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Azure_KeyVault_Admin_Privileges','policyKey','deny-admin-privileges-azure-keyvault-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Azure_KeyVault_Admin_Privileges','failure','Key vault has admin privilege','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Azure_KeyVault_Admin_Privileges','SUCCESS','Key vault does not have admin privilege','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Azure_KeyVault_Admin_Privileges','adminForKeys','Get,List,Update,Create,Import,Delete,Recover,Backup,Restore,Decrypt,Encrypt,UnwrapKey,WrapKey,Verify,Sign,Purge','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Azure_KeyVault_Admin_Privileges','adminForSecrets','Get,List,Set,Delete,Recover,Backup,Restore,Purge','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Azure_KeyVault_Admin_Privileges','adminForCertificates','Get,List,Update,Create,Import,Delete,Recover,Backup,Restore,ManageContacts,ManageIssuers,GetIssuers,ListIssuers,SetIssuers,DeleteIssuers,Purge','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Azure_KeyVault_Admin_Privileges','policyName','Deny admin privilege for dkey vaults','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Azure_KeyVault_Admin_Privileges','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Default_Network_Access_Rule_for_Storage_Accounts','policyKey','restrict-default-network-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Default_Network_Access_Rule_for_Storage_Accounts','policyName',' Default Network Access Rule for Storage Accounts','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_Default_Network_Access_Rule_for_Storage_Accounts','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_access_to_Kubernate_Engine_cluster','policyKey','check-access-for-gke-cluster','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_access_to_Kubernate_Engine_cluster','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_public_ip_for_sql','policyKey','check-if-ip-public-for-db','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_public_ip_for_sql','description','SQL DB instances should not have public IP','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_public_ip_for_sql','violationReason','SQL DB instances should not have public IP','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_public_ip_for_sql','esSgRulesUrl','/gcp_cloudsql/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_public_ip_for_sql','policyName','SQL database instances should not use public IP addresses','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_public_ip_for_sql','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_usage_of_default_service_accounts_for_instances','policyKey','deny-usage-of-default-service-account','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_usage_of_default_service_accounts_for_instances','policyName','Deny usage of default service accounts for instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Deny_usage_of_default_service_accounts_for_instances','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_3625_Flag_for_SQL_Server_DB_Instances','policyKey','disable-contained-database-Auth-flag-for-sql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_3625_Flag_for_SQL_Server_DB_Instances','dataBaseType','gcp_cloudsql_sqlserver','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_3625_Flag_for_SQL_Server_DB_Instances','dbFlagName','3625','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_3625_Flag_for_SQL_Server_DB_Instances','policyName','Disable \'3625 (trace flag)\' database flag for Cloud SQL Server instance','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_3625_Flag_for_SQL_Server_DB_Instances','description','Ensure that 3625 (trace flag) database flag is disabled for your Google Cloud SQL Server database instances.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_3625_Flag_for_SQL_Server_DB_Instances','violationReason','3625(trace flag) is enabled for your Google Cloud SQL Server database instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_3625_Flag_for_SQL_Server_DB_Instances','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Alpha_Cluster','policyKey','disable-alpha-clusters','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Alpha_Cluster','description','disable alpha clusters for production workloads','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Alpha_Cluster','violationReason','Alpha clusters are NOT disabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Alpha_Cluster','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Basic_Authentication','policyKey','disable-basic-authentication','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Basic_Authentication','description','Disable Basic Authentication using static passwords','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Basic_Authentication','violationReason','Basic authentication is not disabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Basic_Authentication','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','policyKey','disable-contained-database-Auth-flag-for-sql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','dataBaseType','gcp_cloudsql_sqlserver','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','dbFlagName','contained database authentication','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','policyName','Disable Contained Database Authentication Flag for SQL Server Database Instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','description','users within a contained database that have the ALTER ANY USER permission can grant access to the database without the knowledge or permission of the SQL Server administrator and also prone to DOS Attack','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','violationReason','contained database authentication flag is enabled for your Google Cloud SQL Server database instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','policyKey','check-if-external-script-Enabled-flag-for-sql-server-disabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','dataBaseType','SQLSERVER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','dbFlagName','external scripts enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','policyName','Disable External Scripts Enabled Flag for SQL Server Database Instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Kubernetes_Web_UI','policyKey','disable-kubernetes-web-ui','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Kubernetes_Web_UI','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Legacy_Authorization','policyKey','check-legacy-authorization-disabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Legacy_Authorization','description','Ensure Legacy Authorization is disabled.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Legacy_Authorization','violationReason','Legacy Authorization is enabled ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Legacy_Authorization','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Local_infile_for_MySQL_Server_DB_Instances','policyKey','disable-enable-database-flags-for-cloudsql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Local_infile_for_MySQL_Server_DB_Instances','dataBaseType','gcp_cloudsql_mysqlserver','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Local_infile_for_MySQL_Server_DB_Instances','dbFlagName','local_infile','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Local_infile_for_MySQL_Server_DB_Instances','dbFlagValue','off','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Local_infile_for_MySQL_Server_DB_Instances','policyName','Disable Local_infile DB Flag for Cloud SQL','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Local_infile_for_MySQL_Server_DB_Instances','description','Ensure that the local_infile database flag is disabled for your Google Cloud MySQL database instances, in order to follow data security best practices','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Local_infile_for_MySQL_Server_DB_Instances','violationReason','Local_infile flag is enabled for your Google Cloud MySQL Server database instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Local_infile_for_MySQL_Server_DB_Instances','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Log_min_duration_statement_for_PostgreSQL','policyKey','disable-enable-database-flags-for-cloudsql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Log_min_duration_statement_for_PostgreSQL','dataBaseType','gcp_cloudsql_postgres','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Log_min_duration_statement_for_PostgreSQL','dbFlagName','log_min_duration_statement','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Log_min_duration_statement_for_PostgreSQL','dbFlagValue','-1','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Log_min_duration_statement_for_PostgreSQL','policyName','Disable Log_min_duration_statement Database Flag for PostgreSQL Instance','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Log_min_duration_statement_for_PostgreSQL','description','Ensure that log_min_duration_statement database flag is disabled for a Cloud PostgreSQL database instances.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Log_min_duration_statement_for_PostgreSQL','violationReason','Log_min_duration_statement flag for Postgres Instance is enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Log_min_duration_statement_for_PostgreSQL','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','policyKey','disable-contained-database-Auth-flag-for-sql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','dataBaseType','gcp_cloudsql_sqlserver','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','dbFlagName','remote access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','policyName','Disable Database Remote Access flag for SQL Server Instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','description','Ensure that remote access database flag is disabled for your Google Cloud SQL Server database instances.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','violationReason','remote access flag is enabled for your Google Cloud SQL Server database instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Remote_Debugging_For_WebApp','policyKey','check-for-remote-debugging-app-service','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Remote_Debugging_For_WebApp','policyName','Disable App Service Remote Debugging','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Remote_Debugging_For_WebApp','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_User_Managed_Service_Account_Key_Creation','policyKey','delete-user-manged-keys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_User_Managed_Service_Account_Key_Creation','policyName','Disable User-Managed Service Account Key Creation','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_User_Managed_Service_Account_Key_Creation','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Web_App_traffic_to_plain_Ftp','policyKey','check-for-ftp-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Web_App_traffic_to_plain_Ftp','description','disable ftp deployment','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Web_App_traffic_to_plain_Ftp','violationReason','web apps does allow traffic on ftp.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Web_App_traffic_to_plain_Ftp','esSgRulesUrl','/azure_webapp/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Web_App_traffic_to_plain_Ftp','policyName','Disable Plain FTP Deployment','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_Web_App_traffic_to_plain_Ftp','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_client_certificate_Authentication_for_Cluster','policyKey','Disable-client-certificate-Authentication-for-GKE-Cluster','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_client_certificate_Authentication_for_Cluster','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_connecting_to_Serial_Ports_for_VM_Instance','policyKey','check-for-serial-port-enable-key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_connecting_to_Serial_Ports_for_VM_Instance','description','Checks if instance-level serial port enable key is disabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_connecting_to_Serial_Ports_for_VM_Instance','violationReason','Compute Engine serial-port is enabled.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_connecting_to_Serial_Ports_for_VM_Instance','esSgRulesUrl','/gcp_vminstance/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_connecting_to_Serial_Ports_for_VM_Instance','policyName','Disable connecting to Serial Ports for VM Instance','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_connecting_to_Serial_Ports_for_VM_Instance','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_kubernetes_DashBoard','policyKey','Disable-kubernetes-DashBoard','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_kubernetes_DashBoard','description','Disable kubernetes DashBoard','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Disable_kubernetes_DashBoard','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole','roleIdentifyingString','role/paladincloud_ro','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole','unApprovedIamActions','ec2:*,*,ec2:RunInstances','ec2:*,*,ec2:RunInstances','true','true','false','Unapproved IAM actions','IAM roles should not have these permissions');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole','policyKey','iam-role-with-unapproved-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2','internetGateWay','igw','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2','portToCheck','22','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2','policyKey','check-for-ec2-with-public-access-for-configured-port','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2','esEc2SgURL','/aws/ec2_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2','esRoutetableAssociationsURL','/aws_routetable/routetable_associations/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2','esRoutetableRoutesURL','/aws_routetable/routetable_routes/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2','esRoutetableURL','/aws_routetable/routetable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2','esSubnetURL','/aws_subnet/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','internetGateWay','igw','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','policyKey','check-for-ec2-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','esEc2SgURL','/aws/ec2_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','esRoutetableAssociationsURL','/aws_routetable/routetable_associations/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','esRoutetableRoutesURL','/aws_routetable/routetable_routes/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','esRoutetableURL','/aws_routetable/routetable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','esSubnetURL','/aws_subnet/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','cidripv6','::/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','defaultCidrIp','192.168.0.0/16','192.168.0.0/16','true','true','false','Default cidr IP','Any instance found with default route 0.0.0.0, then it will be replaced with given cird block during the time of autofix');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','fixKey','ec2-global-access-fix','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ELB_Access_Logs_version-1_AppLB_Access_Logs_appelb','policyKey','check-for-access-log-for-elb','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ELB_Access_Logs_version-1_AppLB_Access_Logs_appelb','accessLogBucketName','paladin-appelb-bucket','','true','true','false','Access log bucket name','Cloudfront access log bucket name to check');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ELB_Access_Logs_version-1_ClassicLB_Access_Logs_classicelb','policyKey','check-for-access-log-for-elb','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ELB_Access_Logs_version-1_ClassicLB_Access_Logs_classicelb','accessLogBucketName','paladin-elb-bucket','','true','true','false','Access log bucket name','Cloudfront access log bucket name to check');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EbsSnapShot_version-1_EbsSnapShot_snapshot','policyKey','check-for-ebs-snapshot-with-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EbsSnapShot_version-1_EbsSnapShot_snapshot','checkId','ePs02jT06w','ePs02jT06w','false','true','false','Check Id','Check Id Keyword');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EbsSnapShot_version-1_EbsSnapShot_snapshot','esServiceURL','/aws_checks/checks_resources/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2','target','30','30','true','true','false','Target','Target in days');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2','esQualysUrl','/aws_ec2/qualysinfo/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2','discoveredDaysRange','7','7','true','true','false','Discovered days range','Discovered days in number');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2','policyKey','check-for-resource-scanned-by-qualys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2','pluginType','qualys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','policyKey','check-for-ec2-public-access-port-with-s5-vulnerabilities','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','ec2PortRuleId','EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','esEc2WithVulnInfoForS5Url','/aws_ec2/vulninfo/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','esEc2PubAccessPortUrl','/aws/issue_ec2/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','esAppElbWithInstanceUrl','/aws_appelb/appelb_instances/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','esClassicElbWithInstanceUrl','/aws_classicelb/classicelb_instances/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','esAppElbPubAccessPortUrl','/aws_appelb/issue_appelb/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','esClassicElbPubAccessPortUrl','/aws_classicelb/issue_classicelb/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','appElbPortRuleId','ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','classicElbPortRuleId','ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','pluginType','qualys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2StoppedInstanceForLong_version-1_Ec2StoppedInstanceForLong_ec2','threadsafe','true','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2StoppedInstanceForLong_version-1_Ec2StoppedInstanceForLong_ec2','policyKey','check-for-stopped-instance-for-long','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2StoppedInstanceForLong_version-1_Ec2StoppedInstanceForLong_ec2','targetstoppedDuration','90','90','true','true','false','Target stopped Duration','Max duration in days');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2','portToCheck','1434','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2','internetGateWay','igw','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2','policyKey','check-for-ec2-with-public-access-for-configured-port','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2','esEc2SgURL','/aws/ec2_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2','esRoutetableAssociationsURL','/aws_routetable/routetable_associations/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2','esRoutetableRoutesURL','/aws_routetable/routetable_routes/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2','esRoutetableURL','/aws_routetable/routetable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2','esSubnetURL','/aws_subnet/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2','internetGateWay','igw','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2','portToCheck','3306','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2','policyKey','check-for-ec2-with-public-access-for-configured-port','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2','esEc2SgURL','/aws/ec2_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2','esRoutetableAssociationsURL','/aws_routetable/routetable_associations/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2','esRoutetableRoutesURL','/aws_routetable/routetable_routes/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2','esRoutetableURL','/aws_routetable/routetable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2','esSubnetURL','/aws_subnet/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2','internetGateWay','igw','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2','portToCheck','138','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2','policyKey','check-for-ec2-with-public-access-for-configured-port','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2','esEc2SgURL','/aws/ec2_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2','esRoutetableAssociationsURL','/aws_routetable/routetable_associations/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2','esRoutetableRoutesURL','/aws_routetable/routetable_routes/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2','esRoutetableURL','/aws_routetable/routetable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2','esSubnetURL','/aws_subnet/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2','internetGateWay','igw','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2','portToCheck','80','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2','policyKey','check-for-ec2-with-public-access-for-configured-port','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2','esEc2SgURL','/aws/ec2_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2','esRoutetableAssociationsURL','/aws_routetable/routetable_associations/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2','esRoutetableRoutesURL','/aws_routetable/routetable_routes/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2','esRoutetableURL','/aws_routetable/routetable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2','esSubnetURL','/aws_subnet/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2','internetGateWay','igw','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2','portToCheck','8080','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2','policyKey','check-for-ec2-with-public-access-for-configured-port','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2','esEc2SgURL','/aws/ec2_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2','esRoutetableAssociationsURL','/aws_routetable/routetable_associations/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2','esRoutetableRoutesURL','/aws_routetable/routetable_routes/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2','esRoutetableURL','/aws_routetable/routetable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2','esSubnetURL','/aws_subnet/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2','internetGateWay','igw','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2','portToCheck','5432','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2','policyKey','check-for-ec2-with-public-access-for-configured-port','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2','esRoutetableAssociationsURL','/aws_routetable/routetable_associations/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2','esRoutetableRoutesURL','/aws_routetable/routetable_routes/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2','esRoutetableURL','/aws_routetable/routetable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2','esEc2SgURL','/aws/ec2_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2','esSubnetURL','/aws_subnet/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2','internetGateWay','igw','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2','portToCheck','3389','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2','policyKey','check-for-ec2-with-public-access-for-configured-port','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2','esEc2SgURL','/aws/ec2_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2','esRoutetableAssociationsURL','/aws_routetable/routetable_associations/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2','esRoutetableRoutesURL','/aws_routetable/routetable_routes/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2','esRoutetableURL','/aws_routetable/routetable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2','esSubnetURL','/aws_subnet/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS3Vulnerability_ec2','esResourceWithVulnInfoForSeverityUrl','/aws_ec2/vulninfo/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS4Vulnerability_ec2','esResourceWithVulnInfoForSeverityUrl','/aws_ec2/vulninfo/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS5Vulnerability_ec2','esResourceWithVulnInfoForSeverityUrl','/aws_ec2/vulninfo/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('EksSgInboundTrafficValidation_version-1_SgInboundTrafficValidation_eks','policyKey','check-eks-inbound-traffic','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','policyKey','check-for-elastic-search-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','internetGateWay','igw','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','esRoutetableAssociationsURL','/aws_routetable/routetable_associations/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','esRoutetableURL','/aws_routetable/routetable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','cidripv6','::/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','defaultCidrIp','192.168.0.0/16','192.168.0.0/16','true','true','false','Default cidr IP','Any instance found with default route 0.0.0.0, then it will be replaced with given cird block during the time of autofix');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','fixKey','publicly-accessible-elasticsearch','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','esRoutetableRoutesURL','/aws_routetable/routetable_routes/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','policyKey','check-for-elb-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','internetGateWay','igw','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','esElbWithSGUrl','/aws/appelb_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','esRoutetableAssociationsURL','/aws_routetable/routetable_associations/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','esRoutetableRoutesURL','/aws_routetable/routetable_routes/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','esRoutetableURL','/aws_routetable/routetable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','cidripv6','::/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','defaultCidrIp','192.168.0.0/16','192.168.0.0/16','true','true','false','Default cidr IP','Any instance found with default route 0.0.0.0, then it will be replaced with given cird block during the time of autofix');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','fixKey','publicly-accessible-appelb','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','policyKey','check-for-elb-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','internetGateWay','igw','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','esElbWithSGUrl','/aws/classicelb_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','esRoutetableAssociationsURL','/aws_routetable/routetable_associations/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','esRoutetableRoutesURL','/aws_routetable/routetable_routes/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','esRoutetableURL','/aws_routetable/routetable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','cidripv6','::/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','defaultCidrIp','192.168.0.0/16','192.168.0.0/16','true','true','false','Default cidr IP','Any instance found with default route 0.0.0.0, then it will be replaced with given cird block during the time of autofix');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','fixKey','publicly-accessible-classicelb','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_API_Key_Application_Restrictions','policyKey','Check-for-API-Key-Application-Restrictions','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_API_Key_Application_Restrictions','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_API_Key_Restrictions','policyKey','Check-for-API-Key-API-Restrictions','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_API_Key_Restrictions','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Addon_policies_for_AKS','policyKey','enable-addon-policies-for-kubernetes','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Addon_policies_for_AKS','description','Ensure AKS uses Azure policies add-on.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Addon_policies_for_AKS','SUCCESS','In Azure kubernetes services, add-on policies is enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Addon_policies_for_AKS','violationReason','AKS does not use Azure policies add-on.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Addon_policies_for_AKS','policyName','Enable Add-on Policies for AKS','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Addon_policies_for_AKS','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Authentication_For_WebApp','policyKey','check-if-auth-enabled-app-service','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Authentication_For_WebApp','policyName','App Service web app authentication should be enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Authentication_For_WebApp','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Auto_Repair_for_GKE_nodes','policyKey','enable-auto-repair-for-gke-nodes','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Auto_Repair_for_GKE_nodes','nodePoolKey','autoRepair','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Auto_Repair_for_GKE_nodes','description','Ensure  Auto-Repair for GKE nodes enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Auto_Repair_for_GKE_nodes','violationReason','Auto-Repair for GKE nodes disabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Auto_Repair_for_GKE_nodes','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Auto_Upgrade_for_GKE_nodes','policyKey','enable-node-pool-managements','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Auto_Upgrade_for_GKE_nodes','nodePoolKey','autoUpgrade','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Auto_Upgrade_for_GKE_nodes','description','Ensure  Auto-Upgrade for GKE nodes enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Auto_Upgrade_for_GKE_nodes','violationReason','Auto-Upgrade for GKE nodes disabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Auto_Upgrade_for_GKE_nodes','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Automated_backups_for_sql_database','policyKey','check-if-cloud-storage-has-automated-backups-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Automated_backups_for_sql_database','description','check if the automated backups are enabled for all Cloud SQL database instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Automated_backups_for_sql_database','violationReason','Automated backups are not enabled for Google cloud sql database.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Automated_backups_for_sql_database','name','cloudstorage','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Automated_backups_for_sql_database','policyName','Enable Automated backups for cloud sql database','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Automated_backups_for_sql_database','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Policy_Assignment_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Policy_Assignment_log_alert','failure','selected alert rule is not  configured to detect Create Policy Assignment events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Policy_Assignment_log_alert','SUCCESS','selected alert rule is  configured to detect Create Policy Assignment events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Policy_Assignment_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Policy_Assignment_log_alert','equals','Microsoft.Authorization/policyAssignments/write','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Policy_Assignment_log_alert','policyName','Enable Create Policy Assignment log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Policy_Assignment_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','failure','selected alert rule is not  configured to detect Create Policy Assignment events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','SUCCESS','selected alert rule is  configured to detect Create Policy Assignment events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','equals','Microsoft.DBforMySQL/servers/databases/write','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','policyName','Enable Azure Account Create or Update MySQL Database log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','failure','selected alert rule is not  configured to detect Create Policy postgress events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','SUCCESS','selected alert rule is  configured to detect Create postgress  events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','equals','Microsoft.DBforPostgreSQL/servers/databases/write','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','policyName','Enable Azure Account Create or Update PostgreSQL Database log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','failure','selected alert rule is not configured to fire whenever Create or Update Load Balancer events are triggered.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','SUCCESS','selected alert rule is  configured to detect Load Balancer events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','equals','Microsoft.Network/loadBalancers/write','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','policyName','Enable Create or Update Load Balancer Assignment log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','failure','selected alert rule is not  configured to detect Create Policy Assignment events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','SUCCESS','selected alert rule is  configured to detect Create Policy Assignment events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','equals','Microsoft.Compute/virtualMachines/write','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','policyName','Enable Create or Update Virtual Machine Event log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','failure','selected alert rule is not  configured to detect Deallocate Virtual Machine events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','SUCCESS','selected alert rule is  configured to detect Deallocate Virtual Machine events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','equals','Microsoft.Compute/virtualMachines/deallocate/action','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','policyName','Enable Deallocate Virtual Machine log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','failure','selected alert rule is not  configured to detect Delete Load Balancer events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','SUCCESS','selected alert rule is  configured to detect Delete Load Balancer events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','equals','Microsoft.Network/loadBalancers/delete','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','policyName','Enable  Azure Account Delete LOad Balancer  log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_MySQLDatabase_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_MySQLDatabase_log_alert','failure','selected alert rule is not  configured to detect delete SQL DB  events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_MySQLDatabase_log_alert','SUCCESS','selected alert rule is  configured to detect delete SQL DB events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_MySQLDatabase_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_MySQLDatabase_log_alert','equals','Microsoft.DBforMySQL/servers/databases/delete','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_MySQLDatabase_log_alert','policyName','Enable Azure Account Delete MySQL Database log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_MySQLDatabase_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','failure','selected alert rule is not  configured to detect Delete Network Security Group  events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','SUCCESS','selected alert rule is  configured to detect Delete Network Security Group Rule events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','equals','Microsoft.Network/networkSecurityGroups/delete','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','policyName','Enable  Azure Account Delete Network Security Group  log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','failure','selected alert rule is not  configured to detect Delete Network Security Group Rule events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','SUCCESS','selected alert rule is  configured to detect Delete Network Security Group Rule  events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','equals','Microsoft.Network/networkSecurityGroups/securityRules/delete','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','policyName','Enable  Azure Account Delete Network Security Group Rule log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','failure','selected alert rule is not  configured to detect Delete Policy Assignment events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','SUCCESS','selected alert rule is  configured to detect Delete Policy Assignment events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','equals','Microsoft.Authorization/policyAssignments/delete','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','policyName','Enable  Azure Account Delete Policy Assignment log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','failure','selected alert rule is not  configured to detect delete Postgress DB events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','SUCCESS','selected alert rule is  configured to detect delete POstgress DB events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','equals','Microsoft.DBforPostgreSQL/servers/databases/delete','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','policyName','Enable Azure Account Delete PostgreSQL Database log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','failure','selected alert rule is not  configured to detect Delete Security Solution events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','SUCCESS','selected alert rule is  configured to detect Delete Security Solution events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','equals','Microsoft.Security/securitySolutions/delete','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','policyName','Enable  Azure Account Delete Security Solution log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','failure','selected alert rule is not  configured to detect Delete Storage Account  events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','SUCCESS','selected alert rule is  configured to detect Delete Storage Account events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','equals','Microsoft.Storage/storageAccounts/delete','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','policyName','Enable  Azure Account Delete Storage Account log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','failure','selected alert rule is not  configured to detect Delete Virtual Machine events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','SUCCESS','selected alert rule is  configured to detect Delete Virtual Machine events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','equals','Microsoft.Compute/virtualMachines/delete','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','policyName','Enable log Alert for Account Delete VM','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','failure','selected alert rule is not  configured to detect Power Off Virtual Machine events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','SUCCESS','selected alert rule is  configured to detect Power Off Virtual Machine events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','equals','Microsoft.Compute/virtualMachines/powerOff/action','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','policyName','Enable  Azure Account Power Off Virtual MAchine Event log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','failure','selected alert rule is not  configured to detect Rename Azure SQL Database  events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','SUCCESS','selected alert rule is  configured to detect Rename Azure SQL Database events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','equals','Microsoft.Sql/servers/databases/move/action','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','policyName','Enable Rename Azure SQL Database log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Security_Solution_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Security_Solution_log_alert','failure','selected alert rule is not  configured to detect Create Policy Assignment events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Security_Solution_log_alert','SUCCESS','selected alert rule is configured to fire whenever Create or Update Security Solution events are triggered.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Security_Solution_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Security_Solution_log_alert','equals','Microsoft.Security/securitySolutions/write','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Security_Solution_log_alert','policyName','Enable Create or Update Security Solution log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Security_Solution_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_KeyVault_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_KeyVault_log_alert','failure','selected alert rule is not  configured to detect Create Policy Assignment events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_KeyVault_log_alert','SUCCESS','selected alert rule is  configured to detect Create Policy Assignment events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_KeyVault_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_KeyVault_log_alert','equals','Microsoft.KeyVault/vaults/write','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_KeyVault_log_alert','policyName','Enable Update Key Vault Activity Log Alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_KeyVault_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_SecurityPolicy_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_SecurityPolicy_log_alert','failure','selected alert rule is not  configured to detect Create Policy Assignment events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_SecurityPolicy_log_alert','SUCCESS','selected alert rule is  configured to detect Create Policy Assignment events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_SecurityPolicy_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_SecurityPolicy_log_alert','equals','Microsoft.Security/policies/write','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_SecurityPolicy_log_alert','policyName','Enable Azure Account Update Security Policy log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Account_Update_SecurityPolicy_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_BlobContainer_Immutability','policyKey','check-if-blob-container-is-immutable','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_BlobContainer_Immutability','failure','Immutability is NOT enabled for Blob container','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_BlobContainer_Immutability','SUCCESS','Immutability is enabled for Blob container ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_BlobContainer_Immutability','policyName','Enable Immutability for Blob Container','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_BlobContainer_Immutability','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Create_Update_Storage_Account_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Create_Update_Storage_Account_log_alert','failure','selected alert rule is not configured to fire whenever Create_Update Storage Account events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Create_Update_Storage_Account_log_alert','SUCCESS','selected alert rule is configured to fire whenever Create_Update Storage Account events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Create_Update_Storage_Account_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Create_Update_Storage_Account_log_alert','equals','Microsoft.Storage/storageAccounts/write','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Create_Update_Storage_Account_log_alert','policyName','Enable Create or Update Storage Account log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Create_Update_Storage_Account_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing','policyKey','check-for-azure-security-pricing-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing','failure','Azure defender not enabled for app service','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing','SUCCESS','Azure defender enabled for app service','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing','policyKey','check-for-azure-security-pricing-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing','failure','Azure defender not enabled for SQL database','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing','SUCCESS','Azure defender enabled for SQL database','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Storage_Account_version-1_SecurityPricing','policyKey','check-for-azure-security-pricing-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Storage_Account_version-1_SecurityPricing','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Storage_Account_version-1_SecurityPricing','failure','Azure defender not enabled for storage account','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Storage_Account_version-1_SecurityPricing','SUCCESS','Azure defender enabled for storage account','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Storage_Account_version-1_SecurityPricing','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Storage_Account_version-1_SecurityPricing','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing','policyKey','check-for-azure-security-pricing-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing','failure','Azure defender not enabled for virtual machine','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing','SUCCESS','Azure defender enabled for virtual machine','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_DiagnosticSettings_Mandatory_Tags','policyKey','check-if-diagnostic-setting-has-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_DiagnosticSettings_Mandatory_Tags','failure','Mandatory categories is NOT enabled for diagnostic settings','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_DiagnosticSettings_Mandatory_Tags','SUCCESS','Mandatory categories is enabled for Diagnostic settings','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_DiagnosticSettings_Mandatory_Tags','policyName','Include mandatory categories in the diagnostics setting','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_DiagnosticSettings_Mandatory_Tags','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','policyKey','check-encryption-enabled-for-app-tier-disk-volumes','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','failure',' App-tier disk volumes attached to the selected Microsoft Azure virtual machine (VM) are not encrypted. ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','SUCESS','App-tier disk volumes attached to the selected Microsoft Azure virtual machine (VM) are not encrypted ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','pricingTier','Standard','Standard','true','true','false','Pricing tier','Pricing tier of VM');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','policyName','Enable Encryption for App-Tier Disk Volumes.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Client_Certificate_Function_App','policyKey','check-for-functionapp-incoming-certificate-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Client_Certificate_Function_App','failure','Incoming client certificate is NOT enabled for function app','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Client_Certificate_Function_App','SUCCESS','Incoming client certificate is enabled for function app','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Client_Certificate_Function_App','policyName','Enable Incoming client certificates for function app','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Client_Certificate_Function_App','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Client_Certificate_for_webApp','policyKey','enable-client-cert-webapp-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Client_Certificate_for_webApp','policyName','Enable  Client Certificate for Web App','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Client_Certificate_for_webApp','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Cloud_Asset_Inventory','policyKey','enable-cloud-asset-api','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Cloud_Asset_Inventory','policyName','Enable Cloud Asset Inventory','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Cloud_Asset_Inventory','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Cloud_Logging_Monitoring','policyKey','enable-cloud-logging-monitoring','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Cloud_Logging_Monitoring','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Cluster_Monitoring_for_kubernetes','policyKey','enable-cluster-monitoring-for-kubernetes','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Cluster_Monitoring_for_kubernetes','description','Enable azure AKS cluster monitoring','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Cluster_Monitoring_for_kubernetes','SUCCESS','In Azure kubernetes services,cluster monitoring is enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Cluster_Monitoring_for_kubernetes','violationReason','In Azure kubernetes services,cluster monitoring is NOT enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Cluster_Monitoring_for_kubernetes','policyName','Enable azure AKS cluster monitoring','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Cluster_Monitoring_for_kubernetes','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Compute_Engine_using_instance_level_SSH_keys','policyKey','check-for-block-project-ssh-key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Compute_Engine_using_instance_level_SSH_keys','description','checks if instance-level SSH keys is enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Compute_Engine_using_instance_level_SSH_keys','violationReason','Compute Engine project-wide ssh keys is not enabled.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Compute_Engine_using_instance_level_SSH_keys','esSgRulesUrl','/gcp_vminstance/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Compute_Engine_using_instance_level_SSH_keys','policyName','Enable Compute Engine using instance-level SSH keys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Compute_Engine_using_instance_level_SSH_keys','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Confidential_Computing_for_Compute_Instance','policyKey','enable-confidential-computing-instance','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Confidential_Computing_for_Compute_Instance','policyName','Enable Confidential Computing for Compute Instance','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Confidential_Computing_for_Compute_Instance','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','failure','selected alert rule is not  configured to detect Create or update sql server firewall events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','SUCCESS','selected alert rule is  configured to detect Create or update sql server firewall events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','equals','Microsoft.Sql/servers/firewallRules/write','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','policyName','Enable  Azure Account Create Policy Assignment log alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_or_Update_SQL_Database_Log_Alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_or_Update_SQL_Database_Log_Alert','failure','selected alert rule is not  configured to detect create or update SQL Database events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_or_Update_SQL_Database_Log_Alert','SUCCESS','selected alert rule is  configured to detect create or update SQL Database Rule  events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_or_Update_SQL_Database_Log_Alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_or_Update_SQL_Database_Log_Alert','equals','Microsoft.Sql/servers/databases/write','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_or_Update_SQL_Database_Log_Alert','policyName','Enable Create or Update SQL Database Log Alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Create_or_Update_SQL_Database_Log_Alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Delete_SQL_Database_Log_Alert','policyKey','check-for-azure-activity-log-alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Delete_SQL_Database_Log_Alert','failure','selected alert rule is not  configured to detect delete SQL Database events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Delete_SQL_Database_Log_Alert','SUCCESS','selected alert rule is  configured to detect delete SQL Database Rule  events','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Delete_SQL_Database_Log_Alert','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Delete_SQL_Database_Log_Alert','equals','Microsoft.Sql/servers/databases/delete','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Delete_SQL_Database_Log_Alert','policyName','Enable Delete SQL Database Log Alert','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Delete_SQL_Database_Log_Alert','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Email_Subscription_Admin','policyKey','check-if-emailSubscriptionAdmins-is-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Email_Subscription_Admin','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Email_Subscription_Admin','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Encryption_for_Unattached_Disk_Volumes','policyKey','check-for-disk-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Encryption_for_Unattached_Disk_Volumes','policyName','Enable Encryption for Unattached Disk Volumes','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Encryption_for_Unattached_Disk_Volumes','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_HTTPS_For_LoadBalancer','policyKey','enable-https-for-loadbalancer','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_HTTPS_For_LoadBalancer','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Https_For_Cloudfunc','policyKey','Enable-Https-For-Cloudfunc','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Https_For_Cloudfunc','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Integrity_Monitoring_For_Node_Pool','policyKey','enable-node-pool-managements','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Integrity_Monitoring_For_Node_Pool','nodePoolKey','enableIntegrityMonitoring','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Integrity_Monitoring_For_Node_Pool','description','Ensure Integrity monitoring for GKE nodes enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Integrity_Monitoring_For_Node_Pool','violationReason','Integrity monitoring for GKE nodes disabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Integrity_Monitoring_For_Node_Pool','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_connections_for_Postgres_Server_DB_Instances','policyKey','disable-enable-database-flags-for-cloudsql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_connections_for_Postgres_Server_DB_Instances','dataBaseType','gcp_cloudsql_postgres','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_connections_for_Postgres_Server_DB_Instances','dbFlagName','log_connections','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_connections_for_Postgres_Server_DB_Instances','dbFlagValue','on','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_connections_for_Postgres_Server_DB_Instances','policyName','Enable Log_connections DB Flag for PostgreSQL','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_connections_for_Postgres_Server_DB_Instances','description','Ensure that log_connections database flag is enabled for your Google Cloud PostgreSQL database instances. The log_connections flag causes each attempted connection to the database instance to be logged, including successful client authentication request','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_connections_for_Postgres_Server_DB_Instances','violationReason','log_connections flag is disabled for your Google Cloud postgres Server database instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_connections_for_Postgres_Server_DB_Instances','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_disconnections_for_Postgres_Server_DB_Instances','policyKey','disable-enable-database-flags-for-cloudsql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_disconnections_for_Postgres_Server_DB_Instances','dataBaseType','gcp_cloudsql_postgres','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_disconnections_for_Postgres_Server_DB_Instances','dbFlagName','log_disconnections','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_disconnections_for_Postgres_Server_DB_Instances','dbFlagValue','on','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_disconnections_for_Postgres_Server_DB_Instances','policyName','Enable Log_disconnections DB Flag for PostgreSQL','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_disconnections_for_Postgres_Server_DB_Instances','description','Ensure that log_disconnections database flag is enabled for all your Google Cloud PostgreSQL database instances. When this flag is enabled, PostgreSQL database logs the end of each session. The log output provides information similar to the one generated by the log_connections flag, plus the duration of the session. The database flag can be changed at the session start, and it cannot be changed during a session.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_disconnections_for_Postgres_Server_DB_Instances','violationReason','log_disconnections flag is disabled for your Google Cloud postgres Server database instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Log_disconnections_for_Postgres_Server_DB_Instances','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Logging_For_BackendServices_LoadBalancer','policyKey','enable-https-logging-for-backend-services','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Logging_For_BackendServices_LoadBalancer','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Network_Security_for_SQLSERVER','policyKey','check-for-azure-nsg-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Network_Security_for_SQLSERVER','protocol','udp','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Network_Security_for_SQLSERVER','port','1434','','false','false','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Network_Security_for_SQLSERVER','policyName','Deny public access to SQL Server port 1434','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Network_Security_for_SQLSERVER','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_PostgreSQL_Server_In_Transit_Encryption','policyKey','check-for-azure-postgree-ssl-enforcement','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_PostgreSQL_Server_In_Transit_Encryption','policyName','Enable_PostgreSQL_Server_In-Transit_Encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_PostgreSQL_Server_In_Transit_Encryption','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Quic_Protocol_For_Load_Balancer','policyKey','enable-quic-protocol-for-loadbalancer','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Quic_Protocol_For_Load_Balancer','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Secure_Boot_For_Node_Pool','policyKey','enable-node-pool-managements','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Secure_Boot_For_Node_Pool','nodePoolKey','enableSecureBoot','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Secure_Boot_For_Node_Pool','description','Ensure secure boot for GKE nodes enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Secure_Boot_For_Node_Pool','violationReason','Secure boot for GKE nodes disabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Secure_Boot_For_Node_Pool','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Uniform_Bucket_Level_Access','policyKey','check-if-cloud-storage-has-uniform-bucket-level-access-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Uniform_Bucket_Level_Access','description','check if cloud storage has uniform bucket level access enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Uniform_Bucket_Level_Access','violationReason','Uniform Bucket-level access is not enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Uniform_Bucket_Level_Access','name','cloudstorage','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Uniform_Bucket_Level_Access','esSgRulesUrl','/gcp_cloudstorage/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Uniform_Bucket_Level_Access','policyName','Enable Uniform Bucket-Level Access for cloud storage Buckets','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Uniform_Bucket_Level_Access','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_VPC_Flow_Logs_and_IntraNode_Visibility','policyKey','check-intraNode-visibility','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_VPC_Flow_Logs_and_IntraNode_Visibility','description','Enabling IntraNode Visibility makes your intraNode pod to pod traffic visible to the networking fabric. With this feature, you can use VPC Flow Logs or other VPC features for intranode traffic.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_VPC_Flow_Logs_and_IntraNode_Visibility','violationReason','This rule will be violated if intraNodeVisibility flag is disabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_VPC_Flow_Logs_and_IntraNode_Visibility','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_VPC_native_for_clusters','policyKey','enable-vpc-native-Clusters','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_VPC_native_for_clusters','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','policyKey','check-encryption-enabled-with-customer-managed-keys-for-Azure_VM_disks','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','failure','The Azure Disk Encryption (ADE) service is using a service-managed key instead of a customer-managed key ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','SUCCESS','Azure Disk Encryption (ADE) service will use the  customer-managed key to encrypt the disk volumes attached to the selected Microsoft Azure virtual machine.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','field','operationName','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','equals','Microsoft.Compute/virtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','policyName','Use CMK to Encrypt Database','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Vulnerability_Assessment_Periodic_Recurring_Scans','policyKey','periodic-scan-vulnerability-assessment','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Vulnerability_Assessment_Periodic_Recurring_Scans','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_auto_provisioning_of_log_analytics_agent','policyKey','check-if-Auto-Provisioning-is-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_auto_provisioning_of_log_analytics_agent','description','Ensure that automatic provisioning of the monitoring agent is enabled in your Microsoft Azure account to collect security data and events from your cloud compute resources in order to help you prevent, detect, and respond efficiently to security vulnerabilities and threats.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_auto_provisioning_of_log_analytics_agent','SUCCESS','In MS defender Auto provisioning is set to on.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_auto_provisioning_of_log_analytics_agent','violationReason','In MS defender Auto provisioning is set to off.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_auto_provisioning_of_log_analytics_agent','policyName','Enable auto provisioning of log analytics agent','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_auto_provisioning_of_log_analytics_agent','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_keyvault_delete_protection','policyKey','keyvault-delete-protection','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_keyvault_delete_protection','policyName','Enable keyvault delete protection','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_keyvault_delete_protection','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_latest_TLS_version','policyKey','check-for-latest-Tls-version-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_latest_TLS_version','dataBaseType','SQLSERVER','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_latest_TLS_version','minimumTlsVersion','TLS1_2','TLS1_2','true','true','false','Minimum TLS version','Minimum TLS version needed');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_latest_TLS_version','policyName','Enable storage account min Tls version set to latest','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_latest_TLS_version','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_log_hostname_for_Postgres_Server_DB_Instances','policyKey','disable-enable-database-flags-for-cloudsql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_log_hostname_for_Postgres_Server_DB_Instances','dataBaseType','gcp_cloudsql_postgres','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_log_hostname_for_Postgres_Server_DB_Instances','dbFlagName','log_hostname','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_log_hostname_for_Postgres_Server_DB_Instances','dbFlagValue','on','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_log_hostname_for_Postgres_Server_DB_Instances','policyName','Enable log_hostname DB Flag for postgres, Cloud SQL','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_log_hostname_for_Postgres_Server_DB_Instances','description','Ensure that the log_hostname database flag is enabled for your Postgres sql database instances, in order to follow data security best practices','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_log_hostname_for_Postgres_Server_DB_Instances','violationReason','log_hostname flag is disabled for your Postgres cloud Server database instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_log_hostname_for_Postgres_Server_DB_Instances','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_osLogin_for_a_project','policyKey','enable-os-login-project-level','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_osLogin_for_a_project','policyName','Enable OS Login for a project','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_osLogin_for_a_project','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_pgAudit_Database_Flag_for_Postgresql_Instance','policyKey','disable-enable-database-flags-for-cloudsql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_pgAudit_Database_Flag_for_Postgresql_Instance','dataBaseType','gcp_cloudsql_postgres','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_pgAudit_Database_Flag_for_Postgresql_Instance','dbFlagName','cloudsql.enable_pgaudit','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_pgAudit_Database_Flag_for_Postgresql_Instance','dbFlagValue','on','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_pgAudit_Database_Flag_for_Postgresql_Instance','policyName','Enable cloudsql.enable_pgaudit Database Flag for Postgresql Instance','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_pgAudit_Database_Flag_for_Postgresql_Instance','description','Ensure cloudsql.enable_pgaudit database flag for Cloud SQL PostgreSQL instance is set to on to allow for centralized logging.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_pgAudit_Database_Flag_for_Postgresql_Instance','violationReason','cloudsql.enable_pgaudit database flag for Cloud SQL PostgreSQL instance is off.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_pgAudit_Database_Flag_for_Postgresql_Instance','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_private_cluster_for_AKS','policyKey','enable-private-cluster-for-kubernetes','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_private_cluster_for_AKS','description','Enable the private cluster feature for your Azure Kubernetes Service cluster to ensure network traffic between your API server and your node pools remains on the private network only','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_private_cluster_for_AKS','SUCCESS','AKS is enabled for private clusters','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_private_cluster_for_AKS','violationReason','AKS is not enabled for private clusters','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_private_cluster_for_AKS','policyName','Enable Private Cluster for AKS','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_private_cluster_for_AKS','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_rbac_for_azure_kubernetes','policyKey','enable-rbac-role-for-kubernetes','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_rbac_for_azure_kubernetes','description','Enable RBAC for Azure Kubernetes Services.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_rbac_for_azure_kubernetes','SUCCESS','In Azure kubernetes services, role-based access control is enabled.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_rbac_for_azure_kubernetes','violationReason','In Azure kubernetes services, role-based access control is not enabled.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_rbac_for_azure_kubernetes','policyName','Enable RBAC for Azure Kubernetes Services','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_rbac_for_azure_kubernetes','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_skip_show_database_for_MySQL_Server_DB_Instances','policyKey','disable-enable-database-flags-for-cloudsql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_skip_show_database_for_MySQL_Server_DB_Instances','dataBaseType','gcp_cloudsql_mysqlserver','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_skip_show_database_for_MySQL_Server_DB_Instances','dbFlagName','skip_show_database','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_skip_show_database_for_MySQL_Server_DB_Instances','dbFlagValue','on','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_skip_show_database_for_MySQL_Server_DB_Instances','policyName','Enable skip_show_database Flag for Cloud SQL','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_skip_show_database_for_MySQL_Server_DB_Instances','description','Ensure that the skip_show_database database flag is enabled for your Google Cloud MySQL database instances in order to prevent users from using the SHOW DATABASES statement if they dont have this privilege.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_skip_show_database_for_MySQL_Server_DB_Instances','violationReason','Skip_show_database flag is not enabled for your Google Cloud MySQL Server database instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_skip_show_database_for_MySQL_Server_DB_Instances','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_soft_delete_for_Blob_storage','policyKey','enable-soft-delete-for-blob-storage-account','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_soft_delete_for_Blob_storage','policyName','Enable soft delete for  Blob storage','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_soft_delete_for_Blob_storage','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_transparent_data_encryption_for_sql_db','policyKey','check-for-transparent-data-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_transparent_data_encryption_for_sql_db','policyName','Enable transparent data encryption for sql database','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_transparent_data_encryption_for_sql_db','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Encrypt_App_Layer_secrets_for_GKE_Cluster','policyKey','encrypt-App-layer-secret-in-GKE-Cluster','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Encrypt_App_Layer_secrets_for_GKE_Cluster','description','Use CMK to encrypt App layer secrets for GKE cluster','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Encrypt_App_Layer_secrets_for_GKE_Cluster','violationReason','App-Layer secrets encryption is not enable using cmk.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Encrypt_App_Layer_secrets_for_GKE_Cluster','esSgRulesUrl','/gcp_gkecluster/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Encrypt_App_Layer_secrets_for_GKE_Cluster','policyName','Encrypt App layer secret in GKE Cluster','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Encrypt_App_Layer_secrets_for_GKE_Cluster','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Encrypt_GKE_Cluster_Node_with_CMK','policyKey','check-node-encryption-access-for-gke-cluster','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Encrypt_GKE_Cluster_Node_with_CMK','description','Use CMK to encrypt GKE Cluster Node','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Encrypt_GKE_Cluster_Node_with_CMK','violationReason','GKE Cluster node encryption is not enable using cmk.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Encrypt_GKE_Cluster_Node_with_CMK','esSgRulesUrl','/gcp_gkecluster/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Encrypt_GKE_Cluster_Node_with_CMK','policyName','Use CMK to encrypt GKE Cluster Node','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Encrypt_GKE_Cluster_Node_with_CMK','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Separate_Service_Account_Duties_for_Users','policyKey','enforce-Separate-Service-Account-Duties-for-Users','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Separate_Service_Account_Duties_for_Users','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Separation_Of_Duties_For_KMS_Roles','policyKey','enforce-separation-of-duties-for-kms','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Separation_Of_Duties_For_KMS_Roles','description','Enforce Separation of Duties While Assigning KMS Related Roles to Users','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Separation_Of_Duties_For_KMS_Roles','violationReason','Separation of Duties While Assigning KMS Related Roles to Users is NOT Enforced','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Separation_Of_Duties_For_KMS_Roles','SUCCESS','Separation of Duties While Assigning KMS Related Roles to Users is enforced','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Separation_Of_Duties_For_KMS_Roles','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','policyKey','disable-enable-database-flags-for-cloudsql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','dataBaseType','gcp_cloudsql_sqlserver','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','dbFlagName','user connections','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','dbFlagValue','0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','policyName','Enforce user Connections Database Flag for Sql Server Instance is Set to Non-limiting Value','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','description','Ensure that the user connections database flag configured for your Google Cloud SQL Server database instances has the optimal value, in accordance with your organization or project guidelines.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','violationReason','user connections DataBase flag  for your Google Cloud SQL Server database instances is not set to organization defined value.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','policyKey','enforce-ssl-to-cloud-sql','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','policyName','Enforce cloud SQL incoming Connections To Use SSL','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','policyKey','disable-enable-database-flags-for-cloudsql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','dataBaseType','gcp_cloudsql_postgres','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','dbFlagName','log_min_error_statement','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','dbFlagValue','ERROR','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','policyName','Enforce log_min_error_statement database flag for postgres Instance is set to Error or Stricter','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','violationReason',' log_min_error_statement flag is not set to ERROR or stricter','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Active_Directory_Web_App','policyKey','check-if-active-directory-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Active_Directory_Web_App','description','Active directory needs to be enabled for app services so that user\'s application can connect to other azure cloud services without need of credentials like user names and password','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Active_Directory_Web_App','violationReason','Active directory is not enabled on app service','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Active_Directory_Web_App','esSgRulesUrl','/azure_webapp/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Active_Directory_Web_App','policyName','Enable Active Directory on AppServices','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Active_Directory_Web_App','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','policyKey','check-DNS-Sec-config-state-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','policyName','Ensure DNSSEC security feature is enabled for Google Cloud DNS managed zones','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','policyKey','check-for-https-only-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','description','Ensure Web App Redirects All HTTP traffic to HTTPS','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','violationReason','web apps does not alllow Http traffic to Https','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','policyName','Ensure Web App Redirects All HTTP traffic to HTTPS','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Web_App_latest_TLS_version','policyKey','check-for-Tls-version-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Web_App_latest_TLS_version','description','check TLS Protocol Latest Version','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Web_App_latest_TLS_version','violationReason','webapp min Tls version is not 1.2','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Web_App_latest_TLS_version','esSgRulesUrl','/azure_webapp/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Web_App_latest_TLS_version','policyName','Enable WebApp min TLS version is 1.2','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Web_App_latest_TLS_version','minTlsVersion','1.2','1.2','true','true','false','Minimum tls version','WebApp minimum tls version');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_Web_App_latest_TLS_version','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_clusters_created_with_pvt_endpoints','policyKey','ensure-clusters-with-private-end-points','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_clusters_created_with_pvt_endpoints','description','Disable access to the Kubernetes API from outside the node network if it is not required.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_clusters_created_with_pvt_endpoints','violationReason','Cluster is not having private end points or has public access.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_clusters_created_with_pvt_endpoints','SUCCESS','Cluster is created with private end points and public access is disabled.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_clusters_created_with_pvt_endpoints','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_clusters_created_with_pvtnodes','policyKey','ensure-clusters-with-private-nodes','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_clusters_created_with_pvtnodes','description','Disable public IP addresses for cluster nodes, so that they only have private IP addresses. Private Nodes are nodes with no public IP addresses.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_clusters_created_with_pvtnodes','violationReason','Cluster is not created with private nodes.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_clusters_created_with_pvtnodes','SUCCESS','Cluster is created with private nodes.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_clusters_created_with_pvtnodes','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_cross_DB_ownership_flag_disabled_for_SQL','policyKey','check-if-sql-instance-owner-changing-flag-disabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_cross_DB_ownership_flag_disabled_for_SQL','description','Use CMK to encrypt GKE Cluster Node','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_cross_DB_ownership_flag_disabled_for_SQL','violationReason','GKE Cluster node encryption is not enable using cmk.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_cross_DB_ownership_flag_disabled_for_SQL','esSgRulesUrl','/gcp_gkecluster/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_cross_DB_ownership_flag_disabled_for_SQL','policyName','Ensure cross DB ownership flag is disabled for SQL DB Server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_cross_DB_ownership_flag_disabled_for_SQL','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_web_app_using_latest_version_of_the_HTTP_protocol','policyKey','check-for-webapp-Http-protocal-latest-vesion','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_web_app_using_latest_version_of_the_HTTP_protocol','description',' Ensure that your Microsoft Azure App Service web applications are using the latest version of the HTTP protocol','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_web_app_using_latest_version_of_the_HTTP_protocol','violationReason','Microsoft Azure App Service web applications are not using the latest version of the HTTP protocol','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_web_app_using_latest_version_of_the_HTTP_protocol','policyName','Ensure  Azure App Service web applications are using the latest version of the HTTP protocol 2.0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ensure_web_app_using_latest_version_of_the_HTTP_protocol','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Expired_AWS_IAMCertificate_version-1_Expired_IAMCertificate_iamcertificate','policyKey','check-for-expired-iam-certificate','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Cloud_Function_not_enabled_with_VPC_connector','policyKey','GCP-Cloud-Function-not-enabled-with-VPC-connector','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Cloud_Function_not_enabled_with_VPC_connector','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_DataProc_CMK_Encryption','policyKey','check-customer-managed-key-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_DataProc_CMK_Encryption','description','Ensure that data proc clusters are encrypted using Customer-Managed Keys (CMKs).','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_DataProc_CMK_Encryption','violationReason','Google Dataproc clusters is not encrypted using a Customer-Managed Key (CMK)','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_DataProc_CMK_Encryption','esSgRulesUrl','/gcp_dataproc/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_DataProc_CMK_Encryption','policyName','Enable Dataproc clusters Encryption with Customer-Managed Keys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_DataProc_CMK_Encryption','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_PubSub_CMK_Encryption','policyKey','check-customer-managed-key-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_PubSub_CMK_Encryption','description','Ensure that Pub/Sub topics are encrypted using Customer-Managed Keys (CMKs).','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_PubSub_CMK_Encryption','violationReason','Google Pub sub is not encrypted using a Customer-Managed Key (CMK)','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_PubSub_CMK_Encryption','esSgRulesUrl','/gcp_pubsub/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_PubSub_CMK_Encryption','policyName','Enable Pub sub Encryption with Customer-Managed Keys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_PubSub_CMK_Encryption','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_Migrate','policyKey','check-for-vminstance-migrate-on-maintenance','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_Migrate','description','checks if virtual machine instance will be migrated on maintenance','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_Migrate','violationReason','VM instance will be terminated on maintenance event','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_Migrate','esSgRulesUrl','/gcp_vminstance/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_Migrate','policyName','VM instance should be migrated during maintenance','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_Migrate','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','policyKey','check-for-vminstance-serviceaccount-cloud-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','description','Deny usage of service accounts with full cloud API access for VM instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','violationReason','VM instance service account has cloud api access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','esSgRulesUrl','/gcp_vminstance/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','policyName','Deny usage of service accounts with full cloud API access for VM instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_Shielded_Config','policyKey','check-if-vminstance-has-shielded-config','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_Shielded_Config','description','checks if virtual machine instance has shielded config','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_Shielded_Config','violationReason','VM instance does not have shielded config','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_Shielded_Config','esSgRulesUrl','/gcp_vminstance/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_Shielded_Config','policyName','Enable Shielded VM for compute instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_VM_Instance_Shielded_Config','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_2FA_Rule','policyKey','check-for-vm-two-factor-authentication','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_2FA_Rule','failure','VM Instance does NOT have 2 Factor Authorisation','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_2FA_Rule','SUCCESS','VM Instance has two factor authorisation ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_2FA_Rule','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_2FA_Rule','policyName','Ensure VM instances has 2 factor Authentication','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_2FA_Rule','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','policyKey','check-for-disk-encryption-cmk','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','failure','VM Instance Disk is not encrypted with Customer managed key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','SUCCESS','VM Instance Disk is encrypted with Customer managed key ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','policyName','Ensure VM instances Disk is encrypted with customer managed key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','policyKey','check-for-disk-encryption-csek','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','failure','VM Instance Disk is not encrypted with Customer supplied key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','SUCCESS','VM Instance Disk is encrypted with Customer supplied key ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','policyName','Ensure VM instances Disk is encrypted with customer supplied key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_public_access_version-1_Rule','policyKey','check-for-vminstnace-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_public_access_version-1_Rule','failure','VM Instance is having public IP ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_public_access_version-1_Rule','SUCCESS','VM Instance in not having public access ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_public_access_version-1_Rule','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_public_access_version-1_Rule','policyName','Ensure VM instances are not using public IP addresses','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_Virtual_Machine_public_access_version-1_Rule','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_bigquery_dataset_public_access_rule','policyKey','check-bigquery-dataset-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_bigquery_dataset_public_access_rule','description','Do not allow public access to Big Query. Granting permissions to allUsers and allAuthenticatedUsers members can allow anyone to access your datasets.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_bigquery_dataset_public_access_rule','violationReason','One or more roles are using the allUsers or allAuthenticatedUsers member bindings in the dataset ACLs','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_bigquery_dataset_public_access_rule','esSgRulesUrl','/gcp_bigquerydataset/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_bigquery_dataset_public_access_rule','policyName','Deny public access to Big Query','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_bigquery_dataset_public_access_rule','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_bigquery_table_encryption_cmks_rule','policyKey','check-customer-managed-key-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_bigquery_table_encryption_cmks_rule','description','Ensure that Big Query dataset is encrypted with Customer Managed Encryption Keys (CMEK) to protect your data-at-rest.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_bigquery_table_encryption_cmks_rule','violationReason','Google Cloud BigQuery dataset table is not encrypted using a Customer-Managed Key (CMK)','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_bigquery_table_encryption_cmks_rule','esSgRulesUrl','/gcp_bigquerytable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_bigquery_table_encryption_cmks_rule','policyName','Use CMEK to encrypt Big Query','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_bigquery_table_encryption_cmks_rule','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_cloud_sql_encryption_cmks_rule','policyKey','check-customer-managed-key-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_cloud_sql_encryption_cmks_rule','description','Ensure Cloud SQL is encrypted with Customer Managed Encryption Keys (CMEK) to protect your data-at-rest.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_cloud_sql_encryption_cmks_rule','violationReason','Google Cloud SQL database instance is not encrypted using a Customer-Managed Key (CMK)','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_cloud_sql_encryption_cmks_rule','esSgRulesUrl','/gcp_cloudsql/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_cloud_sql_encryption_cmks_rule','policyName','Use CMEK to encrypt Cloud SQL','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_cloud_sql_encryption_cmks_rule','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_kms_public_access_rule','policyKey','check-kms-key-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_kms_public_access_rule','description','Ensure there are no publicly accessible KMS cryptographic keys available within your Google Cloud account.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_kms_public_access_rule','violationReason','Google Cloud key is publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_kms_public_access_rule','esSgRulesUrl','/gcp_kmskey/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_kms_public_access_rule','policyName','Check for Publicly Accessible Cloud KMS Keys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_kms_public_access_rule','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_sql_database_high_availability_rule','policyKey','check-if-sql-db-is-highly-available','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_sql_database_high_availability_rule','description','Configure sql db instances for high availability','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_sql_database_high_availability_rule','violationReason','SQL db instances are not highly available','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_sql_database_high_availability_rule','esSgRulesUrl','/gcp_cloudsql/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_sql_database_high_availability_rule','policyName','Production Cloud SQL database instances should be configured for high availability','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GCP_sql_database_high_availability_rule','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GuardDutyFindingsExists_version-1_GuardDutyFindingsExists_ec2','policyKey','check-guard-duty-findings-exists','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('GuardDutyFindingsExists_version-1_GuardDutyFindingsExists_ec2','esGuardDutyUrl','/guardduty/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('HighImageVulnerabilitiesScannedByAqua','target','30','30','true','true','false','Target','Target in days');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('HighImageVulnerabilitiesScannedByAqua','esAquaImageUrl','/aqua-image-vulnerability/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('HighImageVulnerabilitiesScannedByAqua','discoveredDaysRange','7','7','true','true','false','Discovered days range','Discovered days in number');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('HighImageVulnerabilitiesScannedByAqua','policyKey','check-for-image-vulnerabilities-scanned-by-aqua','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('HighImageVulnerabilitiesScannedByAqua','pluginType','aqua','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('HighVMVulnerabilitiesScannedByTenable','target','30','30','true','true','false','Target','Target in days');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('HighVMVulnerabilitiesScannedByTenable','esTenableVMUrl','/tenable-vm-vulnerability/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('HighVMVulnerabilitiesScannedByTenable','discoveredDaysRange','7','7','true','true','false','Discovered days range','Discovered days in number');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('HighVMVulnerabilitiesScannedByTenable','policyKey','check-for-vm-vulnerabilities-scanned-by-tenable','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('HighVMVulnerabilitiesScannedByTenable','pluginType','tenable','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IAMCertificate_Expiry_For_X_Days_version-1_IAMCertificate_Expiry_For_X_Days_iamcertificate','policyKey','check-for-iam-certificate-expiry','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IAMCertificate_Expiry_For_X_Days_version-1_IAMCertificate_Expiry_For_X_Days_iamcertificate','targetExpireDuration','90','90','true','true','false','Target expiration duration','Checks if expiry date is under given number of days');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole','policyKey','iam-role-with-unapproved-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole','roleIdentifyingString','role/paladincloud_ro','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole','unApprovedIamActions','ec2:CreateDefaultSubnet,ec2:CreateDefaultVpc,ec2:CreateInternetGateway,ec2:CreateSubnet,ec2:CreateVpc,ec2:CreateVpcEndpoint,ec2:CreateVpcEndpointConnectionNotification,ec2:CreateVpcEndpointServiceConfiguration,ec2:CreateVpcPeeringConnection,ec2:CreateVpnConnection,ec2:CreateVpnConnectionRoute,ec2:CreateVpnGateway,ec2:ModifySubnetAttribute,ec2:ModifyVpcAttribute,ec2:ModifyVpcEndpoint,ec2:ModifyVpcEndpointConnectionNotification,ec2:ModifyVpcEndpointServiceConfiguration,ec2:ModifyVpcEndpointServicePermissions,ec2:ModifyVpcPeeringConnectionOptions,ec2:ModifyVpcTenancy,ec2:MoveAddressToVpc,ec2:AttachInternetGateway,ec2:CreateEgressOnlyInternetGateway,ec2:AttachVpnGateway.ec2:*,*','ec2:CreateDefaultSubnet,ec2:CreateDefaultVpc,ec2:CreateInternetGateway,ec2:CreateSubnet,ec2:CreateVpc,ec2:CreateVpcEndpoint,ec2:CreateVpcEndpointConnectionNotification,ec2:CreateVpcEndpointServiceConfiguration,ec2:CreateVpcPeeringConnection,ec2:CreateVpnConnection,ec2:CreateVpnConnectionRoute,ec2:CreateVpnGateway,ec2:ModifySubnetAttribute,ec2:ModifyVpcAttribute,ec2:ModifyVpcEndpoint,ec2:ModifyVpcEndpointConnectionNotification,ec2:ModifyVpcEndpointServiceConfiguration,ec2:ModifyVpcEndpointServicePermissions,ec2:ModifyVpcPeeringConnectionOptions,ec2:ModifyVpcTenancy,ec2:MoveAddressToVpc,ec2:AttachInternetGateway,ec2:CreateEgressOnlyInternetGateway,ec2:AttachVpnGateway.ec2:*,*','true','true','false','Unapproved IAM actions','IAM roles should not have these permissions');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IP_Forwarding_version-1_IPF_virtualmachine','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IP_Forwarding_version-1_IPF_virtualmachine','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IP_Forwarding_version-1_IPF_virtualmachine','policyDefinitionName','bd352bd5-2853-4985-bf0d-73806b4a5744','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IP_Forwarding_version-1_IPF_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IP_forwarding_for_Instances','policyKey','ip-forward-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IP_forwarding_for_Instances','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamAccessKeyRotatedInEvery90Days_version-1_IamAccessKeyRotatedInEvery90Days_iamuser','policyKey','check-for-accesskeys-rotated-in-every-90-days','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','roleIdentifyingString','role/paladincloud_ro','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','policyKey','check-iam-password-policy','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','maxPasswordAge','90','90','true','true','false','Max password age','Maximum age of password in days');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','requireSymbols','true','true','true','true','false','Require symbols','Does password require symbols');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','requireNumbers','true','true','true','true','false','Require numbers','Does password require numbers');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','requireUppercaseCharacters','true','true','true','true','false','Require uppercase characters','Does password require uppercase characters');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','requireLowercaseCharacters','true','true','true','true','false','Require lowercase characters','Does password reuire lowecase characters');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','allowUsersToChangePassword','true','true','true','true','false','Allow users to change password','Will the user be able to change the password');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','expirePasswords','true','true','true','true','false','Expire password','Does password expire');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','hardExpiry','false','true','true','true','false','Hard expiry','Does the password need Hard expiry');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','minPasswordLength','14','14','true','true','false','Minimum password length','Minimum length of the password');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','lastPasswordsToRemember','24','24','true','true','false','Last password to remember','Last password to remember');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamUserWithMultipleAccessKey_version-1_IAMUserShouldUseSingleKey_iamuser','policyKey','check-for-user-with-multiple-accesskeys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IamUserWithMultipleAccessKey_version-1_IAMUserShouldUseSingleKey_iamuser','esIamUserKeyUrl','/aws/iamuser_keys/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IdleLoadBalancerRule_version-1_IdleLoadbalancerRule_classicelb','policyKey','check-for-idle-load-balancers','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IdleLoadBalancerRule_version-1_IdleLoadbalancerRule_classicelb','checkId','hjLMh88uM8','hjLMh88uM8','false','true','false','Check Id','Check Id Keyword');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('IdleLoadBalancerRule_version-1_IdleLoadbalancerRule_classicelb','esServiceURL','/aws_checks/checks_resources/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ImagesScannedByAqua','target','30','30','true','true','false','Target','Target in days');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ImagesScannedByAqua','esAquaImageUrl','/aqua-image-vulnerability/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ImagesScannedByAqua','discoveredDaysRange','7','7','true','true','false','Discovered days range','Discovered days in number');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ImagesScannedByAqua','policyKey','check-for-images-scanned-by-aqua','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ImagesScannedByAqua','pluginType','aqua','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('LambdaFunWithAdmin-OrIamPrivileges_version-1_LambdaFunWithAdminOrIamPrivileges_lambda','policyKey','check-for-lambda-fun-with-admin-or-IAM-privileges','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('LambdaFunWithAdmin-OrIamPrivileges_version-1_LambdaFunWithAdminOrIamPrivileges_lambda','nonAdminAccntsWithIAMFullAccessRuleId','NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('LambdaFunWithAdmin-OrIamPrivileges_version-1_LambdaFunWithAdminOrIamPrivileges_lambda','esNonAdminAccntsWithIAMFullAccessUrl','/aws/issue_iamrole/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Legacy_Subnet_should_Not_Exist_in_a_Project','policyKey','check-subnet-mode-is-legacy-vpc','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Legacy_Subnet_should_Not_Exist_in_a_Project','policyName','Subnet mode for VPC should not be legacy','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Legacy_Subnet_should_Not_Exist_in_a_Project','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('LowUtilizationAmazonEC2InstancesRule_version-1_LowUtilizationAmazonEC2InstancesRule_ec2','policyKey','check-for-low-utilization-amazon-ec2-instance','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('LowUtilizationAmazonEC2InstancesRule_version-1_LowUtilizationAmazonEC2InstancesRule_ec2','checkId','Qch7DwouX1','','false','true','false','Check Id','Check Id Keyword');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('LowUtilizationAmazonEC2InstancesRule_version-1_LowUtilizationAmazonEC2InstancesRule_ec2','esServiceURL','/aws_checks/checks_resources/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('MediumImageVulnerabilitiesScannedByAqua','target','30','30','true','true','false','Target','Target in days');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('MediumImageVulnerabilitiesScannedByAqua','esAquaImageUrl','/aqua-image-vulnerability/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('MediumImageVulnerabilitiesScannedByAqua','discoveredDaysRange','7','7','true','true','false','Discovered days range','Discovered days in number');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('MediumImageVulnerabilitiesScannedByAqua','policyKey','check-for-image-vulnerabilities-scanned-by-aqua','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('MediumImageVulnerabilitiesScannedByAqua','pluginType','aqua','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('MediumVMVulnerabilitiesScannedByTenable','target','30','30','true','true','false','Target','Target in days');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('MediumVMVulnerabilitiesScannedByTenable','esTenableVMUrl','/tenable-vm-vulnerability/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('MediumVMVulnerabilitiesScannedByTenable','discoveredDaysRange','7','7','true','true','false','Discovered days range','Discovered days in number');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('MediumVMVulnerabilitiesScannedByTenable','policyKey','check-for-vm-vulnerabilities-scanned-by-tenable','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('MediumVMVulnerabilitiesScannedByTenable','pluginType','tenable','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Missing_Endpoint_Protection_version-1_MEP_virtualmachine','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Missing_Endpoint_Protection_version-1_MEP_virtualmachine','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Missing_Endpoint_Protection_version-1_MEP_virtualmachine','policyDefinitionName','af6cd1bd-1635-48cb-bde7-5b15693900b9','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Missing_Endpoint_Protection_version-1_MEP_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort22_networkacl','policyKey','check-for-nacl-with-public-access-configured-ports','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort22_networkacl','portToCheck','22','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort22_networkacl','esNaclEntryUrl','/aws/networkacl_entries/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort3389_networkacl','policyKey','check-for-nacl-with-public-access-configured-ports','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort3389_networkacl','portToCheck','3389','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort3389_networkacl','esNaclEntryUrl','/aws/networkacl_entries/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Namespaces_DiagnosticLogs_version-1_NDL_namespaces','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Namespaces_DiagnosticLogs_version-1_NDL_namespaces','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Namespaces_DiagnosticLogs_version-1_NDL_namespaces','policyDefinitionName','83a214f7-d01a-484b-91a9-ed54470c9a6a','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Namespaces_DiagnosticLogs_version-1_NDL_namespaces','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Network_Security_Group_Flow_Log_retention_more_than_90_days','policyKey','Enforce-Network-Security-Group-Flow-Log-retention-for-more-than-90-days','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Network_Security_Group_Flow_Log_retention_more_than_90_days','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole','roleIdentifyingString','role/paladincloud_ro','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole','adminRolesToCompare','Admin','Admin','true','true','false','Admin roles to compare','Admin roles to compare for the access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole','policyKey','check-non-admin-accounts-for-iamfullccess','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_ApiWithNonStandardRule_api','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_ApiWithNonStandardRule_api','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_ApiWithNonStandardRule_api','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_AppelbWithNonStandardRule_appelb','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_AppelbWithNonStandardRule_appelb','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_AppelbWithNonStandardRule_appelb','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_DynamodbWithNonStandardRule_dynamodb','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_DynamodbWithNonStandardRule_dynamodb','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_DynamodbWithNonStandardRule_dynamodb','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_EfsWithNonStandardRule_efs','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_EfsWithNonStandardRule_efs','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_EfsWithNonStandardRule_efs','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_ElasticacheWithNonStandardRule_elasticache','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_ElasticacheWithNonStandardRule_elasticache','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_ElasticacheWithNonStandardRule_elasticache','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_ElasticipWithNonStandardRule_elasticip','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_ElasticipWithNonStandardRule_elasticip','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_ElasticipWithNonStandardRule_elasticip','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_ElasticsearchWithNonStandardRule_elasticsearch','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_ElasticsearchWithNonStandardRule_elasticsearch','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_ElasticsearchWithNonStandardRule_elasticsearch','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_EmrWithNonStandardRule_emr','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_EmrWithNonStandardRule_emr','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_EmrWithNonStandardRule_emr','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_EniWithNonStandardRule_eni','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_EniWithNonStandardRule_eni','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_EniWithNonStandardRule_eni','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_KmsWithNonStandardRule_kms','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_KmsWithNonStandardRule_kms','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_KmsWithNonStandardRule_kms','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_RdsdbWithNonStandardRule_rdsdb','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_RdsdbWithNonStandardRule_rdsdb','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_RdsdbWithNonStandardRule_rdsdb','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_RedshiftWithNonStandardRule_redshift','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_RedshiftWithNonStandardRule_redshift','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_RedshiftWithNonStandardRule_redshift','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_VpcWithNonStandardRule_vpc','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_VpcWithNonStandardRule_vpc','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_VpcWithNonStandardRule_vpc','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_AsgWithNonStandardRegion_asg','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_AsgWithNonStandardRegion_asg','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_AsgWithNonStandardRegion_asg','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_ClassicelbWithNonStandardRegion_classicelb','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_ClassicelbWithNonStandardRegion_classicelb','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_ClassicelbWithNonStandardRegion_classicelb','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_LambdaWithNonStandardRegion_lambda','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_LambdaWithNonStandardRegion_lambda','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_LambdaWithNonStandardRegion_lambda','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_LaunchconfigWithNonStandardRegion_launchconfig','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_LaunchconfigWithNonStandardRegion_launchconfig','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_LaunchconfigWithNonStandardRegion_launchconfig','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_RdsSnapshotWithNonStandardRegion_rdssnapshot','threadsafe','true','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_RdsSnapshotWithNonStandardRegion_rdssnapshot','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_RdsSnapshotWithNonStandardRegion_rdssnapshot','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_ResourceWithNonStandardRule_ec2','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_ResourceWithNonStandardRule_ec2','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_ResourceWithNonStandardRule_ec2','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_S3WithNonStandardRegion_s3','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_S3WithNonStandardRegion_s3','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_S3WithNonStandardRegion_s3','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_SgWithNonStandardRegion_sg','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_SgWithNonStandardRegion_sg','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_SgWithNonStandardRegion_sg','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_SnapshotWithNonStandardRegion_snapshot','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_SnapshotWithNonStandardRegion_snapshot','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_SnapshotWithNonStandardRegion_snapshot','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_SnstopicWithNonStandardRegion_snstopic','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_SnstopicWithNonStandardRegion_snstopic','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_SnstopicWithNonStandardRegion_snstopic','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_StackWithNonStandardRegion_stack','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_StackWithNonStandardRegion_stack','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_StackWithNonStandardRegion_stack','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_SubnetWithNonStandardRegion_subnet','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_SubnetWithNonStandardRegion_subnet','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_SubnetWithNonStandardRegion_subnet','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_VolumeWithNonStandardRegion_volume','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_VolumeWithNonStandardRegion_volume','policyKey','check-for-non-standard-region-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('NonStandardRegionRule_version-1_version-1_VolumeWithNonStandardRegion_volume','standardRegions','us-west-2,us-east-1,us-east-2,us-west-1','us-west-2,us-east-1,us-east-2,us-west-1','true','true','false','Standard regions','Standard regions for the rule');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RDSDBEnableAutoMinorVersionUpgrade_version-1_EnableAutoMinorVersionUpgrade_rdsdb','policyKey','check-for-rds-auto-minor-version-upgrade','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RdsSnapshotWithPublicAccess_version-1_RdsSnapshotWithPublicAccess_rdssnapshot','policyKey','check-for-rds-snapshot-with-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RdsSnapshotWithPublicAccess_version-1_RdsSnapshotWithPublicAccess_rdssnapshot','checkId','rSs93HQwa1','rSs93HQwa1','false','true','false','Check Id','Check Id Keyword');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RdsSnapshotWithPublicAccess_version-1_RdsSnapshotWithPublicAccess_rdssnapshot','esServiceURL','/aws_checks/checks_resources/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','policyKey','check-for-redshift-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','esRedshiftSgURL','/aws/redshift_secgroups/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','esRoutetableAssociationsURL','/aws_routetable/routetable_associations/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','esRoutetableRoutesURL','/aws_routetable/routetable_routes/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','esRoutetableURL','/aws_routetable/routetable/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','cidripv6','::/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','internetGateWay','igw','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','defaultCidrIp','192.168.0.0/16','192.168.0.0/16','true','true','false','Default cidr IP','Any instance found with default route 0.0.0.0, then it will be replaced with given cird block during the time of autofix');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','fixKey','publicly-accessible-redshift','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('RemoveRootUserAccessKey_version-1_RemoveRootUserAccessKey_account','policyKey','remove-root-user-account-access-key','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Remove_custom_owner_roles','policyKey','check-for-custom-owner-roles','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Remove_custom_owner_roles','failure',' if there are custom subscription owner roles available in your Azure account','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Remove_custom_owner_roles','SUCCESS',' if there are no custom subscription owner roles available in your Azure account','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Remove_custom_owner_roles','policyName','Remove custom Owner roles','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Remove_custom_owner_roles','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Remove_user_options_for_SQLServer','policyKey','disable-enable-database-flags-for-cloudsql-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Remove_user_options_for_SQLServer','dataBaseType','gcp_cloudsql_sqlserver','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Remove_user_options_for_SQLServer','dbFlagName','user options','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Remove_user_options_for_SQLServer','dbFlagValue','NULL','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Remove_user_options_for_SQLServer','policyName','Remove user options database flag for Cloud SQL SERVER instance','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Remove_user_options_for_SQLServer','description','In order to avoid defining global defaults for all database users, delete user options database flag','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Remove_user_options_for_SQLServer','violationReason','user options flag is enabled for your Google Cloud SQL Server database instances','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Remove_user_options_for_SQLServer','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Rotate_Google_Cloud_API_Keys','policyKey','rotate-API-Keys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Rotate_Google_Cloud_API_Keys','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3AccessLogsRule_version-1_S3AccessLogsRule_s3','policyKey','check-for-s3-access-logs','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3AccessLogsRule_version-1_S3AccessLogsRule_s3','esS3PubAccessIssueUrl','/aws_s3/issue_s3/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3AccessLogsRule_version-1_S3AccessLogsRule_s3','s3PublicAccessRuleId','S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3AccessLogsRule_version-1_S3AccessLogsRule_s3','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3AccessLogsRule_version-1_S3AccessLogsRule_s3','accessLogsEnabledRegions','paladin-s3-region','','true','true','false','Access log enabled regions','Access log enabled regions for s3');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3AccessLogsRule_version-1_S3AccessLogsRule_s3','destinationBucketForAutofix','paladin-s3-accesslog-ACCOUNT_ID-REGION-dev','paladin-s3-accesslog-ACCOUNT_ID-REGION-dev','true','true','false','Destination bucket for autofix','Destination bucket name for auto fix');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3BucketAllowHTTPRequest_version-1_S3BucketAllowHTTPRequest_s3','policyKey','check-for-s3-bucket-policy-denies-http','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3BucketEncryption_version-1_S3BucketWithoutEncryption_s3','policyKey','check-for-s3-bucket-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','esServiceURL','/aws_checks/checks_resources/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','apiGWURL','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','policyKey','check-for-s3-global-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','checkId','Pfx0RwqBli','Pfx0RwqBli','false','true','false','Check Id','Check Id Keyword');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','roleIdentifyingString','role/paladincloud_ro','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','fixKey','s3-global-access-fix','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3HostsWebsiteRule_version-1_S3HostsWebsiteRule_s3','policyKey','check-for-s3-hosting-website','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3MFADeleteEnabled_version-1_MFADeleteEnabled_s3','policyKey','check-for-s3-MFA-delete-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3ObjectLevelReadLogging_version-1_ObjectLevelReadLogging_s3','policyKey','check-s3-object-level-read-logging-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('S3ObjectLevelWriteLogging_version-1_ObjectLevelWriteLogging_s3','policyKey','check-s3-object-level-write-logging-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg','accountid','765245176332','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg','workerThreadCount','50','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg','portToCheck','ANY','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg','policyKey','check-for-security-group-global-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg','cidripv6','::/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_SgWithSshPort22OpenToInternetAccess_sg','policyKey','check-for-security-group-global-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_SgWithSshPort22OpenToInternetAccess_sg','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_SgWithSshPort22OpenToInternetAccess_sg','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_SgWithSshPort22OpenToInternetAccess_sg','portToCheck','22','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_SgWithSshPort22OpenToInternetAccess_sg','cidripv6','::/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_memcached_port_11211_open_to_internet_access','policyKey','check-for-security-group-global-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_memcached_port_11211_open_to_internet_access','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_memcached_port_11211_open_to_internet_access','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_memcached_port_11211_open_to_internet_access','portToCheck','11211','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_memcached_port_11211_open_to_internet_access','cidripv6','::/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_redis_port_6379_open_to_internet_access','policyKey','check-for-security-group-global-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_redis_port_6379_open_to_internet_access','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_redis_port_6379_open_to_internet_access','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_redis_port_6379_open_to_internet_access','portToCheck','6379','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_redis_port_6379_open_to_internet_access','cidripv6','::/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQL_Auditing_Retention_version-1_SAR_sqlserver','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQL_Auditing_Retention_version-1_SAR_sqlserver','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQL_Auditing_Retention_version-1_SAR_sqlserver','policyDefinitionName','89099bee-89e0-4b26-a5f4-165451757743','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQL_Auditing_Retention_version-1_SAR_sqlserver','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQL_TDE_Encryption_version-1_TPS_sqlserver','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQL_TDE_Encryption_version-1_TPS_sqlserver','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQL_TDE_Encryption_version-1_TPS_sqlserver','policyDefinitionName','0d134df8-db83-46fb-ad72-fe0c9428c8dd','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQL_TDE_Encryption_version-1_TPS_sqlserver','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQL_Vulnerability_Assessment_version-1_SVA_sqlserver','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQL_Vulnerability_Assessment_version-1_SVA_sqlserver','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQL_Vulnerability_Assessment_version-1_SVA_sqlserver','policyDefinitionName','ef2a8f2a-b3d9-49cd-a8a8-9a3aaaf647d9','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQL_Vulnerability_Assessment_version-1_SVA_sqlserver','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQS_Public_Access_Rule_version-1_SQS_Public_access_rule_sqs','policyKey','check-for-sqs-public-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('SQS_Public_Access_Rule_version-1_SQS_Public_access_rule_sqs','threadsafe','true','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Secure_SSL_Cipher_Suites','policyKey','check-for-Insecure-SSL-Cipher-Suites','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Secure_SSL_Cipher_Suites','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Send_Scan_Reports_Should_Be_Configured','policyKey','check-if-send-scan-reports-is-configured','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Send_Scan_Reports_Should_Be_Configured','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Send_Scan_Reports_Should_Be_Configured','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Sensitive_Data_SQL_version-1_SDS_sqldatabase','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Sensitive_Data_SQL_version-1_SDS_sqldatabase','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Sensitive_Data_SQL_version-1_SDS_sqldatabase','policyDefinitionName','cc9835f2-9f6b-4cc8-ab4a-f8ef615eb349','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Sensitive_Data_SQL_version-1_SDS_sqldatabase','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ServiceAccountPrivilegesRule_version-1_UnapprovedServiceAccountAccess_iamuser','policyKey','iam-serviceaccount-privileges-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ServiceAccountPrivilegesRule_version-1_UnapprovedServiceAccountAccess_iamuser','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ServiceAccountPrivilegesRule_version-1_UnapprovedServiceAccountAccess_iamuser','roleIdentifyingString','role/paladincloud_ro','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ServiceAccountPrivilegesRule_version-1_UnapprovedServiceAccountAccess_iamuser','unApprovedIamActions','ec2:TerminateInstances,ec2:RunInstances,s3:DeleteBucket,s3:PutBucketPolicy,ec2:ModifyInstanceAttribute,s3:DeleteObject,ec2:*,*,s3:*,s3:Put*,cloudtrail:*,cloudtrail:DeleteTrail,config:*,config:DeleteConfigRule','ec2:TerminateInstances,ec2:RunInstances,s3:DeleteBucket,s3:PutBucketPolicy,ec2:ModifyInstanceAttribute,s3:DeleteObject,ec2:*,*,s3:*,s3:Put*,cloudtrail:*,cloudtrail:DeleteTrail,config:*,config:DeleteConfigRule','true','true','false','Unapproved IAM actions','IAM roles should not have these permissions');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ServiceLimitRule_version-1_ServiceLimitRule_account','policyKey','check-for-service-limit','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ServiceLimitRule_version-1_ServiceLimitRule_account','threadsafe','true','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ServiceLimitRule_version-1_ServiceLimitRule_account','checkId','eW7HH0l7J9','eW7HH0l7J9','false','true','false','Check Id','Check Id Keyword');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('ServiceLimitRule_version-1_ServiceLimitRule_account','esServiceURL','/aws_checks/checks_resources/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_Retention_Days_Greater_Than_Ninety','policyKey','check-if-retention-days-is-greater-than-ninety','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_Retention_Days_Greater_Than_Ninety','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_Retention_Days_Greater_Than_Ninety','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_all_users_to_owner_email_notifications','policyKey','set-all-users-to-owner-email-notification','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_all_users_to_owner_email_notifications','description','In MS defender email notifications for security alerts for a subscription, \'All users with the following roles\' should be set to \'Owner\'.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_all_users_to_owner_email_notifications','violationReason','In MS defender email notifications for security alerts for a subscription, \'All users with following rules\' is not set to owner','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_all_users_to_owner_email_notifications','policyName','Set all users option to owner in email notifications for MS defender','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_all_users_to_owner_email_notifications','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_notify_alerts_severity_to_high','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Subnet_NSG_rule_version-1_SNR_subnets','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Subnet_NSG_rule_version-1_SNR_subnets','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Subnet_NSG_rule_version-1_SNR_subnets','policyDefinitionName','e71308d3-144b-4262-b144-efdc3cc90517','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Subnet_NSG_rule_version-1_SNR_subnets','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('System_Updates_version-1_SSU_virtualmachine','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('System_Updates_version-1_SSU_virtualmachine','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('System_Updates_version-1_SSU_virtualmachine','policyDefinitionName','86b3d65f-7626-441e-b690-81a8b71cff60','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('System_Updates_version-1_SSU_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TLS_Version_MySQL_Flexible_Server','policyKey','check-for-tls-version-mysql-flexible-server','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TLS_Version_MySQL_Flexible_Server','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TLS_Version_MySQL_Flexible_Server','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TLS_Version_MySQL_Flexible_Server','supportedTlsVersions','TLSV1.2','TLSV1.2','true','true','false','Supported TLS versions','Minimum TLS version needed');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TLS_Version_MySQL_Flexible_Server','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_AppelbTaggingRule_appelb','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_AppelbTaggingRule_appelb','policyKey','check-for-missing-mandatory-tags','','false','false','false','policyKey','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_AppelbTaggingRule_appelb','splitterChar',',','','false','false','false','splitterChar','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_AsgTaggingRule_asg','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_AsgTaggingRule_asg','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_AsgTaggingRule_asg','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_BigQueryDatasetTagging_bigquerydataset','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_BigQueryDatasetTagging_bigquerydataset','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_BigQueryDatasetTagging_bigquerydataset','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_BigQueryDatasetTagging_bigquerydataset','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_BigQueryTableTagging_bigquerytable','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_BigQueryTableTagging_bigquerytable','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_BigQueryTableTagging_bigquerytable','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_BigQueryTableTagging_bigquerytable','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_BlobcontainerTaggingRule_blobcontainer','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_BlobcontainerTaggingRule_blobcontainer','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_BlobcontainerTaggingRule_blobcontainer','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_BlobcontainerTaggingRule_blobcontainer','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ClassicelbTaggingRule_classicelb','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ClassicelbTaggingRule_classicelb','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ClassicelbTaggingRule_classicelb','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_CloudSqlTagging_cloudsql','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_CloudSqlTagging_cloudsql','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_CloudSqlTagging_cloudsql','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_CloudSqlTagging_cloudsql','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_CloudStorageTagging_cloudstorage','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_CloudStorageTagging_cloudstorage','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_CloudStorageTagging_cloudstorage','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_CloudStorageTagging_cloudstorage','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_CloudfrontTaggingRule_cloudfront','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_CloudfrontTaggingRule_cloudfront','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_CloudfrontTaggingRule_cloudfront','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_DatabricksTaggingRule_databricks','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_DatabricksTaggingRule_databricks','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_DatabricksTaggingRule_databricks','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_DatabricksTaggingRule_databricks','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_DiskTaggingRule_disk','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_DiskTaggingRule_disk','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_DiskTaggingRule_disk','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_DiskTaggingRule_disk','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_DynamodbTaggingRule_dynamodb','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_DynamodbTaggingRule_dynamodb','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_DynamodbTaggingRule_dynamodb','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ECSClusterTaggingRule_ecscluster','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ECSClusterTaggingRule_ecscluster','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ECSClusterTaggingRule_ecscluster','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ECSTaskDefinitionTaggingRule_ecstaskdefinition','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ECSTaskDefinitionTaggingRule_ecstaskdefinition','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ECSTaskDefinitionTaggingRule_ecstaskdefinition','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_Ec2TaggingRule_ec2','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_Ec2TaggingRule_ec2','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_Ec2TaggingRule_ec2','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_EfsTaggingRule_efs','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_EfsTaggingRule_efs','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_EfsTaggingRule_efs','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ElasticacheTaggingRule_elasticache','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ElasticacheTaggingRule_elasticache','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ElasticacheTaggingRule_elasticache','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_EmrTaggingRule_emr','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_EmrTaggingRule_emr','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_EmrTaggingRule_emr','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_KmsTaggingRule_kms','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_KmsTaggingRule_kms','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_KmsTaggingRule_kms','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_LambdaTaggingRule_lambda','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_LambdaTaggingRule_lambda','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_LambdaTaggingRule_lambda','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_LoadbalancerTaggingRule_loadbalancer','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_LoadbalancerTaggingRule_loadbalancer','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_LoadbalancerTaggingRule_loadbalancer','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_LoadbalancerTaggingRule_loadbalancer','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_MysqlserverTaggingRule_mysqlserver','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_MysqlserverTaggingRule_mysqlserver','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_MysqlserverTaggingRule_mysqlserver','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_MysqlserverTaggingRule_mysqlserver','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_NetworkinterfaceTaggingRule_networkinterface','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_NetworkinterfaceTaggingRule_networkinterface','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_NetworkinterfaceTaggingRule_networkinterface','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_NetworkinterfaceTaggingRule_networkinterface','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_NsgTaggingRule_nsg','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_NsgTaggingRule_nsg','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_NsgTaggingRule_nsg','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_NsgTaggingRule_nsg','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_PubSubTagging_pubsub','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_PubSubTagging_pubsub','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_PubSubTagging_pubsub','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_PubSubTagging_pubsub','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_RdsdbTaggingRule_rdsdb','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_RdsdbTaggingRule_rdsdb','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_RdsdbTaggingRule_rdsdb','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_RedshiftTaggingRule_redshift','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_RedshiftTaggingRule_redshift','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_RedshiftTaggingRule_redshift','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ResourcegroupTaggingRule_resourcegroup','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ResourcegroupTaggingRule_resourcegroup','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ResourcegroupTaggingRule_resourcegroup','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_ResourcegroupTaggingRule_resourcegroup','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_S3TaggingRule_s3','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_S3TaggingRule_s3','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_S3TaggingRule_s3','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SecuritycenterTaggingRule_securitycenter','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SecuritycenterTaggingRule_securitycenter','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SecuritycenterTaggingRule_securitycenter','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SecuritycenterTaggingRule_securitycenter','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SgTaggingRule_sg','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SgTaggingRule_sg','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SgTaggingRule_sg','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SnapshotTaggingRule_snapshot','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SnapshotTaggingRule_snapshot','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SnapshotTaggingRule_snapshot','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SnapshotTaggingRule_snapshot','threadsafe','true','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SqldatabaseTaggingRule_sqldatabase','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SqldatabaseTaggingRule_sqldatabase','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SqldatabaseTaggingRule_sqldatabase','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SqldatabaseTaggingRule_sqldatabase','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SqlserverTaggingRule_sqlserver','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SqlserverTaggingRule_sqlserver','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SqlserverTaggingRule_sqlserver','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SqlserverTaggingRule_sqlserver','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_StackTaggingRule_stack','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_StackTaggingRule_stack','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_StackTaggingRule_stack','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_StorageaccountTaggingRule_storageaccount','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_StorageaccountTaggingRule_storageaccount','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_StorageaccountTaggingRule_storageaccount','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_StorageaccountTaggingRule_storageaccount','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SubnetTaggingRule_subnet','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SubnetTaggingRule_subnet','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_SubnetTaggingRule_subnet','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VMInstanceTagging_vminstance','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VMInstanceTagging_vminstance','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VMInstanceTagging_vminstance','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VMInstanceTagging_vminstance','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VPNGatewayMandatoryTagging_vpngateway','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VPNGatewayMandatoryTagging_vpngateway','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VPNGatewayMandatoryTagging_vpngateway','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VirtualmachineTaggingRule_virtualmachine','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VirtualmachineTaggingRule_virtualmachine','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VirtualmachineTaggingRule_virtualmachine','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VirtualmachineTaggingRule_virtualmachine','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VnetTaggingRule_vnet','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VnetTaggingRule_vnet','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VnetTaggingRule_vnet','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VnetTaggingRule_vnet','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VolumeTaggingRule_volume','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VolumeTaggingRule_volume','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VolumeTaggingRule_volume','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VpcFirewallTagging_vpcfirewall','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VpcFirewallTagging_vpcfirewall','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VpcFirewallTagging_vpcfirewall','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VpcFirewallTagging_vpcfirewall','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VpcTaggingRule_vpc','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VpcTaggingRule_vpc','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_VpcTaggingRule_vpc','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_version-1_ElasticSearchTaggingRule_elasticsearch','policyKey','check-for-missing-mandatory-tags','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_version-1_ElasticSearchTaggingRule_elasticsearch','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('TaggingRule_version-1_version-1_ElasticSearchTaggingRule_elasticsearch','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole','policyKey','iam-role-with-unapproved-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole','roleIdentifyingString','role/paladincloud_ro','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole','unApprovedIamActions','lambda:CreateFunction,lambda:Create*,*,lambda:*','lambda:CreateFunction,lambda:Create*,*,lambda:*','true','true','false','Unapproved IAM actions','IAM roles should not have these permissions');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unauthorized-Cloudfront-Distribution_version-1_Unauthorized-Cloudfront-Distribution_cloudfront','policyKey','check-for-unauthorized-cloudfront-distribution','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unauthorized-Cloudfront-Distribution_version-1_Unauthorized-Cloudfront-Distribution_cloudfront','threadsafe','true','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Underutilized-Amazon-EBS-Volumes_version-1_Underutilized-EBS-Volumes_volume','policyKey','check-for-underutilized-EBS-Volumes','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Underutilized-Amazon-EBS-Volumes_version-1_Underutilized-EBS-Volumes_volume','checkId','DAvU99Dc4C','DAvU99Dc4C','false','true','false','Check Id','Check Id Keyword');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Underutilized-Amazon-EBS-Volumes_version-1_Underutilized-EBS-Volumes_volume','esServiceURL','/aws_checks/checks_resources/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnderutilizedAmazonRedshiftClustersRule_version-1_UnderutilizedAmazonRedshiftClustersRule_redshift','policyKey','check-for-under-utilized-amazon-redshift-clusters','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnderutilizedAmazonRedshiftClustersRule_version-1_UnderutilizedAmazonRedshiftClustersRule_redshift','checkId','G31sQ1E9U','G31sQ1E9U','false','true','false','Check Id','Check Id Keyword');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnderutilizedAmazonRedshiftClustersRule_version-1_UnderutilizedAmazonRedshiftClustersRule_redshift','esServiceURL','/aws_checks/checks_resources/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnrestrictedSqlDatabaseAccessRule_version-1','policyKey','check-for-unrestricted-sql-database-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnrestrictedSqlDatabaseAccessRule_version-1','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnrestrictedSqlDatabaseAccessRule_version-1','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnrestrictedSqlDatabaseAccessRule_version-1','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unrestricted_MySQL_Database_Access','policyKey','check-for-azure-nsg-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unrestricted_MySQL_Database_Access','protocol','tcp','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unrestricted_MySQL_Database_Access','port','3306','','false','false','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unrestricted_MySQL_Database_Access','policyName','Deny public access to MySQL Server port 3306','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unrestricted_MySQL_Database_Access','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unrestricted_MySQL_Database_Access','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unrestricted_Oracle_Database_Access','policyKey','check-for-azure-nsg-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unrestricted_Oracle_Database_Access','protocol','tcp','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unrestricted_Oracle_Database_Access','port','1521','','false','false','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unrestricted_Oracle_Database_Access','policyName','Access@should@be@restricted@for@permissive@Network@Security@Groups@with@Internet-facing@OracleDatabase','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unrestricted_Oracle_Database_Access','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unrestricted_Oracle_Database_Access','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unused-Security-group_version-1_UnusedSecurityGroup_sg','policyKey','check-for-unused-security-group','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unused-Security-group_version-1_UnusedSecurityGroup_sg','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unused-Security-group_version-1_UnusedSecurityGroup_sg','fixKey','unused-sg-auto-fix','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Unused-Security-group_version-1_UnusedSecurityGroup_sg','esServiceWithSgUrl','/aws/ec2_secgroups/_search,/aws/rdsdb_secgroups/_search,/aws/rdscluster_secgroups/_search,/aws/redshift_secgroups/_search,/aws_lambda/lambda_secgroups/_search,/aws_appelb/appelb_secgroups/_search,/aws_classicelb/classicelb_secgroups/_search,/aws/elasticsearch/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnusedApplicationElbRule_version-1_UnusedApplicationElbRule_appelb','policyKey','check-for-unused-application-elb','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnusedApplicationElbRule_version-1_UnusedApplicationElbRule_appelb','esAppElbWithInstanceUrl','/aws/appelb_instances/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnusedClassicElbRule_version-1_UnusedClassicElbRule_classicelb','policyKey','check-for-unused-classic-elb','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnusedClassicElbRule_version-1_UnusedClassicElbRule_classicelb','threadsafe','true','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnusedClassicElbRule_version-1_UnusedClassicElbRule_classicelb','esClassicElbWithInstanceUrl','/aws/classicelb_instances/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnusedEBSRule_version-1_UnusedEbsRule_volume','policyKey','check-for-unused-ebs-rule','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnusedEBSRule_version-1_UnusedEbsRule_volume','esEbsWithInstanceUrl','/aws/volume_attachments/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','policyKey','check-for-unused-elastic-ip','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','threadsafe','true','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','fixKey','unused-elastic-ip-fix','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Use_CMK_to_encrypt_OS_and_Data_disk','policyKey','check-for-os-data-disks','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Use_CMK_to_encrypt_OS_and_Data_disk','policyName','Use CMK to  Encrypt OS and Data disk','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Use_CMK_to_encrypt_OS_and_Data_disk','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','policyKey','check-for-storageAcc-activitylog-encryption','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','policyName',' Use CMK to encrypt Storage Account for Activity logs','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_UnCommon_ports_should_not_be_publicly_accessible','policyKey','check-for-vpc-network-firewall-security-uncommon-ports','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_UnCommon_ports_should_not_be_publicly_accessible','port','80,443,20,21,22,23,53,3389,25,465,587,3306,5432,1521,1433,135,137,138,139,445','80,443,20,21,22,23,53,3389,25,465,587,3306,5432,1521,1433,135,137,138,139,445','true','true','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_UnCommon_ports_should_not_be_publicly_accessible','description','Ensure there are no VPC firewall rules that allow unrestricted inbound access on TCP or udp 1494 and 8010','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_UnCommon_ports_should_not_be_publicly_accessible','violationReason','VPC Firewall with uncommon ports was publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_UnCommon_ports_should_not_be_publicly_accessible','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_UnCommon_ports_should_not_be_publicly_accessible','policyName','wall with Uncommon ports  should not be publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_UnCommon_ports_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','policyKey','check-for-vpc-network-firewall-security','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','port','53','53','false','true','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','description','Ensure there are no VPC firewall rules that allow unrestricted inbound access on TCP and UDP port 53','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','violationReason','VPC Firewall with DNS port 53 was publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','policyName','VPC Firewall with DNS port 53 should not be publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_FTP_port_should_not_be_publicly_accessible','policyKey','check-for-vpc-network-firewall-security','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_FTP_port_should_not_be_publicly_accessible','port','20,21','20,21','false','true','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_FTP_port_should_not_be_publicly_accessible','description','Ensure there are no VPC firewall rules that allow unrestricted inbound access on TCP 20 and 21','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_FTP_port_should_not_be_publicly_accessible','violationReason','VPC Firewall with Tcp port 20 and 21 was publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_FTP_port_should_not_be_publicly_accessible','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_FTP_port_should_not_be_publicly_accessible','policyName','VPC Firewall with FTP port 20 and 21 should not be publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_FTP_port_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ICMP_port_should_not_be_publicly_accessible','policyKey','check-for-vpc-network-firewall-security','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ICMP_port_should_not_be_publicly_accessible','port','icmp','icmp','false','true','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ICMP_port_should_not_be_publicly_accessible','description','Ensure there are no VPC firewall rules that allow unrestricted inbound access on icmp ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ICMP_port_should_not_be_publicly_accessible','violationReason','VPC Firewall with icmp port was publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ICMP_port_should_not_be_publicly_accessible','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ICMP_port_should_not_be_publicly_accessible','policyName','Deny Firewall public access to ICMP','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ICMP_port_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','policyKey','check-for-vpc-network-firewall-security','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','port','3306','3306','false','true','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','description','Ensure there are no VPC firewall rules that allow unrestricted inbound access on Mysql port 3306 ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','violationReason','VPC Firewall with MYDQL port  3306 was publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','policyName','VPC Firewall with MYSQL port 3306  should not be publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','policyKey','check-for-vpc-network-firewall-security','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','port','1521','1521','false','true','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','description','Ensure there are no VPC firewall rules that allow unrestricted inbound access on ORACLE DB port 1521 ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','violationReason','VPC Firewall with ORACLE DB port  1521 was publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','policyName','VPC Firewall with Oracle DB  port 1521  should not be publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','policyKey','check-for-vpc-network-firewall-outbound-security','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','port','0-65535','0-65535','false','true','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','description','Ensure there are no VPC firewall rules that allow unrestricted outbound access ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','violationReason','VPC Firewall with  unrestricted outbound  access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','policyName','VPC Firewall with Egress ports  should not be publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','policyKey','check-for-vpc-network-firewall-security','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','port','5432','5432','false','true','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','description','Ensure there are no VPC firewall rules that allow unrestricted inbound access on Postgres DB port 5432 ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','violationReason','VPC Firewall with Postgres DB port  5432 was publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','policyName','VPC Firewall with POSTGRES DB  port 5432  should not be publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','policyKey','check-for-vpc-network-firewall-security','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','port','3389','3389','false','true','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','description','Ensure there are no VPC firewall rules that allow unrestricted inbound access on RDP port 3389','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','violationReason','VPC Firewall with RDP port 3389 was publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','policyName','VPC Firewall with RDP port 3389 should not be publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RPC_port_should_not_be_publicly_accessible','policyKey','check-for-vpc-network-firewall-security','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RPC_port_should_not_be_publicly_accessible','port','135','135','false','true','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RPC_port_should_not_be_publicly_accessible','description','Ensure there are no VPC firewall rules that allow unrestricted inbound access on  RPC port 135 ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RPC_port_should_not_be_publicly_accessible','violationReason','VPC Firewall with Postgres RPC port  135 was publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RPC_port_should_not_be_publicly_accessible','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RPC_port_should_not_be_publicly_accessible','policyName','VPC Firewall with RPC  port 135  should not be publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_RPC_port_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SMTP_port_should_not_be_publicly_accessible','policyKey','check-for-vpc-network-firewall-security','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SMTP_port_should_not_be_publicly_accessible','port','25','25','false','true','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SMTP_port_should_not_be_publicly_accessible','description','Ensure there are no VPC firewall rules that allow unrestricted inbound access on  SMTP port 25 ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SMTP_port_should_not_be_publicly_accessible','violationReason','VPC Firewall with Postgres SMTP port  25 was publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SMTP_port_should_not_be_publicly_accessible','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SMTP_port_should_not_be_publicly_accessible','policyName','VPC Firewall with SMTP  port 25  should not be publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SMTP_port_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','policyKey','check-for-vpc-network-firewall-security','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','port','1433','1433','false','true','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','description','Ensure there are no VPC firewall rules that allow unrestricted inbound access on  SQL server port 1433 ','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','violationReason','VPC Firewall with Postgres SMTP port  25 was publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','policyName','VPC Firewall with SQL server  port 1433  should not be publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','policyKey','check-for-vpc-network-firewall-security','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','port','22','22','false','true','false','Port','Ports to deny access');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','description','Ensure that no VPC firewall rules allow unrestricted inbound access on SSH port 22','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','violationReason','VPC Firewall with SSH port 22 was publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','policyName','VPC Firewall with RDP port 3389 should not be publicly accessible','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Vaults_DiagnosticLogs_version-1_VDR_vaults','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Vaults_DiagnosticLogs_version-1_VDR_vaults','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Vaults_DiagnosticLogs_version-1_VDR_vaults','policyDefinitionName','cf820ca0-f99e-4f3e-84fb-66e913812d21','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Vaults_DiagnosticLogs_version-1_VDR_vaults','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('VpcFlowLogsEnabled_version-1_VpcFlowLogsEnabled_vpc','policyKey','check-for-vpc-flowlog-enabled','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Workflows_DiagnlsticLogs_version-1_WDR_workflows','policyKey','check-for-azure-policy-evaluation-results','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Workflows_DiagnlsticLogs_version-1_WDR_workflows','azurePolicyEvaluationResults','/azure_policyevaluationresults/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Workflows_DiagnlsticLogs_version-1_WDR_workflows','policyDefinitionName','34f95f76-5386-4de7-b824-0d8478470c9d','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Workflows_DiagnlsticLogs_version-1_WDR_workflows','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('cloudfront-check-for-unauthorized-html_version-1_Cloudfront_Unauthorized_HTML_Content_cloudfront','policyKey','check-for-unauthorized-html-cloudfront-distribution','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser','roleIdentifyingString','role/paladincloud_ro','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser','unApprovedIamActions','ec2:CreateDefaultSubnet,ec2:CreateDefaultVpc,ec2:CreateInternetGateway,ec2:CreateSubnet,ec2:CreateVpc,ec2:CreateVpcEndpoint,ec2:CreateVpcEndpointConnectionNotification,ec2:CreateVpcEndpointServiceConfiguration,ec2:CreateVpcPeeringConnection,ec2:CreateVpnConnection,ec2:CreateVpnConnectionRoute,ec2:CreateVpnGateway,ec2:ModifySubnetAttribute,ec2:ModifyVpcAttribute,ec2:ModifyVpcEndpoint,ec2:ModifyVpcEndpointConnectionNotification,ec2:ModifyVpcEndpointServiceConfiguration,ec2:ModifyVpcEndpointServicePermissions,ec2:ModifyVpcPeeringConnectionOptions,ec2:ModifyVpcTenancy,ec2:MoveAddressToVpc,ec2:AttachInternetGateway,ec2:CreateEgressOnlyInternetGateway,ec2:AttachVpnGateway.ec2:*,*','ec2:CreateDefaultSubnet,ec2:CreateDefaultVpc,ec2:CreateInternetGateway,ec2:CreateSubnet,ec2:CreateVpc,ec2:CreateVpcEndpoint,ec2:CreateVpcEndpointConnectionNotification,ec2:CreateVpcEndpointServiceConfiguration,ec2:CreateVpcPeeringConnection,ec2:CreateVpnConnection,ec2:CreateVpnConnectionRoute,ec2:CreateVpnGateway,ec2:ModifySubnetAttribute,ec2:ModifyVpcAttribute,ec2:ModifyVpcEndpoint,ec2:ModifyVpcEndpointConnectionNotification,ec2:ModifyVpcEndpointServiceConfiguration,ec2:ModifyVpcEndpointServicePermissions,ec2:ModifyVpcPeeringConnectionOptions,ec2:ModifyVpcTenancy,ec2:MoveAddressToVpc,ec2:AttachInternetGateway,ec2:CreateEgressOnlyInternetGateway,ec2:AttachVpnGateway.ec2:*,*','true','true','false','Unapproved IAM actions','IAM roles should not have these permissions');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser','policyKey','iam-user-with-unapproved-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('kms_keys_rotation_period_within_90_days','policyKey','check-kms-key-rotation-period','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('kms_keys_rotation_period_within_90_days','description','Ensure that all your Cloud Key Management Service (KMS) keys are rotated within a period of 90 days in order to meet security and compliance requirements.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('kms_keys_rotation_period_within_90_days','violationReason','Kms key rotation period is greater than 90 days.','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('kms_keys_rotation_period_within_90_days','esSgRulesUrl','/gcp_kmskey/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('kms_keys_rotation_period_within_90_days','policyName','Enforce 90 days rotation period of KMS encryption keys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('kms_keys_rotation_period_within_90_days','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('trusted_ms_services_access_storage_account','policyKey','Enable-Trusted-Microsoft-Services-for-storage-Account-Access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('trusted_ms_services_access_storage_account','splitterChar',',','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('trusted_ms_services_access_storage_account','mandatoryTags','Application,Environment,Stack,Role','Application,Environment,Stack,Role','false','true','false','Mandatory tags','Assets should have these mandatory tags');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('trusted_ms_services_access_storage_account','policyOwner','','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS5Vulnerability_ec2','policyKey','check-for-resource-with-severity-vulnerabilities','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS5Vulnerability_ec2','severityVulnValue','S5','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS5Vulnerability_ec2','pluginType','qualys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS4Vulnerability_ec2','policyKey','check-for-resource-with-severity-vulnerabilities','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS4Vulnerability_ec2','severityVulnValue','S4','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS4Vulnerability_ec2','pluginType','qualys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS3Vulnerability_ec2','policyKey','check-for-resource-with-severity-vulnerabilities','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS3Vulnerability_ec2','severityVulnValue','S3','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS3Vulnerability_ec2','pluginType','qualys','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_notify_alerts_severity_to_high','policyKey','set-notify-alerts-severity-to-high','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_notify_alerts_severity_to_high','description','Set notify email alerts severity to high in MS defender','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_notify_alerts_severity_to_high','SUCCESS','In MS defender email settings, notify alerts severity is set to high','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_notify_alerts_severity_to_high','violationReason','In MS defender email settings, notify alerts severity is not set to high','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Set_notify_alerts_severity_to_high','policyName','Set notify alerts severity to high in MS defender','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','severityVulnValue','S5','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('remove_unused_load_balancer','policyKey','check-for-Unused-Load-Balancers','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('remove_unused_scale_set','policyKey','check-for-unused-Virtual-machine-scale-set','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('remove_unused_vm_disk','policyKey','check-for-unused-disk','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('delete_unused_load_balancer','policyKey','delete-unused-load-balancer','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('delete_unused_vm_disk','policyKey','delete-unused-vm-disk','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('enable_aws_config_service','policyKey','check-aws-config-enabled','','false','false','false','','');

UPDATE cf_PolicyParams SET encrypt ='false' WHERE policyID IN (
'EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2',
'Ec2StoppedInstanceForLong_version-1_Ec2StoppedInstanceForLong_ec2',
'Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2',
'Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2',
'Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2',
'Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2',
'Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2',
'Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2',
'IamAccessKeyRotatedInEvery90Days_version-1_IamAccessKeyRotatedInEvery90Days_iamuser',
'NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole',
'RdsSnapshotWithPublicAccess_version-1_RdsSnapshotWithPublicAccess_rdssnapshot',
'UnusedApplicationElbRule_version-1_UnusedApplicationElbRule_appelb',
'VpcFlowLogsEnabled_version-1_VpcFlowLogsEnabled_vpc'
);
UPDATE cf_PolicyParams SET paramValue ='icmp' WHERE policyID ='VPC_firewall_ICMP_port_should_not_be_publicly_accessible' AND paramKey='port';
UPDATE cf_PolicyParams SET paramValue ='3389' WHERE policyID ='VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible' AND paramKey='port';
UPDATE cf_PolicyParams SET paramValue = 'Qch7DwouX1' WHERE policyID = 'LowUtilizationAmazonEC2InstancesRule_version-1_LowUtilizationAmazonEC2InstancesRule_ec2' AND paramKey = 'checkId';
UPDATE cf_PolicyTable SET policyDisplayName = 'Enable Qualys EC2 Vulnerability Scan' WHERE policyId = 'Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2';
UPDATE cf_PolicyTable SET policyDisplayName = 'Enable Tenable EC2 Vulnerability Scan' WHERE policyId = 'AWSVMScannedByTenable';
UPDATE cf_PolicyTable SET policyDisplayName = 'Enable Aqua ECR Vulnerability Scan' WHERE policyId = 'ImagesScannedByAqua';
UPDATE cf_PolicyTable SET policyDisplayName = 'Tenable Found Critical Vulnerabilities On EC2 Instance' WHERE policyId = 'CriticalVMVulnerabilitiesScannedByTenable';
UPDATE cf_PolicyTable SET policyDisplayName = 'Tenable Found High Vulnerabilities On EC2 Instance' WHERE policyId = 'HighVMVulnerabilitiesScannedByTenable';
UPDATE cf_PolicyTable SET policyDisplayName = 'Tenable Found Medium Vulnerabilities On EC2 Instance' WHERE policyId = 'MediumVMVulnerabilitiesScannedByTenable';
UPDATE cf_PolicyTable SET policyDisplayName = 'Qualys Found  S5 Vulnerabilities on EC2 Instance' WHERE policyId = 'Ec2WithSeverityVulnerability_version-1_Ec2WithS5Vulnerability_ec2';
UPDATE cf_PolicyTable SET policyDisplayName = 'Qualys Found S4 Vulnerabilities on EC2 Instance' WHERE policyId = 'Ec2WithSeverityVulnerability_version-1_Ec2WithS4Vulnerability_ec2';
UPDATE cf_PolicyTable SET policyDisplayName = 'Qualys Found  S3 Vulnerabilities on EC2 Instance' WHERE policyId = 'Ec2WithSeverityVulnerability_version-1_Ec2WithS3Vulnerability_ec2';
UPDATE cf_PolicyTable SET policyDisplayName = 'Aqua Found Critical ECR Vulnerabilities' WHERE policyId = 'CriticalImageVulnerabilitiesScannedByAqua';
UPDATE cf_PolicyTable SET policyDisplayName = 'Aqua Found High ECR Vulnerabilities' WHERE policyId = 'HighImageVulnerabilitiesScannedByAqua';
UPDATE cf_PolicyTable SET policyDisplayName = 'Aqua Found Medium ECR Vulnerabilities' WHERE policyId = 'MediumImageVulnerabilitiesScannedByAqua';
UPDATE cf_PolicyTable SET policyDisplayName = 'Enable IAM Password Policy' WHERE policyId ='IamPasswordPolicy_version-1_IamPasswordPolicy_account';
UPDATE cf_PolicyTable SET policyDisplayName = 'Assign Mandatory Tags to KMS Customer Managed Key' WHERE policyId ='TaggingRule_version-1_KmsTaggingRule_kms';


UPDATE cf_NotificationTypes SET `notificationType` = 'policy' WHERE `notificationTypeId` = '73a2d98a-bd07-11ed-afa1-0242ac120002' AND `notificationType` = 'policyaction';
UPDATE cf_NotificationTypes SET `notificationType` = 'violation' WHERE `notificationTypeId` = '42ffd1d8-bd07-11ed-afa1-0242ac120002' AND `notificationType` = 'violations';
UPDATE cf_NotificationTypes SET `notificationType` = 'exemption' WHERE `notificationTypeId` = '63a2d98a-bd07-11ed-afa1-0242ac120002' AND `notificationType` = 'exemptions';

DELIMITER $$
DROP PROCEDURE IF EXISTS alter_notification_channel_add_channel_name $$
CREATE PROCEDURE alter_notification_channel_add_channel_name()
BEGIN
IF NOT EXISTS( SELECT 1
            FROM INFORMATION_SCHEMA.COLUMNS
           WHERE table_name = 'cf_NotificationChannels'
             AND table_schema = 'pacmandata'
             AND column_name = 'channelDisplayName')  THEN
ALTER TABLE `cf_NotificationChannels`
ADD COLUMN `channelDisplayName` varchar(200) DEFAULT NULL;
ALTER TABLE `cf_NotificationChannels` ADD CONSTRAINT channelDisplayName_unique_key UNIQUE (`channelDisplayName`);
END IF;
END $$
DELIMITER ;
CALL alter_notification_channel_add_channel_name();

UPDATE cf_NotificationChannels SET channelDisplayName='Email' WHERE notificationChannelId='6a7e6590-bd06-11ed-afa1-0242ac120002';
UPDATE cf_NotificationChannels SET channelDisplayName='Slack via Email' WHERE notificationChannelId='1a580d18-bd07-11ed-afa1-0242ac120002';
UPDATE cf_NotificationChannels SET channelDisplayName='Jira via Email' WHERE notificationChannelId='380a5398-bd07-11ed-afa1-0242ac120002';

UPDATE cf_PolicyTable SET policyDesc ='Denying public access to SQL Server port 1434 in Azure is vital for security. It prevents unauthorized users from connecting to your SQL Server and reduces the risk of attacks. By restricting access, you safeguard sensitive data and comply with industry regulations. It aligns with network security best practices and helps create a more secure architecture. Additional measures like virtual network service endpoints, Azure Private Link, and firewall rules enhance security. Regular updates, strong authentication, and following security best practices are essential for overall protection.' WHERE policyId ='Enable_Network_Security_for_SQLSERVER';

update cf_PolicyParams set description = 'Specify the target expiry duration' where policyid='ACMCertificate_Expiry_For_X_Days_version-1_ACMCertificate_Expiry_acmcertificate' and displayName='Target expiration duration';
update cf_PolicyParams set description = 'Check old EC2 versions' where policyid='AWSEC2InstanceGeneration_version-1_InstanceGeneration_ec2' and displayName='Old versions';
update cf_PolicyParams set description = 'Specify target duration in days' where policyid='AWSVMScannedByTenable' and displayName='Target';
update cf_PolicyParams set description = 'Specify number of discovered days' where policyid='AWSVMScannedByTenable' and displayName='Discovered days range';
update cf_PolicyParams set description = 'Specify engine type for caching' where policyid='AWS_ElastiCache_Clusters_Enabled_Encryption_version-1_Enable_CloudTrail_Global_Services_cloudtrail' and displayName='Engine Type';
update cf_PolicyParams set description = 'Specify engine version for the given engine type' where policyid='AWS_ElastiCache_Clusters_Enabled_Encryption_version-1_Enable_CloudTrail_Global_Services_cloudtrail' and displayName='Engine version';
update cf_PolicyParams set description = 'Specify regions to check' where policyid='AWS_account_security_hub_exists_version-1_enable_security_hub_account' and displayName='Regions';
update cf_PolicyParams set description = 'Ensure EKS version is equal to or higher than the given version' where policyid='AWS_eks_cluster_version_upgrade_version-1_update_cluster_version_eks' and displayName='Latest EKS cluster version';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure the metric name matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric name for cloudwatch alarm';
update cf_PolicyParams set description = 'Ensure metric namespace matches the given name' where policyid='AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account' and displayName='Metric namespace for cloudwatch alarm';
update cf_PolicyParams set description = 'Specify the name of the CloudTrail to check' where policyid='Centralized_CloudTrail_version-1_Centralized_Cloudtrail_account' and displayName='Input Cloudtrail name';
update cf_PolicyParams set description = 'Max allowed user inactivity duration' where policyid='CheckInactiveIamUser_version-1_CheckInactiveIamUser_iamuser' and displayName='Inactive duration in days';
update cf_PolicyParams set description = 'Specify the CloudFront access log bucket name to check' where policyid='CloudFront_AccessLogs_version-1_CloudFront_AccessLogs_cloudfront' and displayName='Access log bucket name';
update cf_PolicyParams set description = 'Specify target duration in days' where policyid='CriticalImageVulnerabilitiesScannedByAqua' and displayName='Target';
update cf_PolicyParams set description = 'Specify number of discovered days' where policyid='CriticalImageVulnerabilitiesScannedByAqua' and displayName='Discovered days range';
update cf_PolicyParams set description = 'Specify target duration in days' where policyid='CriticalVMVulnerabilitiesScannedByTenable' and displayName='Target';
update cf_PolicyParams set description = 'Specify number of discovered days' where policyid='CriticalVMVulnerabilitiesScannedByTenable' and displayName='Discovered days range';
update cf_PolicyParams set description = 'Restrict these permissions from IAM roles' where policyid='EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole' and displayName='Unapproved IAM actions';
update cf_PolicyParams set description = 'Specify default CIDR IP' where policyid='EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2' and displayName='Default cidr IP';
update cf_PolicyParams set description = 'Verify CloudFront access log bucket name' where policyid='ELB_Access_Logs_version-1_AppLB_Access_Logs_appelb' and displayName='Access log bucket name';
update cf_PolicyParams set description = 'Verify CloudFront access log bucket name' where policyid='ELB_Access_Logs_version-1_ClassicLB_Access_Logs_classicelb' and displayName='Access log bucket name';
update cf_PolicyParams set description = 'Specify target duration in days' where policyid='Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2' and displayName='Target';
update cf_PolicyParams set description = 'Specify number of discovered days' where policyid='Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2' and displayName='Discovered days range';
update cf_PolicyParams set description = 'Specify maximum duration in days' where policyid='Ec2StoppedInstanceForLong_version-1_Ec2StoppedInstanceForLong_ec2' and displayName='Target stopped Duration';
update cf_PolicyParams set description = 'Specify default CIDR IP' where policyid='ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch' and displayName='Default cidr IP';
update cf_PolicyParams set description = 'Specify default CIDR IP' where policyid='ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb' and displayName='Default cidr IP';
update cf_PolicyParams set description = 'Specify default CIDR IP' where policyid='ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb' and displayName='Default cidr IP';
update cf_PolicyParams set description = 'Specify target duration in days' where policyid='HighImageVulnerabilitiesScannedByAqua' and displayName='Target';
update cf_PolicyParams set description = 'Specify number of discovered days' where policyid='HighImageVulnerabilitiesScannedByAqua' and displayName='Discovered days range';
update cf_PolicyParams set description = 'Specify target duration in days' where policyid='HighVMVulnerabilitiesScannedByTenable' and displayName='Target';
update cf_PolicyParams set description = 'Specify number of discovered days' where policyid='HighVMVulnerabilitiesScannedByTenable' and displayName='Discovered days range';
update cf_PolicyParams set description = 'Checks if expiry date is within specified number of days' where policyid='IAMCertificate_Expiry_For_X_Days_version-1_IAMCertificate_Expiry_For_X_Days_iamcertificate' and displayName='Target expiration duration';
update cf_PolicyParams set description = 'Restrict these permissions from IAM roles' where policyid='IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole' and displayName='Unapproved IAM actions';
update cf_PolicyParams set description = 'Specify maximum password age in days' where policyid='IamPasswordPolicy_version-1_IamPasswordPolicy_account' and displayName='Max password age';
update cf_PolicyParams set description = 'Specify if password requires symbols' where policyid='IamPasswordPolicy_version-1_IamPasswordPolicy_account' and displayName='Require symbols';
update cf_PolicyParams set description = 'Specify if password requires numbers' where policyid='IamPasswordPolicy_version-1_IamPasswordPolicy_account' and displayName='Require numbers';
update cf_PolicyParams set description = 'Specify if password requires uppercase characters' where policyid='IamPasswordPolicy_version-1_IamPasswordPolicy_account' and displayName='Require uppercase characters';
update cf_PolicyParams set description = 'Specify if password requires lowercase characters' where policyid='IamPasswordPolicy_version-1_IamPasswordPolicy_account' and displayName='Require lowercase characters';
update cf_PolicyParams set description = 'Specify if user can change password' where policyid='IamPasswordPolicy_version-1_IamPasswordPolicy_account' and displayName='Allow users to change password';
update cf_PolicyParams set description = 'Specify if password expiration is enabled' where policyid='IamPasswordPolicy_version-1_IamPasswordPolicy_account' and displayName='Expire password';
update cf_PolicyParams set description = 'Specify if hard password expiry is required' where policyid='IamPasswordPolicy_version-1_IamPasswordPolicy_account' and displayName='Hard expiry';
update cf_PolicyParams set description = 'Specify minimum password length' where policyid='IamPasswordPolicy_version-1_IamPasswordPolicy_account' and displayName='Minimum password length';
update cf_PolicyParams set description = 'Specify the number of previous passwords to remember' where policyid='IamPasswordPolicy_version-1_IamPasswordPolicy_account' and displayName='Last password to remember';
update cf_PolicyParams set description = 'Specify target duration in days' where policyid='ImagesScannedByAqua' and displayName='Target';
update cf_PolicyParams set description = 'Specify number of discovered days' where policyid='ImagesScannedByAqua' and displayName='Discovered days range';
update cf_PolicyParams set description = 'Specify target duration in days' where policyid='MediumImageVulnerabilitiesScannedByAqua' and displayName='Target';
update cf_PolicyParams set description = 'Specify number of discovered days' where policyid='MediumImageVulnerabilitiesScannedByAqua' and displayName='Discovered days range';
update cf_PolicyParams set description = 'Specify target duration in days' where policyid='MediumVMVulnerabilitiesScannedByTenable' and displayName='Target';
update cf_PolicyParams set description = 'Specify number of discovered days' where policyid='MediumVMVulnerabilitiesScannedByTenable' and displayName='Discovered days range';
update cf_PolicyParams set description = 'Specify admin roles for access comparison' where policyid='NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole' and displayName='Admin roles to compare';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_ApiWithNonStandardRule_api' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_AppelbWithNonStandardRule_appelb' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_DynamodbWithNonStandardRule_dynamodb' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_EfsWithNonStandardRule_efs' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_ElasticacheWithNonStandardRule_elasticache' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_ElasticipWithNonStandardRule_elasticip' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_ElasticsearchWithNonStandardRule_elasticsearch' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_EmrWithNonStandardRule_emr' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_EniWithNonStandardRule_eni' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_KmsWithNonStandardRule_kms' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_RdsdbWithNonStandardRule_rdsdb' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_RedshiftWithNonStandardRule_redshift' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_VpcWithNonStandardRule_vpc' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_version-1_AsgWithNonStandardRegion_asg' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_version-1_ClassicelbWithNonStandardRegion_classicelb' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_version-1_LambdaWithNonStandardRegion_lambda' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_version-1_LaunchconfigWithNonStandardRegion_launchconfig' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_version-1_RdsSnapshotWithNonStandardRegion_rdssnapshot' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_version-1_ResourceWithNonStandardRule_ec2' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_version-1_S3WithNonStandardRegion_s3' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_version-1_SgWithNonStandardRegion_sg' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_version-1_SnapshotWithNonStandardRegion_snapshot' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_version-1_SnstopicWithNonStandardRegion_snstopic' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_version-1_StackWithNonStandardRegion_stack' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_version-1_SubnetWithNonStandardRegion_subnet' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify standard regions for the policy' where policyid='NonStandardRegionRule_version-1_version-1_VolumeWithNonStandardRegion_volume' and displayName='Standard regions';
update cf_PolicyParams set description = 'Specify default CIDR IP' where policyid='RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift' and displayName='Default cidr IP';
update cf_PolicyParams set description = 'Specify regions with enabled access logging for S3' where policyid='S3AccessLogsRule_version-1_S3AccessLogsRule_s3' and displayName='Access log enabled regions';
update cf_PolicyParams set description = 'Specify destination bucket name for auto fix' where policyid='S3AccessLogsRule_version-1_S3AccessLogsRule_s3' and displayName='Destination bucket for autofix';
update cf_PolicyParams set description = 'Restrict these permissions from IAM roles' where policyid='ServiceAccountPrivilegesRule_version-1_UnapprovedServiceAccountAccess_iamuser' and displayName='Unapproved IAM actions';
update cf_PolicyParams set description = 'Restrict these permissions from IAM roles' where policyid='UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole' and displayName='Unapproved IAM actions';
update cf_PolicyParams set description = 'Restrict these permissions from IAM roles' where policyid='core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser' and displayName='Unapproved IAM actions';
update cf_PolicyParams set paramValue = 'disable-enable-database-flags-for-cloudsql-server' where paramValue='disable-contained-database-Auth-flag-for-sql-server';

UPDATE cf_PolicyTable SET policyDisplayName = 'Check Underutilized Redshift Cluster' WHERE policyId ='UnderutilizedAmazonRedshiftClustersRule_version-1_UnderutilizedAmazonRedshiftClustersRule_redshift';
UPDATE cf_PolicyTable SET policyDisplayName = 'Check Underutilized EC2' WHERE policyId = 'LowUtilizationAmazonEC2InstancesRule_version-1_LowUtilizationAmazonEC2InstancesRule_ec2';
UPDATE cf_PolicyTable SET policyDisplayName = 'Delete Unused CLB' WHERE policyId = 'UnusedClassicElbRule_version-1_UnusedClassicElbRule_classicelb';
UPDATE cf_PolicyTable SET policyDisplayName = 'Delete Idle RDS Database' WHERE policyId = 'AmazonRDSIdleDBInstancesRule_version-1_AmazonRDSIdleDBInstancesRule_rdsdb';
UPDATE cf_PolicyTable SET policyDisplayName = 'Delete Unused ALB' WHERE policyId = 'UnusedApplicationElbRule_version-1_UnusedApplicationElbRule_appelb';
UPDATE cf_PolicyTable SET policyDisplayName = 'Delete Unused EBS Volume' WHERE policyId = 'UnusedEBSRule_version-1_UnusedEbsRule_volume';
UPDATE cf_PolicyTable SET policyDisplayName = 'Delete Unused Elastic IP' WHERE policyId = 'UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';
UPDATE cf_PolicyTable SET policyDisplayName = 'Delete Unused AMI' WHERE policyId = 'AWSAMIUnused_version-1_Unused_ami';
UPDATE cf_PolicyTable SET policyDisplayName = 'Check Underutilized EBS Volume' WHERE policyId = 'Underutilized-Amazon-EBS-Volumes_version-1_Underutilized-EBS-Volumes_volume';
UPDATE cf_PolicyTable SET policyDisplayName = 'Update EC2 Generation' WHERE policyId = 'AWSEC2InstanceGeneration_version-1_InstanceGeneration_ec2';
UPDATE cf_PolicyTable SET policyDisplayName = 'Assign Standard Region to KMS CMK' WHERE policyId = 'NonStandardRegionRule_version-1_KmsWithNonStandardRule_kms';

DELETE FROM cf_PolicyTable WHERE policyId='AWS_eks_cluster_encryption_enabled_version-1_enable_cluster_encryption_eks';

update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Update-EC2-Generation' where policyId='AWSEC2InstanceGeneration_version-1_InstanceGeneration_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Delete-Unused-Elastic-IP' where policyId='UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Delete-Unused-EBS-Volume' where policyId='UnusedEBSRule_version-1_UnusedEbsRule_volume';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#delete-idle-rds-database' where policyId='AmazonRDSIdleDBInstancesRule_version-1_AmazonRDSIdleDBInstancesRule_rdsdb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#delete-idle-clb' where policyId='IdleLoadBalancerRule_version-1_IdleLoadbalancerRule_classicelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#delete-unused-clb' where policyId='UnusedClassicElbRule_version-1_UnusedClassicElbRule_classicelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Check-Underutilized-EC2' where policyId='LowUtilizationAmazonEC2InstancesRule_version-1_LowUtilizationAmazonEC2InstancesRule_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Check-Underutilized-Redshift-Clusters' where policyId='UnderutilizedAmazonRedshiftClustersRule_version-1_UnderutilizedAmazonRedshiftClustersRule_redshift';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#check-underutilized-ebs-volume' where policyId='Underutilized-Amazon-EBS-Volumes_version-1_Underutilized-EBS-Volumes_volume';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Delete-Unused-AMI' where policyId='AWSAMIUnused_version-1_Unused_ami';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#delete-unused-alb' where policyId='UnusedApplicationElbRule_version-1_UnusedApplicationElbRule_appelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-Application-ELB' where policyId='TaggingRule_version-1_AppelbTaggingRule_appelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-Auto-Scaling-Groups' where policyId='TaggingRule_version-1_AsgTaggingRule_asg';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-Classic-ELB' where policyId='TaggingRule_version-1_ClassicelbTaggingRule_classicelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-CloudFront' where policyId='TaggingRule_version-1_CloudfrontTaggingRule_cloudfront';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-DynamoDB' where policyId='TaggingRule_version-1_DynamodbTaggingRule_dynamodb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-ECS-Cluster' where policyId='TaggingRule_version-1_ECSClusterTaggingRule_ecscluster';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-ECS-Task-Definition' where policyId='TaggingRule_version-1_ECSTaskDefinitionTaggingRule_ecstaskdefinition';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-EC2-Instance' where policyId='TaggingRule_version-1_Ec2TaggingRule_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-AWS-Elastic-File-System' where policyId='TaggingRule_version-1_EfsTaggingRule_efs';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-Elasticache' where policyId='TaggingRule_version-1_ElasticacheTaggingRule_elasticache';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-AWS-Elastic-MapReduce' where policyId='TaggingRule_version-1_EmrTaggingRule_emr';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-AWS-Key-Management-Services' where policyId='TaggingRule_version-1_KmsTaggingRule_kms';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-Lambda-Functions' where policyId='TaggingRule_version-1_LambdaTaggingRule_lambda';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-RDS-Database' where policyId='TaggingRule_version-1_RdsdbTaggingRule_rdsdb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-Redshift' where policyId='TaggingRule_version-1_RedshiftTaggingRule_redshift';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-S3' where policyId='TaggingRule_version-1_S3TaggingRule_s3';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-Network-Security-Group' where policyId='TaggingRule_version-1_SgTaggingRule_sg';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-EBS-snapshots' where policyId='TaggingRule_version-1_SnapshotTaggingRule_snapshot';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-Cloud-Formation-Stacks' where policyId='TaggingRule_version-1_StackTaggingRule_stack';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-Subnets' where policyId='TaggingRule_version-1_SubnetTaggingRule_subnet';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-VPNGateway' where policyId='TaggingRule_version-1_VPNGatewayMandatoryTagging_vpngateway';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-EBS-Volumes' where policyId='TaggingRule_version-1_VolumeTaggingRule_volume';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-vpc' where policyId='TaggingRule_version-1_VpcTaggingRule_vpc';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Mandatory-Tags-to-Elastic-Search-Resources' where policyId='TaggingRule_version-1_version-1_ElasticSearchTaggingRule_elasticsearch';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Check-the-Expiry-status-of-the-ACM-Certificate' where policyId='ACMCertificate_Expiry_For_X_Days_version-1_ACMCertificate_Expiry_acmcertificate';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-AWS-Config-Configuration-Changes' where policyId='AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-AWS-Organizations-Changes' where policyId='AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-CloudTrail-Configuration-Changes' where policyId='AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-Disabling-or-Scheduled-Deletion-of-Customer-Created-CMKs' where policyId='AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-IAM-Policy-Changes' where policyId='AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-AWS-Management-Console-Authentication-Failures' where policyId='AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-Management-Console-Sign-in-Without-MFA' where policyId='AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-NACL-Changes' where policyId='AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-Changes-to-Network-Gateways' where policyId='AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-Root-Account-Usage' where policyId='AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-Route-Table-Changes' where policyId='AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-S3-Bucket-Policy-Changes' where policyId='AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-Security-Group-Changes' where policyId='AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-Unauthorized-API-Calls' where policyId='AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Log-Metric-Filter-and-Alarm-for-VPC-Changes' where policyId='AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Ensure-AWS-ASG-Launch-Configurations-Are-Utilizing-Active-Amazon-Machine-Images' where policyId='AwsAsgMissingAMI_version-1_AwsAsgMissingAMI_asg';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-ECS-Task-Definition-Log-Driver' where policyId='Aws_ecs_task_should_use_log_driver_version-1_aws_enable_task_log_driver_ecs';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Resolve-IAM-Access-Analyzer-Findings' where policyId='Aws_iam_access_analyser_findings_version-1_aws_active_findings_accessanalyzer';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-AWS-Guard-Duty-Service-across-All-Regions-and-Accounts' where policyId='CheckGuardDutyIsEnabledForAllAccount_version-1_CheckGuardDutyIsEnabledForAllAccount_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-Access-Log-for-CloudFront-and-Attach-to-the-Mentioned-Bucket' where policyId='CloudFront_AccessLogs_version-1_CloudFront_AccessLogs_cloudfront';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-Access-Log-for-App-ELB-and-Attach-to-the-Mentioned-Bucket' where policyId='ELB_Access_Logs_version-1_AppLB_Access_Logs_appelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-Access-Log-for-classic-ELB-and-Attach-to-the-Mentioned-Bucket' where policyId='ELB_Access_Logs_version-1_ClassicLB_Access_Logs_classicelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Ensure-That-EC2-Instances-Are-Not-Left-in-a-Stopped-State-for-More-than-60-Days' where policyId='Ec2StoppedInstanceForLong_version-1_Ec2StoppedInstanceForLong_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Check-the-Expiry-Status-of-the-IAM-Certificate' where policyId='IAMCertificate_Expiry_For_X_Days_version-1_IAMCertificate_Expiry_For_X_Days_iamcertificate';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-API-Resource' where policyId='NonStandardRegionRule_version-1_ApiWithNonStandardRule_api';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-APP-ELB-Resource' where policyId='NonStandardRegionRule_version-1_AppelbWithNonStandardRule_appelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-DynamoDB' where policyId='NonStandardRegionRule_version-1_DynamodbWithNonStandardRule_dynamodb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-EFS-Resource' where policyId='NonStandardRegionRule_version-1_EfsWithNonStandardRule_efs';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-Elasticache-Resource' where policyId='NonStandardRegionRule_version-1_ElasticacheWithNonStandardRule_elasticache';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-Elastic-IP-Resource' where policyId='NonStandardRegionRule_version-1_ElasticipWithNonStandardRule_elasticip';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-Elasticsearch-Resource' where policyId='NonStandardRegionRule_version-1_ElasticsearchWithNonStandardRule_elasticsearch';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-EMR-Resource' where policyId='NonStandardRegionRule_version-1_EmrWithNonStandardRule_emr';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-Elastic-Network-Interfaces' where policyId='NonStandardRegionRule_version-1_EniWithNonStandardRule_eni';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-KMS-Resource' where policyId='NonStandardRegionRule_version-1_KmsWithNonStandardRule_kms';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-Redshift-Resource' where policyId='NonStandardRegionRule_version-1_RedshiftWithNonStandardRule_redshift';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-RDS-DB-Resource' where policyId='NonStandardRegionRule_version-1_RdsdbWithNonStandardRule_rdsdb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-VPC-Resource' where policyId='NonStandardRegionRule_version-1_VpcWithNonStandardRule_vpc';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-ASG-Resource' where policyId='NonStandardRegionRule_version-1_version-1_AsgWithNonStandardRegion_asg';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-Classic-ELB-Resource' where policyId='NonStandardRegionRule_version-1_version-1_ClassicelbWithNonStandardRegion_classicelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-Lambda' where policyId='NonStandardRegionRule_version-1_version-1_LambdaWithNonStandardRegion_lambda';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-Launchconfig' where policyId='NonStandardRegionRule_version-1_version-1_LaunchconfigWithNonStandardRegion_launchconfig';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-RDS-Snapshot' where policyId='NonStandardRegionRule_version-1_version-1_RdsSnapshotWithNonStandardRegion_rdssnapshot';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-EC2-Instance' where policyId='NonStandardRegionRule_version-1_version-1_ResourceWithNonStandardRule_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-S3-Buckets' where policyId='NonStandardRegionRule_version-1_version-1_S3WithNonStandardRegion_s3';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-snapshot' where policyId='NonStandardRegionRule_version-1_version-1_SnapshotWithNonStandardRegion_snapshot';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-sns-topic' where policyId='NonStandardRegionRule_version-1_version-1_SnstopicWithNonStandardRegion_snstopic';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-stack' where policyId='NonStandardRegionRule_version-1_version-1_StackWithNonStandardRegion_stack';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-AWS-Subnet' where policyId='NonStandardRegionRule_version-1_version-1_SubnetWithNonStandardRegion_subnet';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-ebs-volume' where policyId='NonStandardRegionRule_version-1_version-1_VolumeWithNonStandardRegion_volume';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-RDS-Auto-Minor-Version-Upgrade' where policyId='RDSDBEnableAutoMinorVersionUpgrade_version-1_EnableAutoMinorVersionUpgrade_rdsdb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-Private-S3-Buckets-with-Access-Logs' where policyId='S3AccessLogsRule_version-1_S3AccessLogsRule_s3';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-S3-Bucket-Object-Level-Logging-for-Read-Events' where policyId='S3ObjectLevelReadLogging_version-1_ObjectLevelReadLogging_s3';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-S3-Bucket-Object-Level-Logging-for-Write-Events' where policyId='S3ObjectLevelWriteLogging_version-1_ObjectLevelWriteLogging_s3';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Increase-AWS-Service-Limits-to-Meet-Growing-Needs' where policyId='ServiceLimitRule_version-1_ServiceLimitRule_account';
update cf_PolicyTable set resolutionUrl="https://paladincloud.io/docs/aws-policy/#Ensure-that-All-CloudWatch-Events-from-all-Accounts-are-sent-to-the-'Dedicated-ACCOUNTID'-Default-Event-Bus" where policyId="CloudWatchEventsForAllAccounts_version-1_CloudWatchEventsForAllAccounts_account";
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-AWS-Backup-Vault-Access-Policy' where policyId='AwsVaultMissingAccessPolicy_version-1_AwsVaultMissingAccessPolicy_backupvault';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Delete-Unused-Security-Groups' where policyId='Unused-Security-group_version-1_UnusedSecurityGroup_sg';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Delete-Expired-ACM-Certificates' where policyId='AWS_ACM_Certificate_Expired_version-1_AWS_ACM_Certificate_Expired';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-CloudTrail-Global-Services' where policyId='AWS_CloudTrail_Global_Services_version-1_Enable_CloudTrail_Global_Services_cloudtrail';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-EMR-Data-Encryption' where policyId='AWS_EMR_Clusters_Enabled_Encryption_version-1_Enable_Amazon_EMR_clusters_encryption';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-ElastiCache-for-Redis-Data' where policyId='AWS_ElastiCache_Clusters_Enabled_Encryption_version-1_Enable_CloudTrail_Global_Services_cloudtrail';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-OpenSearch-Data-at-Rest' where policyId='AWS_ElasticSearch_Domain_At_Rest_Encryption_version-1_ElasticSearchDomainAtRestEncryption';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-OpenSearch-Data-in-Transit' where policyId='AWS_ElasticSearch_Domain_Node_to_Node_Encryption_version-1_ElasticSearchDomainNodeToNodeEncryption';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-OpenSearch-using-KMS-CMK' where policyId='AWS_ElasticSearch_Domain_Encryption_Using_CMK_KMS_Key_version-1_Enable_CloudTrail_Global_Services_cloudtrail';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Full-Administrative-Privileges-to-Customer-Managed-IAM-Policy' where policyId='AWS_IAM_Customer_Mnged_Policy_With_Admin_Previlege_version-1_Admin_Previlege_iampolicies';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Detach-Any-Customer-Managed-Policy-with-Full-Access-from-IAM-Role' where policyId='AWS_IAM_Role_Full_Admin_Privilege_version-1_Admin_Previlege_iamrole';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Detach-Any-Customer-Managed-Policy-with-Full-Access-from-IAM-User' where policyId='AWS_IAM_User_Full_Admin_Privilege_version-1_Admin_Privilege_iamuser';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Configure-Dedicated-IAM-Role-for-AWS-Support-Access' where policyId='AWS_Support_Access_Role_version-1_Support_Access_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-AWS-Security-Hub' where policyId='AWS_account_security_hub_exists_version-1_enable_security_hub_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-Control-Plane-Logs-for-EKS' where policyId='AWS_eks_cluster_logs_enabled_version-1_enable_cluster_logs_eks';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Disable-Public-Access-to-EKS-Cluster-Endpoint' where policyId='AWS_eks_cluster_public_access_disabled_version-1_disable_cluster_public_access_eks';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Update-EKS-Cluster-Version-to-Latest' where policyId='AWS_eks_cluster_version_upgrade_version-1_update_cluster_version_eks';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-Hardware-MFA-for-Root-Account' where policyId='AWS_rootaccount_hardware_MFA_version-1_enable_harware_mfa_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-User-Permission-Only-through-IAM-Groups' where policyId='AWS_user_permissions_without_group_version-1_user_policy_via_group_iamuser';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-EBS-Volume' where policyId='Attached-EBS-volumes-are-encrypted_version-1_Attached_EBS_volumes_should_be_encrypted';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Ensure-the-Launch-Config-for-ASG-Contains-Updated-Information' where policyId='AwsAsgInactiveSecurityGroup_version-1_AwsAsgInactiveSecurityGroup_asg';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-CLB-Secure-Listener' where policyId='AwsClassicELBListenerSecurity_version-1_AwsListenerSecurity_classicelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-ELB-HTTPS-Listener' where policyId='AwsElbV2ListenerSecurity_version-1_AwsListenerSecurity_appelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Ensure-that-Ports-Associated-with-Security-Group-and-ALB-are-Same' where policyId='AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_appelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Ensure-that-Ports-Associated-with-Security-Group-and-ELB-are-Same' where policyId='AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_classicelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-in-Default-Security-Group' where policyId='AwsPublicAccessDefaultSecurityGroup_version-1_AwsPublicAccessDefaultSecurityGroup_sg';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Remove-any-VPC-Peering-Connections-to-Non-Allowlisted-AWS-Accounts' where policyId='AwsVpcExternalPeeringConnection_version-1_AwsVpcExternalPeeringConnection_peeringconnection';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-AWS-AMI' where policyId='Aws_AMI_encryption_version-1_aws_enable_encryption_ami';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-EBS-Volume-Using-Customer-Managed-Keys' where policyId='Aws_Attached_EBS_volumes_are_custom_kms_key_encrypted_version-1_Attached_EBS_volumes_should_be_custom_kms_key_encrypted';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-DocumentDB-using-Customer-Managed-Keys' where policyId='Aws_DocumentDB_should_be_encrypted_with_kms_cmks_version-1_aws_enable_cluster_kms_cmks_encryption_documentdb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-DynamoDB-tables-using-Customer-Managed-Keys' where policyId='Aws_DynamoDB_should_use_aws_managed_cmk_for_sse_version-1_aws_managed_cmk_for_sse_dynamodb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-EFS' where policyId='Aws_EFS_should_be_encrypted_version-1_aws_enable_encryption_efs';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-AppFlow-Using-CMK' where policyId='Aws_appflow_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_appflow';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-Athena-Query-Results' where policyId='Aws_athena_query_results_should_be_encrypted_version-1_aws_enable_query_results_encryption_awsathena';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-Comprehend-Analysis-Results' where policyId='Aws_comprehend_job_results_should_be_encrypted_version-1_aws_enable_job_results_encryption_awscomprehend';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-DynamoDB-Accelerator(DAX)-Cluster' where policyId='Aws_dax_should_be_encrypted_version-1_aws_enable_encryption_dax';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-DMS-Replication-Using-CMK' where policyId='Aws_dms_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_dms';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-Data-Migration-Service' where policyId='Aws_dms_should_not_be_publicly_accessible_version-1_aws_public_access_dms';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-EFS-Using-Customer-Managed-Keys' where policyId='Aws_efs_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_efs';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-CloudTrail-for-Multi-Region' where policyId='Centralized_CloudTrail_version-1_Centralized_Cloudtrail_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Remove-Inactive-IAM-Users-after-90-Days' where policyId='CheckInactiveIamUser_version-1_CheckInactiveIamUser_iamuser';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-MFA-for-Root-User' where policyId='Check_MFA_RootUSer_version-1_Check_MFA_RootUser_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-Validation-for-CloudTrail-Log-File' where policyId='CloudTrailLogFileValidation_version-1_EnableLogFileValidation_cloudtrail';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-CloudTrail-to-use-Key-Management-Service-Customer-Managed-Keys' where policyId='CloudTrailLogsEncryptedByKMS_version-1_EnableKMSEncryption_cloudtrail';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Restrict-EC2-RunInstance-Privilege-to-Non-allow-Listed-IAM-Role' where policyId='EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-EC2-Instances-on-SSH-Port-22' where policyId='EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-Ports-on-EC2-Instances' where policyId='EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-EBS-Snapshots' where policyId='EbsSnapShot_version-1_EbsSnapShot_snapshot';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-Qualys-Scan-for-AWS-EC2-Instances' where policyId='Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Restrict-Internet-Access-to-EC2-Instance-with-Remotely-Exploitable-Vulnerability-S5' where policyId='Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-EC2-Instances-on-Default-SQL-Browser-Port-1434' where policyId='Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-EC2-Instances-on-Default-MySQL-Port-3306' where policyId='Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-EC2-Instances-on-Port-138' where policyId='Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-EC2-Instances-on-Port-80' where policyId='Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-EC2-Instances-on-Port-8080' where policyId='Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-EC2-Instances-on-Default-PostgreSQL-Port-5432' where policyId='Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-EC2-Instances-on-Port-3389' where policyId='Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Qualys-found-S3-Vulnerabilities-for-AWS-EC2-Instance' where policyId='Ec2WithSeverityVulnerability_version-1_Ec2WithS3Vulnerability_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Qualys-found-S4-Vulnerabilities-for-AWS-EC2-Instance' where policyId='Ec2WithSeverityVulnerability_version-1_Ec2WithS4Vulnerability_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Qualys-found-S5-Vulnerabilities-for-AWS-EC2-Instance' where policyId='Ec2WithSeverityVulnerability_version-1_Ec2WithS5Vulnerability_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Disable-All-Inbound-Traffic-for-EKS-Cluster-Other-than-TCP-Port-443' where policyId='EksSgInboundTrafficValidation_version-1_SgInboundTrafficValidation_eks';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Restrict-Internet-Access-to-Elastic-Search-Endpoint' where policyId='ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Restrict-Internet-Access-to-Application-ELB' where policyId='ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Restrict-Internet-Access-to-Classic-ELB' where policyId='ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Delete-Expired-IAM-Certificates' where policyId='Expired_AWS_IAMCertificate_version-1_Expired_IAMCertificate_iamcertificate';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Ensure-that-no-Guard-Duty-Findings-are-Found-for-an-EC2-Instance' where policyId='GuardDutyFindingsExists_version-1_GuardDutyFindingsExists_ec2';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Set-the-Rotation-Period-of-IAM-Access-Keys-to-90-Days' where policyId='IamAccessKeyRotatedInEvery90Days_version-1_IamAccessKeyRotatedInEvery90Days_iamuser';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-IAM-Password-Policy' where policyId='IamPasswordPolicy_version-1_IamPasswordPolicy_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Use-Single-Access-Key-for-IAM-User' where policyId='IamUserWithMultipleAccessKey_version-1_IAMUserShouldUseSingleKey_iamuser';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Administrative-Permissions-to-Lambda-Functions' where policyId='LambdaFunWithAdmin-OrIamPrivileges_version-1_LambdaFunWithAdminOrIamPrivileges_lambda';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Restrict-Inbound-Traffic-on-Remote-Server-Administration-Port-22' where policyId='NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort22_networkacl';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Restrict-Inbound-Traffic-on-Remote-Server-Administration-Port-3389' where policyId='NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort3389_networkacl';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Restrict-full-IAM-Access-to-Non-Admin-IAM-Roles' where policyId='NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-RDS-Snapshot' where policyId='RdsSnapshotWithPublicAccess_version-1_RdsSnapshotWithPublicAccess_rdssnapshot';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-Redshift-Attached-Security-Group' where policyId='RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Remove-Root-User-Account-Access-Key' where policyId='RemoveRootUserAccessKey_version-1_RemoveRootUserAccessKey_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-HTTP-Requests-to-S3-Bucket' where policyId='S3BucketAllowHTTPRequest_version-1_S3BucketAllowHTTPRequest_s3';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-S3-Buckets-at-Rest' where policyId='S3BucketEncryption_version-1_S3BucketWithoutEncryption_s3';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-Non-allow-Listed-S3-Buckets' where policyId='S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Hosting-Website-or-Redirecting-Requests-for-S3-Bucket' where policyId='S3HostsWebsiteRule_version-1_S3HostsWebsiteRule_s3';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-mfa-Delete-on-S3-Bucket' where policyId='S3MFADeleteEnabled_version-1_MFADeleteEnabled_s3';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-any-Port' where policyId='SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Restrict-Internet-Access-to-Security-Group-with-SSH-Port-22' where policyId='SGWithAnywhereAccess_version-1_SgWithSshPort22OpenToInternetAccess_sg';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Security-Group-Public-Access-on-Memcached-Port-11211' where policyId='SGWithAnywhereAccess_version-1_Sg_with_memcached_port_11211_open_to_internet_access';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Security-Group-Public-Access-on-Redis-Port-6379' where policyId='SGWithAnywhereAccess_version-1_Sg_with_redis_port_6379_open_to_internet_access';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-Non-Allow-listed-SQS-Resources' where policyId='SQS_Public_Access_Rule_version-1_SQS_Public_access_rule_sqs';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Listed-Privileges-to-Service-Account' where policyId='ServiceAccountPrivilegesRule_version-1_UnapprovedServiceAccountAccess_iamuser';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Lambda-Privilege-to-Non-allow-Listed-IAM-Roles' where policyId='UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Prevent-Unauthorized-Cloudfront-Content-Distribution' where policyId='Unauthorized-Cloudfront-Distribution_version-1_Unauthorized-Cloudfront-Distribution_cloudfront';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-VPC-Flow-Logs-for-All-VPCs' where policyId='VpcFlowLogsEnabled_version-1_VpcFlowLogsEnabled_vpc';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Restrict-Unauthorized-HTML-Content-on-Cloudfront' where policyId='cloudfront-check-for-unauthorized-html_version-1_Cloudfront_Unauthorized_HTML_Content_cloudfront';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Restrict-Core-Networking-Privileges-to-Non-Allow-listed-IAM-Users' where policyId='core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-Envelope-Encryption-for-EKS-Kubernetes-Secrets' where policyId='Aws_EKS_secrets_should_be_encrypted_version-1_aws_enable_secret_encryption_eks';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Deny-Networking-Privileges-to-Non-allow-Listed-IAM-Roles' where policyId='IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-Aqua-ECR-Vulnerability-Scan' where policyId='ImagesScannedByAqua';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Aqua-Found-High-ECR-Vulnerabilities' where policyId='HighImageVulnerabilitiesScannedByAqua';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Aqua-Found-Critical-ECR-Vulnerabilities' where policyId='CriticalImageVulnerabilitiesScannedByAqua';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Aqua-Found-Medium-ECR-Vulnerabilities' where policyId='MediumImageVulnerabilitiesScannedByAqua';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Assign-Standard-Region-to-Security-Groups' where policyId='NonStandardRegionRule_version-1_version-1_SgWithNonStandardRegion_sg';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Encrypt-DocumentDB' where policyId='Aws_DocumentDB_should_be_encrypted_version-1_aws_enable_cluster_encryption_documentdb';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-Automatic-CMK-Rotation' where policyId='AWSKMSKeyRotationEnabled_version-1_KeyRotationEnabled_kms';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Enable-Tenable-EC2-Vulnerability-Scan' where policyId='AWSVMScannedByTenable';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Tenable-Found-Critical-Vulnerabilities-On-EC2-Instance' where policyId='CriticalVMVulnerabilitiesScannedByTenable';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Tenable-Found-High-Vulnerabilities-On-EC2-Instance' where policyId='HighVMVulnerabilitiesScannedByTenable';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#Tenable-Found-Medium-Vulnerabilities-On-EC2-Instance' where policyId='MediumVMVulnerabilitiesScannedByTenable';

update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Assign-Mandatory-Tags-to-BigQueryDataset' where policyId='TaggingRule_version-1_BigQueryDatasetTagging_bigquerydataset';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Assign-Mandatory-Tags-with-BigQueryTable' where policyId='TaggingRule_version-1_BigQueryTableTagging_bigquerytable';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Assign-Mandatory-Tags-to-CloudSQL' where policyId='TaggingRule_version-1_CloudSqlTagging_cloudsql';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Assign-Mandatory-Tags-to-CloudStorage' where policyId='TaggingRule_version-1_CloudStorageTagging_cloudstorage';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Assign-Mandatory-Tags-to-PubSub-Topics' where policyId='TaggingRule_version-1_PubSubTagging_pubsub';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Assign-Mandatory-Tags-to-VM' where policyId='TaggingRule_version-1_VMInstanceTagging_vminstance';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Assign-Mandatory-Tags-to-VPC-Firewall' where policyId='TaggingRule_version-1_VpcFirewallTagging_vpcfirewall';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Configure-API-Restriction-for-API-Keys' where policyId='Enable_API_Key_Restrictions';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Configure-Application-Restrictions-for-Google-Cloud-API-Key' where policyId='Enable_API_Key_Application_Restrictions';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Configure-Production-Cloud-SQL-Database-Instances-for-High-Availability' where policyId='GCP_sql_database_high_availability_rule';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Configure-VPC-Native-for-Clusters-in-GKE' where policyId='Enable_VPC_native_for_clusters';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Create-Clusters-with-Private-Nodes' where policyId='Ensure_clusters_created_with_pvtnodes';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-Auto-Upgrade-for-GKE-Nodes' where policyId='Enable_Auto_Upgrade_for_GKE_nodes';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-Automated-Backups-for-Cloud-SQL-Database' where policyId='Enable_Automated_backups_for_sql_database';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-Cloud-Asset-Inventory' where policyId='Enable_Cloud_Asset_Inventory';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-Cloud-Logging-and-Monitoring-for-GKE-Cluster' where policyId='Enable_Cloud_Logging_Monitoring';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-cloudsqlenable_pgaudit-Database-Flag-for-PostgreSQL-Instance' where policyId='Enable_pgAudit_Database_Flag_for_Postgresql_Instance';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-Compute-Engine-Using-Instance-level-SSH-Keys' where policyId='Enable_Compute_Engine_using_instance_level_SSH_keys';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-Confidential-Computing-for-Compute-Instances' where policyId='Enable_Confidential_Computing_for_Compute_Instance';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-DNSSEC-Security-Feature-for-Google-Cloud-DNS-Managed-Zones' where policyId='Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-HTTPS-Logging-for-Load-Balancing-Backend-Services' where policyId='Enable_Logging_For_BackendServices_LoadBalancer';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-Integrity-Monitoring-for-Shielded-GKE-Nodes' where policyId='Enable_Integrity_Monitoring_For_Node_Pool';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-Log_disconnections-DB-Flag-for-PostgreSQL' where policyId='Enable_Log_disconnections_for_Postgres_Server_DB_Instances';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-OS-Login-for-a-Project' where policyId='Enable_osLogin_for_a_project';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-Secure-Boot-for-Shielded-GKE-Nodes' where policyId='Enable_Secure_Boot_For_Node_Pool';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-skip_show_database-Flag-for-Cloud-SQL' where policyId='Enable_skip_show_database_for_MySQL_Server_DB_Instances';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-Uniform-Bucket-Level-Access' where policyId='Enable_Uniform_Bucket_Level_Access';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-VPC-Flow-Logs-and-Intranode-Visibility-for-GKE-Cluster' where policyId='Enable_VPC_Flow_Logs_and_IntraNode_Visibility';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enforce-Cloud-SQL-Incoming-Connections-To-Use-SSL' where policyId='Enforce_cloud_SQL_incoming_Connections_To_Use_SSL';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enforce-Separation-of-Duties-While-Assigning-KMS-Related-Roles-to-Users' where policyId='Enforce_Separation_Of_Duties_For_KMS_Roles';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enforce-user-Connections-Database-Flag-for-Sql-Server-Instance-is-Set-to-Non-limiting-Value' where policyId='Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Migrate-VM-Instance-During-Maintenance' where policyId='GCP_VM_Instance_Migrate';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Set-log_min_error_statement-Database-Flag-for-Postgres-Instance-to-Error-or-Stricter' where policyId='Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Avoid-Assigning-Service-Roles-to-IAM-Users-on-a-Project-Level' where policyId='Avoid_Service_roles_to_IAM_user_at_project_level';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Encrypt-Cloud-Storage-Using-Customer-Managed-Encryption-Keys' where policyId='Cloud_Storage_should_be_encrypted_with_CMK';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-Cloud-Storage' where policyId='Cloud_Storage_should_not_be_public';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Ensure-that-Default-Network-does-not-Exist-in-a-Project' where policyId='Default_Network_should_Not_Exist_in_a_Project';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Admin-Privileges-to-Service-Accounts' where policyId='Deny_Admin_Privilege_Service_Account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Access-to-GKE-Cluster' where policyId='Deny_access_to_Kubernate_Engine_cluster';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-Public-IP-for-Cloud-SQL-Database-Instance' where policyId='Deny_public_ip_for_sql';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Usage-of-Default-Service-Accounts-for-Instances' where policyId='Deny_usage_of_default_service_accounts_for_instances';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-3625-(trace-flag)-Database-Flag-for-Cloud-SQL-Server-Instance' where policyId='Disable_3625_Flag_for_SQL_Server_DB_Instances';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-Alpha-Clusters-for-Production-Workloads' where policyId='Disable_Alpha_Cluster';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-Basic-Authentication-with-Static-Passwords-on-GKE-Cluster' where policyId='Disable_Basic_Authentication';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-Contained-Database-Authentication-Flag-for-SQL-Server-Database-Instances' where policyId='Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-External-Scripts-Enabled-Flag-for-SQL-Server-Database-Instances' where policyId='Disable_External_scripts_enabled_for_SQL_Server_DB_Instances';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-Kubernetes-Web-UI' where policyId='Disable_Kubernetes_Web_UI';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-Legacy-Authorization-for-GKE-Cluster' where policyId='Disable_Legacy_Authorization';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-Local_infile-DB-Flag-for-Cloud-SQL' where policyId='Disable_Local_infile_for_MySQL_Server_DB_Instances';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-Log_min_duration_statement-Database-Flag-for-PostgreSQL-Instance' where policyId='Disable_Log_min_duration_statement_for_PostgreSQL';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-Database-Remote-Access-Flag-for-SQL-Server-Database-Instances' where policyId='Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-User-Managed-Service-Account-Key-Creation' where policyId='Disable_User_Managed_Service_Account_Key_Creation';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-Client-Certificate-Authentication-for-GKE-Cluster' where policyId='Disable_client_certificate_Authentication_for_Cluster';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-Connecting-to-Serial-Ports-for-VM-Instance' where policyId='Disable_connecting_to_Serial_Ports_for_VM_Instance';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-the-log_hostname-DB-Flag-for-Postgres-and-Cloud-SQL' where policyId='Enable_log_hostname_for_Postgres_Server_DB_Instances';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Encrypt-Application-Layer-Secrets-for-GKE-Cluster' where policyId='Encrypt_App_Layer_secrets_for_GKE_Cluster';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Encrypt-GKE-Cluster-Node-using-CMK' where policyId='Encrypt_GKE_Cluster_Node_with_CMK';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enforce-Separate-Service-Account-Duties-for-Users' where policyId='Enforce_Separate_Service_Account_Duties_for_Users';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Secure-GKE-Clusters-with-Private-Cluster-Configuration' where policyId='Ensure_clusters_created_with_pvt_endpoints';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-Cross-DB-Ownership-Flag-for-SQL-DB-Server' where policyId='Ensure_cross_DB_ownership_flag_disabled_for_SQL';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Encrypt-Dataproc-Clusters-Using-Customer-Managed-Encryption-Keys' where policyId='GCP_DataProc_CMK_Encryption';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Encrypt-Pub/Sub-Topics-Using-CMK' where policyId='GCP_PubSub_CMK_Encryption';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Usage-of-Service-Accounts-with-Full-Cloud-API-Access-for-VM-Instances' where policyId='GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-MFA-on-Google-Cloud-VM-Instances-for-OS-Login' where policyId='GCP_Virtual_Machine_2FA_Rule';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Encrypt-VM-Disk-with-Customer-Managed-Encryption-Keys' where policyId='GCP_Virtual_Machine_Disk_Encryption_CMK_Rule';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Encrypt-VM-Disk-with-Customer-Supplied-Encryption-Keys' where policyId='GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-VM-Instance' where policyId='GCP_Virtual_Machine_public_access_version-1_Rule';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-Big-Query' where policyId='GCP_bigquery_dataset_public_access_rule';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Encrypt-Big-Query-Using-Customer-Managed-Encryption-Keys' where policyId='GCP_bigquery_table_encryption_cmks_rule';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Encrypt-Cloud-SQL-Using-CMEK' where policyId='GCP_cloud_sql_encryption_cmks_rule';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Check-for-Publicly-Accessible-Cloud-KMS-Keys' where policyId='GCP_kms_public_access_rule';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Disable-IP-Forwarding-for-Compute-Instances' where policyId='IP_forwarding_for_Instances';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Legacy-Subnet-Mode-for-VPC' where policyId='Legacy_Subnet_should_Not_Exist_in_a_Project';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Remove-User-Options-Database-Flag-for-Cloud-SQL-SERVER-Instance' where policyId='Remove_user_options_for_SQLServer';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Rotate-Google-Cloud-API-Keys' where policyId='Rotate_Google_Cloud_API_Keys';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Secure-SSL-Cipher-Suites' where policyId='Secure_SSL_Cipher_Suites';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-Uncommon-Ports' where policyId='VPC_UnCommon_ports_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-DNS-Port-53' where policyId='VPC_firewall_DNS_port_53_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-FTP-Ports-20-and-21' where policyId='VPC_firewall_FTP_port_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-ICMP' where policyId='VPC_firewall_ICMP_port_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-MySQL-Port-3306' where policyId='VPC_firewall_MYSQL_port_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-Oracle-Port-1521' where policyId='VPC_firewall_ORACLE_port_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-Egress-on-all-Ports' where policyId='VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-PostgreSQL-Port-5432' where policyId='VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-RDP-Port-3389' where policyId='VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-RPC-Port-25' where policyId='VPC_firewall_RPC_port_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-SMTP-Port-25' where policyId='VPC_firewall_SMTP_port_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-SQL-Port-1433' where policyId='VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Rotate-Key-Management-Service-Encryption-Keys-Every-90-Days' where policyId='kms_keys_rotation_period_within_90_days';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Deny-Public-Access-to-SSH-Port-22' where policyId='VPC_firewall_SSH_port_22_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-Log_connections-DB-Flag-for-PostgreSQL' where policyId='Enable_Log_connections_for_Postgres_Server_DB_Instances';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-Auto-Repair-for-GKE-Nodes' where policyId='Enable_Auto_Repair_for_GKE_nodes';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enhance-Security-with-Specific-API-Restrictions-for-Google-Cloud-API-Keys' where policyId='Enable_API_Key_Restrictions';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Secure-Google-Cloud-API-Keys-with-Application-Restrictions' where policyId='Enable_API_Key_Application_Restrictions';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Secure-Your-Google-Cloud-Load-Balancers-with-HTTPS-and-SSL/TLS-Certificates' where policyId='Enable_HTTPS_For_LoadBalancer';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Check-Permission-of-Ingress-Setting-of-GCP-cloud-Function' where policyId='Check_permission_of_Ingress_Setting_of_GCP_cloud_Function';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Configure-HTTPS-Target-Proxy-with-Quic-Protocol-for-Google-Cloud-Load-Balancers' where policyId='Enable_Quic_Protocol_For_Load_Balancer';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#Enable-HTTPS-for-Cloud-Functions' where policyId='Enable_Https_For_Cloudfunc';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/gcp-policy/#GCP-Cloud-Function-not-Enabled-with-VPC-Connector' where policyId='GCP_Cloud_Function_not_enabled_with_VPC_connector';

UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Azure_Enable_Network_Security_for_UDP';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Disable_Local_infile_for_MySQL_Server_DB_Instances';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enable_Log_connections_for_Postgres_Server_DB_Instances';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'S3MFADeleteEnabled_version-1_MFADeleteEnabled_s3';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Ensure_web_app_using_latest_version_of_the_HTTP_protocol';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enable_log_hostname_for_Postgres_Server_DB_Instances';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Remove_user_options_for_SQLServer';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Configure_email_in_ms_defender';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'RDSDBEnableAutoMinorVersionUpgrade_version-1_EnableAutoMinorVersionUpgrade_rdsdb';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enforce_cloud_SQL_incoming_Connections_To_Use_SSL';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enable_latest_TLS_version';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enable_Azure_DiagnosticSettings_Mandatory_Tags';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Ensure_Web_App_latest_TLS_version';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AWS_Support_Access_Role_version-1_Support_Access_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Expired_AWS_IAMCertificate_version-1_Expired_IAMCertificate_iamcertificate';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Deny_Admin_Privilege_Service_Account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Legacy_Subnet_should_Not_Exist_in_a_Project';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Deny_Default_Network_Access_Rule_for_Storage_Accounts';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Deny_usage_of_default_service_accounts_for_instances';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AWS_IAM_Role_Full_Admin_Privilege_version-1_Admin_Previlege_iamrole';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Disable_3625_Flag_for_SQL_Server_DB_Instances';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Disable_connecting_to_Serial_Ports_for_VM_Instance';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Disable_External_scripts_enabled_for_SQL_Server_DB_Instances';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'IP_forwarding_for_Instances';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Disable_Log_min_duration_statement_for_PostgreSQL';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Disable_Web_App_traffic_to_plain_Ftp';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Ensure_Active_Directory_Web_App';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enable_Automated_backups_for_sql_database';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enable_pgAudit_Database_Flag_for_Postgresql_Instance';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Centralized_CloudTrail_version-1_Centralized_Cloudtrail_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enable_Compute_Engine_using_instance_level_SSH_keys';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enable_keyvault_delete_protection';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enable_Log_disconnections_for_Postgres_Server_DB_Instances';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enable_skip_show_database_for_MySQL_Server_DB_Instances';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enable_soft_delete_for_Blob_storage';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enable_Email_Subscription_Admin';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'TLS_Version_MySQL_Flexible_Server';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Remove_custom_owner_roles';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'RemoveRootUserAccessKey_version-1_RemoveRootUserAccessKey_account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'kms_keys_rotation_period_within_90_days';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Set_all_users_to_owner_email_notifications';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Azure_KeyVault_Key_ExpiryDate';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Azure_KeyVault_Secret_ExpiryDate';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Set_Retention_Days_Greater_Than_Ninety';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Set_notify_alerts_severity_to_high';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'VPC_firewall_SSH_port_22_should_not_be_publicly_accessible';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'rdsdb_version-1_RdsDbPublicAccess_rdsdb';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'RdsSnapshotWithPublicAccess_version-1_RdsSnapshotWithPublicAccess_rdssnapshot';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'UnrestrictedSqlDatabaseAccessRule_version-1';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Azure_Check_Public_Access_For_Storage_Account';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Disable_Remote_Debugging_For_WebApp';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AWS_CloudTrail_Global_Services_version-1_Enable_CloudTrail_Global_Services_cloudtrail';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Attached-EBS-volumes-are-encrypted_version-1_Attached_EBS_volumes_should_be_encrypted';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting';

UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'S3ObjectLevelReadLogging_version-1_ObjectLevelReadLogging_s3';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'S3ObjectLevelWriteLogging_version-1_ObjectLevelWriteLogging_s3';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Enforce_Separation_Of_Duties_For_KMS_Roles';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Deny_public_ip_for_sql';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Network_Security_Group_Flow_Log_retention_more_than_90_days';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Enable_Authentication_For_WebApp';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'AWS_account_security_hub_exists_version-1_enable_security_hub_account';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Enable_Client_Certificate_for_webApp';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Enable_Cloud_Asset_Inventory';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Enable_Confidential_Computing_for_Compute_Instance';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'GCP_VM_Instance_Shielded_Config';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'trusted_ms_services_access_storage_account';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Enable_Uniform_Bucket_Level_Access';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'CloudTrailLogFileValidation_version-1_EnableLogFileValidation_cloudtrail';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Use_CMK_to_encrypt_OS_and_Data_disk';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Use_CMK_to_encrypt_Storage_Account_for_Activity_logs';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Default_Network_should_Not_Exist_in_a_Project';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'S3BucketAllowHTTPRequest_version-1_S3BucketAllowHTTPRequest_s3';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'AWS_rootaccount_hardware_MFA_version-1_enable_harware_mfa_account';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Data_Encryption_SQL_version-1_SDE_sqldatabase';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'VpcFlowLogsEnabled_version-1_VpcFlowLogsEnabled_vpc';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'GCP_bigquery_table_encryption_cmks_rule';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'GCP_DataProc_CMK_Encryption';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'S3BucketEncryption_version-1_S3BucketWithoutEncryption_s3';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Enable_Encryption_for_Unattached_Disk_Volumes';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'Enforce_Separate_Service_Account_Duties_for_Users';

UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_latest_TLS_version';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Azure_DiagnosticSettings_Mandatory_Tags';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Network_Security_Group_Flow_Log_retention_more_than_90_days';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Ensure_Web_App_latest_TLS_version';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Ensure_Active_Directory_Web_App';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Authentication_For_WebApp';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Automated_backups_for_sql_database';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Client_Certificate_for_webApp';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Cloud_Asset_Inventory';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_pgAudit_Database_Flag_for_Postgresql_Instance';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Compute_Engine_using_instance_level_SSH_keys';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Confidential_Computing_for_Compute_Instance';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_keyvault_delete_protection';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Azure_Create_Network_Security_Group_log_alert';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Azure_Account_Security_Solution_log_alert';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Log_disconnections_for_Postgres_Server_DB_Instances';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_osLogin_for_a_project';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'GCP_VM_Instance_Shielded_Config';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_skip_show_database_for_MySQL_Server_DB_Instances';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_soft_delete_for_Blob_storage';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Vulnerability_Assessment_Periodic_Recurring_Scans';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_transparent_data_encryption_for_sql_db';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'trusted_ms_services_access_storage_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Uniform_Bucket_Level_Access';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Email_Subscription_Admin';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Aws_iam_access_analyser_findings_version-1_aws_active_findings_accessanalyzer';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Set_all_users_to_owner_email_notifications';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Set_notify_alerts_severity_to_high';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Configure_email_in_ms_defender';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'RDSDBEnableAutoMinorVersionUpgrade_version-1_EnableAutoMinorVersionUpgrade_rdsdb';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enforce_cloud_SQL_incoming_Connections_To_Use_SSL';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'S3ObjectLevelReadLogging_version-1_ObjectLevelReadLogging_s3';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'S3ObjectLevelWriteLogging_version-1_ObjectLevelWriteLogging_s3';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enforce_Separation_Of_Duties_For_KMS_Roles';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account';

DELETE FROM cf_PolicyTable WHERE policyId='Enable_Azure_Defender_for_Storage_Account_version-1_SecurityPricing';
UPDATE cf_PolicyTable SET policyDisplayName ='Enable Log Alert for Delete Security Solution Event' WHERE policyId ='Enable_Azure_Account_Delete_Security_Solution_Event_log_alert';
UPDATE cf_PolicyTable SET policyDisplayName ='Enable Log Alert for Delete Policy Assignment' WHERE policyId ='Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert';
UPDATE cf_PolicyTable SET policyDisplayName ='Enable Auto-Repair for GKE Nodes' WHERE policyId ='Enable_Auto_Repair_for_GKE_nodes';
UPDATE cf_PolicyTable SET policyDisplayName ='Secure Your Google Cloud Load Balancers with HTTPS and SSL/TLS Certificates' WHERE policyId ='Enable_HTTPS_For_LoadBalancer';
UPDATE cf_PolicyTable SET policyDisplayName ='Secure Your SQL Database with Transparent Data Encryption (TDE)' WHERE policyId ='Enable_transparent_data_encryption_for_sql_db';
UPDATE cf_PolicyTable SET policyDisplayName ='Enhance Security with Specific API Restrictions for Google Cloud API Keys',policyDesc ='Enhance security by restricting Google Cloud API keys to specific APIs like Cloud Key Management Service (KMS), Cloud Storage, Cloud Monitoring, and Cloud Logging. Applying API restrictions for production applications is essential to follow cloud security best practices and minimize potential risks. By doing so, you protect your application and data from unauthorized access and potential attacks.' WHERE policyId ='Enable_API_Key_Restrictions';
UPDATE cf_PolicyTable SET policyDisplayName ='Secure Google Cloud API Keys with Application Restrictions',policyDesc ='Secure Google Cloud API keys with application restrictions to limit access to trusted hosts, HTTP referrers, and specific Android/iOS applications. This prevents unauthorized usage and reduces the risk of compromising sensitive data. Implementing these restrictions is essential for following cloud security best practices and protecting your applications effectively.' WHERE policyId ='Enable_API_Key_Application_Restrictions';
UPDATE cf_PolicyTable SET policyDisplayName ='Enable Automatic CMK Rotation' WHERE policyId ='AWSKMSKeyRotationEnabled_version-1_KeyRotationEnabled_kms';
UPDATE cf_PolicyTable SET policyDisplayName ='Deny Public Access to Security Group on SSH Port 22' WHERE policyId ='SGWithAnywhereAccess_version-1_SgWithSshPort22OpenToInternetAccess_sg';

UPDATE cf_PolicyTable SET category='cost',severity ='high' WHERE policyId IN ('remove_unused_load_balancer','remove_unused_scale_set','remove_unused_vm_disk');

update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-Tags-to-Blob-Container' where policyId='TaggingRule_version-1_BlobcontainerTaggingRule_blobcontainer';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-Tags-to-Databricks' where policyId='TaggingRule_version-1_DatabricksTaggingRule_databricks';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-Tags-to-Disk' where policyId='TaggingRule_version-1_DiskTaggingRule_disk';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-Tags-to-Load-Balancer' where policyId='TaggingRule_version-1_LoadbalancerTaggingRule_loadbalancer';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-tags-to-MySQL-Server' where policyId='TaggingRule_version-1_MysqlserverTaggingRule_mysqlserver';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-Tags-to-Network-Interface' where policyId='TaggingRule_version-1_NetworkinterfaceTaggingRule_networkinterface';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-Tags-to-Network-Security-Group' where policyId='TaggingRule_version-1_NsgTaggingRule_nsg';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-Tags-to-Resource-Group' where policyId='TaggingRule_version-1_ResourcegroupTaggingRule_resourcegroup';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-Tags-to-Security-Center' where policyId='TaggingRule_version-1_SecuritycenterTaggingRule_securitycenter';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-Tags-to-SQL-Database' where policyId='TaggingRule_version-1_SqldatabaseTaggingRule_sqldatabase';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-Tags-to-SQL-Server' where policyId='TaggingRule_version-1_SqlserverTaggingRule_sqlserver';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-Tags-to-Storage-Account' where policyId='TaggingRule_version-1_StorageaccountTaggingRule_storageaccount';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-Tags-to-Virtual-Machine' where policyId='TaggingRule_version-1_VirtualmachineTaggingRule_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Mandatory-Tags-Virtual-Network' where policyId='TaggingRule_version-1_VnetTaggingRule_vnet';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Restrict-Network-Ports-on-Network-Security-Groups-Associated-to-VM' where policyId='Access_Through_Internet_version-1_AIE_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Adaptive-Application-Controls-on-Virtual-Machines' where policyId='Adaptive_App_Control_version-1_AAC_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Auditing-for-Advanced-Data-Security-SQL-Server' where policyId='Auditing_Advanced_Data_Security_version-1_SADS_sqlserver';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Check-Unrestricted-Network-Access-to-Storage-Accounts' where policyId='AzureAuditNetworkAccessToStorageAccounts_version-1_ConfigureNetworkRulesOnStorageAccount_storageaccount';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Check-Storage-VNet-Integration' where policyId='AzureAuditStorageVnetIntegration_version-1_AuditStorageVnetIntegration_storageaccount';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Secure-Transfer-to-Storage-Accounts' where policyId='AzureAuditTransferToStorageAccounts_version-1_EnableSecureTransferToStorageAccounts_storageaccount';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Provision-Active-Directory-Administrator-for-SQL-Servers' where policyId='AzureSQLServerAuthenticationSettings_version-1_EnableAzureADAuthentication_sqlserver';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Public-Access-to-Storage-Accounts-with-Blob-Containers' where policyId='Azure_Check_Public_Access_For_Storage_Account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Access-to-Virtual-Machine-Management-Ports' where policyId='Azure_Close_management_ports_version-1_SecurityCenter_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Adaptive-Application-Controls' where policyId='Azure_Enable_Adaptive_Application_controls_version-1_SecurityCenter_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Azure-Storage-Account-Customer-Managed-Keys' where policyId='Azure_Enable_CMK_Encryption_For_Storage_Account_version-1_storageaccount';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Create-AWS-KMS-Customer-Master-Key-for-Database-Tier' where policyId='Azure_Enable_Database_Tier_Customer_Managed_Key';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Alert-for-Azure-SQL-Advanced-Threat-Detection' where policyId='Azure_Enable_Email_Alerts_for_SQL_Threat_Detection_Service_version-1_sqldatabase';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Encrypt-VMs-with-Disk-Encryption-using-Key-Vault' where policyId='Azure_Enable_Encryption_for_Boot_Disk_Volumes_version-1_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Public-Access-to-FTP-Ports-20-and-21' where policyId='Azure_Enable_Network_Security_for_FTP';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Public-Access-to-RPC-Port-135' where policyId='Azure_Enable_Network_Security_for_RPC';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Public-Access-to-SQL-Server-Port-1433' where policyId='Azure_Enable_Network_Security_for_SQLSERVER';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Public-Access-to-SSH-Port-22' where policyId='Azure_Enable_Network_Security_for_SSH';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Public-Access-to-UDP' where policyId='Azure_Enable_Network_Security_for_UDP';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Network-Security-Groups-on-Virtual-Machines' where policyId='Azure_Enable_Network_Security_version-1_SecurityCenter_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Web-Tier-Customer-Managed-Keys' where policyId='Azure_Enable_Web_Tier_Customer_Managed_Key';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Azure-Key-Vault-Customer-Managed-Key' where policyId='Azure_Enable_key_Vault_Customer_Managed_Key';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-In-Transit-Encryption-for-Redis-Cache-Server' where policyId='Azure_Encryption_for_Data_in_RedisCache';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-JIT-Access-to-Secure-VM-Management' where policyId='Azure_Just_in_time_network_access_version-1_SecurityCenter_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Set-Expiration-Date-for-Keys-in-Key-Vault' where policyId='Azure_KeyVault_Key_ExpiryDate';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Set-Expiration-Date-for-RBAC-for-Keys-in-Key-vaults' where policyId='Azure_KeyVault_Key_ExpiryDate_RBAC';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Set-Expiration-Date-for-Secrets-in-Key-Vault' where policyId='Azure_KeyVault_Secret_ExpiryDate';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Set-Expiration-Date-for-RBAC-for-Secrets-in-Key-Vaults' where policyId='Azure_KeyVault_Secret_ExpiryDate_RBAC';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Resolve-App-Service-Health-Check-Issues' where policyId='Azure_Resolve_monitoring_agent_version-1_SecurityCenter_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Authenticate-VM-Access-Using-SSH-Keys-for-Enhanced-Security' where policyId='Azure_SSH_Authentication_Type_version-1_SSH_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Public-Access-to-RDP-Port-3389' where policyId='Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Azure-Threat-Detection-on-SQL-Server' where policyId='Azure_Threat_Detection_on_SQL_Server';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Install-Endpoint-Protection-for-VM' where policyId='Azure_Virtual_Machine_Endpoint_Protection';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Harden-the-Network-Security-Group-Rules-for-Internet-Facing-Virtual-Machines' where policyId='Azure_harden-NSGs_internet_version-1_SecurityCenter_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Strengthen-VM-Security-using-Azure-Container-Security' where policyId='Azure_policies-Container_Security_Configurations_version-1_CSC_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Disk-Encryption-Monitoring-and-Recommendations-for-Microsoft-Azure-Virtual-Machines-(VMs)' where policyId='Azure_policies-Disk_Encryption_version-1_DE_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Public-Access-to-PostgreSQL-Server-Port-5432' where policyId='Check_for_Unrestricted_PostgreSQL_Database_Access';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Transparent-Data-Encryption-on-SQL-Databases' where policyId='Data_Encryption_SQL_version-1_SDE_sqldatabase';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Define-Authorized-IP-Ranges-for-AKS-API-Server' where policyId='Define_Authorised_IP_for_kubernetes';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Full-Administrator-Privilege-to-Azure-Key-Vault' where policyId='Deny_Azure_KeyVault_Admin_Privileges';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Network-Access-Rule-for-Storage-Accounts' where policyId='Deny_Default_Network_Access_Rule_for_Storage_Accounts';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Disable-Remote-Debugging-on-Application-Service' where policyId='Disable_Remote_Debugging_For_WebApp';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Disable-Plain-FTP-Deployment' where policyId='Disable_Web_App_traffic_to_plain_Ftp';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Disable-Kubernetes-Dashboard' where policyId='Disable_kubernetes_DashBoard';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Add-on-Policies-for-AKS' where policyId='Enable_Addon_policies_for_AKS';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Create-Policy-Assignment-Log-Alert' where policyId='Enable_Azure_Account_Create_Policy_Assignment_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Azure-Defender-for-App-Service' where policyId='Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Azure-Defender-for-SQL-Database' where policyId='Enable_Azure_Defender_for_Storage_Account_version-1_SecurityPricing';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Azure-Defender-for-Virtual-Machine' where policyId='Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Encryption-for-Application-Tier-Disk-Volumes-on-VM' where policyId='Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Encrypt-Unattached-Disk-Volumes' where policyId='Enable_Encryption_for_Unattached_Disk_Volumes';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Public-Access-to-SQL-Server-Port-1434' where policyId='Enable_Network_Security_for_SQLSERVER';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-In-Transit-Encryption-for-PostgreSQL-Server' where policyId='Enable_PostgreSQL_Server_In_Transit_Encryption';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Private-Cluster-for-AKS' where policyId='Enable_private_cluster_for_AKS';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-the-HTTP/2-Protocol-Azure-App-Service-Web-Applications' where policyId='Ensure_web_app_using_latest_version_of_the_HTTP_protocol';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Disable-IP-Forwarding-on-VM-Network-Interfaces' where policyId='IP_Forwarding_version-1_IPF_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Monitor-Missing-Endpoint-Protection-on-VM-in-Security-Center' where policyId='Missing_Endpoint_Protection_version-1_MEP_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Diagnostics-Logs-in-Namespaces' where policyId='Namespaces_DiagnosticLogs_version-1_NDL_namespaces';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Remove-Custom-Owner-Roles' where policyId='Remove_custom_owner_roles';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Set-SQL-Audit-Retention-Duration' where policyId='SQL_Auditing_Retention_version-1_SAR_sqlserver';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Check-Encryption-for-SQL-TDE-Protector' where policyId='SQL_TDE_Encryption_version-1_TPS_sqlserver';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Vulnerability-Assessment-on-SQL-Servers' where policyId='SQL_Vulnerability_Assessment_version-1_SVA_sqlserver';
update cf_PolicyTable set resolutionUrl="https://paladincloud.io/docs/azure-policy/#Configure-'Send-Scan-Report-to'-within-Vulnerability-Assessment-under-SQL-Server" where policyId="Send_Scan_Reports_Should_Be_Configured";
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Classify-Sensitive-Data-in-SQL-Database' where policyId='Sensitive_Data_SQL_version-1_SDS_sqldatabase';
update cf_PolicyTable set resolutionUrl="https://paladincloud.io/docs/azure-policy/#Set-Retention-Duration-to-'Greater-than-90-days'-for-SQL-Server" where policyId="Set_Retention_Days_Greater_Than_Ninety";
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Assign-Subnet-to-Network-Security-Group' where policyId='Subnet_NSG_rule_version-1_SNR_subnets';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Install-System-Updates-on-Virtual-Machines' where policyId='System_Updates_version-1_SSU_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Ensure-that-MySQL-Flexible-Database-Server-has-the-Latest-TLS-Version' where policyId='TLS_Version_MySQL_Flexible_Server';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Public-Access-to-SQL-Database' where policyId='UnrestrictedSqlDatabaseAccessRule_version-1';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Public-Access-to-MySQL-Server-Port-3306' where policyId='Unrestricted_MySQL_Database_Access';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Deny-Public-Access-to-Oracle-Port-1521' where policyId='Unrestricted_Oracle_Database_Access';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Encrypt-OS-and-Data-Disk-with-CMK' where policyId='Use_CMK_to_encrypt_OS_and_Data_disk';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Encrypt-Storage-Account-for-Activity-Logs-using-CMK' where policyId='Use_CMK_to_encrypt_Storage_Account_for_Activity_logs';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Diagnostic-Logs-in-Key-Vault' where policyId='Vaults_DiagnosticLogs_version-1_VDR_vaults';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Encrypt-VM-Disk-Volume-Using-CMK' where policyId='Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Configure-Metric-Alert-Rules-on-Batch-Accounts' where policyId='AzureBatchAccountMetricAlertRules_version-1_ConfigureMetricAlertRules_batchaccounts';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Diagnostic-Logs-in-Batch-Accounts' where policyId='AzureBatchAccountsDiagnosticLogs_version-1_EnableDiagnosticLogsInBatchAccount_batchaccounts';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Diagnostic-Logs-in-Service-Bus' where policyId='AzureNamespacesDiagnosticLogs_version-1_EnableDiagnosticLogsInServiceBus_namespaces';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Configure-SQL-Audit-Action-Groups' where policyId='AzureSQLAuditLogging_version-1_ConfigureActionGroupsInSQLAuditSettings_sqlserver';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Log-Alert-for-Delete-Key-Vault-Events' where policyId='Azure_Account_Delete_Azure_Key_Valut_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-log-Alert-for-Delete-SQL-DB' where policyId='Enable_Delete_SQL_Database_Log_Alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Install-Vulnerability-Assessment-Solution-on-Virtual-Machines' where policyId='Azure_Install_a_vulnerability_version-1_SecurityCenter_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Install-Monitoring-Agent-on-Machines' where policyId='Azure_Install_monitoring_agent_version-1_SecurityCenter_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Use-a-Vulnerability-Assessment-Solution-to-Remediate-Vulnerabilities' where policyId='Azure_Remediate_vulnerabilities_version-1_SecurityCenter_virtualmachine';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Configure-Email-in-SQL-Server-Data-Security-Settings' where policyId='Azure_SQLServerDataSecuritySettings_version-1_ConfigureEmailInDataSecuritySettings_sqlserver';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Configure-Additional-E-mail-Address-in-MS-Defender' where policyId='Configure_email_in_ms_defender';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-App-Service-Web-App-Authentication' where policyId='Enable_Authentication_For_WebApp';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Log-Alert-for-Create/Update-MySQL-DB' where policyId='Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-log-Alert-for-Create/Update-PostgreSQL-DB' where policyId='Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-log-Alert-for-Create/Update-Load-Balancer' where policyId='Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-log-Alert-for-Create/Update-Virtual-Machine' where policyId='Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-log-Alert-for-Deallocate-VM-Event' where policyId='Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-log-Alert-for-Load-Balancer' where policyId='Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-log-Alert-for-Network-Security-Group' where policyId='Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-log-Alert-for-Account-Delete-Network-Security-Group-Rule' where policyId='Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Log-Alert-for-Delete-Storage-Account' where policyId='Enable_Azure_Account_Delete_Storage_Account_Event_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Log-Alert-for-Account-Delete-VM' where policyId='Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Log-Alert-for-Delete-VM' where policyId='Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-log-Alert-for-Rename-SQL-DB' where policyId='Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-log-Alert-for-Create/Update-Security-Solution' where policyId='Enable_Azure_Account_Delete_Security_Solution_Event_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Log-Alert-for-Update-Key-Vault-Activity' where policyId='Enable_Azure_Account_Update_KeyVault_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Log-Alert-for-Update-Security-Policy' where policyId='Enable_Azure_Account_Update_SecurityPolicy_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Immutable-Blob-Storage' where policyId='Enable_Azure_BlobContainer_Immutability';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#enable-log-Alert-for-Create/Update-Storage-Account' where policyId='Enable_Azure_Create_Update_Storage_Account_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Configure-Mandatory-Categories-in-Diagnostics-Setting' where policyId='Enable_Azure_DiagnosticSettings_Mandatory_Tags';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Incoming-Client-Certificates-for-Function-App' where policyId='Enable_Client_Certificate_Function_App';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Client-Certificate-for-Web-Applications' where policyId='Enable_Client_Certificate_for_webApp';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-AKS-Cluster-Monitoring' where policyId='Enable_Cluster_Monitoring_for_kubernetes';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Log-Alert-for-Create/Update-Delete-SQL-Server-Firewall-Rule' where policyId='Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Periodic-Recurring-Scans-in-SQL-Server-Vulnerability-Assessment' where policyId='Enable_Vulnerability_Assessment_Periodic_Recurring_Scans';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Auto-Provisioning-Policy-for-Defender-Log-Analytics-Agent' where policyId='Enable_auto_provisioning_of_log_analytics_agent';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Delete-Protection-for-the-Key-Vault' where policyId='Enable_keyvault_delete_protection';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Configure-Latest-Minimum-TLS-Version-for-Storage-Account' where policyId='Enable_latest_TLS_version';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-RBAC-for-Azure-Kubernetes-Services' where policyId='Enable_rbac_for_azure_kubernetes';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Soft-Delete-for-Blob-Storage' where policyId='Enable_soft_delete_for_Blob_storage';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Transparent-Data-Encryption-for-SQL-Database' where policyId='Enable_transparent_data_encryption_for_sql_db';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Active-Directory-on-Application-Services' where policyId='Ensure_Active_Directory_Web_App';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Redirect-All-Web-Application-Traffic-from-HTTP-to-HTTPS' where policyId='Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Configure-the-Latest-TLS-Version-for-WebApp' where policyId='Ensure_Web_App_latest_TLS_version';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Configure-Network-Security-Group-Flow-Log-Retention-Period-to-More-Than-90-Days' where policyId='Network_Security_Group_Flow_Log_retention_more_than_90_days';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Set-all-Users-Option-to-Owner-in-Email-Notifications-for-MS-Defender' where policyId='Set_all_users_to_owner_email_notifications';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Set-the-Severity-of-the-Notification-Alerts-in-MS-Defender-to-High' where policyId='Set_notify_alerts_severity_to_high';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Diagnostic-Logs-for-Azure-Logic-Apps-Workflows' where policyId='Workflows_DiagnlsticLogs_version-1_WDR_workflows';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Trusted-Microsoft-Services-to-Access-Storage-Account' where policyId='trusted_ms_services_access_storage_account';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Log-Alert-for-MySQL-Database' where policyId='Enable_Azure_Account_Delete_MySQLDatabase_log_alert';
update cf_PolicyTable set resolutionUrl="https://paladincloud.io/docs/azure-policy/#Enable-Vulnerability-Assessment-(VA)-Setting-'Also-Send-Email-Notifications-to-Admins-and-Subscription-Owners'" where policyId="Enable_Email_Subscription_Admin";
update cf_PolicyTable set resolutionUrl="https://paladincloud.io/docs/azure-policy/#Enable-Azure-Defender-for-SQL-Database" where policyId="Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing";
update cf_PolicyTable set resolutionUrl="https://paladincloud.io/docs/azure-policy/#Enable-log-Alert-for-Delete-Policy-Assignment" where policyId="Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert";
update cf_PolicyTable set resolutionUrl="https://paladincloud.io/docs/azure-policy/#Enable-log-Alert-for-Create/Update-Security-Solution" where policyId="Enable_Azure_Account_Security_Solution_log_alert";
update cf_PolicyTable set resolutionUrl="https://paladincloud.io/docs/azure-policy/#Secure-Your-SQL-Database-with-Transparent-Data-Encryption-(TDE)" where policyId="Enable_transparent_data_encryption_for_sql_db";
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Delete-Unused-Scale-Set' where policyId='remove_unused_scale_set';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Delete-Unused-VM-Disk' where policyId='remove_unused_vm_disk';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Delete-Unused-Load-Balancer' where policyId='remove_unused_load_balancer';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Log-Alert-for-Create/Update-Network-Security-Group' where policyId='Azure_Create_Network_Security_Group_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Log-Alert-for-Create/Update-SQL-DB' where policyId='Enable_Create_or_Update_SQL_Database_Log_Alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/azure-policy/#Enable-Log-Alert-for-PostgreSQL-DB' where policyId='Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert';
update cf_PolicyTable set resolutionUrl='https://paladincloud.io/docs/aws-policy/#articleTOC_12' where policyId='SGWithAnywhereAccess_version-1_SgWithSshPort22OpenToInternetAccess_sg';

update cf_PolicyParams set paramValue='paladin-cloud-trail' where policyId='Centralized_CloudTrail_version-1_Centralized_Cloudtrail_account' and paramKey='inputCloudTrailName';
update cf_PolicyParams set paramValue='paladin-cloudfront-bucket' where policyId='CloudFront_AccessLogs_version-1_CloudFront_AccessLogs_cloudfront' and paramKey='accessLogBucketName';
update cf_PolicyParams set paramValue='paladin-appelb-bucket' where policyId='ELB_Access_Logs_version-1_AppLB_Access_Logs_appelb' and paramKey='accessLogBucketName';
update cf_PolicyParams set paramValue='paladin-classicelb-bucket' where policyId='ELB_Access_Logs_version-1_ClassicLB_Access_Logs_classicelb' and paramKey='accessLogBucketName';
update cf_PolicyParams set paramValue='paladin-s3-region' where policyId='S3AccessLogsRule_version-1_S3AccessLogsRule_s3' and paramKey='accessLogsEnabledRegions';
update cf_PolicyTable set policyDesc="EC2 instances are considered underutilized when there is low utilization for 14 consecutive days, CPU usage is below 10% for four days, and network usage is under 5 MB for four days. Downsizing unused EC2 instances can result in cost savings, improved performance, and enhanced scalability. Paying only for necessary resources frees up CPU, memory, and storage, making other apps run better and using resources more efficiently" where policyId="LowUtilizationAmazonEC2InstancesRule_version-1_LowUtilizationAmazonEC2InstancesRule_ec2";

UPDATE cf_PolicyTable SET policyDisplayName = 'Configure \'Send Scan Report to\' within Vulnerability Assessment under SQL Server' WHERE policyId = 'Send_Scan_Reports_Should_Be_Configured';
UPDATE cf_PolicyTable SET policyDisplayName = 'Delete Unused Scale Set' WHERE policyId = 'remove_unused_scale_set';
UPDATE cf_PolicyTable SET policyDisplayName = 'Delete Unused VM Disk' WHERE policyId = 'remove_unused_vm_disk';

UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId = 'AWSVMScannedByTenable';
UPDATE cf_PolicyTable SET category='security' WHERE policyId = 'Enable_Cloud_Asset_Inventory';


insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('Azure_Check_Public_Access_For_Storage_Account','fixKey','storage-account-public-access-auto-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('UnrestrictedSqlDatabaseAccessRule_version-1','fixKey','unrestricted-sql-access-auto-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','fixKey','public-access-nsg-auto-fix');

update cf_PolicyTable set fixType='silent', autoFixAvailable='true', autoFixEnabled = CASE WHEN autoFixEnabled='false' THEN 'false' WHEN autoFixEnabled='true' THEN 'true' ELSE 'false' END
 where policyId in ('Azure_Check_Public_Access_For_Storage_Account','Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','UnrestrictedSqlDatabaseAccessRule_version-1');

insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','fixKey','vpc-firewall-port-access-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('VPC_UnCommon_ports_should_not_be_publicly_accessible','fixKey','vpc-firewall-port-access-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','fixKey','vpc-firewall-port-access-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('VPC_firewall_FTP_port_should_not_be_publicly_accessible','fixKey','vpc-firewall-port-access-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('VPC_firewall_ICMP_port_should_not_be_publicly_accessible','fixKey','vpc-firewall-port-access-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','fixKey','vpc-firewall-port-access-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','fixKey','vpc-firewall-port-access-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','fixKey','vpc-firewall-port-access-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('VPC_firewall_RPC_port_should_not_be_publicly_accessible','fixKey','vpc-firewall-port-access-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('VPC_firewall_SMTP_port_should_not_be_publicly_accessible','fixKey','vpc-firewall-port-access-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','fixKey','vpc-firewall-port-access-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','fixKey','vpc-firewall-port-access-fix');
insert ignore into cf_PolicyParams (policyID,paramKey,paramValue) values ('VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','fixKey','vpc-firewall-port-access-fix');

update cf_PolicyTable set fixType='silent', autoFixAvailable='true', autoFixEnabled= CASE WHEN autoFixEnabled='false' THEN 'false' WHEN autoFixEnabled='true' THEN 'true' ELSE 'false' END
 where policyId in ('VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','VPC_UnCommon_ports_should_not_be_publicly_accessible','VPC_firewall_DNS_port_53_should_not_be_publicly_accessible',
'VPC_firewall_FTP_port_should_not_be_publicly_accessible','VPC_firewall_ICMP_port_should_not_be_publicly_accessible','VPC_firewall_MYSQL_port_should_not_be_publicly_accessible',
'VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','VPC_firewall_RPC_port_should_not_be_publicly_accessible',
'VPC_firewall_SMTP_port_should_not_be_publicly_accessible','VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible',
'VPC_firewall_SSH_port_22_should_not_be_publicly_accessible');

UPDATE cf_PolicyTable SET targetType='subscription' where policyId IN ('Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing','Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing','Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing');

INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing','name','AppServices','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing','pricingTier','Standard','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing','name','SqlDatabases','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing','pricingTier','Standard','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing','name','VirtualMachines','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing','pricingTier','Standard','','false','false','false','','');

INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('deny_public_access_to_rdp_Port_3389','policyKey','check-for-security-group-global-access','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('deny_public_access_to_rdp_Port_3389','cidrIp','0.0.0.0/0','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('deny_public_access_to_rdp_Port_3389','esSgRulesUrl','/aws_sg/sg_rules/_search','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('deny_public_access_to_rdp_Port_3389','portToCheck','3389','','false','false','false','','');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('deny_public_access_to_rdp_Port_3389','cidripv6','::/0','','false','false','false','','');

ALTER TABLE cf_PolicyTable MODIFY `policyDisplayName` varchar(150) COLLATE utf8_bin DEFAULT NULL;
update cf_PolicyTable set policyDesc='Security groups for inbound rules that allow unrestricted access (i.e. 0.0.0.0/0 or ::/0) on TCP port 3389 and restrict the access to trusted IP addresses or IP ranges only in order to implement the Principle of Least Privilege (POLP) and reduce the attack surface.' where policyId='deny_public_access_to_rdp_Port_3389';
UPDATE cf_PolicyTable SET policyDisplayName = 'Enable Vulnerability Assessment (VA) Setting Also Send email Notifications to Admins and Subscription' WHERE policyId ='Enable_Email_Subscription_Admin';
UPDATE cf_PolicyTable SET policyDisplayName = 'Remove Inactive IAM users after n days' WHERE policyId ='CheckInactiveIamUser_version-1_CheckInactiveIamUser_iamuser';

UPDATE cf_PolicyParams SET paramValue = 'check-for-disk-encryption' WHERE policyID='Enable_Encryption_for_Unattached_Disk_Volumes' and paramKey='policyKey';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AWS_account_security_hub_exists_version-1_enable_security_hub_account';
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId IN ('AWSVMScannedByTenable','Access_Through_Internet_version-1_AIE_virtualmachine','AwsPublicAccessDefaultSecurityGroup_version-1_AwsPublicAccessDefaultSecurityGroup_sg','Aws_AMI_encryption_version-1_aws_enable_encryption_ami','Check_MFA_RootUSer_version-1_Check_MFA_RootUser_account','CloudTrailLogsEncryptedByKMS_version-1_EnableKMSEncryption_cloudtrail','Deny_public_ip_for_sql','Disable_Remote_Debugging_For_WebApp','Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2','Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','EksSgInboundTrafficValidation_version-1_SgInboundTrafficValidation_eks','Enable_Authentication_For_WebApp','Enable_Client_Certificate_for_webApp','Enable_Cloud_Asset_Inventory','Enable_Confidential_Computing_for_Compute_Instance','Enable_Uniform_Bucket_Level_Access','Encrypt_App_Layer_secrets_for_GKE_Cluster','Enforce_Separation_Of_Duties_For_KMS_Roles','Ensure_clusters_created_with_pvt_endpoints','GCP_DataProc_CMK_Encryption','GCP_VM_Instance_Shielded_Config','GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','GCP_Virtual_Machine_public_access_version-1_Rule','GCP_bigquery_table_encryption_cmks_rule','IamPasswordPolicy_version-1_IamPasswordPolicy_account','S3BucketEncryption_version-1_S3BucketWithoutEncryption_s3','Use_CMK_to_encrypt_OS_and_Data_disk','trusted_ms_services_access_storage_account');
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId IN ('AWS_CloudTrail_Global_Services_version-1_Enable_CloudTrail_Global_Services_cloudtrail','AWS_ElasticSearch_Domain_At_Rest_Encryption_version-1_ElasticSearchDomainAtRestEncryption','Attached-EBS-volumes-are-encrypted_version-1_Attached_EBS_volumes_should_be_encrypted','Aws_EFS_should_be_encrypted_version-1_aws_enable_encryption_efs','Aws_EKS_secrets_should_be_encrypted_version-1_aws_enable_secret_encryption_eks','Aws_dms_should_not_be_publicly_accessible_version-1_aws_public_access_dms','Azure_Check_Public_Access_For_Storage_Account','Azure_Enable_Encryption_for_Boot_Disk_Volumes_version-1_virtualmachine','Azure_Enable_Network_Security_for_RPC','Azure_Enable_Network_Security_for_UDP','Cloud_Storage_should_not_be_public','CriticalVMVulnerabilitiesScannedByTenable','Deny_Azure_KeyVault_Admin_Privileges','Deny_access_to_Kubernate_Engine_cluster','Disable_Alpha_Cluster','Disable_Basic_Authentication','Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2','Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2','Enable_PostgreSQL_Server_In_Transit_Encryption','GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort22_networkacl','NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort3389_networkacl','RdsSnapshotWithPublicAccess_version-1_RdsSnapshotWithPublicAccess_rdssnapshot','RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg','SGWithAnywhereAccess_version-1_Sg_with_redis_port_6379_open_to_internet_access','ServiceAccountPrivilegesRule_version-1_UnapprovedServiceAccountAccess_iamuser','VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','VPC_firewall_RPC_port_should_not_be_publicly_accessible');
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId IN ('AWS_EMR_Clusters_Enabled_Encryption_version-1_Enable_Amazon_EMR_clusters_encryption','AWS_ElastiCache_Clusters_Enabled_Encryption_version-1_Enable_CloudTrail_Global_Services_cloudtrail','AWS_ElasticSearch_Domain_Node_to_Node_Encryption_version-1_ElasticSearchDomainNodeToNodeEncryption','AwsAsgInactiveSecurityGroup_version-1_AwsAsgInactiveSecurityGroup_asg','AwsClassicELBListenerSecurity_version-1_AwsListenerSecurity_classicelb','Aws_DocumentDB_should_be_encrypted_version-1_aws_enable_cluster_encryption_documentdb','Aws_DynamoDB_should_use_aws_managed_cmk_for_sse_version-1_aws_managed_cmk_for_sse_dynamodb','Aws_athena_query_results_should_be_encrypted_version-1_aws_enable_query_results_encryption_awsathena','Aws_comprehend_job_results_should_be_encrypted_version-1_aws_enable_job_results_encryption_awscomprehend','Aws_dax_should_be_encrypted_version-1_aws_enable_encryption_dax','Aws_dms_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_dms','Azure_Close_management_ports_version-1_SecurityCenter_virtualmachine','Azure_Enable_Network_Security_for_FTP','Azure_Enable_Network_Security_for_SQLSERVER','Azure_Enable_Network_Security_for_SSH','Azure_Encryption_for_Data_in_RedisCache','Azure_SSH_Authentication_Type_version-1_SSH_virtualmachine','Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','Azure_policies-Disk_Encryption_version-1_DE_virtualmachine','Cloud_Storage_should_be_encrypted_with_CMK','EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole','EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2','EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','EbsSnapShot_version-1_EbsSnapShot_snapshot','Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2','Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2','Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2','Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2','ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','Enable_Encryption_for_Unattached_Disk_Volumes','Enable_Network_Security_for_SQLSERVER','Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','Encrypt_GKE_Cluster_Node_with_CMK','GCP_PubSub_CMK_Encryption','GCP_bigquery_dataset_public_access_rule','GCP_cloud_sql_encryption_cmks_rule','IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole','Network_Security_Group_Flow_Log_retention_more_than_90_days','SGWithAnywhereAccess_version-1_Sg_with_memcached_port_11211_open_to_internet_access','SQL_TDE_Encryption_version-1_TPS_sqlserver','SQS_Public_Access_Rule_version-1_SQS_Public_access_rule_sqs','UnrestrictedSqlDatabaseAccessRule_version-1','Unrestricted_MySQL_Database_Access','VPC_UnCommon_ports_should_not_be_publicly_accessible','VPC_firewall_FTP_port_should_not_be_publicly_accessible','VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','VPC_firewall_SMTP_port_should_not_be_publicly_accessible','VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','VPC_firewall_SSH_port_22_should_not_be_publicly_accessible');
UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId IN ('AWSRdsUnencryptedPublicInstances_version-1_AwsRdsUnencryptedPublicAccess_rdsdb','AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account','AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account','Aws_appflow_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_appflow','Check_for_Unrestricted_PostgreSQL_Database_Access','Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2','ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','GCP_kms_public_access_rule','S3BucketAllowHTTPRequest_version-1_S3BucketAllowHTTPRequest_s3','S3ObjectLevelReadLogging_version-1_ObjectLevelReadLogging_s3','S3ObjectLevelWriteLogging_version-1_ObjectLevelWriteLogging_s3','UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole','Unrestricted_Oracle_Database_Access','Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','VPC_firewall_ICMP_port_should_not_be_publicly_accessible','VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','cloudfront-check-for-unauthorized-html_version-1_Cloudfront_Unauthorized_HTML_Content_cloudfront','core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser');
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId IN ('AWS_ACM_Certificate_Expired_version-1_AWS_ACM_Certificate_Expired','AWS_rootaccount_hardware_MFA_version-1_enable_harware_mfa_account','AwsElbV2ListenerSecurity_version-1_AwsListenerSecurity_appelb','Aws_Attached_EBS_volumes_are_custom_kms_key_encrypted_version-1_Attached_EBS_volumes_should_be_custom_kms_key_encrypted','Aws_efs_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_efs','Aws_iam_access_analyser_findings_version-1_aws_active_findings_accessanalyzer','AzureSQLServerAuthenticationSettings_version-1_EnableAzureADAuthentication_sqlserver','Azure_Enable_Adaptive_Application_controls_version-1_SecurityCenter_virtualmachine','Azure_Resolve_monitoring_agent_version-1_SecurityCenter_virtualmachine','Configure_email_in_ms_defender','Enable_Automated_backups_for_sql_database','Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing','Enable_Compute_Engine_using_instance_level_SSH_keys','Enable_Email_Subscription_Admin','Enable_keyvault_delete_protection','Enable_latest_TLS_version','Enable_pgAudit_Database_Flag_for_Postgresql_Instance','Enable_skip_show_database_for_MySQL_Server_DB_Instances','Enable_soft_delete_for_Blob_storage','Enforce_Separate_Service_Account_Duties_for_Users','Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','Ensure_Active_Directory_Web_App','Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','Ensure_Web_App_latest_TLS_version','Ensure_cross_DB_ownership_flag_disabled_for_SQL','GCP_Virtual_Machine_2FA_Rule','IamAccessKeyRotatedInEvery90Days_version-1_IamAccessKeyRotatedInEvery90Days_iamuser','NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole','RDSDBEnableAutoMinorVersionUpgrade_version-1_EnableAutoMinorVersionUpgrade_rdsdb','Sensitive_Data_SQL_version-1_SDS_sqldatabase','Set_all_users_to_owner_email_notifications','Set_notify_alerts_severity_to_high','System_Updates_version-1_SSU_virtualmachine');
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId IN ('AWS_ElasticSearch_Domain_Encryption_Using_CMK_KMS_Key_version-1_Enable_CloudTrail_Global_Services_cloudtrail','AWS_IAM_Customer_Mnged_Policy_With_Admin_Previlege_version-1_Admin_Previlege_iampolicies','AWS_IAM_Role_Full_Admin_Privilege_version-1_Admin_Previlege_iamrole','AWS_IAM_User_Full_Admin_Privilege_version-1_Admin_Privilege_iamuser','AWS_Support_Access_Role_version-1_Support_Access_account','AWS_eks_cluster_logs_enabled_version-1_enable_cluster_logs_eks','AWS_eks_cluster_public_access_disabled_version-1_disable_cluster_public_access_eks','AWS_eks_cluster_version_upgrade_version-1_update_cluster_version_eks','AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account','AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account','AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account','AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account','AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account','AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account','AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account','AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account','AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account','AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account','AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account','AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account','AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_appelb','AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_classicelb','Aws_DocumentDB_should_be_encrypted_with_kms_cmks_version-1_aws_enable_cluster_kms_cmks_encryption_documentdb','AzureAuditNetworkAccessToStorageAccounts_version-1_ConfigureNetworkRulesOnStorageAccount_storageaccount','AzureAuditStorageVnetIntegration_version-1_AuditStorageVnetIntegration_storageaccount','AzureAuditTransferToStorageAccounts_version-1_EnableSecureTransferToStorageAccounts_storageaccount','Azure_Create_Network_Security_Group_log_alert','Azure_Enable_CMK_Encryption_For_Storage_Account_version-1_storageaccount','Azure_Enable_Database_Tier_Customer_Managed_Key','Azure_Enable_Email_Alerts_for_SQL_Threat_Detection_Service_version-1_sqldatabase','Azure_Enable_Network_Security_version-1_SecurityCenter_virtualmachine','Azure_Enable_Web_Tier_Customer_Managed_Key','Azure_Enable_key_Vault_Customer_Managed_Key','Azure_Just_in_time_network_access_version-1_SecurityCenter_virtualmachine','Azure_KeyVault_Key_ExpiryDate','Azure_KeyVault_Secret_ExpiryDate','Azure_Threat_Detection_on_SQL_Server','Azure_Virtual_Machine_Endpoint_Protection','Azure_harden-NSGs_internet_version-1_SecurityCenter_virtualmachine','Centralized_CloudTrail_version-1_Centralized_Cloudtrail_account','Deny_Admin_Privilege_Service_Account','Deny_Default_Network_Access_Rule_for_Storage_Accounts','Deny_usage_of_default_service_accounts_for_instances','Disable_3625_Flag_for_SQL_Server_DB_Instances','Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','Ec2WithSeverityVulnerability_version-1_Ec2WithS4Vulnerability_ec2','Enable_Azure_Account_Create_Policy_Assignment_log_alert','Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing','Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing','Enable_Azure_DiagnosticSettings_Mandatory_Tags','Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','Enable_Log_disconnections_for_Postgres_Server_DB_Instances','Enable_log_hostname_for_Postgres_Server_DB_Instances','Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','GuardDutyFindingsExists_version-1_GuardDutyFindingsExists_ec2','HighVMVulnerabilitiesScannedByTenable','IP_Forwarding_version-1_IPF_virtualmachine','IP_forwarding_for_Instances','LambdaFunWithAdmin-OrIamPrivileges_version-1_LambdaFunWithAdminOrIamPrivileges_lambda','Missing_Endpoint_Protection_version-1_MEP_virtualmachine','Remove_custom_owner_roles','Remove_user_options_for_SQLServer','S3HostsWebsiteRule_version-1_S3HostsWebsiteRule_s3','S3MFADeleteEnabled_version-1_MFADeleteEnabled_s3','SQL_Auditing_Retention_version-1_SAR_sqlserver','SQL_Vulnerability_Assessment_version-1_SVA_sqlserver','Subnet_NSG_rule_version-1_SNR_subnets','Vaults_DiagnosticLogs_version-1_VDR_vaults','VpcFlowLogsEnabled_version-1_VpcFlowLogsEnabled_vpc','kms_keys_rotation_period_within_90_days');
UPDATE cf_PolicyTable SET severity ='low' WHERE policyId IN ('Define_Authorised_IP_for_kubernetes','Disable_Kubernetes_Web_UI','Disable_kubernetes_DashBoard','Enable_Addon_policies_for_AKS','Enable_Log_connections_for_Postgres_Server_DB_Instances','Enable_private_cluster_for_AKS','Ensure_web_app_using_latest_version_of_the_HTTP_protocol');
UPDATE cf_PolicyTable SET severity ='medium' WHERE policyId IN ('AWSKMSKeyRotationEnabled_version-1_KeyRotationEnabled_kms','AWS_account_security_hub_exists_version-1_enable_security_hub_account','AWS_user_permissions_without_group_version-1_user_policy_via_group_iamuser','Adaptive_App_Control_version-1_AAC_virtualmachine','Auditing_Advanced_Data_Security_version-1_SADS_sqlserver','Avoid_Service_roles_to_IAM_user_at_project_level','Check_permission_of_Ingress_Setting_of_GCP_cloud_Function','CloudTrailLogFileValidation_version-1_EnableLogFileValidation_cloudtrail','Default_Network_should_Not_Exist_in_a_Project','Disable_Legacy_Authorization','Disable_Local_infile_for_MySQL_Server_DB_Instances','Disable_Log_min_duration_statement_for_PostgreSQL','Disable_User_Managed_Service_Account_Key_Creation','Disable_Web_App_traffic_to_plain_Ftp','Disable_client_certificate_Authentication_for_Cluster','Enable_Https_For_Cloudfunc','Enable_Quic_Protocol_For_Load_Balancer','Enable_osLogin_for_a_project','Expired_AWS_IAMCertificate_version-1_Expired_IAMCertificate_iamcertificate','GCP_Cloud_Function_not_enabled_with_VPC_connector','IamUserWithMultipleAccessKey_version-1_IAMUserShouldUseSingleKey_iamuser','Legacy_Subnet_should_Not_Exist_in_a_Project','MediumVMVulnerabilitiesScannedByTenable','Namespaces_DiagnosticLogs_version-1_NDL_namespaces','RemoveRootUserAccessKey_version-1_RemoveRootUserAccessKey_account','Rotate_Google_Cloud_API_Keys','Secure_SSL_Cipher_Suites','TLS_Version_MySQL_Flexible_Server','Unauthorized-Cloudfront-Distribution_version-1_Unauthorized-Cloudfront-Distribution_cloudfront');

UPDATE cf_PolicyTable SET policyDisplayName = 'Enable Transparent Data Encryption for SQL Database' WHERE policyId ='Enable_transparent_data_encryption_for_sql_db';
UPDATE cf_PolicyTable SET policyDisplayName = 'Enable HTTPS for Google Cloud Load Balancers' WHERE policyId ='Enable_HTTPS_For_LoadBalancer';
UPDATE cf_PolicyTable SET severity ='high' WHERE policyId = 'AWS_account_security_hub_exists_version-1_enable_security_hub_account';

DELETE IGNORE FROM  cf_PolicyTable  where policyId='AWSRdsUnencryptedPublicInstances_version-1_AwsRdsUnencryptedPublicAccess_rdsdb';
DELETE IGNORE FROM  cf_PolicyParams where policyId='AWSRdsUnencryptedPublicInstances_version-1_AwsRdsUnencryptedPublicAccess_rdsdb';
INSERT IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWSRdsPublicInstances_version-1_AwsRdsPublicAccess_rdsdb','aws_rds_public_access','AwsRdsPublicAccess','Deny Public Access to RDS Database','To protect your RDS database instances from unauthorized access and mitigate security risks, disable the Publicly Accessible flag and update the associated VPC security group to disallow unrestricted access (0.0.0.0/0). This will prevent malicious activities such as brute force attacks, PostgreSQL injections, or DoS/DDoS attacks.','Ensure to terminate any publicly accessible rds instances or update the instance with storage encryption enabled.','https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-RDS-Database','rdsdb','aws','AwsRdsPublicAccess','{"params":[{"key":"policyKey","value":"check-for-rds-db-public-access","encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"policyCategory"}],"environmentVariables":[],"policyId":"AWSRdsPublicInstances_version-1_AwsRdsPublicAccess_rdsdb","autofix":false,"alexaKeyword":"AwsRdsPublicAccess","policyRestUrl":"","targetType":"rdsdb","pac_ds":"aws","assetGroup":"aws","policyUUID":"aws_rds_public_access","policyType":"ManagePolicy"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_rds_public_access','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'admin@paladincloud.io','2022-10-31','2023-10-31','ENABLED');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWSRdsPublicInstances_version-1_AwsRdsPublicAccess_rdsdb','policyKey','check-for-rds-db-public-access','','false','false','false','','');
INSERT IGNORE INTO cf_PolicyTable (policyId, policyUUID, policyName, policyDisplayName, policyDesc, resolution, resolutionUrl, targetType, assetGroup, alexaKeyword, policyParams, policyFrequency, policyExecutable, policyRestUrl, policyType, policyArn, severity, category, autoFixAvailable, autoFixEnabled, allowList, waitingTime, maxEmailNotification, templateName, templateColumns, fixType, warningMailSubject, fixMailSubject, warningMessage, fixMessage, violationMessage, elapsedTime, userId, createdDate, modifiedDate, status) VALUES ('AWSRdsUnencrypted_version-1_AwsRdsUnencrypted','aws_enable_encryption_for_rds_instance','AwsRdsUnencrypted','Enable encryption for RDS instance','Amazon RDS encrypted DB instances use the industry standard AES-256 encryption algorithm to encrypt your data on the server that hosts your Amazon RDS DB instances. After your data is encrypted,Amazon RDS handles authentication of access and decryption of your data transparently with a minimal impact on performance.','Ensure to terminate any unencrypted rds instances.','https://paladincloud.io/docs/aws-policy/#Deny-Public-Access-to-RDS-Database','rdsdb','aws','AwsRdsUnencrypted','{"params":[{"key":"policyKey","value":"check-for-rds-db-unencrypted","encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"policyCategory"}],"environmentVariables":[],"policyId":"AWSRdsUnencrypted_version-1_AwsRdsUnencrypted","autofix":false,"alexaKeyword":"AwsRdsUnencrypted","policyRestUrl":"","targetType":"rdsdb","pac_ds":"aws","assetGroup":"aws","policyUUID":"aws_rds_unencrypted_rule","policyType":"ManagePolicy"}','0 0 1/1 * ? *','','','ManagePolicy','arn:aws:events:us-east-1:***REMOVED***:rule/aws_rds_unencrypted_rule','critical','security','false','false',NULL,24,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,24,'admin@paladincloud.io','2022-10-31','2023-10-31','ENABLED');
INSERT IGNORE INTO `cf_PolicyParams` (`policyID`, `paramKey`, `paramValue`, `defaultVal`, `isEdit`, `isMandatory`, `encrypt`, `displayName`, `description`) VALUES ('AWSRdsUnencrypted_version-1_AwsRdsUnencrypted','policyKey','check-for-rds-db-unencrypted','','false','false','false','','');

UPDATE cf_PolicyTable SET severity ='critical' WHERE policyId IN ('Enable_HTTPS_For_LoadBalancer','Enable_transparent_data_encryption_for_sql_db');
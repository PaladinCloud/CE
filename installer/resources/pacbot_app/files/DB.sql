/*
SQLyog Ultimate v12.09 (32 bit)
MySQL - 5.6.27-log : Database - pacmandata
*********************************************************************
*/


/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`pacmandata` /*!40100 DEFAULT CHARACTER SET utf8 COLLATE utf8_bin */;

USE `pacmandata`;

/*Table structure for table `ASGC_Issues` */

SET @region='$region';
SET @account='$account';
SET @eshost='$eshost';
SET @esport='$esport';
SET @LOGGING_ES_HOST_NAME='$LOGGING_ES_HOST_NAME';
SET @LOGGING_ES_PORT='$LOGGING_ES_PORT';
SET @ES_HOST_NAME='$ES_HOST_NAME';
SET @ES_PORT='$ES_PORT';
SET @ES_CLUSTER_NAME='$ES_CLUSTER_NAME';
SET @ES_PORT_ADMIN='$ES_PORT_ADMIN';
SET @ES_HEIMDALL_HOST_NAME='$ES_HEIMDALL_HOST_NAME';
SET @ES_HEIMDALL_PORT='$ES_HEIMDALL_PORT';
SET @ES_HEIMDALL_CLUSTER_NAME='$ES_HEIMDALL_CLUSTER_NAME';
SET @ES_HEIMDALL_PORT_ADMIN='$ES_HEIMDALL_PORT_ADMIN';
SET @ES_UPDATE_HOST='$ES_UPDATE_HOST';
SET @ES_UPDATE_PORT='$ES_UPDATE_PORT';
SET @ES_UPDATE_CLUSTER_NAME='$ES_UPDATE_CLUSTER_NAME';
SET @REDSHIFT_URL='$REDSHIFT_URL';
SET @REDSHIFT_USER_NAME='$REDSHIFT_USER_NAME';
SET @REDSHIFT_PASSWORD='$REDSHIFT_PASSWORD';
SET @PACMAN_HOST_NAME='$PACMAN_HOST_NAME';
SET @RDS_URL='$RDS_URL';
SET @RDS_USERNAME='$RDS_USERNAME';
SET @RDS_PASSWORD='$RDS_PASSWORD';
SET @CURRENT_RELEASE='$CURRENT_RELEASE';
SET @JOB_BUCKET_REGION='$JOB_BUCKET_REGION';
SET @RULE_JOB_BUCKET_NAME='$RULE_JOB_BUCKET_NAME';
SET @JOB_LAMBDA_REGION='$JOB_LAMBDA_REGION';
SET @JOB_FUNCTION_NAME='$JOB_FUNCTION_NAME';
SET @JOB_FUNCTION_ARN='$JOB_FUNCTION_ARN';
SET @RULE_BUCKET_REGION='$RULE_BUCKET_REGION';
SET @RULE_LAMBDA_REGION='$RULE_LAMBDA_REGION';
SET @RULE_FUNCTION_NAME='$RULE_FUNCTION_NAME';
SET @RULE_FUNCTION_ARN='$RULE_FUNCTION_ARN';
SET @CLOUD_INSIGHTS_TOKEN_URL='$CLOUD_INSIGHTS_TOKEN_URL';
SET @CLOUD_INSIGHTS_COST_URL='$CLOUD_INSIGHTS_COST_URL';
SET @SVC_CORP_USER_ID='$SVC_CORP_USER_ID';
SET @SVC_CORP_PASSWORD='$SVC_CORP_PASSWORD';
SET @CERTIFICATE_FEATURE_ENABLED='$CERTIFICATE_FEATURE_ENABLED';
SET @PATCHING_FEATURE_ENABLED='$PATCHING_FEATURE_ENABLED';
SET @VULNERABILITY_FEATURE_ENABLED='$VULNERABILITY_FEATURE_ENABLED';
SET @MAIL_SERVER='$MAIL_SERVER';
SET @PACMAN_S3='$PACMAN_S3';
SET @DATA_IN_DIR='$DATA_IN_DIR';
SET @DATA_BKP_DIR='$DATA_BKP_DIR';
SET @PAC_ROLE='$PAC_ROLE';
SET @BASE_REGION='$BASE_REGION';
SET @DATA_IN_S3='$DATA_IN_S3';
SET @BASE_ACCOUNT='$BASE_ACCOUNT';
SET @PAC_RO_ROLE='$PAC_RO_ROLE';
SET @MAIL_SERVER_PORT='$MAIL_SERVER_PORT';
SET @MAIL_PROTOCOL='$MAIL_PROTOCOL';
SET @MAIL_SERVER_USER='$MAIL_SERVER_USER';
SET @MAIL_SERVER_PWD='$MAIL_SERVER_PWD';
SET @MAIL_SMTP_AUTH='$MAIL_SMTP_AUTH';
SET @MAIL_SMTP_SSL_ENABLE='$MAIL_SMTP_SSL_ENABLE';
SET @MAIL_SMTP_SSL_TEST_CONNECTION='$MAIL_SMTP_SSL_TEST_CONNECTION';
SET @PACMAN_LOGIN_USER_NAME='$PACMAN_LOGIN_USER_NAME';
SET @PACMAN_LOGIN_PASSWORD='$PACMAN_LOGIN_PASSWORD';
SET @CONFIG_CREDENTIALS='$CONFIG_CREDENTIALS';
SET @CONFIG_SERVICE_URL='$CONFIG_SERVICE_URL';
SET @PACBOT_AUTOFIX_RESOURCEOWNER_FALLBACK_MAILID='$PACBOT_AUTOFIX_RESOURCEOWNER_FALLBACK_MAILID';
SET @QUALYS_INFO='$QUALYS_INFO';
SET @QUALYS_API_URL='$QUALYS_API_URL';
SET @AZURE_CREDENTIALS='$AZURE_CREDENTIALS';
SET @GCP_CREDENTIALS='$GCP_CREDENTIALS';
SET @JOB_SCHEDULE_INTERVAL='$JOB_SCHEDULE_INTERVAL';
SET @JOB_SCHEDULE_INITIALDELAY='$JOB_SCHEDULE_INITIALDELAY';
SET @JOB_SCHEDULE_INITIALDELAY_SHIPPER='$JOB_SCHEDULE_INITIALDELAY_SHIPPER';
SET @JOB_SCHEDULE_INITIALDELAY_RULES='$JOB_SCHEDULE_INITIALDELAY_RULES';
SET @AZURE_EVENTBRIDGE_BUS_DETAILS='$AZURE_EVENTBRIDGE_BUS_DETAILS';
SET @GCP_EVENTBRIDGE_BUS_DETAILS='$GCP_EVENTBRIDGE_BUS_DETAILS';
SET @AWS_EVENTBRIDGE_BUS_DETAILS='$AWS_EVENTBRIDGE_BUS_DETAILS';
SET @AZURE_ENABLED='$AZURE_ENABLED';
SET @GCP_ENABLED='$GCP_ENABLED';
SET @JOB_SCHEDULER_NUMBER_OF_BATCHES='$JOB_SCHEDULER_NUMBER_OF_BATCHES';

CREATE TABLE IF NOT EXISTS `OmniSearch_Config` (
  `SEARCH_CATEGORY` varchar(100) COLLATE utf8_bin NOT NULL,
  `RESOURCE_TYPE` varchar(100) COLLATE utf8_bin NOT NULL,
  `REFINE_BY_FIELDS` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `RETURN_FIELDS` varchar(100) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `PacmanSubscriptions` */

CREATE TABLE IF NOT EXISTS `PacmanSubscriptions` (
  `subscriptionId` bigint(75) NOT NULL AUTO_INCREMENT,
  `emailId` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `subscriptionValue` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `createdDate` datetime DEFAULT NULL,
  `modifiedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`subscriptionId`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `Pacman_Asset_Config` */

CREATE TABLE IF NOT EXISTS `Pacman_Asset_Config` (
  `resourceId` varchar(75) COLLATE utf8_bin NOT NULL,
  `configType` varchar(75) COLLATE utf8_bin NOT NULL,
  `config` text COLLATE utf8_bin,
  `createdDate` datetime NOT NULL,
  PRIMARY KEY (`resourceId`,`configType`,`createdDate`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `cf_AssetGroupDetails` */

CREATE TABLE IF NOT EXISTS `cf_AssetGroupDetails` (
  `groupId` varchar(75) COLLATE utf8_bin NOT NULL DEFAULT '',
  `groupName` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `dataSource` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `displayName` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `groupType` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `createdBy` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `createdUser` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `createdDate` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `modifiedUser` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `modifiedDate` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `description` text COLLATE utf8_bin,
  `aliasQuery` text COLLATE utf8_bin,
  `isVisible` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`groupId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `cf_AssetGroupException` */

CREATE TABLE IF NOT EXISTS `cf_AssetGroupException` (
  `id_` bigint(20) NOT NULL AUTO_INCREMENT,
  `groupName` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `targetType` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `policyName` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `policyId` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `expiryDate` date DEFAULT NULL,
  `exceptionName` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `exceptionReason` varchar(2000) COLLATE utf8_bin DEFAULT NULL,
  `dataSource` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`id_`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `cf_AssetGroupOwnerDetails` */

CREATE TABLE IF NOT EXISTS `cf_AssetGroupOwnerDetails` (
  `ownerId` varchar(100) COLLATE utf8_bin NOT NULL,
  `ownnerName` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `assetGroupName` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `ownerEmailId` text COLLATE utf8_bin,
  PRIMARY KEY (`ownerId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `cf_AssetGroupTargetDetails` */

CREATE TABLE IF NOT EXISTS `cf_AssetGroupTargetDetails` (
  `id_` varchar(75) COLLATE utf8_bin NOT NULL DEFAULT '',
  `groupId` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `targetType` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `attributeName` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `attributeValue` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`id_`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `cf_AssetGroupUserRoles` */

CREATE TABLE IF NOT EXISTS `cf_AssetGroupUserRoles` (
  `agUserRoleId` varchar(75) COLLATE utf8_bin NOT NULL,
  `assetGroupName` varchar(75) COLLATE utf8_bin NOT NULL,
  `assetGroupRole` int(75) NOT NULL,
  PRIMARY KEY (`agUserRoleId`,`assetGroupName`,`assetGroupRole`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

CREATE TABLE IF NOT EXISTS `cf_Certificate` (
  `id_` bigint(20) NOT NULL,
  `domainName` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `certType` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `validFrom` datetime DEFAULT NULL,
  `validTo` datetime DEFAULT NULL,
  `application` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `environment` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `appContact` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `description` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `updatedDate` datetime DEFAULT NULL,
  `updatedBy` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `certStatus` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`id_`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;



/*Table structure for table `cf_Datasource` */

CREATE TABLE IF NOT EXISTS `cf_Datasource` (
  `dataSourceId` bigint(20) NOT NULL,
  `dataSourceName` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `dataSourceDesc` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `config` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `createdDate` date DEFAULT NULL,
  `modifiedDate` date DEFAULT NULL,
  PRIMARY KEY (`dataSourceId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `cf_Domain` */

CREATE TABLE IF NOT EXISTS `cf_Domain` (
  `domainName` varchar(75) COLLATE utf8_bin NOT NULL,
  `domainDesc` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `config` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `createdDate` date DEFAULT NULL,
  `modifiedDate` date DEFAULT NULL,
  `userId` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`domainName`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


/*Table structure for table `cf_JobScheduler` */

CREATE TABLE IF NOT EXISTS `cf_JobScheduler` (
  `jobId` varchar(75) COLLATE utf8_bin NOT NULL,
  `jobUUID` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `jobName` varchar(150) COLLATE utf8_bin DEFAULT NULL,
  `jobType` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `jobParams` text COLLATE utf8_bin,
  `jobFrequency` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `jobExecutable` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `jobArn` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `status` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `userId` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `createdDate` datetime DEFAULT NULL,
  `modifiedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`jobId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `cf_Jobs` */

CREATE TABLE IF NOT EXISTS `cf_Jobs` (
  `jobId` bigint(20) NOT NULL,
  `rulesetId` bigint(20) DEFAULT NULL,
  `cronExpression` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`jobId`),
  KEY `IX_6A2145F9` (`rulesetId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;



/*Table structure for table `cf_OwnerDetails` */

CREATE TABLE IF NOT EXISTS `cf_OwnerDetails` (
  `contactId` varchar(100) COLLATE utf8_bin NOT NULL,
  `ownerName` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `ownerEmail` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`contactId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


/*Table structure for table `cf_PatchStats_Kernel` */

CREATE TABLE IF NOT EXISTS `cf_PatchStats_Kernel` (
  `awsaccount` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `instanceid` varchar(75) COLLATE utf8_bin NOT NULL,
  `rectype` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `ipaddressaws` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `nametag` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `vpcid` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `ipaddressrhs` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `rhshostname` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `systemid` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `gid` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `group_` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `kernel` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `nopendingerratas` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `erratadetails` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `iscompliant` tinyint(4) DEFAULT NULL,
  `isregistered` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`instanceid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `cf_Policy` */

CREATE TABLE IF NOT EXISTS `cf_Policy` (
  `policyId` varchar(200) COLLATE utf8_bin NOT NULL,
  `policyName` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `policyDesc` text COLLATE utf8_bin,
  `resolution` longtext COLLATE utf8_bin,
  `policyUrl` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `policyVersion` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `status` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `userId` bigint(20) DEFAULT NULL,
  `createdDate` date DEFAULT NULL,
  `modifiedDate` date DEFAULT NULL,
  `resolutionUrl` varchar(500) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`policyId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


/*Table structure for table `cf_Rbac` */

CREATE TABLE IF NOT EXISTS `cf_Rbac` (
  `rbacId` bigint(20) NOT NULL,
  `rbacType` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `userOrGroupId` bigint(20) DEFAULT NULL,
  `applicationName` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `environmentName` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `stackName` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `roleName` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `createDate` datetime DEFAULT NULL,
  `modifiedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`rbacId`),
  KEY `IX_18DB1388` (`rbacType`,`userOrGroupId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


/*Table structure for table `cf_RemediationCriteria` */

CREATE TABLE IF NOT EXISTS `cf_RemediationCriteria` (
  `action` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `matchingString` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `subAction` varchar(200) COLLATE utf8_bin DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;




/*Table structure for table `cf_RuleInstance` */

CREATE TABLE IF NOT EXISTS `cf_RuleInstance` (
  `ruleId` varchar(200) COLLATE utf8_bin NOT NULL,
  `ruleUUID` varchar(200) COLLATE utf8_bin NOT NULL,
  `policyId` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `ruleName` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `targetType` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `assetGroup` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `alexaKeyword` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `ruleParams` longtext COLLATE utf8_bin,
  `ruleFrequency` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `ruleExecutable` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `ruleRestUrl` varchar(500) COLLATE utf8_bin DEFAULT NULL,
  `ruleType` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `ruleArn` varchar(150) COLLATE utf8_bin DEFAULT NULL,
  `status` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `userId` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `displayName` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `createdDate` date DEFAULT NULL,
  `modifiedDate` date DEFAULT NULL,
  `severity` varchar(20) COLLATE utf8_bin DEFAULT NULL,
  `category` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`ruleId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


/*Table structure for table `cf_SystemConfiguration` */

CREATE TABLE IF NOT EXISTS `cf_SystemConfiguration` (
  `id_` int(11) DEFAULT NULL,
  `environment` varchar(75) COLLATE utf8_bin NOT NULL,
  `keyname` varchar(75) COLLATE utf8_bin NOT NULL,
  `value` varchar(2000) COLLATE utf8_bin DEFAULT NULL,
  `createdDate` datetime DEFAULT NULL,
  `modifiedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`environment`,`keyname`),
  KEY `IX_7196BB48` (`environment`,`keyname`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `cf_Target` */

CREATE TABLE IF NOT EXISTS `cf_Target` (
  `targetName` varchar(75) COLLATE utf8_bin NOT NULL,
  `targetDesc` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `category` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `dataSourceName` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `targetConfig` text COLLATE utf8_bin,
  `status` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `userId` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  `endpoint` text COLLATE utf8_bin,
  `createdDate` date DEFAULT NULL,
  `modifiedDate` date DEFAULT NULL,
  `domain` varchar(75) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`targetName`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

DELIMITER $$
DROP PROCEDURE IF EXISTS alter_cf_target_table_add_display_name_if_not_exists $$
CREATE PROCEDURE alter_cf_target_table_add_display_name_if_not_exists()
BEGIN
IF NOT EXISTS( SELECT NULL
            FROM INFORMATION_SCHEMA.COLUMNS
           WHERE table_name = 'cf_Target'
             AND table_schema = 'pacmandata'
             AND column_name = 'displayName')  THEN



 ALTER TABLE `cf_Target` ADD `displayName` varchar(100) COLLATE utf8_bin DEFAULT NULL;



END IF;
END $$
DELIMITER ;
CALL alter_cf_target_table_add_display_name_if_not_exists();



/* deleting old data */
TRUNCATE TABLE cf_Target;

/*Table structure for table `cf_pac_updatable_fields` */

CREATE TABLE IF NOT EXISTS `cf_pac_updatable_fields` (
  `resourceType` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `displayFields` text COLLATE utf8_bin,
  `updatableFields` longtext COLLATE utf8_bin
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


/*Table structure for table `oauth_access_token` */

CREATE TABLE IF NOT EXISTS `oauth_access_token` (
  `token_id` varchar(255) DEFAULT NULL,
  `token` mediumblob,
  `authentication_id` varchar(255) NOT NULL,
  `user_name` varchar(255) DEFAULT NULL,
  `client_id` varchar(255) DEFAULT NULL,
  `authentication` mediumblob,
  `refresh_token` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`authentication_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `oauth_approvals` */

CREATE TABLE IF NOT EXISTS `oauth_approvals` (
  `userId` varchar(255) DEFAULT NULL,
  `clientId` varchar(255) DEFAULT NULL,
  `scope` varchar(255) DEFAULT NULL,
  `status` varchar(10) DEFAULT NULL,
  `expiresAt` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `lastModifiedAt` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `oauth_client_details` */

CREATE TABLE IF NOT EXISTS `oauth_client_details` (
  `client_id` varchar(255) NOT NULL,
  `resource_ids` varchar(255) DEFAULT NULL,
  `client_secret` varchar(255) DEFAULT NULL,
  `scope` varchar(255) DEFAULT NULL,
  `authorized_grant_types` varchar(255) DEFAULT NULL,
  `web_server_redirect_uri` varchar(255) DEFAULT NULL,
  `authorities` varchar(255) DEFAULT NULL,
  `access_token_validity` int(11) DEFAULT NULL,
  `refresh_token_validity` int(11) DEFAULT NULL,
  `additional_information` varchar(4096) DEFAULT NULL,
  `autoapprove` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`client_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `oauth_client_owner` */

CREATE TABLE IF NOT EXISTS `oauth_client_owner` (
  `clientId` varchar(75) COLLATE utf8_bin NOT NULL,
  `user` varchar(75) COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`clientId`,`user`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `oauth_client_token` */

CREATE TABLE IF NOT EXISTS `oauth_client_token` (
  `token_id` varchar(255) DEFAULT NULL,
  `token` mediumblob,
  `authentication_id` varchar(255) NOT NULL,
  `user_name` varchar(255) DEFAULT NULL,
  `client_id` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`authentication_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `oauth_code` */

CREATE TABLE IF NOT EXISTS `oauth_code` (
  `code` varchar(255) DEFAULT NULL,
  `authentication` mediumblob
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `oauth_refresh_token` */

CREATE TABLE IF NOT EXISTS `oauth_refresh_token` (
  `token_id` varchar(255) DEFAULT NULL,
  `token` mediumblob,
  `authentication` mediumblob
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `oauth_user` */

CREATE TABLE IF NOT EXISTS `oauth_user` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `user_id` varchar(75) DEFAULT NULL,
  `user_name` varchar(75) DEFAULT NULL,
  `first_name` varchar(75) DEFAULT NULL,
  `last_name` varchar(75) DEFAULT NULL,
  `email` varchar(100) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=340 DEFAULT CHARSET=latin1;

/*Table structure for table `pac_rule_engine_autofix_actions` */

CREATE TABLE IF NOT EXISTS `pac_rule_engine_autofix_actions` (
  `resourceId` varchar(100) COLLATE utf8_bin NOT NULL,
  `lastActionTime` datetime NOT NULL,
  `action` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`resourceId`,`lastActionTime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `pac_v2_projections` */

CREATE TABLE IF NOT EXISTS `pac_v2_projections` (
  `resourceType` varchar(100) COLLATE utf8_bin NOT NULL,
  `year` decimal(65,0) NOT NULL,
  `quarter` decimal(65,0) NOT NULL,
  `week` decimal(65,0) NOT NULL,
  `projection` bigint(65) DEFAULT NULL,
  PRIMARY KEY (`resourceType`,`year`,`quarter`,`week`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `pac_v2_ruleCategory_weightage` */

CREATE TABLE IF NOT EXISTS `pac_v2_ruleCategory_weightage` (
  `ruleCategory` varchar(50) COLLATE utf8_bin NOT NULL,
  `domain` varchar(50) COLLATE utf8_bin NOT NULL,
  `weightage` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`ruleCategory`,`domain`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `pac_v2_ui_download_filters` */

CREATE TABLE IF NOT EXISTS `pac_v2_ui_download_filters` (
  `serviceId` int(100) NOT NULL AUTO_INCREMENT,
  `serviceName` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `serviceEndpoint` varchar(1000) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`serviceId`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `pac_v2_ui_filters` */

CREATE TABLE IF NOT EXISTS `pac_v2_ui_filters` (
  `filterId` int(25) NOT NULL AUTO_INCREMENT,
  `filterName` varchar(25) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`filterId`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `pac_v2_ui_options` */

CREATE TABLE IF NOT EXISTS `pac_v2_ui_options` (
  `optionId` int(25) NOT NULL AUTO_INCREMENT,
  `filterId` int(25) NOT NULL,
  `optionName` varchar(25) COLLATE utf8_bin DEFAULT NULL,
  `optionValue` varchar(25) COLLATE utf8_bin DEFAULT NULL,
  `optionURL` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`optionId`),
  KEY `filterId` (`filterId`),
  CONSTRAINT `filterId` FOREIGN KEY (`filterId`) REFERENCES `pac_v2_ui_filters` (`filterId`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `pac_v2_ui_widget_faqs` */

CREATE TABLE IF NOT EXISTS `pac_v2_ui_widget_faqs` (
  `faqId` int(11) NOT NULL AUTO_INCREMENT,
  `widgetId` int(11) NOT NULL,
  `widgetName` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `faqName` text COLLATE utf8_bin,
  `faqAnswer` text COLLATE utf8_bin,
  PRIMARY KEY (`faqId`),
  KEY `widgetId` (`widgetId`),
  CONSTRAINT `pac_v2_ui_widget_faqs_ibfk_1` FOREIGN KEY (`widgetId`) REFERENCES `pac_v2_ui_widgets` (`widgetId`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `pac_v2_ui_widgets` */

CREATE TABLE IF NOT EXISTS `pac_v2_ui_widgets` (
  `widgetId` int(11) NOT NULL AUTO_INCREMENT,
  `pageName` varchar(25) COLLATE utf8_bin DEFAULT NULL,
  `widgetName` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`widgetId`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `pac_v2_userpreferences` */

CREATE TABLE IF NOT EXISTS `pac_v2_userpreferences` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `userId` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `defaultAssetGroup` text COLLATE utf8_bin,
  `recentlyViewedAG` text COLLATE utf8_bin,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=336 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Table structure for table `qartz_BLOB_TRIGGERS` */

CREATE TABLE IF NOT EXISTS `qartz_BLOB_TRIGGERS` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `TRIGGER_NAME` varchar(200) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  `BLOB_DATA` blob,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  KEY `SCHED_NAME` (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `qartz_CALENDARS` */

CREATE TABLE IF NOT EXISTS `qartz_CALENDARS` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `CALENDAR_NAME` varchar(200) NOT NULL,
  `CALENDAR` blob NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`CALENDAR_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `qartz_CRON_TRIGGERS` */

CREATE TABLE IF NOT EXISTS `qartz_CRON_TRIGGERS` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `TRIGGER_NAME` varchar(200) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  `CRON_EXPRESSION` varchar(120) NOT NULL,
  `TIME_ZONE_ID` varchar(80) DEFAULT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `qartz_FIRED_TRIGGERS` */

CREATE TABLE IF NOT EXISTS `qartz_FIRED_TRIGGERS` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `ENTRY_ID` varchar(95) NOT NULL,
  `TRIGGER_NAME` varchar(200) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  `INSTANCE_NAME` varchar(200) NOT NULL,
  `FIRED_TIME` bigint(13) NOT NULL,
  `SCHED_TIME` bigint(13) NOT NULL,
  `PRIORITY` int(11) NOT NULL,
  `STATE` varchar(16) NOT NULL,
  `JOB_NAME` varchar(200) DEFAULT NULL,
  `JOB_GROUP` varchar(200) DEFAULT NULL,
  `IS_NONCONCURRENT` varchar(1) DEFAULT NULL,
  `REQUESTS_RECOVERY` varchar(1) DEFAULT NULL,
  PRIMARY KEY (`SCHED_NAME`,`ENTRY_ID`),
  KEY `IDX_QARTZ_FT_TRIG_INST_NAME` (`SCHED_NAME`,`INSTANCE_NAME`),
  KEY `IDX_QARTZ_FT_INST_JOB_REQ_RCVRY` (`SCHED_NAME`,`INSTANCE_NAME`,`REQUESTS_RECOVERY`),
  KEY `IDX_QARTZ_FT_J_G` (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`),
  KEY `IDX_QARTZ_FT_JG` (`SCHED_NAME`,`JOB_GROUP`),
  KEY `IDX_QARTZ_FT_T_G` (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  KEY `IDX_QARTZ_FT_TG` (`SCHED_NAME`,`TRIGGER_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `qartz_JOB_DETAILS` */

CREATE TABLE IF NOT EXISTS `qartz_JOB_DETAILS` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `JOB_NAME` varchar(200) NOT NULL,
  `JOB_GROUP` varchar(200) NOT NULL,
  `DESCRIPTION` varchar(250) DEFAULT NULL,
  `JOB_CLASS_NAME` varchar(250) NOT NULL,
  `IS_DURABLE` varchar(1) NOT NULL,
  `IS_NONCONCURRENT` varchar(1) NOT NULL,
  `IS_UPDATE_DATA` varchar(1) NOT NULL,
  `REQUESTS_RECOVERY` varchar(1) NOT NULL,
  `JOB_DATA` blob,
  PRIMARY KEY (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`),
  KEY `IDX_QARTZ_J_REQ_RECOVERY` (`SCHED_NAME`,`REQUESTS_RECOVERY`),
  KEY `IDX_QARTZ_J_GRP` (`SCHED_NAME`,`JOB_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `qartz_LOCKS` */

CREATE TABLE IF NOT EXISTS `qartz_LOCKS` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `LOCK_NAME` varchar(40) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`LOCK_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `qartz_PAUSED_TRIGGER_GRPS` */

CREATE TABLE IF NOT EXISTS `qartz_PAUSED_TRIGGER_GRPS` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `qartz_SCHEDULER_STATE` */

CREATE TABLE IF NOT EXISTS `qartz_SCHEDULER_STATE` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `INSTANCE_NAME` varchar(200) NOT NULL,
  `LAST_CHECKIN_TIME` bigint(13) NOT NULL,
  `CHECKIN_INTERVAL` bigint(13) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`INSTANCE_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `qartz_SIMPLE_TRIGGERS` */

CREATE TABLE IF NOT EXISTS `qartz_SIMPLE_TRIGGERS` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `TRIGGER_NAME` varchar(200) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  `REPEAT_COUNT` bigint(7) NOT NULL,
  `REPEAT_INTERVAL` bigint(12) NOT NULL,
  `TIMES_TRIGGERED` bigint(10) NOT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `qartz_SIMPROP_TRIGGERS` */

CREATE TABLE IF NOT EXISTS `qartz_SIMPROP_TRIGGERS` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `TRIGGER_NAME` varchar(200) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  `STR_PROP_1` varchar(512) DEFAULT NULL,
  `STR_PROP_2` varchar(512) DEFAULT NULL,
  `STR_PROP_3` varchar(512) DEFAULT NULL,
  `INT_PROP_1` int(11) DEFAULT NULL,
  `INT_PROP_2` int(11) DEFAULT NULL,
  `LONG_PROP_1` bigint(20) DEFAULT NULL,
  `LONG_PROP_2` bigint(20) DEFAULT NULL,
  `DEC_PROP_1` decimal(13,4) DEFAULT NULL,
  `DEC_PROP_2` decimal(13,4) DEFAULT NULL,
  `BOOL_PROP_1` varchar(1) DEFAULT NULL,
  `BOOL_PROP_2` varchar(1) DEFAULT NULL,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `qartz_TRIGGERS` */

CREATE TABLE IF NOT EXISTS `qartz_TRIGGERS` (
  `SCHED_NAME` varchar(120) NOT NULL,
  `TRIGGER_NAME` varchar(200) NOT NULL,
  `TRIGGER_GROUP` varchar(200) NOT NULL,
  `JOB_NAME` varchar(200) NOT NULL,
  `JOB_GROUP` varchar(200) NOT NULL,
  `DESCRIPTION` varchar(250) DEFAULT NULL,
  `NEXT_FIRE_TIME` bigint(13) DEFAULT NULL,
  `PREV_FIRE_TIME` bigint(13) DEFAULT NULL,
  `PRIORITY` int(11) DEFAULT NULL,
  `TRIGGER_STATE` varchar(16) NOT NULL,
  `TRIGGER_TYPE` varchar(8) NOT NULL,
  `START_TIME` bigint(13) NOT NULL,
  `END_TIME` bigint(13) DEFAULT NULL,
  `CALENDAR_NAME` varchar(200) DEFAULT NULL,
  `MISFIRE_INSTR` smallint(2) DEFAULT NULL,
  `JOB_DATA` blob,
  PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`),
  KEY `IDX_QARTZ_T_J` (`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`),
  KEY `IDX_QARTZ_T_JG` (`SCHED_NAME`,`JOB_GROUP`),
  KEY `IDX_QARTZ_T_C` (`SCHED_NAME`,`CALENDAR_NAME`),
  KEY `IDX_QARTZ_T_G` (`SCHED_NAME`,`TRIGGER_GROUP`),
  KEY `IDX_QARTZ_T_STATE` (`SCHED_NAME`,`TRIGGER_STATE`),
  KEY `IDX_QARTZ_T_N_STATE` (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`,`TRIGGER_STATE`),
  KEY `IDX_QARTZ_T_N_G_STATE` (`SCHED_NAME`,`TRIGGER_GROUP`,`TRIGGER_STATE`),
  KEY `IDX_QARTZ_T_NEXT_FIRE_TIME` (`SCHED_NAME`,`NEXT_FIRE_TIME`),
  KEY `IDX_QARTZ_T_NFT_ST` (`SCHED_NAME`,`TRIGGER_STATE`,`NEXT_FIRE_TIME`),
  KEY `IDX_QARTZ_T_NFT_MISFIRE` (`SCHED_NAME`,`MISFIRE_INSTR`,`NEXT_FIRE_TIME`),
  KEY `IDX_QARTZ_T_NFT_ST_MISFIRE` (`SCHED_NAME`,`MISFIRE_INSTR`,`NEXT_FIRE_TIME`,`TRIGGER_STATE`),
  KEY `IDX_QARTZ_T_NFT_ST_MISFIRE_GRP` (`SCHED_NAME`,`MISFIRE_INSTR`,`NEXT_FIRE_TIME`,`TRIGGER_GROUP`,`TRIGGER_STATE`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Table structure for table `qartz_TRIGGERS` */

CREATE TABLE IF NOT EXISTS `oauth_user_role_mapping` (
  `userRoleId` varchar(225) DEFAULT NULL,
  `userId` varchar(225) DEFAULT NULL,
  `roleId` varchar(225) DEFAULT NULL,
  `clientId` varchar(300) DEFAULT NULL,
  `allocator` varchar(300) DEFAULT NULL,
  `createdDate` datetime DEFAULT NULL,
  `modifiedDate` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

DELETE FROM oauth_user_role_mapping where userRoleId in ("4747c0cf-63cc-4829-a1e8-f1e957ec5dd6","4747c0cf-63cc-4829-a1e8-f1e957ec5dd7","f5b2a689-c185-11e8-9c73-12d01119b604");
DELIMITER $$
DROP PROCEDURE IF EXISTS create_primary_key_if_not_exists_for_user_role_mapping $$
CREATE PROCEDURE create_primary_key_if_not_exists_for_user_role_mapping()
BEGIN
 IF((SELECT COUNT(1) AS index_exists FROM information_schema.statistics WHERE TABLE_SCHEMA = DATABASE() and table_name='oauth_user_role_mapping' AND index_name='PRIMARY') < 1) THEN
   SET @query = 'ALTER TABLE oauth_user_role_mapping ADD PRIMARY KEY (userRoleId);';
   PREPARE stmt FROM @query;
   EXECUTE stmt;
 END IF;
END $$
DELIMITER ;
CALL create_primary_key_if_not_exists_for_user_role_mapping();


CREATE TABLE IF NOT EXISTS `oauth_user_credentials` (
    `id` bigint (75),
    `password` varchar (225),
    `type` varchar (225)
);


CREATE TABLE IF NOT EXISTS `oauth_user_roles` (
  `roleId` varchar(225) DEFAULT NULL,
  `roleName` varchar(225) DEFAULT NULL,
  `roleDesc` varchar(225) DEFAULT NULL,
  `writePermission` int(15) DEFAULT NULL,
  `owner` varchar(225) DEFAULT NULL,
  `client` varchar(225) DEFAULT NULL,
  `createdDate` datetime DEFAULT NULL,
  `modifiedDate` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

DELETE FROM oauth_user_roles WHERE roleId in ("1", "703");
DELIMITER $$
DROP PROCEDURE IF EXISTS create_primary_key_if_not_exists_for_user_roles $$
CREATE PROCEDURE create_primary_key_if_not_exists_for_user_roles()
BEGIN
 IF((SELECT COUNT(1) AS index_exists FROM information_schema.statistics WHERE TABLE_SCHEMA = DATABASE() and table_name='oauth_user_roles' AND index_name='PRIMARY') < 1) THEN
   SET @query = 'ALTER TABLE oauth_user_roles ADD PRIMARY KEY (roleId)';
   PREPARE stmt FROM @query;
   EXECUTE stmt;
 END IF;
END $$
DELIMITER ;
CALL create_primary_key_if_not_exists_for_user_roles();


CREATE TABLE IF NOT EXISTS `task` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `index` varchar(100) DEFAULT NULL,
  `mappings` longtext,
  `data` longtext,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;


CREATE TABLE IF NOT EXISTS `pac_config_relation` (
  `application` varchar(2048) COLLATE utf8_bin NOT NULL,
  `parent` varchar(2048) COLLATE utf8_bin NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


CREATE TABLE IF NOT EXISTS `pac_config_key_metadata` (
  `cfkey` varchar(200) COLLATE utf8_bin NOT NULL,
  `description` varchar(200) COLLATE utf8_bin NOT NULL,
  UNIQUE KEY `cfkey` (`cfkey`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


CREATE TABLE IF NOT EXISTS pac_config_properties
(
   cfkey varchar(250),
   value text,
   application varchar(50),
   profile varchar(15),
   label varchar(10),
   createdBy varchar(200),
   createdDate varchar(50),
   modifiedBy varchar(200),
   modifiedDate varchar(50)
);
/* ALter statement for existing installations */
ALTER TABLE pac_config_properties MODIFY COLUMN cfkey varchar(250), MODIFY COLUMN application varchar(50), MODIFY COLUMN profile varchar(15), MODIFY COLUMN label varchar(10);


-- This procedure create unique_key contraint if not exists
DELIMITER $$
DROP PROCEDURE IF EXISTS create_unique_key_if_not_exists $$
CREATE PROCEDURE create_unique_key_if_not_exists()
BEGIN
 IF((SELECT COUNT(1) AS index_exists FROM information_schema.statistics WHERE TABLE_SCHEMA = DATABASE() and table_name='pac_config_properties' AND index_name='unique_key') < 1) THEN
   SET @query = 'ALTER TABLE pac_config_properties ADD CONSTRAINT unique_key UNIQUE (application,cfkey,profile,label)';
   PREPARE stmt FROM @query;
   EXECUTE stmt;
 END IF;
END $$
DELIMITER ;
CALL create_unique_key_if_not_exists();


CREATE TABLE IF NOT EXISTS pacman_field_override
(
   resourcetype varchar(50),
   _resourceid text,
   fieldname varchar(100),
   fieldvalue varchar(200),
   updatedby varchar(100),
   updatedon varchar(50)
);


ALTER TABLE `cf_pac_updatable_fields` MODIFY COLUMN `displayFields` longtext;

-- CREATE TABLE IF NOT EXISTS cf_pac_updatable_fields
-- (
--    resourceType varchar(100),
--    displayFields longtext,
--    updatableFields longtext
-- );


CREATE TABLE IF NOT EXISTS cf_Aws_Accounts
(
   accountName varchar(200),
   accountId varchar(200),
   accountDesc longtext,
   createdBy varchar(100),
   createdDate varchar(20),
   modifiedBy varchar(100),
   modifiedDate varchar(20),
   id varchar(100) NOT NULL,
   roleCreated varchar(50),
   policiesAttached varchar(50),
   accountTrustUpdate varchar(50),
   baseAccountPolicyUpdate varchar(50),
   status varchar(50)
);

CREATE TABLE IF NOT EXISTS pac_config_audit
(
  cfkey varchar(2048) COLLATE utf8_bin DEFAULT NULL,
  `oldvalue` varchar(2048) COLLATE utf8_bin DEFAULT NULL,
  `newvalue` varchar(2048) COLLATE utf8_bin DEFAULT NULL,
  `application` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `profile` varchar(20) COLLATE utf8_bin DEFAULT NULL,
  `label` varchar(20) COLLATE utf8_bin DEFAULT NULL,
  `modifiedBy` varchar(100) COLLATE utf8_bin DEFAULT NULL,
  `modifiedDate` varchar(20) COLLATE utf8_bin DEFAULT NULL,
  `userMessage` varchar(2048) COLLATE utf8_bin DEFAULT NULL,
  `systemMessage` varchar(2048) COLLATE utf8_bin DEFAULT NULL,
  `id` varchar(200) COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


CREATE TABLE IF NOT EXISTS `Recommendation_Mappings` (
  `checkId` varchar(20) COLLATE utf8_bin NOT NULL,
  `type` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `resourceInfo` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `_resourceId` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  `monthlySavingsField` varchar(200) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`checkId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


CREATE TABLE IF NOT EXISTS `CloudNotification_mapping` (
  `NotificationId` varchar(10) COLLATE utf8_bin NOT NULL,
  `eventType` varchar(45) COLLATE utf8_bin DEFAULT NULL,
  `resourceIdKey` varchar(45) COLLATE utf8_bin DEFAULT NULL,
  `resourceIdVal` varchar(45) COLLATE utf8_bin DEFAULT NULL,
  `esIndex` varchar(45) COLLATE utf8_bin DEFAULT NULL,
  `phdEntityKey` varchar(45) COLLATE utf8_bin DEFAULT NULL,
  PRIMARY KEY (`NotificationId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/* truncating  the policy  and ruleInstance table to ensure that existing  insert cmd changes are being reflected */
TRUNCATE TABLE cf_RuleInstance;
TRUNCATE TABLE cf_Policy;

/*changed the policyId column size*/
 ALTER TABLE cf_Policy MODIFY policyId varchar(200) ;
 ALTER TABLE cf_RuleInstance MODIFY policyId varchar(200) ;

/*Insert task to necessary tables*/
INSERT IGNORE INTO `task`(`id`,`index`,`mappings`,`data`) values (1,'exceptions','{\"mappings\":{\"sticky_exceptions\":{\"properties\":{\"assetGroup\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}},\"dataSource\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}},\"exceptionName\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}},\"exceptionReason\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}},\"expiryDate\":{\"type\":\"date\"},\"targetTypes\":{\"properties\":{\"name\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}},\"rules\":{\"properties\":{\"ruleId\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}},\"ruleName\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}}}}}}}}}}',NULL),(2,'faqs','{\"mappings\":{\"widgetinfo\":{\"properties\":{\"widgetid\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}},\"widgetname\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}}}},\"faqinfo\":{\"properties\":{\"answer\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}},\"faqid\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}},\"faqname\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}},\"tag\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}},\"widgetid\":{\"type\":\"text\",\"fields\":{\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}}}}}}','{\"index\": {\"_index\": \"faqs\", \"_type\": \"widgetinfo\", \"_id\": \"w1\"}}\r{\"widgetid\":\"w1\",\"widgetname\":\"compliance overview\"}\r{\"index\": {\"_index\": \"faqs\", \"_type\": \"widgetinfo\", \"_id\": \"w2\"}}\r{\"widgetid\":\"w2\",\"widgetname\":\"patching\"}\r{\"index\": {\"_index\": \"faqs\", \"_type\": \"widgetinfo\", \"_id\": \"w3\"}}\r{\"widgetid\":\"w3\",\"widgetname\":\"tagging\"}\r{\"index\": {\"_index\": \"faqs\", \"_type\": \"widgetinfo\", \"_id\": \"w4\"}}\r{\"widgetid\":\"w4\",\"widgetname\":\"vulnerabilities\"}\r{\"index\": {\"_index\": \"faqs\", \"_type\": \"widgetinfo\", \"_id\": \"w5\"}}\r{\"widgetid\":\"w5\",\"widgetname\":\"certificates\"}\r{\"index\": {\"_index\": \"faqs\", \"_type\": \"faqinfo\", \"_id\": \"w2q7\"}}\r{\"faqid\":\"q7\",\"faqname\":\"How is unpatched count calculated ?\",\"answer\":\"Total assets which does not have updated kernel version.\",\"widgetid\":\"w2\",\"tag\":\"patching\"}\r{\"index\": {\"_index\": \"faqs\", \"_type\": \"faqinfo\", \"_id\": \"w3q4\"}}\r{\"faqid\":\"q4\",\"faqname\":\"How is tagging compliance % calculated ?\",\"answer\":\"Tagging compliance is calculated by dividing total taggable assets by total tagged assets.\",\"widgetid\":\"w3\",\"tag\":\"tagging\"}\r{\"index\": {\"_index\": \"faqs\", \"_type\": \"faqinfo\", \"_id\": \"w1q1\"}}\r{\"faqid\":\"q1\",\"faqname\":\"What is shown in this graph?\",\"answer\":\"This multi ring donut represents the overall compliance percentage. Policies are grouped into categories like security, governance, cost optimization and tagging. Rings in the donut represents compliance percentage for each of those categories.  The rolled up percentage value for a given category is calculated by doing a weighted average of compliance percentage values of individual policies in that category. Weights are assigned based on the importance of the policy. Overall rolled up number in the middle of the donut represents uber compliance percentage for the selected asset group. This value is calculated by doing a simple average of compliance percentage values of the four categories.\",\"widgetid\":\"w1\",\"tag\":\"over-all\"}\r{\"index\": {\"_index\": \"faqs\", \"_type\": \"faqinfo\", \"_id\": \"w4q5\"}}\r{\"faqid\":\"q5\",\"faqname\":\"How is vulnerabilities compliance % calculated ?\",\"answer\":\"Vulnerabilities compliance is calculated by dividing total vulnerable assets by total servers, if an asset is not scanned by qualys , then the asset is considered as vulnerable.\",\"widgetid\":\"w4\",\"tag\":\"vulnerabilities\"}\r{\"index\": {\"_index\": \"faqs\", \"_type\": \"faqinfo\", \"_id\": \"w5q3\"}}\r{\"faqid\":\"q3\",\"faqname\":\"How is certificates compliance % calculated ?\",\"answer\":\"Total non-expired certificates divided by total certificates\",\"widgetid\":\"w5\",\"tag\":\"certificates\"}\r{\"index\": {\"_index\": \"faqs\", \"_type\": \"faqinfo\", \"_id\": \"w3q8\"}}\r{\"faqid\":\"q8\",\"faqname\":\"How is untagged count calculated ?\",\"answer\":\"Total assets which is missing either application/environment tags or both tags.\",\"widgetid\":\"w3\",\"tag\":\"tagging\"}\r{\"index\": {\"_index\": \"faqs\", \"_type\": \"faqinfo\", \"_id\": \"w2q2\"}}\r{\"faqid\":\"q2\",\"faqname\":\"How is patching compliance % calculated ?\",\"answer\":\"Total patched resources divided by total running resources\",\"widgetid\":\"w2\",\"tag\":\"patching\"}');

/*Insert Data Source to necessary tables*/

INSERT IGNORE INTO `cf_Datasource`(`dataSourceId`,`dataSourceName`,`dataSourceDesc`,`config`,`createdDate`,`modifiedDate`) VALUES (1,'aws','Amazon WebService','N/A','2017-08-01','2018-03-09');
INSERT IGNORE INTO `cf_Datasource` (dataSourceId,dataSourceName,dataSourceDesc,config,createdDate,modifiedDate) VALUES (2,'azure','Azure','N/A',{d '2019-11-13'},{d '2019-11-13'});
INSERT IGNORE INTO `cf_Datasource` (dataSourceId,dataSourceName,dataSourceDesc,config,createdDate,modifiedDate) VALUES (3,'gcp','GCP','N/A',{d '2022-05-18'},{d '2022-05-18'});

/*Insert Data Asset Group to necessary tables*/

INSERT IGNORE INTO cf_AssetGroupDetails (groupId,groupName,dataSource,displayName,groupType,createdBy,createdUser,createdDate,modifiedUser,modifiedDate,description,aliasQuery,isVisible) VALUES ('201','aws','aws','AWS','admin','Cloud Security','','','pacman','03/26/2018 23:00','Asset Group to segregate all data related to aws.','',true);
INSERT IGNORE INTO `cf_AssetGroupDetails` (`groupId`, `groupName`, `dataSource`, `displayName`, `groupType`, `createdBy`, `createdUser`, `createdDate`, `modifiedUser`, `modifiedDate`, `description`, `aliasQuery`, `isVisible`) values('cdffb9cd-71de-4e29-9cae-783c2aa211ac','azure','aws','Azure','Admin','Sree','admin@pacbot.org','11/13/2019 10:43','admin@pacbot.org','11/15/2019 11:13','All Azure','{\"actions\":[{\"add\":{\"filter\":{\"bool\":{\"should\":[{\"has_parent\":{\"query\":{\"match_all\":{}},\"parent_type\":\"blobcontainer\"}},{\"bool\":{\"must\":[{\"term\":{\"_type\":{\"value\":\"blobcontainer\"}}}]}}]}},\"index\":\"azure_blobcontainer\",\"alias\":\"azure\"}},{\"add\":{\"filter\":{\"bool\":{\"should\":[{\"has_parent\":{\"query\":{\"match_all\":{}},\"parent_type\":\"workflows\"}},{\"bool\":{\"must\":[{\"term\":{\"_type\":{\"value\":\"workflows\"}}}]}}]}},\"index\":\"azure_workflows\",\"alias\":\"azure\"}},{\"add\":{\"filter\":{\"bool\":{\"should\":[{\"has_parent\":{\"query\":{\"match_all\":{}},\"parent_type\":\"virtualmachine\"}},{\"bool\":{\"must\":[{\"term\":{\"_type\":{\"value\":\"virtualmachine\"}}}]}}]}},\"index\":\"azure_virtualmachine\",\"alias\":\"azure\"}},{\"add\":{\"filter\":{\"bool\":{\"should\":[{\"has_parent\":{\"query\":{\"match_all\":{}},\"parent_type\":\"cosmosdb\"}},{\"bool\":{\"must\":[{\"term\":{\"_type\":{\"value\":\"cosmosdb\"}}}]}}]}},\"index\":\"azure_cosmosdb\",\"alias\":\"azure\"}},{\"add\":{\"filter\":{\"bool\":{\"should\":[{\"has_parent\":{\"query\":{\"match_all\":{}},\"parent_type\":\"securitycenter\"}},{\"bool\":{\"must\":[{\"term\":{\"_type\":{\"value\":\"securitycenter\"}}}]}}]}},\"index\":\"azure_securitycenter\",\"alias\":\"azure\"}},{\"add\":{\"filter\":{\"bool\":{\"should\":[{\"has_parent\":{\"query\":{\"match_all\":{}},\"parent_type\":\"sites\"}},{\"bool\":{\"must\":[{\"term\":{\"_type\":{\"value\":\"sites\"}}}]}}]}},\"index\":\"azure_sites\",\"alias\":\"azure\"}}]}','1');
INSERT IGNORE INTO `cf_AssetGroupDetails` (`groupId`, `groupName`, `dataSource`, `displayName`, `groupType`, `createdBy`, `createdUser`, `createdDate`, `modifiedUser`, `modifiedDate`, `description`, `aliasQuery`, `isVisible`) values('e0008397-f74e-4deb-9066-10bdf11202ae','gcp','gcp','GCP','Admin','Cloud Security','admin@pacbot.org','05/18/2022 06:13','admin@pacbot.org','05/18/2022 06:13','All GCP','{\"actions\":[{\"add\":{\"filter\":{\"bool\":{\"should\":[{\"has_parent\":{\"query\":{\"match_all\":{}},\"parent_type\":\"cloudstorage\"}},{\"bool\":{\"must\":[{\"term\":{\"_type\":{\"value\":\"cloudstorage\"}}}]}}]}},\"index\":\"gcp_cloudstorage\",\"alias\":\"gcp\"}},{\"add\":{\"filter\":{\"bool\":{\"should\":[{\"has_parent\":{\"query\":{\"match_all\":{}},\"parent_type\":\"workflows\"}},{\"bool\":{\"must\":[{\"term\":{\"_type\":{\"value\":\"workflows\"}}}]}}]}},\"index\":\"gcp_workflows\",\"alias\":\"gcp\"}},{\"add\":{\"filter\":{\"bool\":{\"should\":[{\"has_parent\":{\"query\":{\"match_all\":{}},\"parent_type\":\"vminstance\"}},{\"bool\":{\"must\":[{\"term\":{\"_type\":{\"value\":\"vminstance\"}}}]}}]}},\"index\":\"gcp_vminstance",\"alias\":\"gcp\"}},{\"add\":{\"filter\":{\"bool\":{\"should\":[{\"has_parent\":{\"query\":{\"match_all\":{}},\"parent_type\":\"datastore\"}},{\"bool\":{\"must\":[{\"term\":{\"_type\":{\"value\":\"datastore\"}}}]}}]}},\"index\":\"gcp_datastore\",\"alias\":\"gcp\"}},{\"add\":{\"filter\":{\"bool\":{\"should\":[{\"has_parent\":{\"query\":{\"match_all\":{}},\"parent_type\":\"cloudsecuritycommandcenter\"}},{\"bool\":{\"must\":[{\"term\":{\"_type\":{\"value\":\"cloudsecuritycommandcenter\"}}}]}}]}},\"index\":\"gcp_cloudsecuritycommandcenter\",\"alias\":\"gcp\"}},{\"add\":{\"filter\":{\"bool\":{\"should\":[{\"has_parent\":{\"query\":{\"match_all\":{}},\"parent_type\":\"sites\"}},{\"bool\":{\"must\":[{\"term\":{\"_type\":{\"value\":\"sites\"}}}]}}]}},\"index\":\"gcp_sites\",\"alias\":\"gcp\"}}]}','1');

/*Insert Target data in required table*/
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('subscription','Subscription','Azure subscription','','azure','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/azure_subscription'),'2022-06-23','2022-06-23','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('account','Account','Aws Accounts','Other','aws','{"key":"accountid","id":"accountid"}','enabled',null,concat(@eshost,':',@esport,'/aws_account/account'),{d '2017-09-07'},{d '2017-09-07'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('api','API Gateway','api','Application Service','aws','{"key":"accountid,region,id","id":"id"}','enabled',null,concat(@eshost,':',@esport,'/aws_api/api'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('appelb','ALB','ALB','Compute','aws','{"key":"accountid,region,loadbalancername","id":"loadbalancername"}','enabled',null,concat(@eshost,':',@esport,'/aws_appelb/appelb'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('asg','ASG','asg','Compute','aws','{"key":"accountid,region,autoscalinggrouparn","id":"autoscalinggrouparn"}','enabled',null,concat(@eshost,':',@esport,'/aws_asg/asg'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('asgpolicy','ASG Policy','ASG Scaling policy','Compute','aws','{"key":"accountid,region,policyname","id":"policyname"}','active',920825,concat(@eshost,':',@esport,'/aws_asgpolicy/asgpolicy'),{d '2017-11-29'},{d '2017-11-29'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('checks',' Trusted Advisor Check','Trusted Advisor Checks','Other','aws','{"key":"accountid,checkid","id":"checkid"}','finding',null,concat(@eshost,':',@esport,'/aws_checks/checks'),{d '2017-09-27'},{d '2017-09-27'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('classicelb','CLB','classicelb','Compute','aws','{"key":"accountid,region,loadbalancername","id":"loadbalancername"}','enabled',null,concat(@eshost,':',@esport,'/aws_classicelb/classicelb'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('cloudfront','CloudFront','Cloud Front','Networking & Content Delivery','aws','{"key":"accountid,id","id":"id"}','enabled',null,concat(@eshost,':',@esport,'/aws_cloudfront/cloudfront'),{d '2017-10-24'},{d '2017-10-24'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('customergateway','Customer Gateway','Customer Gateway','Networking & Content Delivery','aws','{"key":"accountid,region,customergatewayid","id":"customergatewayid"}','active',20433,concat(@eshost,':',@esport,'/aws_customergateway/customergateway'),{d '2018-03-26'},{d '2018-03-26'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('dhcpoption','DHCP Option Set','DHCP Option Sets','Networking & Content Delivery','aws','{"key":"accountid,region,dhcpoptionsid","id":"dhcpoptionsid"}','active',20433,concat(@eshost,':',@esport,'/aws_dhcpoption/dhcpoption'),{d '2018-03-26'},{d '2018-03-26'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('directconnect','Direct Connect','Direct Connect','Networking & Content Delivery','aws','{"key":"accountid,region,connectionid","id":"connectionid"}','active',20433,concat(@eshost,':',@esport,'/aws_directconnect/directconnect'),{d '2018-03-26'},{d '2018-03-26'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('dynamodb','DynamoDB','dynamodb','Database','aws','{"key":"accountid,region,tablearn","id":"tablearn"}','enabled',null,concat(@eshost,':',@esport,'/aws_dynamodb/dynamodb'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('ec2','EC2','ec2','Compute','aws','{"key":"accountid,region,instanceid","id":"instanceid"}','enabled',null,concat(@eshost,':',@esport,'/aws_ec2/ec2'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('efs','EFS','efs','Storage','aws','{"key":"accountid,region,filesystemid","id":"filesystemid"}','enabled',null,concat(@eshost,':',@esport,'/aws_efs/efs'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('elasticip','Elastic IP','Elastic IP','Networking & Content Delivery','aws','{"key":"accountid,region,publicip","id":"publicip"}','active',920825,concat(@eshost,':',@esport,'/aws_elasticip/elasticip'),{d '2017-11-29'},{d '2017-11-29'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('elasticsearch','OpenSearch','Elasticsearch Service','Analytics','aws','{"key":"accountid,region,domainid","id":"domainid"}','active',20433,concat(@eshost,':',@esport,'/aws_elasticsearch/elasticsearch'),{d '2018-03-26'},{d '2018-03-26'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('emr','EMR','emr','Analytics','aws','{"key":"accountid,region,id","id":"id"}','enabled',null,concat(@eshost,':',@esport,'/aws_emr/emr'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('eni','ENI','eni','Compute','aws','{"key":"accountid,region,networkinterfaceid","id":"networkinterfaceid"}','enabled',null,concat(@eshost,':',@esport,'/aws_eni/eni'),{d '2017-07-13'},{d '2017-07-13'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('iamrole','IAM Role','IAM Role','Identity','aws','{"key":"rolearn","id":"rolearn"}','enabled',null,concat(@eshost,':',@esport,'/aws_iamrole/iamrole'),{d '2017-08-28'},{d '2017-08-28'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('iamuser','IAM User','IAM User','Identity','aws','{"key":"accountid,username","id":"username"}','enabled',null,concat(@eshost,':',@esport,'/aws_iamuser/iamuser'),{d '2017-08-08'},{d '2017-08-08'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('internetgateway','Internet Gateway','Internet gate way','Networking & Content Delivery','aws','{"key":"accountid,region,internetgatewayid","id":"internetgatewayid"}','active',920825,concat(@eshost,':',@esport,'/aws_internetgateway/internetgateway'),{d '2017-11-29'},{d '2017-11-29'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('kms','KMS Key','KMS','Identity','aws','{"key":"accountid,region,keyid","id":"keyid"}','enabled',null,concat(@eshost,':',@esport,'/aws_kms/kms'),{d '2017-10-24'},{d '2017-10-24'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('lambda','Lambda','lambda','Compute','aws','{"key":"accountid,region,functionarn","id":"functionarn"}','enabled',null,concat(@eshost,':',@esport,'/aws_lambda/lambda'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('launchconfig','ASG Launch Config','ASG Launch Configurations','Compute','aws','{"key":"accountid,region,launchconfigurationname","id":"launchconfigurationname"}','active',920825,concat(@eshost,':',@esport,'/aws_launchconfig/launchconfig'),{d '2017-11-29'},{d '2017-11-29'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('nat','NAT Gateway','nat','Compute','aws','{"key":"accountid,region,natgatewayid","id":"natgatewayid"}','enabled',null,concat(@eshost,':',@esport,'/aws_nat/nat'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('networkacl','Network ACL','Network ACL','Networking & Content Delivery','aws','{"key":"accountid,region,networkaclid","id":"networkaclid"}','active',920825,concat(@eshost,':',@esport,'/aws_networkacl/networkacl'),{d '2017-11-28'},{d '2017-11-28'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('peeringconnection','VPC Peering Connection','Peering Connection','Networking & Content Delivery','aws','{"key":"accountid,region,vpcpeeringconnectionid","id":"vpcpeeringconnectionid"}','active',20433,concat(@eshost,':',@esport,'/aws_peeringconnection/peeringconnection'),{d '2018-03-26'},{d '2018-03-26'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('phd','Health Dashboard','Personal Dashboard Info','Other','aws','{"key":"accountid,eventarn","id":"eventarn"}','finding',null,concat(@eshost,':',@esport,'/aws_phd/phd'),{d '2017-10-24'},{d '2017-10-24'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('rdscluster','RDS Cluster','rdscluster','Database','aws','{"key":"accountid,region,dbclusterarn","id":"dbclusterarn"}','enabled',123,concat(@eshost,':',@esport,'/aws_rdscluster/rdscluster'),{d '2017-07-17'},{d '2018-08-03'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('rdsdb','RDS Database','rdsdb','Database','aws','{"key":"accountid,region,dbclusterarn","id":"dbclusterarn"}','enabled',null,concat(@eshost,':',@esport,'/aws_rdsdb/rdsdb'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('rdssnapshot','RDS Snapshot','RDS Snapshot','Database','aws','{"key":"accountid,region,dbsnapshotidentifier","id":"dbsnapshotidentifier"}','enabled',null,concat(@eshost,':',@esport,'/aws_rdssnapshot/rdssnapshot'),{d '2017-08-28'},{d '2017-08-28'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('redshift','RedShift','redshift','Database','aws','{"key":"accountid,region,clusteridentifier","id":"clusteridentifier"}','enabled',20433,concat(@eshost,':',@esport,'/aws_redshift/redshift'),{d '2017-07-17'},{d '2017-09-06'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('routetable','Route Table','Route Table','Networking & Content Delivery','aws','{"key":"accountid,region,routetableid","id":"routetableid"}','active',920825,concat(@eshost,':',@esport,'/aws_routetable/routetable'),{d '2017-11-28'},{d '2017-11-28'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('s3','S3','s3','Storage','aws','{"key":"accountid,region,name","id":"name"}','enabled',null,concat(@eshost,':',@esport,'/aws_s3/s3'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('sg','SG','sg','Compute','aws','{"key":"accountid,region,groupid","id":"groupid"}','enabled',null,concat(@eshost,':',@esport,'/aws_sg/sg'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('snapshot','EBS Snapshot','snapshot','Compute','aws','{"key":"accountid,region,snapshotid","id":"snapshotid"}','enabled',null,concat(@eshost,':',@esport,'/aws_snapshot/snapshot'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('snstopic','SNS Topic','Simple Notification Service topics','Application Services','aws','{"key":"accountid,region,topicarn","id":"topicarn"}','active',20433,concat(@eshost,':',@esport,'/aws_snstopic/snstopic'),{d '2018-03-26'},{d '2018-03-26'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('stack','Stack','stack','Management Tools','aws','{"key":"accountid,region,stackid","id":"stackid"}','enabled',null,concat(@eshost,':',@esport,'/aws_stack/stack'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('subnet','Subnet','subnet','Compute','aws','{"key":"accountid,region,subnetid","id":"subnetid"}','enabled',null,concat(@eshost,':',@esport,'/aws_subnet/subnet'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('targetgroup','Target Group','targetgroup','Compute','aws','{"key":"accountid,region,targetgroupname","id":"targetgroupname"}','enabled',null,concat(@eshost,':',@esport,'/aws_targetgroup/targetgroup'),{d '2017-07-17'},{d '2017-07-17'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('virtualinterface','Virtual Interface','Virtual Interface','Networking & Content Delivery','aws','{"key":"accountid,region,virtualinterfaceid","id":"virtualinterfaceid"}','active',20433,concat(@eshost,':',@esport,'/aws_virtualinterface/virtualinterface'),{d '2018-03-26'},{d '2018-03-26'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('volume','EBS Volume','volume','Storage','aws','{"key":"accountid,region,volumeid","id":"volumeid"}','enabled',20433,concat(@eshost,':',@esport,'/aws_volume/volume'),{d '2017-07-17'},{d '2017-11-03'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('vpc','VPC','vpc','Compute','aws','{"key":"accountid,region,vpcid","id":"vpcid"}','enabled',20433,concat(@eshost,':',@esport,'/aws_vpc/vpc'),{d '2017-07-17'},{d '2017-11-28'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('vpnconnection','VPN Connection','VPN Connection','Networking & Content Delivery','aws','{"key":"accountid,region,vpnconnectionid","id":"vpnconnectionid"}','active',20433,concat(@eshost,':',@esport,'/aws_vpnconnection/vpnconnection'),{d '2018-03-26'},{d '2018-03-26'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('vpngateway','VPN Gateway','VPN Gateway','Networking & Content Delivery','aws','{"key":"accountid,region,vpngatewayid","id":"vpngatewayid"}','active',920825,concat(@eshost,':',@esport,'/aws_vpngateway/vpngateway'),{d '2017-11-29'},{d '2017-11-29'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('elasticache','ElastiCache','ElastiCache','Database','aws','{"key":"account,region,clustername","id":"arn"}','enabled',null,concat(@eshost,':',@esport,'/aws_elasticache/elasticache'),{d '2017-11-13'},{d '2017-11-13'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('datastream','Kinesis Data Stream','Kinesis Datastream','Analytics','aws','{"key":"streamarn","id":"streamarn"}','enabled','123',concat(@eshost,':',@esport,'/aws_datastream/datastream'),{d '2018-10-30'},{d '2018-10-30'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('deliverystream','Kinesis Delivery Stream','Kinesis Fireshose','Analytics','aws','{"key":"deliverystreamarn","id":"deliverystreamarn"}','enabled','123',concat(@eshost,':',@esport,'/aws_deliverystream/deliverystream'),{d '2018-10-30'},{d '2018-10-30'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('videostream','Kinesis Video Stream','Kinesis Videostream','Analytics','aws','{"key":"streamarn","id":"streamarn"}','enabled','123',concat(@eshost,':',@esport,'/aws_videostream/videostream'),{d '2018-10-30'},{d '2018-10-30'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('reservedinstance','EC2 Reserved Instance','Reserved Instances','Compute','aws','{"key":"instanceid","id":"instanceid"}','','123',concat(@eshost,':',@esport,'/aws_reservedinstance/reservedinstance'),{d '2018-11-01'},{d '2018-11-01'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('route53','Route 53','Route 53','Networking & Content Delivery','aws','{"key":"hostedZoneId","id":"hostedZoneId"}','','123',concat(@eshost,':',@esport,'/aws_route53/route53'),{d '2019-08-03'},{d '2019-08-03'},'Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('acmcertificate','ACM Certifcate','acmcertificate','Identity & Compliance','aws','{\"key\":\"accountid,domainname\",\"id\":\"domainname\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_acmcertificate/acmcertificate'),'2019-02-15','2019-02-18','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('iamcertificate','IAM Certificate','iamcertificate','Identity & Compliance','aws','{\"key\":\"accountid,servercertificatename\",\"id\":\"servercertificatename\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_iamcertificate/iamcertificate'),'2019-02-15','2019-02-18','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('iamgroup','IAM Group','IAM groups','Identity & Compliance','aws','{\"key\":\"accountid,groupname\",\"id\":\"groupname\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_iamgroup/iamgroup'),'2019-02-26','2019-02-26','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('cloudtrail','CloudTrail','AWS Cloud Trail','Management & Governance','aws','{\"key\":\"trailarn\",\"id\":\"trailarn\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_cloudtrail/cloudtrail'),'2019-02-26','2019-02-26','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('cloudwatchlogs','CloudWatch Logs','AWS CloudWatch Logs','Management & Governance','aws','{\"key\":\"logarn\",\"id\":\"logarn\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_cloudwatchlogs/cloudwatchlogs'),'2022-05-26','2022-05-26','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('cloudwatchalarm','CloudWatch Alarm','CloudWatch Alarm','Management & Governance','aws','{\"key\":\"alarmarn\",\"id\":\"alarmarn\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_cloudwatchalarm/cloudwatchalarm'),'2022-05-26','2022-05-26','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('vminstance','VM','GCP Virtual Machine','Compute','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_vminstance/vminstance'),'2022-06-01','2022-06-01','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('documentdb','DocumentDB','AWS Documentdb','Database','aws','{\"key\":\"dbclusterresourceid\",\"id\":\"dbclusterresourceid\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_documentdb/documentdb'),'2022-05-06','2022-05-06','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('dms','Data Migration Service','AWS Database Migration service','Database','aws','{\"key\":\"replicationinstancearn\",\"id\":\"replicationinstancearn\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_dms/dms'),'2022-05-06','2022-05-06','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('eks','EKS','Amazon Elastic Kubernetes Service (EKS)','Compute','aws','{\"key\":\"clusterarn\",\"id\":\"clusterarn\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_eks/eks'),'2022-05-06','2022-05-06','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('awsathena','Athena','AWS Athena Query services','Database','aws','{\"key\":\"queryid\",\"id\":\"queryid\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_awsathena/awsathena'),'2022-05-06','2022-05-06','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('awscomprehend','Comprehend','AWS Comprehend','Management Tools','aws','{\"key\":\"jobarn\",\"id\":\"jobarn\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_awscomprehend/awscomprehend'),'2022-05-06','2022-05-06','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('daxcluster','DAX Cluster','AWS DAX cluster','Database','aws','{\"key\":\"clusterarn\",\"id\":\"clusterarn\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_daxcluster/daxcluster'),'2022-05-06','2022-05-06','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('appflow','AppFlow','AWS AppFlow','Management Tools','aws','{\"key\":\"flowarn\",\"id\":\"flowarn\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_appflow/appflow'),'2022-05-06','2022-05-06','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('ecstaskdefinition','ECS Task Definitions','AWS ECS Task Definitions','Compute','aws','{\"key\":\"taskdefarn\",\"id\":\"taskdefarn\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_ecstaskdefinition/ecstaskdefinition'),'2022-05-06','2022-05-06','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('ecscluster','ECS Clusters','AWS Clusters','Compute','aws','{\"key\":\"clusterarn\",\"id\":\"clusterarn\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_ecscluster/ecscluster'),'2022-05-06','2022-05-06','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('accessanalyzer','IAM Access Analyzer','AWS Access Analyzer','Application Services','aws','{\"key\":\"analyzerarn\",\"id\":\"analyzerarn\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_accessanalyzer/accessanalyzer'),'2022-05-06','2022-05-06','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('ami','AMI','AWS EC2 AMI','Compute','aws','{\"key\":\"imageid\",\"id\":\"imageid\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_ami/ami'),'2022-05-06','2022-05-06','Infra & Platforms');
INSERT IGNORE INTO cf_Target (targetName,displayName,targetDesc,category,dataSourceName,targetConfig,status,userId,endpoint,createdDate,modifiedDate,domain) VALUES ('iampolicies','IAM Customer Managed Policy','IAM Customer Managed Policies','Identity','aws','{"key":"policyarn","id":"policyarn"}','enabled','admin@paladincloud.io',concat(@eshost,':',@esport,'/aws_iampolicies/iampolicies'),{d '2022-08-17'},{d '2022-08-17'},'Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('bigquerytable','BigQuery Table','GCP Bigquery Dataset table','BigQuery','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_bigquerytable'),'2022-06-24','2022-06-24','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('bigquerydataset','BigQuery Dataset','GCP Bigquery Dataset','BigQuery','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_bigquerydataset'),'2022-06-23','2022-06-23','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('cloudsql','Cloud SQL','GCP Cloud SQL','CloudSQL','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_cloudsql'),'2022-06-29','2022-06-29','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('kmskey','KMS Key','GCP Cloud Key Management Service','KMSKey','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_kmskey'),'2022-07-14','2022-07-14','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('batchaccounts','Batch Account','Azure batchaccounts','Compute','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_batchaccounts/batchaccounts'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('blobcontainer','Blob Container','Azure blobcontainer','Storage','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_blobcontainer/blobcontainer'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('cosmosdb','Cosmos DB','Azure cosmosdb)','Databases','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_cosmosdb/cosmosdb'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('databricks','Databricks','Azure databricks)','Analytics','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_databricks/databricks'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('disk','Managed Disk','Azure Disk','Compute','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_disk/disk'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('loadbalancer','Load Balancer','Azure Loadbalancer','Networking','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_loadbalancer/loadbalancer'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('mariadb','MariaDB','Azure mariadb','Databases','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_mariadb/mariadb'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('mysqlserver','MySQL Server','Azure mysqlserver','Databases','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_mysqlserver/mysqlserver'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('namespaces','Service Bus Namespace','Azure namespaces','Web','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_namespaces/namespaces'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('networkinterface','Network Interface','Azure Network Interface','Networking','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_networkinterface/networkinterface'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('nsg','NSG','Azure Network Security Group','Networking','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_nsg/nsg'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('policydefinitions','Policy Definition','Azure policydefinitions','Governance','azure','{\"key\":\"id\",\"id\":\"id\"}','finding','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_policydefinitions/policydefinitions'),'2019-08-08','2019-08-08','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('policyevaluationresults','Policy Evaluation Result','Azure policyevaluationresults','Governance','azure','{\"key\":\"id,policyDefinitionId\",\"id\":\"id\"}','finding','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_policyevaluationresults/policyevaluationresults'),'2019-08-08','2019-08-08','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('postgresql','Postgre SQL','Azure postgresql','Databases','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_postgresql/postgresql'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('publicipaddress','Public IP Address','Azure publicipaddress','Networking','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_publicipaddress/publicipaddress'),'2019-07-01','2019-07-01','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('resourcegroup','Resource Group','Azure resourcegroup','General','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_resourcegroup/resourcegroup'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('searchservices','Cognitive Search','Azure searchservices','Web','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_searchservices/searchservices'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('securityalerts','Security Alerts','Azure securityalerts','Governance','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_securityalerts/securityalerts'),'2019-08-08','2019-08-08','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('securitycenter','Security Center','Azure Security Center','Security','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_securitycenter/securitycenter'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('sites','sites','Azure sites','Internet of things','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_sites/sites'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('sqldatabase','SQL Database','Azure SQL Database','Databases','azure','{\"key\":\"databaseId\",\"id\":\"databaseId\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_sqldatabase/sqldatabase'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('sqlserver','SQL Server','Azure sqlserver','Databases','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_sqlserver/sqlserver'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('storageaccount','Storage Account','Azure Object Storage Accounts','Storage','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_storageaccount/storageaccount'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('subnets','Subnet','Azure subnets','Networking','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_subnets/subnets'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('vaults','Key Vault','Azure vaults','Security','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_vaults/vaults'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('virtualmachine','VM','Azure Virtual Machines','Compute','azure','{\"key\":\"vmId\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_virtualmachine/virtualmachine'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('vnet','Virtual Network','Azure Disk','Networking','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_vnet/vnet'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('workflows','Work Flow','Azure workflows','Internet of things','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_workflows/workflows'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('activitylogalert','Activity Log Alert','Azure activitylog','','azure','{\"key\":\"id\",\"id\":\"id\"}','finding','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_activitylog/activitylog'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('rediscache','Redis Cache','Azure rediscache','','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_rediscache/rediscache'),'2022-05-25','2022-05-25','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('securitypricings','Security Pricing','Azure Security Pricing','Security','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_securitypricings/securitypricings'),'2022-05-19','2022-05-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('webapp','Web App','Azure webapp','','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_webapp/webapp'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('vpcfirewall','VPC Firewall','GCP VPC firewall','Compute','gcp','{"key":"id","id":"name"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_vpcfirewall/vpcfirewall'),'2022-06-01','2022-06-01','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('cloudstorage','Cloud Storage','GCP cloud storage','Compute','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_cloudstorage/cloudstorage'),'2022-06-01','2022-06-01','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('pubsub','Pub/Sub','GCP pub sub topic','Compute','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_pubsub/pubsub'),'2022-06-29','2022-06-29','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('dataproc','Dataproc Cluster','GCP dataproc clusters','Compute','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_dataproc/dataproc'),'2022-07-19','2022-07-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('clouddns','Cloud DNS','GCP Cloud DNS','Google Cloud','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_clouddns/clouddns'),'2022-06-01','2022-06-01','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('cloudsql_sqlserver','SQL Server','GCP Cloud SQL Server','CloudSQLServer','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_cloudsql_sqlserver'),'2022-06-29','2022-06-29','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('cloudsql_mysqlserver','MySQL Server','GCP Cloud MySQL Server','CloudMySQLServer','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_cloudsql_mysqlserver'),'2022-10-04','2022-10-04','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('cloudsql_postgres','PostgreSQL','GCP Cloud postgres Server','CloudPostgresServer','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_cloudsql_postgres'),'2022-10-07','2022-10-07','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('networks','Cloud VPC','GCP CloudVPC','CloudVPC','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_networks'),'2022-06-29','2022-06-29','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('project','Project','Project data','Tagging','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_project'),'2022-06-29','2022-06-29','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('blobservice','Blob Service','Azure blobService','Storage','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_blobservice/blobservice'),'2022-09-15','2022-09-15','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('securityhub','Security Hub','Security Hub','Security','aws','{\"key\":\"hubarn\",\"id\":\"hubarn\"}','finding','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_securityhub/securityhub'),'2022-10-27','2022-10-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('backupvault','Backup Vault','AWS Backup Vault','storage','aws', '{"key":"backupVaultArn","id":"backupVaultArn"}','active','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_backupvault/backupvault'),'2017-11-29','2017-11-29','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('sqs','Simple Queue Service','Simple Queue Service','QueuingService','aws','{"key":"queuearn","id":"queuearn"}','active','admin@pacbot.org',concat(@eshost,':',@esport,'/aws_sqs/sqs'),'2017-11-29','2017-11-29','Infra & Platforms');

INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('serviceaccounts','Service Accounts','Service Account','Security','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_serviceaccounts'),'2022-06-29','2022-06-29','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('defender','Defender for Cloud','Azure defender','Governance','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_defender/defender'),'2022-10-14','2022-10-14','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('kubernetes','AKS','Azure kubernetes cluster','Governance','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_kubernetes/kubernetes'),'2022-10-27','2022-10-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('apikeys','Api Keys','GCP API Keys','security','gcp','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/gcp_apikeys/apikeys'),'2022-12-5','2022-12-5','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('iamusers','IAMUser','collects IAMUser details','security','gcp','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/gcp_iamusers/iamusers'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('gcploadbalancer','GCP Load balancer','load balancer data','Security','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_loadbalancer'),'2022-12-07','2022-12-07','Infra & Platforms');

INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11501','201','ec2','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11502','201','s3','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11503','201','appelb','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11504','201','asg','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11505','201','classicelb','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11506','201','stack','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11507','201','dynamodb','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11508','201','efs','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11509','201','emr','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11510','201','lambda','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11511','201','nat','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11512','201','eni','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11513','201','rdscluster','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11514','201','rdsdb','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11515','201','redshift','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11516','201','sg','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11517','201','snapshot','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11518','201','subnet','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11519','201','targetgroup','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11520','201','volume','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11521','201','vpc','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11522','201','api','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11523','201','iamuser','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11526','201','iamrole','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11527','201','rdssnapshot','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11528','201','account','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11529','201','checks','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11530','201','kms','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11531','201','phd','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11532','201','cloudfront','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11533','201','cert','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11534','201','wafdomain','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11535','201','corpdomain','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11536','201','elasticip','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('11537','201','routetable','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67701','201','internetgateway','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67702','201','launchconfig','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67703','201','networkacl','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67704','201','vpngateway','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67705','201','asgpolicy','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67706','201','snstopic','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67707','201','dhcpoption','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67708','201','peeringconnection','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67709','201','customergateway','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67710','201','vpnconnection','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67711','201','directconnect','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67712','201','virtualinterface','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67713','201','elasticsearch','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('67714','201','elasticache','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('71501','201','documentdb','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('71502','201','dms','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('71503','201','eks','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('715014','201','daxcluster','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('715015','201','awsathena','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('715016','201','awscomprehend','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('715017','201','appflow','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('715018','201','ecstaskdefinition','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('715125','201','ecscluster','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('715019','201','accessanalyzer','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('715020','201','ami','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('715022','201','iampolicies','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('715023','201','cloudwatchlogs','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('715024','201','cloudwatchalarm','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('815024','201','securityhub','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('21501','201','backupvault','all','all');
INSERT IGNORE INTO cf_AssetGroupTargetDetails (id_,groupId,targetType,attributeName,attributeValue) VALUES ('21502','201','sqs','all','all');

INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('00021aac-d0e6-4481-a1e7-8460154482ca','cdffb9cd-71de-4e29-9cae-783c2aa211ac','virtualmachine','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('ad076972-5c61-4e02-8c4b-7619db880f7f','cdffb9cd-71de-4e29-9cae-783c2aa211ac','blobcontainer','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a448c3a1-02c2-471d-a4b5-ea870eacbd12','cdffb9cd-71de-4e29-9cae-783c2aa211ac','cosmosdb','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('ac57da97-ad1b-4cd0-9add-e8d23d5eca03','cdffb9cd-71de-4e29-9cae-783c2aa211ac','databricks','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('abcf3e8a-9d11-42b3-9008-d548f1958d42','cdffb9cd-71de-4e29-9cae-783c2aa211ac','disk','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('9beb0437-3571-4732-ac97-6b6d8cc050e4','cdffb9cd-71de-4e29-9cae-783c2aa211ac','mariadb','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('abc56fc7-159d-4984-883e-bd3025b645b9','cdffb9cd-71de-4e29-9cae-783c2aa211ac','mysqlserver','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('abc4c00c-5fd4-4367-a899-62d7399d86ac','cdffb9cd-71de-4e29-9cae-783c2aa211ac','networkinterface','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a4293ded-951e-4b01-8633-6a10ec4b9457','cdffb9cd-71de-4e29-9cae-783c2aa211ac','nsg','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a4293ded-951e-4b01-8633-6a10ec4b9458','cdffb9cd-71de-4e29-9cae-783c2aa211ac','namespace','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a32495ca-ffc5-48af-ba26-316e7cb90012','cdffb9cd-71de-4e29-9cae-783c2aa211ac','postgresql','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a32495ca-ffc5-48af-ba26-316e7cb90013','cdffb9cd-71de-4e29-9cae-783c2aa211ac','publicipaddress','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('9d115e83-2821-4eeb-8224-ba2bbba1a5fa','cdffb9cd-71de-4e29-9cae-783c2aa211ac','resourcegroup','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('9d115e83-2821-4eeb-8224-ba2bbba1a5fb','cdffb9cd-71de-4e29-9cae-783c2aa211ac','searchservices','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('9d115e83-2821-4eeb-8224-ba2bbba1a5fc','cdffb9cd-71de-4e29-9cae-783c2aa211ac','securityalerts','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a5eecbfc-4a0e-4113-8301-13a44e3522d7','cdffb9cd-71de-4e29-9cae-783c2aa211ac','securitycenter','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a5eecbfc-4a0e-4113-8301-13a44e3522d8','cdffb9cd-71de-4e29-9cae-783c2aa211ac','sites','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a61e23d5-7453-4bfe-b97c-27c706674e60','cdffb9cd-71de-4e29-9cae-783c2aa211ac','sqldatabase','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('aad7068e-e5d2-4171-8e65-634aedfba6b2','cdffb9cd-71de-4e29-9cae-783c2aa211ac','sqlserver','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a1480aa8-7239-4604-9ab7-916621792fd6','cdffb9cd-71de-4e29-9cae-783c2aa211ac','storageaccount','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a1480aa8-7239-4604-9ab7-916621792fd7','cdffb9cd-71de-4e29-9cae-783c2aa211ac','subnets','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a1480aa8-7239-4604-9ab7-916621792fd8','cdffb9cd-71de-4e29-9cae-783c2aa211ac','vaults','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a1480aa8-7239-4604-9ab7-916621792fd9','cdffb9cd-71de-4e29-9cae-783c2aa211ac','vnet','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a1480aa8-7239-4604-9ab7-916621792f10','cdffb9cd-71de-4e29-9cae-783c2aa211ac','workflows','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a1480aa8-7239-4604-9ab7-916621792f11','cdffb9cd-71de-4e29-9cae-783c2aa211ac','batchaccounts','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a1480aa8-7239-4604-9ab7-916621792f12','cdffb9cd-71de-4e29-9cae-783c2aa211ac','loadbalancer','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('f043449a-3f6d-472c-8537-534a2e5a50ff','cdffb9cd-71de-4e29-9cae-783c2aa211ac','rediscache','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('f043449a-3f6d-472c-8537-534a2e5a50ff','cdffb9cd-71de-4e29-9cae-783c2aa211ac','activitylogalert','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('f043449a-3f6d-472c-8537-534a2e5a50ff','cdffb9cd-71de-4e29-9cae-783c2aa211ac','securitypricings','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('e33111d2-0ca0-4dbe-93d3-0e0aa2391ec0','cdffb9cd-71de-4e29-9cae-783c2aa211ac','webapp','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('e33111d2-0ca0-4dbe-93d3-0e0aa2391ec1','cdffb9cd-71de-4e29-9cae-783c2aa211ac','subscription','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('42c2f507-30cb-4205-9ca9-e13ad02c1068','cdffb9cd-71de-4e29-9cae-783c2aa211ac','dataproc','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('93733da9-916d-454c-9913-41a3aa8159e9','cdffb9cd-71de-4e29-9cae-783c2aa211ac','functionapp','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('ad076972-5c61-4e02-8c4b-7718dc880g7g','cdffb9cd-71de-4e29-9cae-783c2aa211ac','blobservice','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('285c3063-4b91-4607-a43d-bf80025794b5','cdffb9cd-71de-4e29-9cae-783c2aa211ac','mysqlflexible','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('00d91be0-ab7e-4869-b08e-b937aa551397','cdffb9cd-71de-4e29-9cae-783c2aa211ac','diagnosticsetting','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('00d91be0-ab7e-4869-b08e-b937aa551398','cdffb9cd-71de-4e29-9cae-783c2aa211ac','defender','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('00d91be0-ab7e-4869-b08e-b937aa551399','cdffb9cd-71de-4e29-9cae-783c2aa211ac','kubernetes','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('22c59287-4e12-4bd5-b4b7-f28021208df8','cdffb9cd-71de-4e29-9cae-783c2aa211ac','vaultsrbac','all','all');

INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('69867fcd-653c-4500-b1b5-0171f8f4c63b','e0008397-f74e-4deb-9066-10bdf11202ae','vminstance','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('50dbdcf8-9465-4095-9612-4990d4e47d40','e0008397-f74e-4deb-9066-10bdf11202ae','vpcfirewall','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('a9udqucf8-3465-4235-9612-4990d4er5td40','e0008397-f74e-4deb-9066-10bdf11202ae','bigquerytable','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('50dthdcf8-3465-4235-9612-4990d4er5td40','e0008397-f74e-4deb-9066-10bdf11202ae','bigquerydataset','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('bkg763cf8-3434-4235-0749-4990d4v4u5td40','e0008397-f74e-4deb-9066-10bdf11202ae','kmskey','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('b9udr432cf8-3465-4235-9612-4990d4ercrt60','e0008397-f74e-4deb-9066-10bdf11202ae','cloudsql','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('0bf61e09-4512-41e2-86db-19fc39be9347','e0008397-f74e-4deb-9066-10bdf11202ae','cloudstorage','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('49bea363-83bc-4376-b5d9-dff7a8df6b81','e0008397-f74e-4deb-9066-10bdf11202ae','pubsub','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('49bea363-83bc-4376-b5d9-dff7a8df6b82','e0008397-f74e-4deb-9066-10bdf11202ae','gkecluster','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('1bf61e09-4512-41e2-86db-19fc39be9359','e0008397-f74e-4deb-9066-10bdf11202ae','clouddns','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('b9udr432cf8-3465-4235-9612-4990d4ercrt61-23','e0008397-f74e-4deb-9066-10bdf11202ae','cloudsql_sqlserver','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('9d65d4ad-98dc-4394-85c4-f74f2ca38eb5','e0008397-f74e-4deb-9066-10bdf11202ae','cloudsql_mysqlserver','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('48ef4973-1904-4eae-bf5e-73450628b703','e0008397-f74e-4deb-9066-10bdf11202ae','cloudsql_postgres','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('b9udr432cf8-3465-4235-9612-4990d4ercrt69-29','e0008397-f74e-4deb-9066-10bdf11202ae','gcp_networks','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('b9udr432cf8-3465-4235-9612-4990d4ercrt70-30','e0008397-f74e-4deb-9066-10bdf11202ae','gcp_project','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('b9udr432cf8-3465-4235-9612-4990d4erdrt80-40','e0008397-f74e-4deb-9066-10bdf11202ae','gcp_serviceaccounts','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('de364119-0f2b-4f63-8d61-81fa4d1d33fb','e0008397-f74e-4deb-9066-10bdf11202ae','iamusers','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('25e615a5-e7d3-444e-95a3-2dedaef0890e','e0008397-f74e-4deb-9066-10bdf11202ae','gcp_apikeys','all','all');
INSERT IGNORE INTO `cf_AssetGroupTargetDetails` (`id_`, `groupId`, `targetType`, `attributeName`, `attributeValue`) VALUES('9b942f42-4bd0-4911-8fd3-a1661f0cbc97','e0008397-f74e-4deb-9066-10bdf11202ae','gcp_loadbalancers','all','all');
delete from `cf_AssetGroupTargetDetails` where targetType ='ecs';
delete from `cf_AssetGroupTargetDetails` where targetType = 'policydefinitions';
delete from `cf_AssetGroupTargetDetails` where targetType = 'policyevaluationresults';

/*Insert Domain in required table*/

INSERT IGNORE INTO cf_Domain (domainName,domainDesc,config,createdDate,modifiedDate,userId) VALUES ('Infra & Platforms','Domain for Infra & Platforms','{}',{d '2018-04-09'},{d '2018-08-03'},'user123');



/* Auth Related data */
INSERT IGNORE INTO `oauth_client_details`(`client_id`,`resource_ids`,`client_secret`,`scope`,`authorized_grant_types`,`web_server_redirect_uri`,`authorities`,`access_token_validity`,`refresh_token_validity`,`additional_information`,`autoapprove`) values ('22e14922-87d7-4ee4-a470-da0bb10d45d3',NULL,'$2a$10$Is6r80wW65hKHUq6Wa8B6O3BLKqGOb5McDGbJUwVwfVvyeJBCf7ta','resource-access','implicit,authorization_code,refresh_token,password,client_credentials',NULL,'ROLE_CLIENT,ROLE_USER',NULL,NULL,NULL,'');
INSERT IGNORE INTO `oauth_user`(`id`,`user_id`,`user_name`,`first_name`,`last_name`,`email`,`created_date`,`modified_date`) values (1,'user@paladincloud.io','user','user','','user@paladincloud.io','2018-06-26 18:21:56','2018-06-26 18:21:56'),(2,'admin@paladincloud.io','admin','admin','','admin@paladincloud.io','2018-06-26 18:21:56','2018-06-26 18:21:56');
INSERT IGNORE INTO `oauth_user_credentials` (`id`, `password`, `type`) values('1','$2a$10$A3x6YNcaE.FzVMSz/zqQAeaECoWewI8atkUyJnDZPDZPgka3aOMKK','db');
INSERT IGNORE INTO `oauth_user_credentials` (`id`, `password`, `type`) values('2','$2a$10$Q4VelltsKsp9Owq9Nf8SgO.csoLBIsQhdvK7VX4obEtEULIXcyUn2','db');
INSERT IGNORE INTO `oauth_user_roles`(`roleId`,`roleName`,`roleDesc`,`writePermission`,`owner`,`client`,`createdDate`,`modifiedDate`) values ('1','ROLE_USER','ROLE_USER',0,'asgc','22e14922-87d7-4ee4-a470-da0bb10d45d3','2018-01-23 00:00:00','2018-01-23 00:00:00'),('703','ROLE_ADMIN','ROLE_ADMIN',1,'asgc','22e14922-87d7-4ee4-a470-da0bb10d45d3','2018-03-13 17:26:58','2018-03-13 17:26:58');
INSERT IGNORE INTO `oauth_user_role_mapping`(`userRoleId`,`userId`,`roleId`,`clientId`,`allocator`,`createdDate`,`modifiedDate`) values ('4747c0cf-63cc-4829-a1e8-f1e957ec5dd6','user@paladincloud.io','1','22e14922-87d7-4ee4-a470-da0bb10d45d3','user123','2018-01-09 16:11:47','2018-01-09 16:11:47'),('4747c0cf-63cc-4829-a1e8-f1e957ec5dd7','admin@paladincloud.io','1','22e14922-87d7-4ee4-a470-da0bb10d45d3','user123','2018-01-09 16:11:47','2018-01-09 16:11:47'),('f5b2a689-c185-11e8-9c73-12d01119b604','admin@paladincloud.io','703','22e14922-87d7-4ee4-a470-da0bb10d45d3','user123','2018-01-09 16:11:47','2018-01-09 16:11:47');

/* Display and Update Fields */
INSERT IGNORE INTO cf_pac_updatable_fields  (resourceType,displayFields,updatableFields) VALUES
 ('all_list','_resourceid,tags.Application,tags.Environment,_entitytype',null),
 ('all_taggable','_resourceid,tags.Application,tags.Environment,_entitytype,targetType,accountid,accountname,region',null),
 ('all_vulnerable','_resourceid,tags.Application,tags.Environment,_entitytype,accountid,accountname,region',null),
 ('all_patchable','_resourceid,tags.Application,tags.Environment,_entitytype',null);


/* Rule and Policy Initialisation */


INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('AWSCloudTrailConfig_version-1','AWSCloudTrailConfig','Cloudtrail logs provide the audit trail of who did what and when. Cloudtrail is enabled by default on all AWS accounts, this should not be turned off any time','Enable cloudtrail for all regions','','version-1','',710383,{d '2017-08-18'},{d '2017-08-18'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('AWSConfigEnabled_version-1','AWSConfigEnabled','AWS Config records all supported resources that it discovers in the region and maintain a timeline for each of the resource. AWS Config should always be in ''enabled'' stated','Enable AWS Config for each region','','version-1','',710383,{d '2017-08-18'},{d '2017-08-18'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Amazon-EC2-Reserved-Instance-Lease-Expiration_version-1','Amazon-EC2-Reserved-Instance-Lease-Expiration','Checks for Amazon EC2 Reserved Instances that are scheduled to expire within the next 30 days or have expired in the preceding 30 days. \nReserved Instances do not renew automatically; you can continue using an EC2 instance covered by the reservation without interruption, \nbut you will be charged On-Demand rates. New Reserved Instances can have the same parameters as the expired ones, or you can purchase \nReserved Instances with different parameters.The estimated monthly savings we show is the difference between the On-Demand and\nReserved Instance rates for the same instance type.\n\nAlert Criteria :\nYellow: The Reserved Instance lease expires in less than 30 days.\nYellow: The Reserved Instance lease expired in the preceding 30 days.','Consider purchasing a new Reserved Instance to replace the one that is nearing the end of its term, For more information \nsee <a href="https://aws.amazon.com/ec2/purchasing-options/reserved-instances/buyer/" target="_blank">How to Purchase Reserved Instances</a>\n<a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-concepts-buying.html" target="_blank">Buying Reserved Instances</a>,\nAdditional Resources : <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html" target="_blank">Reserved Instances</a>\n<a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html" target="_blank">Instance Types</a>','','version-1','',710383,{d '2018-05-28'},{d '2018-05-28'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('AmazonRDSIdleDBInstancesRule_version-1','AmazonRDSIdleDBInstancesRule','Checks the configuration of your Amazon Relational Database Service (Amazon RDS) for any DB instances that appear to be idle. If a DB instance has not had a connection for a prolonged period of time, you can delete the instance to reduce costs. If persistent storage is needed for data on the instance, you can use lower-cost options such as taking and retaining a DB snapshot. Manually created DB snapshots are retained until you delete them.','Consider taking a snapshot of the idle DB instance and then deleting it,See Deleting a DB Instance with a Final Snapshot','','version-1','',710383,{d '2018-03-15'},{d '2018-03-15'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('ApiGatewayProtected_version-1','ApiGatewayProtected','AWS API gateway resources are by default publicly accessible, all of the API resources should be protected by a Authorizer or a API key. Unprotected API''s can lead to data leaks and security breaches.','Protect the API gateway with an API key OR Use a custom authorizers at the gateway level','','version-1','',710383,{d '2017-08-16'},{d '2017-08-16'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('ApiGatewayProtected_version-2','ApiGatewayProtected','AWS API gateway resources are by default publicly accessible, all of the API resources should be protected by a Authorizer or a API key. Unprotected API''s can lead to data leaks and security breaches.','Protect the API gateway with an API key OR Use a custom authorizers at the gateway level','','version-2','',710383,{d '2017-08-24'},{d '2017-08-24'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('ApiGatewayProtected_version-3','ApiGatewayProtected','AWS API gateway resources are by default publicly accessible, all of the API resources should be protected by a Authorizer or a API key. Unprotected API''s can lead to data leaks and security breaches.','Protect the API gateway with an API key OR Use a custom authorizers at the gateway level','','version-3','',333523,{d '2017-09-19'},{d '2017-09-19'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('ApiGatewayProtected_version-4','ApiGatewayProtected','AWS API gateway resources are by default publicly accessible, all of the API resources should be protected by a Authorizer or a API key. Unprotected API''s can lead to data leaks and security breaches.','','','version-4','',76355,{d '2018-04-23'},{d '2018-04-23'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('ApplicationTagsShouldBeValid_version-1','ApplicationTagsShouldBeValid','The value of ''Application'' tag  of the asset should be one of the  application names approved by the cloud intake team. Assets with wrong value for Application tag would generally get orphaned from monitoring, patching, centralized access control, etc. Lot of auomations rely on correct application tag and care should be taken to make sure all assets are tagged with correct value for this tag.','Add correct value for the Application tag.','','version-1','',710383,{d '2017-12-07'},{d '2017-12-07'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('AwsRoute53DNSForAccountsRule_version-1','AwsRoute53DNSForAccountsRule','Route 53 service is allowed to be used only in approved accounts. No other accounts should be using Route 53 service. Since Route 53 service is critical service for every application, a controlled environment is required for smooth operations. Also in order stop domain proliferation and enforce best practices, this service  is limited only to these two accounts.','Please work with paladincloud.io for migration or exceptions','','version-1','',710383,{d '2018-02-16'},{d '2018-02-16'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('CheckAwsActivityInBlacklistedRegion_version-1','CheckAwsActivityInBlacklistedRegion','At Paladincloud we primarily use US regions. Any activity in regions outside of US regions is a violation of policy. It generally indicates malicious and un authorized activity','Reach out to paladincloud.io for addressing malicious activity,In case of legitimate workloads please reach out to the same team for exception.','','version-1','',710383,{d '2018-02-16'},{d '2018-02-16'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('CheckEdpRepositoryRule_version-1','CheckEdpRepositoryRule','Every repository should have master and dev branches','','','version-1','',710383,{d '2018-02-28'},{d '2018-02-28'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('CheckGuardDutyIsEnabledForAllAccount_version-1','CheckGuardDutyIsEnabledForAllAccount','All the AWS accounts should have guard duty enabled. Amazon GuardDuty is a managed threat detection service that continuously monitors for malicious or unauthorized behavior to help you protect your AWS accounts and workloads. It monitors for activity such as unusual API calls or potentially unauthorized deployments that indicate a possible account compromise. GuardDuty also detects potentially compromised instances or reconnaissance by attackers','','','version-1','',710383,{d '2018-01-19'},{d '2018-01-19'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('CheckInactiveIamUser_version-1','CheckInactiveIamUser','IAM users who have not logged into AWS and have no API activity for 90 days will be considered inactive IAM users and their accounts will be terminated.','Reach out to paladincloud.io for exceptions','','version-1','',710383,{d '2018-02-13'},{d '2018-02-13'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('CheckMongoDBPublicAccess_version-1','CheckMongoDBPublicAccess','To prevent data theft and data loss all Mongo DBs should be protected with access control mechanism. ','Disable anonymous access to MongoDB','','version-1','',2689645,{d '2017-09-01'},{d '2017-09-01'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('CloudWatchEventsForAllAccounts_version-1','CloudWatchEventsForAllAccounts','Events from all AWS account should be routed to a central event bus so that the events and be processed and analyzed centrally.','Events from all AWS account should be routed to a central event.','','version-1','',710383,{d '2018-01-18'},{d '2018-01-18'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('EC2WithPublicAccessForPort27017_version-1','EC2WithPublicAccessForPort27017','Global permission to access the well known services like TCP on port 27017 (Mongo DB) should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',2689645,{d '2017-08-24'},{d '2017-08-24'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('EC2WithPublicAccessForPort9600_version-1','EC2WithPublicAccessForPort9600','This rule checks for EC2 instance which has IP address and looks for any of SG group has CIDR IP to 0.0.0.0 for port 9600,if it find any then its an issue.',null,'','version-1','',2689645,{d '2017-08-23'},{d '2017-08-23'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('EC2WithPublicAccessForPort9600_version-2','EC2WithPublicAccessForPort9600','This rule checks for EC2 instance which has IP address and looks for any of SG group has CIDR IP to 0.0.0.0 for port 9600,if it find any then its an issue.',null,'','version-2','',333523,{d '2017-08-30'},{d '2017-08-30'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('EC2WithPublicAccessSSHPort22_version-1','EC2WithPublicAccessSSHPort22','This rule checks for EC2 instance which has IP address and looks for any of SG group has CIDR IP to 0.0.0.0 for SSH port,if it find any then its an issue.',null,'','version-1','',710383,{d '2017-08-18'},{d '2017-08-18'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('EC2WithPublicAccessSSHPort22_version-2','EC2WithPublicAccessSSHPort22','SSH port 22 should not be accessible from internet. Port 22 should be open only to the internal 10.*.*.* network. Further reducing the permitted IP addresses or ranges allowed to communicate to destination hosts on TCP port 22 is recommended. An exposed SSH port 22 pose a great security risk. Dedicated bastion hosts can have port open to internet with appropriate SSH config.','Remove the rule from the security groups that allows inbound access from 0.0.0.0/0.','','version-2','',2689645,{d '2017-08-23'},{d '2017-08-23'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('EC2WithPublicAccessSSHPort9600_version-1','EC2WithPublicAccessSSHPort9600','This rule checks for EC2 instance which has IP address and looks for any of SG group has CIDR IP to 0.0.0.0 for port 9600,if it find any then its an issue.',null,'','version-1','',2689645,{d '2017-08-23'},{d '2017-08-23'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('EC2WithPublicIPAccess_version-1','EC2WithPublicIPAccess','EC2 instances should not be directly accessible from internet (Except for the servers in DMZ zone). Ideally these instances should be behind firewall (AWS WAF or any other firewall)','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-08-18'},{d '2017-08-18'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-all-ports');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('EbsSnapShot_version-1','EbsSnapShot','Depending on the purpose for which the EBS was used, the snapshot might carry sensistive information about our cloud ecosystem or might carry customer PII or CPNI or it could be anything. The cases where we need to make a snpashot public is very rare, those cases have to go through an exception process','Make the snapshot private','','version-1','',710383,{d '2017-08-16'},{d '2017-08-16'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-to-ebs-snapshots');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2InstanceScannedByQualys_version-1','Ec2InstanceScannedByQualys','All assets in Cloud should be scanned by Qualys vulnerability assessment tool atleast once a month. It would be ideal to have the Qulays Cloud Agent installed on all the assets. This would eliminate the need to have manual external scans','Install Qualys Cloud Agent on the server or get the asset scanned manually by VMAS team every month','','version-1','',710383,{d '2017-11-14'},{d '2017-11-14'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1','Ec2PublicAccessPortWithS5Vulnerability','An Ec2 instance with remotely exploitable vulnerability (S5) should not be open to internet, this instance can be easily compromised from a remote location','Immediately remove the internet access,Apply the vulnerability fix','','version-1','',710383,{d '2018-01-11'},{d '2018-01-11'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2PublicAccessPortWithTarget_version-1','Ec2PublicAccessPortWithTarget','Global permission to access the well known services running on privileged ports should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-12-22'},{d '2017-12-22'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2SoppedInstanceForLong_version-2','Ec2SoppedInstanceForLong','EC2 Stopped Instances rule look for the stopped instances which are stopped  for more than 60 days.',null,'','version-2','',1205352,{d '2017-11-06'},{d '2017-11-06'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2SoppedInstanceForLong_version-3','Ec2SoppedInstanceForLong','EC2 Stopped Instances rule check for the stopped instances which are stopped  for more than 60 days.',null,'','version-3','',1205352,{d '2017-11-06'},{d '2017-11-06'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2SoppedInstanceForLong_version-4','Ec2SoppedInstanceForLong','EC2 Stopped Instances rule check for the stopped instances for more than 60 days.',null,'','version-4','',1205352,{d '2017-11-06'},{d '2017-11-06'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2SoppedInstanceForLong_version-5','Ec2SoppedInstanceForLong','EC2 Stopped Instances rule check for instances stopped for more than 60 days.',null,'','version-5','',1205352,{d '2017-11-13'},{d '2017-11-13'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2StoppedInstanceForLong_version-1','Ec2StoppedInstanceForLong','Stopped EC2 instances still incur cost for the volumes,elastic IP associated with it, potential AWS marketplace license costs as well.','Terminate the EC2 instance if it is no longer required.','','version-1','',710383,{d '2017-08-29'},{d '2017-08-29'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPubAccFTP-DataPort20_version-1','Ec2WithPubAccFTP-DataPort20','Global permission to access the well known services like TCP on port 20  should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-10-20'},{d '2017-10-20'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('Ec2WithPubAccPort1434_version-1','Ec2WithPubAccPort1434','Global permission to access the well known services like TCP on port 1434 (SQL Browser) should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-07'},{d '2017-09-07'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-sql-port-1434');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPubAccSMTPPort25_version-1','Ec2WithPubAccSMTPPort25','Global permission to access the well known services like SMTP on port 25 should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-10-20'},{d '2017-10-20'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPubAccUDP-Port-53_version-1','Ec2WithPubAccUDP-Port-53','Global permission to access the well known services like UDP on port 53 (Nameservers) should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-10-20'},{d '2017-10-20'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPublicAccessCifsPort445_version-1','Ec2WithPublicAccessCifsPort445','Global permission to access the well known services like TCP on port 445 should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-15'},{d '2017-09-15'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPublicAccessFtp21port_version-1','Ec2WithPublicAccessFtp21port','Global permission to access the well known services like TCP on port 21 should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-10-20'},{d '2017-10-20'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPublicAccessMySql4333_version-1','Ec2WithPublicAccessMySql4333','Global permission to access the well known services like TCP on port 4333 (MINISQL Server) should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-14'},{d '2017-09-14'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('Ec2WithPublicAccessMySqlPort3306_version-1','Ec2WithPublicAccessMySqlPort3306','Global permission to access the well known services like TCP on port 3306 (MySQL) should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-06'},{d '2017-09-06'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-mysql-port-3306');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPublicAccessNetBIOSPort137_version-1','Ec2WithPublicAccessNetBIOSPort137','Global permission to access the well known services like TCP on port 137 should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-15'},{d '2017-09-15'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('Ec2WithPublicAccessNetBIOSPort138_version-1','Ec2WithPublicAccessNetBIOSPort138','Global permission to access the well known services like TCP on port 138 should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-15'},{d '2017-09-15'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-netbios-port-138');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPublicAccessNonWebPorts443_version-1','Ec2WithPublicAccessNonWebPorts443','Global permission to access the well known services like TCP on port 443 should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-06'},{d '2017-09-06'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('Ec2WithPublicAccessNonWebPorts80_version-1','Ec2WithPublicAccessNonWebPorts80','Global permission to access the well known services like HTTP on port 80 should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-06'},{d '2017-09-06'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-http-port-80');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('Ec2WithPublicAccessPort8080_version-1','Ec2WithPublicAccessPort8080','This rule creates an issue, if the port 8080 is open to internet.',null,null,'version-1',null,null,{d '2018-09-07'},{d '2018-09-07'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-port-8080');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('Ec2WithPublicAccessPostgreSqlPort5432_version-1','Ec2WithPublicAccessPostgreSqlPort5432','Global permission to access the well known services like TCP on port 5432 (POSTGRESQL) should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-06'},{d '2017-09-06'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-postgresql-port-5432');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('Ec2WithPublicAccessRdpPort3389_version-1','Ec2WithPublicAccessRdpPort3389','RDP port 3389 should not be accessible from internet. Port 3389 should be open only to the internal 10.*.*.* network. Further reducing the permitted IP addresses or ranges allowed to communicate to destination hosts on RDP port 3389 is recommended. An exposed RDP port 3389 pose a great security risk.','Remove the rule from the security groups that allows inbound access from 0.0.0.0/0.','','version-1','',710383,{d '2017-09-06'},{d '2017-09-06'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-ec2-public-access-on-rdp-port-3389');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPublicAccessRpcPort135_version-1','Ec2WithPublicAccessRpcPort135','Global permission to access the well known services like TCP on port 135 should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-06'},{d '2017-09-06'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPublicAccessSmbPort445_version-1','Ec2WithPublicAccessSmbPort445','Global permission to access the well known services like TCP on port 445 should not be allowed','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-06'},{d '2017-09-06'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPublicAccessSql1433_version-1','Ec2WithPublicAccessSql1433','Global permission to access the well known services like TCP on port 1433 (SQL Server) should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-06'},{d '2017-09-06'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPublicAccessTelnetPort23_version-1','Ec2WithPublicAccessTelnetPort23','Global permission to access the well known services like TCP/UDP on port 23 should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-06'},{d '2017-09-06'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPublicAccessVncPort5500_version-1','Ec2WithPublicAccessVncPort5500','Global permission to access the well known services like TCP on port 5500 (VNC) should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-14'},{d '2017-09-14'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithPublicAccessVncServerPort5900_version-1','Ec2WithPublicAccessVncServerPort5900','Global permission to access the well known services like TCP on port 5900 (VNC) should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-09-14'},{d '2017-09-14'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Ec2WithSeverityVulnerability_version-1','Ec2WithSeverityVulnerability','If an EC2 Instance having S5, S4 and S3 vulnerability report it as an issue with severity high, medium and low respectively','','','version-1','',710383,{d '2018-03-08'},{d '2018-03-08'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('EveryProjectShouldHaveMasterBranch-Asif_version-1','EveryProjectShouldHaveMasterBranch-Asif','EveryProjectShouldHaveMasterBranch-Asif','','','version-1','',1205352,{d '2018-05-10'},{d '2018-05-10'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('EveryProjectShouldHaveRepository_version-1','EveryProjectShouldHaveRepository','Every project should have a repository','','','version-1','',710383,{d '2018-03-27'},{d '2018-03-27'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('GuardDutyFindingsExists_version-1','GuardDutyFindingsExists','Amazon GuardDuty is a managed threat detection service that continuously monitors your VPC flow logs, CloudTrail event logs and DNS logs for malicious or unauthorized behavior. When GuardDuty detects a suspicious or unexpected behavior in your AWS account, it generates a finding. A finding is a notification that contains information about a potential security threat identified by the GuardDuty service. The finding details includes data about the finding actor, the AWS resource(s) involved in the suspicious activity, the time when the activity occurred and so on.','Follow the step by step guide line provided for each finding from the Guard Duty console,Please reach out to paladincloud.io in case of any queries about how to fix a finding','','version-1','',710383,{d '2018-02-12'},{d '2018-02-12'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('IamAccessKeyRotatedInEvery90Days_version-1','IamAccessKeyRotatedInEvery90Days','Access keys of IAM accounts should be rotated every 90 days in order to decrease the likelihood of accidental exposures and protect  AWS resources against unauthorized access','Rotate the access keys every 90 days','','version-1','',710383,{d '2017-08-11'},{d '2017-08-11'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('IamIdentityProviderWithADFS_version-1','IamIdentityProviderWithADFS','All the AWS accounts should use CORP ADFS identity provider.','','','version-1','',710383,{d '2018-01-15'},{d '2018-01-15'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('IamPasswordPolicy_version-1','IamPasswordPolicy','Enforce a strong password policy on IAM console authentications. By default AWS does not configure the maximal strength password complexity policy on your behalf.','Log into your AWS console,Go to the IAM service,On the left menu select Password Policy which should be the bottom option,Set the Minimum Password Length form field to 12 (or higher) and Select each of the checkboxes so that all four required  complexity options are selected,Depending on your corporate policy you may wish to allow users to change their own passwords,We recommend that you permit users to do so,Apply your new password policy and you have satisfied this security remediation','','version-1','',710383,{d '2018-01-08'},{d '2018-01-08'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-iam-password-policy');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('IamWithPermanentAccessKeysExceptServiceAccount_version-1','IamWithPermanentAccessKeysExceptServiceAccount','Every AWS account is configured one IAM Identity provider. This identity provider  is required for logging into AWS with CORP AD account','Add the CORP AD ADFS provider configuration back to the AWS account','','version-1','',710383,{d '2017-08-11'},{d '2017-08-11'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('IdleLoadBalancerRule_version-1','IdleLoadBalancerRule','Checks your Elastic Load Balancing configuration for load balancers that are not actively used. Any load balancer that is configured accrues charges. If a load balancer has no associated back-end instances or if network traffic is severely limited, the load balancer is not being used effectively.','If your load balancer has no active back-end instance then consider registering instances or deleting your load balancer, SeeÂ Registering Your Amazon EC2 Instances with Your Load BalancerÂ orÂ Delete Your Load Balancer,If your load balancer has had a low request count then consider deleting your load balancer.Â ','','version-1','',710383,{d '2018-02-25'},{d '2018-02-25'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('LambdaFunMemorySize_version-1','LambdaFunMemorySize','This rule checks, If the given lambda function''s memory size exceeds more than 512 Mb, then its an issue.',null,'','version-1','',710383,{d '2017-09-05'},{d '2017-09-05'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('LambdaFunThrottleInvocationsRule_version-1','LambdaFunThrottleInvocationsRule','Lambda function throttle invocations should not exceed the threshold','Review the code and design and inspect if there is any problem with the logic. If it known and expected behaviour please request for an exception.','','version-1','',710383,{d '2017-10-13'},{d '2017-10-13'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('LambdaFunWithAdmin-OrIamPrivileges_version-1','LambdaFunWithAdmin-OrIamPrivileges','Lambda functions should not have administrative permissions (Managed Policy : AdministratorAccess). Least privileges should be granted to lambda functions. Also IAM privileges should never be granted to lambda functions. (Exceptional cases has to be reviewed and prior allow-listing would be required.)','Remove AdministratorAccess policy associated with lambda functions,Remove IAM privileges associated with the lambda function','','version-1','',710383,{d '2018-02-15'},{d '2018-02-15'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-lambda-functions-administrative-privilege');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('LambdaFunWithAdmin-OrIamPrivileges_version-2','LambdaFunWithAdmin-OrIamPrivileges','Lambda functions should not have administrative permissions (Managed Policy : AdministratorAccess). Least privileges should be granted to lambda functions. Also IAM privileges should never be granted to lambda functions. (Exceptional cases has to be reviewed and prior allow-listing would be required.)','','','version-2','',76355,{d '2018-04-23'},{d '2018-04-23'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('LambdaInvocationRule_version-1','LambdaInvocationRule','AWS Lambda is cheap but is pay per use. An errant lambda function calling itself, cyclic lambda function calls bentween functions can result is huge bills. Any lambda functions that is going to exceed 1 million executions a day should be reviewed.','Review the code and design and inspect if there is any problem with the logic. If it known and expected behaviour please request for an exception.','','version-1','',1205352,{d '2017-09-15'},{d '2017-09-15'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('LambdaWithVPC_version-1','LambdaWithVPC','This rule checks for lambda which are associated with any VPC, if so then creates an issue.',null,'','version-1','',710383,{d '2017-10-26'},{d '2017-10-26'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Lambdacost_version-1','Lambdacost','AWS Lambda is cheap but is pay per use. An errant lambda function calling itself, cyclic lambda function calls bentween functions can result is huge bills. Any lambda functions that is going to exceed 25 dollars should be reviewed.','Review the code and design and inspect if there is any problem with the logic. If it known and expected behaviour please request for an exception.','','version-1','',1205352,{d '2017-09-15'},{d '2017-09-15'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('LowUtilizationAmazonEC2InstancesRule_version-1','LowUtilizationAmazonEC2InstancesRule','Checks the Amazon Elastic Compute Cloud (Amazon EC2) instances that were running at any time during the last 14 days and alerts you if the daily CPU utilization was 10% or less and network I/O was 5 MB or less on 4 or more days. Running instances generate hourly usage charges. Although some scenarios can result in low utilization by design, you can often lower your costs by managing the number and size of your instances. \nAn instance had 10% or less daily average CPU utilization and 5 MB or less network I/O on at least 4 of the previous 14 days','Consider stopping or terminating instances that have low utilization, or scale the number of instances by using Auto Scaling.','','version-1','',710383,{d '2018-03-12'},{d '2018-03-12'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Non-role-task-members_version-1','Non-role-task-members','Only roles can be a member of a task\nAny task group (t_*) that contains a memberof which is not a role (r_*)','','','version-1','',710383,{d '2018-05-23'},{d '2018-05-23'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('NonAdminAccountsWithIAMFullAccess_version-1','NonAdminAccountsWithIAMFullAccess','As per AWS policy management standards, only the role named ''Admin'' have access to IAM. No other AWS role is supposed have IAM access.','Remove the IAM privilleges from that role.','','version-1','',710383,{d '2017-08-11'},{d '2017-08-11'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#detach-customer-managed-policy-with-full-access-from-iam-role');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('NonStandardRegionRule_version-1','NonStandardRegionRule','Paladincloud using resources some standard region (us-est/west). As part of this rule if the resource finds non-standard region it should report as violation.',null,null,'version-1',null,null,{d '2018-08-30'},{d '2018-08-30'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-ebs-volume');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Onprem-asset-scanned-by-qualys-API_version-1','Onprem-asset-scanned-by-qualys-API','Onprem assets should be scanned by Qualys vulnerability assessment tool atleast once a month. It would be ideal to have the Qulays Cloud Agent installed on all the assets. This would eliminate the need to have manual external scans','','','version-1','',710383,{d '2018-05-14'},{d '2018-05-14'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('RdsSnapshotWithPublicAccess_version-1','RdsSnapshotWithPublicAccess','A RDS snapshot may contain sensitive or customer information. No RDS snapshot should be made public from our accounts. There are very rare cases where this might be required. Those cases have to go through exception process. ','Make the snapshot private','','version-1','',710383,{d '2017-08-16'},{d '2017-08-16'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-to-rds-snapshots');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('RedShiftPublicAccess_version-1','RedShiftPublicAccess','A Redshift snapshot may contain sensitive or customer information. No RDS snapshot should be made public from our accounts. There are very rare cases where this might be required. Those cases have to go through exception process. ','Make the snapshot private','','version-1','',710383,{d '2017-10-09'},{d '2017-10-09'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-to-redshift');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Repository-complies-with-a-branching-strategy_version-1','Repository-complies-with-a-branching-strategy','This policy checks that repository in Bitbucket follows a matured branching strategy - \n1.Repository should either follow git flow workflow\n2.Or repository should follow trunck based workflow\n3. Or repository follws feature branch based workflow','Follow gitflow workflow branching strategy (https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow), Follow trunk or forking based  branching strategy (https://www.atlassian.com/git/tutorials/comparing-workflows/forking-workflow), Follow feature branch based workflow (https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow)','','version-1','',710383,{d '2018-04-05'},{d '2018-04-05'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Repository-complies-with-a-branching-strategy_version-2','Repository-complies-with-a-branching-strategy','This policy checks that repository in Bit-bucket follows a mature branching strategy \n1. Repository follows git flow workflow\n2. Or repository follows trunk based workflow \n3. Or repository follows feature branch based workflow','','','version-2','',1205352,{d '2018-06-14'},{d '2018-06-14'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Repository-complies-with-trunk-based-strategy_version-1','Repository-complies-with-trunk-based-strategy','This policy checks that repository in Bitbucket follows trunk branching strategy\n\n1. Repository should only have a master branch\n2. Repository should only have Feature branches other than Master branch','If there are branches other than Feature, Merge and delete the branches, In future only create feature branches.','','version-1','',710383,{d '2018-04-05'},{d '2018-04-05'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Repository-should-not-have-stale-branch_version-1','Repository-should-not-have-stale-branch','This policy checks if branches in a repository, other than master/develop/release are not active for more than two weeks','','','version-1','',1205352,{d '2018-04-06'},{d '2018-04-06'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Repository-should-not-have-stale-branch_version-2','Repository-should-not-have-stale-branch','This policy checks if branches, other than master/develop/release had a commit in the last two weeks','','','version-2','',1205352,{d '2018-05-23'},{d '2018-05-23'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('RepositoryCompliesWithTruckBasedStrategy_version-1','RepositoryCompliesWithTruckBasedStrategy','Repository should only have a master branch','','','version-1','',710383,{d '2018-03-27'},{d '2018-03-27'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('RepositoryShouldNotHaveMoreBranches_version-1','RepositoryShouldNotHaveMoreBranches','Every Repository should not have more than <X> branches at a time','','','version-1','',710383,{d '2018-03-27'},{d '2018-03-27'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Respository-Policy_version-1','Respository-Policy','This policy checks that repository in Bitbucket follows git flow branching strategy - \n1.Repo should have exactly 1 master branch\n2.Repo should have exactly 1 develop branch\n3.Repo should have branches prefixed with /hotfix, /release ,/feature, /bugfix ','Follow gitflow workflow branching strategy (https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow)','','version-1','',1205352,{d '2018-03-27'},{d '2018-03-27'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('S3-apptag-policy-by-Asif_version-1','S3-apptag-policy-by-Asif','S3-apptag-policy-by-Asif','','','version-1','',1205352,{d '2018-06-18'},{d '2018-06-18'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('S3GlobalAccess_version-1','S3BucketWithGlobalReadWritePermission','Unprotected S3 buckets are one of the major causes for data theft and intrusions. Except for the S3 buckets used for hosting static website, none of the S3 buckets should be globally accessible for unauthenticated users or for Any AWS Authenticate Users.','S3 buckets should be protected by using the bucket ACL and bucket policies,If you want to share data via S3 buckets to other users,you could create pre-signed URLs which will be valid only for short duration.For all automation related work use the bucket policy and grant access to the required roles.','','version-1','',2689645,{d '2017-08-17'},{d '2017-08-17'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('SGWithAnywhereAccess_version-1','SGWithAnywhereAccess','It is best practice to allows required ip ranges and specific port in the security groups that will be used for securing EC2 instances in private subnets.','Edit the security groups and allow only specific IP ranges and ports','','version-1','',710383,{d '2017-08-11'},{d '2017-08-11'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-security-group-public-access-on-memcached-port-11211');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('SSMAgentCheckRule_version-1','SSMAgentCheckRule','This rule checks if EC2 instance has SSM agent with pingstatus as Online, if not its an issue','','','version-1','',710383,{d '2018-05-26'},{d '2018-05-26'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('ServiceLimitRule_version-1','ServiceLimitRule','All AWS service limits should be extended from time to time based on the growing needs. Cloudformation execution, Auotscalling or A,B deplymnet for production workloads may fail if the service limit is reached  causing downtime. Proactively service limits should be extended when limit thresholds reach 75% or above','Open a case with AWS and increase the service limits','','version-1','',710383,{d '2017-10-17'},{d '2017-10-17'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('SgWithRdpPortHasGlobalAccess_version-1','SgWithRdpPortHasGlobalAccess','Global permission to access the well known services like RDP on port 3389 (Windows RDP) should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',710383,{d '2017-08-11'},{d '2017-08-11'},'https://github.com/PaladinCloud/Rev1/wiki/AWS-Policy#deny-security-group-public-access-to-rdp-port-3389');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('TaggingRule_version-1','Assign Mandatory Tags','All AWS assets should be tagged with following mandatory tags. Application,  Environment, Role and Stack. Assets without these mandatory tags will be marked as non-complaint. Below is an example for the tag value pairs.\n\nTag name: Application\nExample value: Rebellion\n\nNotes\nThis value for the application tag should be the approved application name give for the project during the cloud on-boarding process. Unknown applications will be marked for review and possible termination.\n\nTag name: Environment\nExample value: Production or Non Production or Non Production::qat1 or Non Production::dit1 (Refer Naming guide)\n\nNotes\nThe value for environment should distinguish the asset as a Production or Non Production class. You can further qualify Non Production assets using the :: separator. Look at the examples 3 and 4.\n\nTag name: Stack\nExample Value: Apache Httpd\n\nTag name: Role\nExample value: Webserver\n\n \nEach asset should at least have these 4 mandatory tags. You can have additional tags as well.','Add the mandatory tags to the assets,Follow the Cloud Asset Tagging guidelines.','','version-1','',710383,{d '2017-11-02'},{d '2017-11-02'},'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#assign-mandatory-tags');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Underutilized-Amazon-EBS-Volumes_version-1','Underutilized-Amazon-EBS-Volumes','Checks Amazon Elastic Block Store (Amazon EBS) volume configurations and warns when volumes appear to be underused. Charges begin when a volume is created. If a volume remains unattached or has very low write activity (excluding boot volumes) for a period of time, the volume is probably not being used.\n\nAlert Criteria\nYellow: A volume is unattached or had less than 1 IOPS per day for the past 7 days.','Consider creating a snapshot and deleting the volume to reduce costs','','version-1','',710383,{d '2018-05-14'},{d '2018-05-14'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('UnderutilizedAmazonRedshiftClustersRule_version-1','UnderutilizedAmazonRedshiftClustersRule','Checks your Amazon Redshift configuration for clusters that appear to be underutilized. If an Amazon Redshift cluster has not had a connection for a prolonged period of time or is using a low amount of CPU, you can use lower-cost options such as downsizing the cluster or shutting down the cluster and taking a final snapshot. Final snapshots are retained even after you delete your cluster\nAlert Criteria\nYellow: A running cluster has not had a connection in the last 7 days.\nYellow: A running cluster had less than 5% cluster-wide average CPU utilization for 99% of the last 7 days.','Consider shutting down the cluster and taking a final snapshot, or downsizing the cluster\n','','version-1','',710383,{d '2018-03-14'},{d '2018-03-14'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('UntaggedOrUnusedEbsRule_version-1','UntaggedOrUnusedEbsRule','This rule checks the untagged or unused Ebs volume to avoid the cost',null,null,'version-1',null,null,{d '2018-08-21'},{d '2018-08-21'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Unused-Security-group_version-1','Unused-Security-group','Cleaning up un-used security groups is best practice to keep the security groups upto date and relevant.','Delete the unused security groups','','version-1','',710383,{d '2017-10-09'},{d '2017-10-09'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('UnusedApplicationElbRule_version-1','UnusedApplicationElbRule','Un-used assets should be terminated promptly for obvious cost saving reasons','Terminate the ELB if it is no longer required','','version-1','',710383,{d '2017-09-28'},{d '2017-09-28'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('UnusedClassicElbRule_version-1','UnusedClassicElbRule','Un-used assets should be terminated promptly for obvious cost saving reasons','Terminate the ELB if it is no longer required','','version-1','',710383,{d '2017-09-28'},{d '2017-09-28'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('UnusedEBSRule_version-1','UnusedEBSRule','Un-used assets should be terminated promptly for obvious cost saving reasons','Delete the volume if it is no longer required','','version-1','',710383,{d '2017-10-13'},{d '2017-10-13'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('UnusedElasticIpRule_version-1','UnusedElasticIpRule','Checks for Elastic IP addresses (EIPs) that are not associated with a running Amazon Elastic Compute Cloud (Amazon EC2) instance. EIPs are static IP addresses designed for dynamic cloud computing. Unlike traditional static IP addresses, EIPs can mask the failure of an instance or Availability Zone by remapping a public IP address to another instance in your account. A nominal charge is imposed for an EIP that is not associated with a running instance.\n','Associate the EIP with a running active instance, or release the unassociated EIP','','version-1','',710383,{d '2018-02-01'},{d '2018-02-01'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('VpcFlowLogsEnabled_version-1','VpcFlowLogsEnabled','VPC flow logs provide vital information for debugging and forensic exercise in case of any incidents. These should be always enabled','Enable VPC flow logs','','version-1','',710383,{d '2017-08-11'},{d '2017-08-11'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-vpc-flow-logs');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('VpcFlowLogsEnabled_version-2','VpcFlowLogsEnabled','This rule checks  the VPC flow log enabled for a given VPC id,account & region else its an issue',null,'','version-2','',20433,{d '2017-08-21'},{d '2017-08-21'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('apacheserver-public-access_version-1','apacheserver-public-access','This rule check EC2 private IP can be accessed with port 80 to the public',null,'','version-1','',1205352,{d '2017-08-15'},{d '2017-08-15'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-1','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-1','',1205352,{d '2017-08-10'},{d '2017-08-10'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-10','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-10','',333523,{d '2017-09-28'},{d '2017-09-28'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-11','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-11','',333523,{d '2017-09-29'},{d '2017-09-29'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-12','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-12','',333523,{d '2017-10-10'},{d '2017-10-10'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-13','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-13','',333523,{d '2017-10-13'},{d '2017-10-13'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-14','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-14','',333523,{d '2017-11-02'},{d '2017-11-02'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-2','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-2','',333523,{d '2017-08-16'},{d '2017-08-16'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-3','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-3','',333523,{d '2017-08-17'},{d '2017-08-17'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-4','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-4','',333523,{d '2017-08-23'},{d '2017-08-23'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-5','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-5','',333523,{d '2017-08-24'},{d '2017-08-24'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-6','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-6','',333523,{d '2017-08-28'},{d '2017-08-28'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-7','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-7','',333523,{d '2017-09-06'},{d '2017-09-06'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-8','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-8','',333523,{d '2017-09-08'},{d '2017-09-08'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('applicationelb_version-9','applicationelb','This rule checks for Application ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-9','',333523,{d '2017-09-12'},{d '2017-09-12'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('certificate-expiry-policy_version-1','certificate-expiry-policy','All SSL certificates must be renewed before specified days of the expiry and installed in the corresponding system','Renew and install the certficate before the specified threshold','','version-1','',1205352,{d '2017-10-26'},{d '2017-10-26'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('classicelbmandatory_version-1','classicelbmandatory','This rule checks for Classic ELB mandatory tags maintained for given LB in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-1','',1205352,{d '2017-08-10'},{d '2017-08-10'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('cloud-kernel-compliance_version-1','cloud-kernel-compliance','All Linux servers in AWS cloud should be patched as per the quarterly patching criteria published for the entire organization','Patch the operating system as per the criteria defined for the current quarter','','version-1','',1205352,{d '2017-09-14'},{d '2017-09-14'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('dryrundemo_version-1','dryrundemo','Simple policy creation demo','','','version-1','',70245,{d '2018-01-12'},{d '2018-01-12'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('ebsmandatorytags_version-1','ebsmandatorytags','This rule checks for EBS mandatory tags maintained for given volume in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-1','',1205352,{d '2017-08-10'},{d '2017-08-10'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('ec2deperecatedinstancetype_version-1','ec2deperecatedinstancetype','Deprecated Ec2 instance types (Old generation instance types) should not be used. Using old generation instance types have cost implication, they are not covered in our RI purchase as well','Stop the instance and change the instance type to a newer generation one and start it','','version-1','',1205352,{d '2017-08-11'},{d '2017-08-11'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('ec2mandatorytags_version-1','ec2mandatorytags','This rule checks for EC2 mandatory tags maintained for given instance in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-1','',1205352,{d '2017-08-10'},{d '2017-08-10'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('ec2publicaccesstoport9200_version-1','ec2publicaccesstoport9200','Global permission to access the well known services like TCP on Port 9200 (Elastic Search) should not be allowed.','Do not allow global access to well known ports of an EC2 instance directly (except for 80 and 443)','','version-1','',1205352,{d '2017-08-23'},{d '2017-08-23'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('es-access_version-1','es-access','This Rule check for EC2 private IP address is accessible internally.',null,'','version-1','',1205352,{d '2017-08-22'},{d '2017-08-22'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('esearch_version-1','esearch','This rule checks for elastic search accessible internally.',null,'','version-1','',1205352,{d '2017-08-22'},{d '2017-08-22'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('lambdamandatorytags_version-1','lambdamandatorytags','This rule checks for Lambda mandatory tags maintained for given function in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-1','',1205352,{d '2017-08-10'},{d '2017-08-10'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('onpremisekernelversion_version-1','onpremisekernelversion','This rule checks for the on-premise servers kernel version is compliant. If it is not compliant it will create an issue.',null,'','version-1','',1205352,{d '2017-08-16'},{d '2017-08-16'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('rdsdb_version-1','rdsdb','A publicly accessible database end-point would be vulnerable to bruteforce login attempts and subsequent data loss. Unauthorised access should be restircted to minimize security risks.','To restrict access to any publicly accessible RDS database instance you must disable the database Publicly Accessible flag and update the VPC security group associated with the instance.','','version-1','',1205352,{d '2017-09-06'},{d '2017-09-06'},'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-to-rds-database');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('s3mandatorytags_version-1','s3mandatorytags','This rule checks for S3 mandatory tags maintained for given bucket in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-1','',1205352,{d '2017-08-10'},{d '2017-08-10'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('serverless-rule_version-1','serverless-rule','Serverless rule',null,'','version-1','',20433,{d '2017-09-06'},{d '2017-09-06'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('sgmandatorytags_version-1','sgmandatorytags','This rule checks for Security Group mandatory tags maintained for given SG in AWS account. If any of the mandatory tags are missing it will create an issue.',null,'','version-1','',1205352,{d '2017-08-10'},{d '2017-08-10'});



INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('cloudfront-check-for-unauthorized-html_version-1','cloudfront-check-for-unauthorized-html','Cloudfront check for unauthorized html content',null,'','version-1','',1205352,{d '2019-04-26'},{d '2019-04-26'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('ServiceAccountPrivilegesRule_version-1','ServiceAccountPrivilegesRule','Service account should only has the read permission List of privileges it’s checking right now ec2:TerminateInstances,ec2:RunInstances,s3:DeleteBucket,s3:PutBucketPolicy,ec2:ModifyInstanceAttribute,s3:DeleteObject,ec2:*,*,s3:*,s3:Put*,cloudtrail:*,cloudtrail:DeleteTrail,config:*,config:DeleteConfigRule','Remove write permissions from service accounts.','','version-1','',1205352,{d '2019-04-26'},{d '2019-04-26'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('core-networking-iam-user-with-unapproved-access_version-1','core-networking-iam-user-with-unapproved-access','Anyone outside CCOE admins not supposed to have these permissions List of privileges it’s checking right now "ec2:AssociateDhcpOptions","ec2:AssociateRouteTable","ec2:AssociateSubnetCidrBlock","ec2:AssociateVpcCidrBlock","ec2:AttachInternetGateway","ec2:AttachVpnGateway","ec2:CreateCustomerGateway","ec2:CreateDefaultSubnet","ec2:CreateDefaultVpc","ec2:CreateEgressOnlyInternetGateway","ec2:CreateInternetGateway","ec2:CreateNatGateway","ec2:CreateNetworkAcl","ec2:CreateNetworkAclEntry","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSubnet","ec2:CreateVpc","ec2:CreateVpcPeeringConnection","ec2:CreateVpnConnection","ec2:CreateVpnConnectionRoute","ec2:CreateVpnGateway","ec2:DeleteCustomerGateway","ec2:DeleteDhcpOptions","ec2:DeleteNatGateway","ec2:DeleteNetworkAcl","ec2:DeleteNetworkAclEntry","ec2:DeleteRouteTable","ec2:DeleteSubnet","ec2:DeleteVpc","ec2:DeleteVpcEndpointServiceConfigurations","ec2:DeleteVpcPeeringConnection","ec2:DeleteVpnConnection","ec2:DeleteVpnConnectionRoute","ec2:DeleteVpnGateway","ec2:DetachInternetGateway","ec2:DetachVpnGateway","ec2:DisableVgwRoutePropagation","ec2:DisassociateRouteTable","ec2:DisassociateSubnetCidrBlock","ec2:DisassociateVpcCidrBlock","ec2:ModifyVpcAttribute","ec2:ModifyVpcTenancy","ec2:ReplaceNetworkAclAssociation","ec2:ReplaceNetworkAclEntry","ec2:ReplaceRoute","ec2:ReplaceRouteTableAssociation","iam:AddUserToGroup","iam:AttachGroupPolicy","iam:AttachRolePolicy","iam:AttachUserPolicy","iam:CreateAccessKey","iam:CreatePolicy","iam:CreatePolicyVersion","iam:CreateRole","iam:CreateSAMLProvider","iam:CreateUser","iam:DeleteAccessKey","iam:DeleteAccountPasswordPolicy","iam:DeleteGroup","iam:DeleteGroupPolicy","iam:DeletePolicy","iam:DeletePolicyVersion","iam:DeleteSAMLProvider""ec2:CreateDhcpOptions","iam:DeleteServerCertificate","iam:DetachGroupPolicy","iam:DetachUserPolicy","iam:PutGroupPolicy","iam:PutRolePolicy""iam:PutUserPolicy","iam:RemoveUserFromGroup","iam:UpdateGroup","iam:UpdateSAMLProvider","iam:UpdateServerCertificate"","resolution":"Attach deny policy / remove elevated permissions,If you want exception you may please request exception for this rule through PacBot.','Attach deny policy / remove elevated permissions,If you want exception you may please request exception for this rule through PacBot.','','version-1','',1205352,{d '2019-04-26'},{d '2019-04-26'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('IAMRoleNetworkPrivilegesRule_version-1','IAMRoleNetworkPrivilegesRule','None of the roles supposed to have these permissions List of privileges it’s checking right now "ec2:AssociateDhcpOptions","ec2:AssociateRouteTable","ec2:AssociateSubnetCidrBlock","ec2:AssociateVpcCidrBlock","ec2:AttachInternetGateway","ec2:AttachVpnGateway","ec2:CreateCustomerGateway","ec2:CreateDefaultSubnet","ec2:CreateDefaultVpc","ec2:CreateEgressOnlyInternetGateway","ec2:CreateInternetGateway","ec2:CreateNatGateway","ec2:CreateNetworkAcl","ec2:CreateNetworkAclEntry","ec2:CreateRoute","ec2:CreateRouteTable","ec2:CreateSubnet","ec2:CreateVpc","ec2:CreateVpcPeeringConnection","ec2:CreateVpnConnection","ec2:CreateVpnConnectionRoute","ec2:CreateVpnGateway","ec2:DeleteCustomerGateway","ec2:DeleteDhcpOptions","ec2:DeleteNatGateway","ec2:DeleteNetworkAcl","ec2:DeleteNetworkAclEntry","ec2:DeleteRouteTable","ec2:DeleteSubnet","ec2:DeleteVpc","ec2:DeleteVpcEndpointServiceConfigurations","ec2:DeleteVpcPeeringConnection","ec2:DeleteVpnConnection","ec2:DeleteVpnConnectionRoute","ec2:DeleteVpnGateway","ec2:DetachInternetGateway","ec2:DetachVpnGateway","ec2:DisableVgwRoutePropagation","ec2:DisassociateRouteTable","ec2:DisassociateSubnetCidrBlock","ec2:DisassociateVpcCidrBlock","ec2:ModifyVpcAttribute","ec2:ModifyVpcTenancy","ec2:ReplaceNetworkAclAssociation","ec2:ReplaceNetworkAclEntry","ec2:ReplaceRoute","ec2:ReplaceRouteTableAssociation","iam:AddUserToGroup","iam:AttachGroupPolicy","iam:AttachRolePolicy","iam:AttachUserPolicy","iam:CreateAccessKey","iam:CreatePolicy","iam:CreatePolicyVersion","iam:CreateRole","iam:CreateSAMLProvider","iam:CreateUser","iam:DeleteAccessKey","iam:DeleteAccountPasswordPolicy","iam:DeleteGroup","iam:DeleteGroupPolicy","iam:DeletePolicy","iam:DeletePolicyVersion","iam:DeleteSAMLProvider""ec2:CreateDhcpOptions","iam:DeleteServerCertificate","iam:DetachGroupPolicy","iam:DetachUserPolicy","iam:PutGroupPolicy","iam:PutRolePolicy""iam:PutUserPolicy","iam:RemoveUserFromGroup","iam:UpdateGroup","iam:UpdateSAMLProvider","iam:UpdateServerCertificate"','Attach deny policy / remove elevated permissions,If you want exception you may please request exception for this rule through PacBot.','','version-1','',1205352,{d '2019-04-26'},{d '2019-04-26'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('EC2-RunInstance-iam-role-with-unapproved-access_version-1','EC2-RunInstance-iam-role-with-unapproved-access','IAM roles donot have the permission to launch instances ist of privileges it’s checking right now ec2:*,*,ec2:RunInstances','Attach deny policy / remove elevated permissions,If you want exception you may please request exception for this rule through PacBot.','','version-1','',1205352,{d '2019-04-26'},{d '2019-04-26'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('UnapprovedIamRoleWithLambdaAccess_version-1','UnapprovedIamRoleWithLambdaAccess','IAM roles not supposed to have lambda function creation permissions List of privileges it’s checking right now lambda:CreateFunction,lambda:Create*,*,lambda:*','Remove lambda create permission from role or if you want exception you may please request exception for this rule through PacBot.','','version-1','',1205352,{d '2019-04-26'},{d '2019-04-26'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('S3HostsWebsiteRule_version-1','S3HostsWebsiteRule','This rule checks for s3 bucket containing web-site configuration.If its true then its an issue.','','','version-1','',1205352,{d '2019-06-10'},{d '2019-06-10'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Unauthorized-Cloudfront-Distribution_version-1','Unauthorized-Cloudfront-Distribution','This policy checks for unauthorized CloudFront distribution.','','','version-1','',1205352,{d '2019-06-10'},{d '2019-06-10'});
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('ElbWithPublicAccess_version-1','ElbWithPublicAccess','All internet facing ELB will be marked as a policy violation.You would need to request for an exception by providing Cloud Application Name What component of the application is made public?Why it has to be public?What data will be exposed via the internet facing system?The reason why all internet-facing are marked as violation is, the number of cases where we need to have internet-facing load balancers is small and these legitimate cases will be reviewed and granted exception. Developer often associate internet-facing load balancers for internal applications and end up exposing sensitive data.',null,'','version-1','',1205352,{d '2019-06-17'},{d '2019-06-17'});
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Check_MFA_RootUSer_version-1','Check_MFA_RootUSer','Check MFA enabled for root user(account)',"Enable the MFA for root user",NULL,'version-1','fed',NULL,'2019-02-18','2019-03-18','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-mfa-for-root-user');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Centralized_CloudTrail_version-1','Centralized_CloudTrail','Check if centralized cloudtrail is enabled for accounts.\n\nFollowing conditions to be checked:-\n\n1. Check if \"mentioned cloud trial\" is attached to  cloudtrail or not.\n2. If it is attached then it will be compliance.',"Enable the cloudtrail in multi region",NULL,'version-1','fed',NULL,'2019-02-20','2019-03-18');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('ACMCertificate_Expiry_For_X_Days_version-1','ACMCertificate_Expiry_For_X_Days','Check expiry date of  ACM certificate on following conditions:-\n\n1. If expiry date is under 90 days from current date then it is non-compliance otherwise compliance.',"Rotate the keys before the expiry",NULL,'version-1','fed',NULL,'2019-02-18','2019-03-18');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('IAMCertificate_Expiry_For_X_Days_version-1','IAMCertificate_Expiry_For_X_Days','Check IAM certificate expiry date on following conditions:-\n\n1. If expiry date is under 90 days from current date then it is non-compliance otherwise compliance.',"Rotate the keys before the expiry",NULL,'version-1','fed',NULL,'2019-02-18','2019-03-18','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#remove-expired-iam-certificates');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('ELB_Access_Logs_version-1','ELB_Access_Logs','Check access log enabled in S3 bucket for ELB with \'logging\' tag name as \'true\' or without logging tags should be passed.',"Access log should be enabled to ELB and attached to mentioned bucket",NULL,'version-1','fed',NULL,'2019-02-24','2019-03-14');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('CloudFront_AccessLogs_version-1','CloudFront_AccessLogs','Check access log enabled in S3 bucket for CloudFront with \'logging\' tag name as \'true\' or without logging tags should be passed.',"Access log should be enabled to cloudfront and attached to mentioned bucket",NULL,'version-1','fed',NULL,'2019-02-18','2019-03-14');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('S3AccessLogsRule_version-1','S3AccessLogsRule','Protected S3 buckets should be server access logs enabled',"Protected S3 buckets should be server access logs enabled",NULL,'version-1','fed',NULL,'2019-08-05','2019-08-05');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('CloudWatchEventsForAllAccounts_version-1','CloudWatchEventsForAllAccounts','Events from all AWS account should be routed to a central event bus so that the events and be processed and analyzed centrally.',"Events from all AWS account should be routed to a central event.",NULL,'version-1','fed',NULL,'2019-08-05','2019-08-05');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('LowUtilizationAmazonEC2InstancesRule_version-1','LowUtilizationAmazonEC2InstancesRule','Checks the Amazon Elastic Compute Cloud (Amazon EC2) instances that were running at any time during the last 14 days and alerts you if the daily CPU utilization was 10% or less and network I/O was 5 MB or less on 4 or more days. Running instances generate hourly usage charges. Although some scenarios can result in low utilization by design, you can often lower your costs by managing the number and size of your instances. n instance had 10% or less daily average CPU utilization and 5 MB or less network I/O on at least 4 of the previous 14 days',"Consider stopping or terminating instances that have low utilization, or scale the number of instances by using Auto Scaling.",NULL,'version-1','fed',NULL,'2019-08-05','2019-08-05');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('ElasticSearchPublicAccess_version-1','ElasticsearchPublicAccessRule','Make necessary changes to the access control policy and security groups to make the ES endpoint private, Allow only a specific list of IP addresses, Once the Elastic Search endpoint is not publicly accessible PacBot will auotmatically close the issue, In case you want this to be public then send a request for exeception to Paladincloud.io, You can also request exception from the policy violation details page, Secops will review and involve DSO if required and grant exception and PacBot will automatically ignore this resource till the expiry of exception.',"Make necessary changes to the access control policy and security groups to make the ES endpoint private, Allow only a specific list of IP addresses, Once the Elastic Search endpoint is not publicly accessible PacBot will auotmatically close the issue, In case you want this to be public then send a request for exeception to paladincloud.io, You can also request exception from the policy violation details page, Secops will review and involve DSO if required and grant exception and PacBot will automatically ignore this resource till the expiry of exception.",NULL,'version-1','fed',NULL,'2019-08-05','2019-08-05','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-to-opensearch');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Azure_Close_management_ports_version-1','Deny access to Virtual Machine Management Ports','Management ports usually consist of the ports that you have used to connect to your Azure virtual machines i.e. Remote Desktop Protocol (RDP) and the Secure Shell (SSH) protocol. These protocols enable admins to manage VMs from remote locations and are common management ports',"",NULL,'version-1','fed',NULL,'2019-08-05','2019-08-05','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-access-to-virtual-machine-management-ports');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Azure_Enable_Adaptive_Application_controls_version-1','Enable Adaptive Application Controls','Application control helps you deal with malicious and/or unauthorized software, by allowing only specific applications to run on your VMs and Computers',"Open the Security Center dashboard.,In the left pane select Adaptive application controls located under Advanced cloud defense and Follow the guidelines.",NULL,'version-1','fed',NULL,'2019-08-05','2019-08-05','https://github.com/tmobile/pacbot/wiki/Policies#Enable-Adaptive-Application-Controls');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Azure_Enable_Network_Security_version-1','Enable Network Security','Always use NSG to secure your Virtual Machines',"",NULL,'version-1','fed',NULL,'2019-08-05','2019-08-05','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-network-security-groups-on-virtual-machines');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Azure_Install_a_vulnerability_version-1','Install a vulnerability assessment solution on your virtual machines','The vulnerability assessment in Azure Security Center is part of the Security Center virtual machine (VM) recommendations. If Security Center doesnt find a vulnerability assessment solution installed on your VM, it recommends that you install one. A partner agent, after being deployed, starts reporting vulnerability data to the partner’s management platform. In turn, the partners management platform provides vulnerability and health monitoring data back to Security Center. You can quickly identify vulnerable VMs on the Security Center dashboard. Switch to the partner management console directly from Security Center for additional reports and information.',"",NULL,'version-1','fed',NULL,'2019-08-05','2019-08-05');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Azure_Install_monitoring_agent_version-1','Install monitoring agent on your machines','Security Center uses the Microsoft Monitoring Agent (MMA) to collect security events from your Azure virtual machines. To make sure your virtual machines are successfully monitored, you need to enable data collection in Security Center and make sure the MMA agent is both installed on the virtual machines and properly collects security events to the configured workspace. Enabling data collection in Security Center enables you to benefit from multiple agent-based features, including OS baselines rules assessments, monitoring for missing system updates, endpoint protection issues and advanced threat detection capabilities.',"Installation of the monitoring agent and enabling data collection in Security Center can be done in several ways: Using Security Center’s automatic provisioning on your subscription(s). This will automatically provision the monitoring agent on current and future-created virtual machines on your subscription(s). You can enable automatic provisioning on multiple subscriptions by clicking on the Getting started menu item, and select 'Install agents'. You can also enable it for specific subscriptions and customize additional settings by clicking on the 'Security policy' menu item, select 'Edit settings' on a subscription and enable auto provisioning in the 'data collection' menu item. Install the Microsoft Monitoring agent on your Virtual machines as a VM extension or directly, by following these instructions. Provision the Microsoft Monitoring agent with Azure Policies.",NULL,'version-1','fed',NULL,'2019-08-05','2019-08-05','https://github.com/PaladinCloud/CE/wiki/Policy');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Azure_Just_in_time_network_access_version-1','Enable Just in time network access on your virutal machines','Just-in-time (JIT) virtual machine (VM) access can be used to lock down inbound traffic to your Azure VMs, reducing exposure to attacks while providing easy access to connect to VMs when needed.',"Open the Security Center dashboard.,In the left pane, select Just-in-time VM access.,The Just-in-time VM access window opens.,Select the Recommended tab.,Under VIRTUAL MACHINE, click the VMs that you want to enable. This puts a checkmark next to a VM.,",NULL,'version-1','fed',NULL,'2019-08-05','2019-08-05','https://github.com/PaladinCloud/Rev1/wiki/Azure-Policy#enable-vm-just-in-time-access-control');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Azure_Remediate_vulnerabilities_version-1','Remediate vulnerabilities - by a Vulnerability Assessment solution','This is Azure security rule',"",NULL,'version-1','fed',NULL,'2019-08-05','2019-08-05');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Azure_Resolve_monitoring_agent_version-1','Resolve monitoring agent health issues on your machines','This is Azure Secuirty Rule',"",NULL,'version-1','fed',NULL,'2019-08-05','2019-08-05','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#resolve-app-service-health-check-issues');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Azure_harden-NSGs_internet_version-1','Harden Network Security Group rules of publicly accessible Virtual Machines','Adaptive network hardening is an agentless feature of Microsoft Defender for Cloud - this does not require any installation on your machines to benefit from this network hardening tool',"",NULL,'version-1','fed',NULL,'2019-08-05','2019-08-05','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#harden-network-security-group-rules-of-publicly-accessible-virtual-machines');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Access_Through_Internet_version-1','Access_Through_Internet','Inbound rules should not allow access from Any or Internet ranges','Access through Internet-facing endpoint should be restricted.',NULL,'version-1',NULL,NULL,'2019-09-26','2019-11-07');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Adaptive_App_Control_version-1','Adaptive_App_Control','Adaptive Application Controls should be enabled on virtual machines',NULL,NULL,'version-1',NULL,NULL,'2019-08-27','2019-08-27');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Auditing_Advanced_Data_Security_version-1','Auditing_Advanced_Data_Security','Auditing should be enabled on advanced data security settings on SQL Server','Auditing should be enabled on advanced data security settings on SQL Server',NULL,'version-1',NULL,NULL,'2019-09-26','2019-09-26');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('AzureAuditNetworkAccessToStorageAccounts_version-1','AzureAuditNetworkAccessToStorageAccounts','Audit unrestricted network access in your storage account firewall settings. Instead, configure network rules so only applications from allowed networks can access the storage account. To allow connections from specific internet or on-premise clients, access can be granted to traffic from specific Azure virtual networks or to public internet IP address ranges',NULL,NULL,'version-1',NULL,NULL,'2019-11-08','2019-11-08');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('AzureAuditStorageVnetIntegration_version-1','AzureAuditStorageVnetIntegration','Audit Storage Vnet Integration',NULL,NULL,'version-1',NULL,NULL,'2019-11-08','2019-11-08');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('AzureAuditTransferToStorageAccounts_version-1','AzureAuditTransferToStorageAccounts','Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking',NULL,NULL,'version-1',NULL,NULL,'2019-11-08','2019-11-08');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('AzureBatchAccountMetricAlertRules_version-1','AzureBatchAccountMetricAlertRules','Audit configuration of metric alert rules on Batch account to enable the required metric',NULL,NULL,'version-1',NULL,NULL,'2019-11-08','2019-11-08');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('AzureBatchAccountsDiagnosticLogs_version-1','AzureBatchAccountsDiagnosticLogs','Audit enabling of diagnostic logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised',NULL,NULL,'version-1',NULL,NULL,'2019-11-08','2019-11-08');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('AzureNamespacesDiagnosticLogs_version-1','AzureNamespacesDiagnosticLogs','Audit enabling of diagnostic logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised',NULL,NULL,'version-1',NULL,NULL,'2019-11-08','2019-11-08');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('AzureSQLAuditLogging_version-1','AzureSQLAuditLogging','The AuditActionsAndGroups property should contain at least SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP, FAILED_DATABASE_AUTHENTICATION_GROUP, BATCH_COMPLETED_GROUP to ensure a thorough audit logging',NULL,NULL,'version-1',NULL,NULL,'2019-11-08','2019-11-08');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('AzureSQLServerAuthenticationSettings_version-1','AzureSQLServerAuthenticationSettings','Audit provisioning of an Azure Active Directory administrator for SQL Server to enable Azure AD authentication. Azure AD authentication enables simplified permission management and centralized identity management of database users and other Microsoft services',NULL,NULL,'version-1',NULL,NULL,'2019-11-08','2019-11-09');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Azure_SQLServerDataSecuritySettings_version-1','Azure_SQLServerDataSecuritySettings','Ensure that an email address is provided for the \'Send alerts to\' field in the Advanced Data Security server settings. This email address receives alert notifications when anomalous activities are detected on SQL servers.',NULL,NULL,'version-1',NULL,NULL,'2019-11-14','2019-11-14');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Azure_policies-Container_Security_Configurations_version-1','Azure_policies-Container_Security_Configurations','Vulnerabilities in container security configurations should be remediated',NULL,NULL,'version-1',NULL,NULL,'2019-08-27','2019-08-27');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Azure_policies-Disk_Encryption_version-1','Azure_policies-Disk_Encryption','Disk encryption should be applied on virtual machines',NULL,NULL,'version-1',NULL,NULL,'2019-08-27','2019-08-27');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Azure_policies-JIT_Network_Access_version-1','Enable JIT Network access Control','Just-in-time (JIT) virtual machine (VM) access is used to lock down inbound traffic to your Azure VMs, reducing exposure to attacks while providing easy access to connect to VMs when needed.',NULL,NULL,'version-1',NULL,NULL,'2019-08-27','2019-08-27');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Data_Encryption_SQL_version-1','Data_Encryption_SQL','Transparent Data Encryption on SQL databases should be enabled','Audit transparent data encryption status for SQL databases',NULL,'version-1',NULL,NULL,'2019-09-26','2019-09-26');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('IP_Forwarding_version-1','Disable IP Forwarding','Enabling IP forwarding on a virtual machine should be reviewed by the network security team','Enabling IP forwarding on a virtual machine should be reviewed by the network security team',NULL,'version-1',NULL,NULL,'2019-09-26','2019-09-26','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#disable-ip-forwarding');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Missing_Endpoint_Protection_version-1','Missing_Endpoint_Protection','Servers without an installed Endpoint Protection agent will be monitored by Azure Security Center as recommendations','Servers should be installed with  Endpoint Protection agent ',NULL,'version-1',NULL,NULL,'2019-09-26','2019-09-26');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Namespaces_DiagnosticLogs_version-1','Namespaces_DiagnosticLogs','Diagnostic logs in Namespaces should be enabled','This enables you to recreate activity trails to use for investigation purposes,when a security incident occurs or when your network is compromised',NULL,'version-1',NULL,NULL,'2019-09-30','2019-09-30');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('SQL_Auditing_Retention_version-1','SQL_Auditing_Retention','SQL servers should be configured with auditing retention days greater than 90 days','Audit SQL servers configured with an auditing retention period of less than 90 days',NULL,'version-1',NULL,NULL,'2019-09-30','2019-09-30');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('SQL_TDE_Encryption_version-1','SQL_TDE_Encryption','SQL server TDE protector should be encrypted with your own key','Transparent Data Encryption (TDE) with your own key support provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties',NULL,'version-1',NULL,NULL,'2019-09-30','2019-09-30');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('SQL_Vulnerability_Assessment_version-1','SQL_Vulnerability_Assessment','Vulnerability assessment should be enabled on your SQL servers','Audit Azure SQL servers which do not have recurring vulnerability assessment scans enabled. Vulnerability assessment can discover, track, and help you remediate potential database vulnerabilities',NULL,'version-1',NULL,NULL,'2019-09-30','2019-09-30');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Sensitive_Data_SQL_version-1','Sensitive_Data_SQL','Sensitive data in your SQL databases should be classified','Sensitive data in your SQL databases should be classified',NULL,'version-1',NULL,NULL,'2019-09-26','2019-09-26');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Subnet_NSG_rule_version-1','Subnet_NSG_rule','Subnets should be associated with a Network Security Group','Protect your subnet from potential threats by restricting access to it with a Network Security Group (NSG)',NULL,'version-1',NULL,NULL,'2019-09-30','2019-09-30');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('System_Updates_version-1','System_Updates','Missing security system updates on your servers will be monitored by Azure Security Center as recommendations','System updates should be up to date',NULL,'version-1',NULL,NULL,'2019-09-26','2019-09-26');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Vaults_DiagnosticLogs_version-1','Vaults_DiagnosticLogs','Diagnostic logs in Key Vault should be enabled','Diagnostic logs in Key Vault should be enabled',NULL,'version-1',NULL,NULL,'2019-09-30','2019-09-30');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) values('Workflows_DiagnlsticLogs_version-1','Workflows_DiagnlsticLogs','Diagnostic logs in Logic Apps should be enabled','This enables you to recreate activity trails to use for investigation purposes,when a security incident occurs or when your network is compromised',NULL,'version-1',NULL,NULL,'2019-09-30','2019-09-30');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) VALUES ('SQL_UnrestrictedDatabaseAccess_version-1','Deny public access to SQL Database','Ensure that no SQL databases allow unrestricted inbound access from 0.0.0.0/0 (any IP address).','Update the StartIpAddress and EndIpAddress attribute values for the SQL server firewall rule, in order to restrict the database access to a specific IP address/IP address range only.','','version-1','ENABLED',NULL,{d '2022-05-05'},{d '2022-05-05'},'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-sql-database-access');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Unrestricted_MySQL_Database_Access','Deny public access to MySQL Server port 3306','Restrict Azure Network Security Groups (NSGs) inbound access via TCP ports 3306 to trusted IP addresses only.','restrict MySQL Database access on TCP port 3306 to trusted IP address',NULL,'version-1','ENABLED',NULL,'2022-05-05','2022-05-05','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-mysql-server-port-3306');

INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) VALUES ('Azure_SSH_Authentication_Type_version-1','Disable Password Authentication','Ensure that Azure Linux-based virtual machines (VMs) are configured to use SSH keys','To reconfigure password-based Microsoft Azure Linux virtual machines to use keys for SSH authentication need to re-create the virtual machines','','version-1','ENABLED',NULL,{d '2022-05-06'},{d '2022-05-06'},'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#disable-password-authentication');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Unrestricted_Oracle_Database_Access','Deny unrestricted access to Oracle port 1521','Ensure that no network security groups allow unrestricted inbound access on TCP port 1521 (Oracle Database).',' Access should be restricted for permissive Network Security Groups with Internet-facing oracle server',NULL,'version-1','ENABLED',NULL,'2022-05-09','2022-05-09','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-oracle-port-1521');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Enable_Network_Security_for_SQLSERVER','Deny public access to SQL Server port 1433','Ensure that no network security groups allow unrestricted inbound access on TCP port 1433',' Access should be restricted for permissive Network Security Groups with Internet-facing SQLSERVER',NULL,'version-1',NULL,NULL,'2022-05-04','2022-05-04','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-sql-server-port-1433');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Enable_Network_Security_for_RPC','Deny public access to RPC port 135','Ensure that no network security groups allow unrestricted inbound access on TCP port 135 ',' Access should be restricted for permissive Network Security Groups with Internet-facing RPC',NULL,'version-1',NULL,NULL,'2022-05-04','2022-05-04','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-rpc-port-135');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Enable_Network_Security_for_SSH','Deny public access to SSH port 22','Restrict Azure Network Security Groups (NSGs) inbound access via TCP port 22 to trusted IP addresses only.','Restrict NSG Source setting. refer for this more info https://docs.microsoft.com/en-us/azure/virtual-network/manage-network-security-group',NULL,'version-1',NULL,NULL,'2022-05-04','2022-05-04','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-ssh-port-22');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) VALUES ('Azure_Enable_Email_Alerts_for_SQL_Threat_Detection_Service_version-1','Enable Azure SQL Advanced Threat Detection alerts','Azure sql databases should have email alerts enabled for threat detection','Provide one or more recepients emails','','version-1','ENABLED',NULL, '2022-05-10', '2022-05-10','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-azure-sql-advanced-threat-detection-alerts');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Enable_Network_Security_for_FTP','Deny unresticted access to FTP port','Ensure that no network security groups allow unrestricted inbound access on TCP port 20,21 (FTP).','Ensure that no network security groups allow unrestricted inbound access on TCP port 20,21 (FTP).',NULL,'version-1',NULL,NULL,'2022-05-04','2022-05-04','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-ftp-ports-20-and-21');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Enable_Network_Security_for_UDP','Deny public UDP access','Ensure that no network security groups allow unrestricted inbound access on UDP ports.',' Access should be restricted for permissive Network Security Groups with Internet-facing UDP',NULL,'version-1','Enabled',NULL,'2022-05-10','2022-05-10','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-udp-access');

INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Attached_EBS_volumes_are_encrypted_version-1','Attached EBS volumes are encrypted',' Ensure that existing Elastic Block Store (EBS) attached volumes are encrypted to meet security and compliance requirements.','To enable encryption on your existing EBS volumes, you need to re-create them and turn the encryption feature on',NULL,'version-1',NULL,NULL,'2022-05-11','2022-05-11','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-ebs-volume');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Encryption_for_Data_in_RedisCache','Enable In-transit encryption for Redis Cache Server','Ensure that in-transit encryption is enabled for all Microsoft Azure Redis Cache servers.','Enable in-transit encryption on Redis Cache by allowing access only via SSL',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-in-transit-encryption-for-redis-cache-server');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('AwsVpcExternalPeeringConnection_version-1','AWS_VPC_External_PeeringConnection','VPC Peering Connections Should Not Be Available To Accounts Outside AWS Organization','Ensure external VPC peering connections not exist',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-18');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Aws_Attached_EBS_volumes_are_custom_kms_key_encrypted_version-1','EbsCustomKmsKeyEncryption','Ensure EBS volumes are encrypted with KMS CMKs in order to have full control over data encryption and decryption.','Create a new CMK KMS key and use this key for creating snapshot. Use the newly created snapshot for creating volume and attach this volume to your instance.',NULL,'version-1',NULL,NULL,'2022-06-01','2022-06-01');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Aws_DocumentDB_should_be_encrypted_version-1','AwsDocumentDbEncryption','Ensure that Amazon DocumentDB clusters data is encrypted at rest.','Create a snapshot of the unencrypted cluster.Restore the snapshot and enable encryption  with appropriate AWS KMS key. Then add instances to the new DocumentDB cluster. Delete the unencrypted clusters.',NULL,'version-1',NULL,NULL,'2022-06-06','2022-06-06','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-documentdb');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Aws_DocumentDB_should_be_encrypted_with_kms_cmks_version-1','AwsDocumentDbKmsCmksEncryption','Ensure that Amazon DocumentDB clusters are encrypted with KMS Customer Master Keys (CMKs).','Create KMS Customer Master Key.Create a snapshot of the unencrypted cluster.Restore the snapshot and enable encryption  with the new CMK. Then add instances to the new cluster.',NULL,'version-1',NULL,NULL,'2022-06-06','2022-06-06');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Aws_dax_should_be_encrypted_version-1','AwsDAXClusterEncryptionAtRest','Ensure Amazon DynamoDB Accelerator (DAX) clusters enforce Server-Side Encryption (SSE).','To enable encryption for an existing DAX cluster, re-create the cluster with the encryption enabled.',NULL,'version-1',NULL,NULL,'2022-06-13','2022-06-13','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-dynamodb-acceleratordax-cluster');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Aws_athena_query_results_should_be_encrypted_version-1','AwsAthenQueryResultsEncryption','Ensure that AWS Athena query results stored in Amazon S3 are encrypted at rest.','To enable encryption, enable the encrypt query results in settings and choose the Customer Master Key created.',NULL,'version-1',NULL,NULL,'2022-06-13','2022-06-13');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWS_Support_Access_Role_version-1','IAM role for AWS support access','Create a dedicated support role to manage incidents with AWS Support','If there is no role created, then create a separate support role and attach the policy to the role. Users or group should use this role for support access.',NULL,'version-1',NULL,NULL,'2022-08-31','2022-08-31','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-dedicated-iam-role-for-aws-support-access');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('RDSDBEnableAutoMinorVersionUpgrade_version-1','RDS Auto Minor Version Upgrade should be enabled','RDS database instances should have the Auto Minor Version Upgrade flag enabled to receive minor engine upgrades automatically.','If the DB instances have not enabled the flag for auto minor version upgrade.',NULL,'version-1',NULL,NULL,'2022-09-23','2022-09-23','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-rds-auto-minor-version-upgrade');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('CloudTrailLogFileValidation_version-1','Validation should be enabled for CloudTrail log file','Enabling validation for CloudTrail log file can be used to determine whether a log file was changed, deleted, or unchanged after CloudTrail delivered the log','Enable Log file validation on each trails',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-validation-for-cloudtrail-log-file');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('CloudTrailLogsEncryptedByKMS_version-1','CloudTrail logs should be configured to leverage SSE and KMS CMKs','Configuring CloudTrail to use SSE-KMS provides additional confidentiality controls on log data','configure CloudTrail to use SSE KMS',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-cloudtrail-to-use-kms-cmks');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1','Configure log metric filter and alarm for unauthorized API calls','Monitoring unauthorized API calls will help reveal application errors and may reduce time to detect malicious activity','Create CloudWatch Logs Metric Filter and corresponding alarm for unauthorized API calls',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-unauthorized-api-calls');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1','Configure log metric filter and alarm for Management Console sign-in without MFA','Monitoring for single-factor console logins will increase visibility into accounts that are not protected by MFA.','Create CloudWatch Logs Metric Filter and corresponding alarm for Management Console sign-in without MFA',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-management-console-sign-in-without-mfa');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1','Configure log metric filter and alarm for usage of root account','Monitoring for root account logins will provide visibility into the use of a fully privileged account and an opportunity to reduce the use of it.','Create CloudWatch Logs Metric Filter and corresponding alarm for usage of root account',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-usage-of-root-account');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1','Configure log metric filter and alarm for IAM policy changes','Monitoring changes to IAM policies will help ensure authentication and authorization controls remain intact.','Create CloudWatch Logs Metric Filter and corresponding alarm for IAM policy changes',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-iam-policy-changes');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1','Configure log metric filter and alarm for CloudTrail configuration changes','Monitoring changes to CloudTrails configuration will help ensure sustained visibility to activities performed in the AWS account','Create CloudWatch Logs Metric Filter and corresponding alarm for CloudTrail configuration changes',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-cloudtrail-configuration-changes');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1','Configure log metric filter and alarm for AWS Management Console authentication failures','Monitoring failed console logins may decrease lead time to detect an attempt to brute force a credential, which may provide an indicator, such as source IP, that can be used in other event correlation.','Create CloudWatch Logs Metric Filter and corresponding alarm for AWS Management Console authentication failures',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-aws-management-console-authentication-failures');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1','Configure log metric filter and alarm for disabling or scheduled deletion of customer created CMKs','Create Amazon CloudWatch alarms for AWS KMS Customer Master Keys so that it will help you prevent any accidental or intentional modifications that may lead to unprotected data access or other security breaches.','Create CloudWatch Logs Metric Filter and corresponding alarm for disabling or scheduled deletion of customer created CMKs',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-disabling-or-scheduled-deletion-of-customer-created-cmks');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1','Configure log metric filter and alarm for S3 bucket policy changes','Monitoring changes to S3 bucket policies may reduce time to detect and correct permissive policies on sensitive S3 buckets.','Create CloudWatch Logs Metric Filter and corresponding alarm for S3 bucket policy changes',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-s3-bucket-policy-changes');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1','Configure log metric filter and alarm AWS Config configuration changes','Monitoring changes to AWS Config configuration will help ensure sustained visibility of configuration items within the AWS account.','Create CloudWatch Logs Metric Filter and corresponding alarm for AWS Config configuration changes',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-aws-config-configuration-changes');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1','Configure log metric filter and alarm for security group changes','Monitoring changes to security group will help ensure that resources and services are not unintentionally exposed.','Create CloudWatch Logs Metric Filter and corresponding alarm for AWS security group changes',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-security-group-changes');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1','Configure log metric filter and alarm for changes to NACL','Monitoring changes to NACLs will help ensure that AWS resources and services are not unintentionally exposed.','Create CloudWatch Logs Metric Filter and corresponding alarm for changes to NACL',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-changes-to-nacl');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1','Configure log metric filter and alarm for changes to network gateways','Monitoring changes to network gateways will help ensure that all ingress egress traffic traverses the VPC border via a controlled path.','Create CloudWatch Logs Metric Filter and corresponding alarm for changes to network gateways',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-changes-to-network-gateways');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1','Configure log metric filter and alarm for route table changes','Monitoring changes to route tables will help ensure that all VPC traffic flows through an expected path.','Create CloudWatch Logs Metric Filter and corresponding alarm for route table changes',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-route-table-changes');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1','Configure log metric filter and alarm for VPC changes','Monitoring changes to VPC will help ensure VPC traffic flow is not getting impacted.','Create CloudWatch Logs Metric Filter and corresponding alarm for VPC changes',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-vpc-changes');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1','Configure log metric filter and alarm for AWS Organizations changes','Monitoring AWS Organizations changes can help you prevent any unwanted, accidental or intentional modifications that may lead to unauthorized access or other security breaches.','Create CloudWatch Logs Metric Filter and corresponding alarm for AWS Organizations changes',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-log-metric-filter-and-alarm-for-aws-organizations-changes');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('EksSgInboundTrafficValidation_version-1','Ensure EKS Cluster inbound traffic only on 443','EKS cluster should be configured to allow traffic only on port 443 to protect your clusters against malicious activities','Allow access only on TCP port 443 by updating the Security groups associated with AWS EKS cluster',NULL,'version-1',NULL,NULL,'2022-12-05','2022-12-05','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#disable-all-inbound-traffic-to-eks-Cluster-other-than-tcp-port-443');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('RemoveRootUserAccessKey_version-1','Root Account access keys should be removed','Checking access keys associated with the root user account are removed','Delete Account access keys for Root user',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#remove-root-user-account-access-key');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('S3MFADeleteEnabled_version-1','MFA delete should be enabled on S3 bucket','Enable MFA Delete on S3 buckets','Enable MFA Delete on S3 Bucket',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-mfa-delete-on-s3-bucket');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWS_account_security_hub_exists_version-1','Enable AWS Security hub','Security Hub collects security data from across AWS accounts, services, and supported third-party partner products and helps you analyze your security trends and identify the highest priority security issues.','Grant the permissions required to enable Security Hub, attach the Security Hub managed policy AWSSecurityHubFullAccess to an IAM user, group, or role.',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-aws-security-hub');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('S3ObjectLevelWriteLogging_version-1','Enable S3 bucket object level write operation logging','Enabling object-level logging will help you meet data compliance requirements within your organization, perform comprehensive security analysis, monitor specific patterns of user behavior in your AWS account','Configure Object-level logging for S3 bucket write events',NULL,'version-1',NULL,NULL,'2022-11-02','2022-11-02','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-s3-bucket-object-level-write-operation-logging');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('S3ObjectLevelReadLogging_version-1','Enable S3 bucket object level read operation logging','Enabling object-level logging will help you meet data compliance requirements within your organization, perform comprehensive security analysis, monitor specific patterns of user behavior in your AWS account','Configure Object-level logging for S3 bucket read events',NULL,'version-1',NULL,NULL,'2022-11-02','2022-11-02','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-s3-bucket-object-level-read-operation-logging');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWS_eks_cluster_encryption_enabled_version-1','Enable encryption for EKS Kubernetes Secrets using envelope encryption','Enable encryption for EKS Kubernetes Secrets using envelope encryption in order to meet security and compliance requirements','Enable envelope encryption of Kubernetes secrets using KMS Customer Master Keys',NULL,'version-1',NULL,NULL,'2022-01-17','2022-01-17','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-encryption-for-eks-kubernetes-secrets-using-envelope-encryption');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWS_eks_cluster_logs_enabled_version-1','Enable control plane logs for EKS','Enable control plane logs for EKS to send audit and diagnostic logs directly to AWS CloudWatch Logs','Enable EKS control plane logging for Amazon EKS',NULL,'version-1',NULL,NULL,'2022-01-17','2022-01-17','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-control-plane-logs-for-eks');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWS_eks_cluster_public_access_disabled_version-1','Disable public access to EKS Cluster endpoint','Disable public access to EKS cluster endpoint to avoid exposing private data and reducing security risks','Disable public accessibility of EKS cluster endpoint',NULL,'version-1',NULL,NULL,'2022-01-17','2022-01-17','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#disable-public-access-to-eks-cluster-endpoint');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWS_eks_cluster_version_upgrade_version-1','Update EKS cluster version to the latest','EKS cluster version should be updated to the latest version in order to introduce new software features, bug fixes, security patches and performance improvements.','Update the Kubernetes version for your existing Amazon EKS clusters',NULL,'version-1',NULL,NULL,'2022-01-17','2022-01-17','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#update-eks-cluster-version-to-the-latest');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('S3BucketAllowHTTPRequest_version-1','S3 bucket policy to deny HTTP requests','Set S3 Bucket Policy to deny HTTP requests','Create a bucket policy that explicitly denies access when SecureTransport:false',NULL,'version-1',NULL,NULL,'2022-09-21','2022-09-21','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-http-requests-to-s3-bucket');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('AWS_IAM_User_Full_Admin_Privilege_version-1','IAM users having customer managed policies with full administrative privileges','Customer managed policies or inline policies that allow full "*:*" administrative privileges should not be attached to the user','Detach the customer managed or inline policy to revoke the administrative privileges',NULL,'version-1',NULL,NULL,'2022-08-26','2022-08-26');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Aws_comprehend_job_results_should_be_encrypted_version-1','AwsComprehendJobResultsEncryption','Ensure that AWS Comprehend analysis job results stored in Amazon S3 are encrypted at rest.','To enable encryption, create a customer managed key. Copy the job that should be re-configured and use the new Customer Managed Key for the new job.',NULL,'version-1',NULL,NULL,'2022-06-13','2022-06-13','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-comprehend-analysis-results');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('S3BucketEncryption_version-1','All S3 buckets should employ encryption-at-rest','Encrypt all the s3 buckets at rest to protect the sensitive contents','Enable encryption for S3 buckets',NULL,'version-1',NULL,NULL,'2022-09-16','2022-09-16','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-s3-buckets-at-rest');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('NaclPublicAccessPort_version-1','Deny unrestricted inbound traffic on remote server administration ports','Network ACL should not allow public access to administration server ports','Update or delete the inbound rules to deny the unrestricted inbound traffic',NULL,'version-1',NULL,NULL,'2022-09-14','2022-09-14');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('AWS_user_permissions_without_group_version-1','Only use IAM groups to assign User Permissions','To ensure the principle of least privilege, provide permissions to IAM users only though IAM group','Create an IAM group and attach policies and add user.Detach the policy from user',NULL,'version-1',NULL,NULL,'2022-09-06','2022-09-06');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWS_rootaccount_hardware_MFA_version-1','Hardware MFA for root account','Enable hardware MFA(Multi-Factor Authentication) for root account to secure access to AWS resources','Install and configure a hardware MFA device for the root account.',NULL,'version-1',NULL,NULL,'2022-09-01','2022-09-01','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-hardware-mfa-for-root-account');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Aws_appflow_encryption_using_KMS_CMKs_version-1','AwsAppFlowCMKEncryption','Ensure that Amazon AppFlow flows are encrypted with KMS Customer Master Keys (CMKs).','To enable encryption for AppFlow flows using Customer Master Key, re-create the flow with the configuration of the flow for which the encryption should be enabled, and enable the encryption and choose the Customer Master Key already created for the encryption key.',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('AWS_IAM_Role_Full_Admin_Privilege_version-1','IAM roles having customer managed policies with full administrative privileges','IAM roles with customer managed policies or inline policies that allow full "*:*" administrative privileges should not be attached to the role','Detach the customer managed or inline policy to revoke the administrative privileges.',NULL,'version-1',NULL,NULL,'2022-08-25','2022-08-25');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('AWS_IAM_Customer_Mnged_Policy_With_Admin_Previlege_version-1','IAM customer managed policies with full administrative privileges','IAM customer managed policies that allow full "*:*" administrative privileges should not be created.','Remove or update the policy to revoke the administrative privileges.',NULL,'version-1',NULL,NULL,'2022-08-23','2022-08-23');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Expired_AWS_IAMCertificate_version-1','AWS expired IAM certificate','Ensure that all the expired SSL/TLS certificates stored in AWS IAM are removed','Remove the expired IAM certificate.',NULL,'version-1',NULL,NULL,'2022-08-19','2022-08-19','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#remove-expired-iam-certificates');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('IamUserWithMultipleAccessKey_version-1','AWS IAM user with multiple access keys','Ensure there is only one active access key available for any single IAM user','Update to make the key inactive or delete the access keys which are no longer used.',NULL,'version-1',NULL,NULL,'2022-08-16','2022-08-16');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Aws_ecs_task_should_use_log_driver_version-1','AwsEnableEcsTaskLogDriver','Ensure that a log driver has been defined for each active Amazon ECS task definition.','To configure log driver for the task definitions, create a new revision for the task definition that should be reconfigured. Update the new revision with the log driver and the cloud watch log group which is created already.',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Aws_iam_access_analyser_findings_version-1','AwsActiveIAMAccessAnalyzerFindings','Ensure that IAM Access Analyzer findings are reviewed and resolved to maintain access security to your AWS resources.','To resolve findings generated from access that you did not intend to allow, modify the policy statement to remove the permissions that allow access to the identified resource',NULL,'version-1',NULL,NULL,'2022-06-17','2022-06-17');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('AwsVaultMissingAccessPolicy_version-1','AWS backup without access policy','Prevent deletion of backups using an Amazon Backup vault resource-based access policy.','If the vault already has a policy attached, then update the policy with the statement to deny the action backup:DeleteRecoveryPoint to Principal: *.Otherwise attach a new access policy with the statement to deny the action : backup:DeleteRecoveryPoint to Principal: *.',NULL,'version-1',NULL,NULL,'2022-08-10','2022-08-10');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('AwsAsgMissingAMI_version-1','AwsAsgWithMissingAMI','Ensure AWS Launch Configurations are utilizing active Amazon Machine Images.','Copy the existing launch configuration and update the AMI details with the required changes and attach the configuration with the auto scaling group.',NULL,'version-1',NULL,NULL,'2022-07-14','2022-07-14');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('AwsAsgInactiveSecurityGroup_version-1','AwsAsgWithMissingSecurityGroup','Ensure AWS Launch Configurations are utilizing active Security Groups.','Copy the existing launch configuration and update the security group details with the required changes and attach the configuration with the auto scaling group.',NULL,'version-1',NULL,NULL,'2022-07-13','2022-07-13');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Aws_AMI_encryption_version-1','AwsEnableAMIEncryption','Ensure that your existing AMIs are encrypted to meet security and compliance requirements.','To encrypt an existing AMI, copy the AMI and enable the encryption and choose the Customer Master Key for the encryption. Then the instances can be created from the new copied AMI.',NULL,'version-1',NULL,NULL,'2022-06-20','2022-06-20');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Aws_EKS_secrets_should_be_encrypted_version-1','AwsEKSSecretsEncryption','Ensure that envelope encryption of Kubernetes secrets using Amazon KMS is enabled.','To enable envelope encryption of Kubernetes secrets for existing Amazon EKS clusters, re-create the clusters using KMS Customer Master Keys (CMKs).',NULL,'version-1',NULL,NULL,'2022-06-09','2022-06-09');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Aws_EFS_should_be_encrypted_version-1','AwsEFSEncryption','Ensure encryption is enabled for AWS EFS file systems to protect your data at rest.','To encrypt an existing AWS EFS file system you must copy the data from the existing file system onto the new one, that has the encryption feature enabled.',NULL,'version-1',NULL,NULL,'2022-06-08','2022-06-08','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-efs');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Aws_efs_encryption_using_KMS_CMKs_version-1','AwsEFSEncryptionUsingCMKs','Ensure EFS file systems are encrypted with KMS Customer Master Keys (CMKs) in order to have full control over data encryption and decryption.','To encrypt an existing AWS EFS file system with your own AWS KMS CMK customer-managed key you must copy the data from the existing file system onto the new one, that has the encryption feature enabled.',NULL,'version-1',NULL,NULL,'2022-06-08','2022-06-08','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#use-customer-managed-key-to-encrypt-efs');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Aws_dms_should_not_be_publicly_accessible_version-1','AwsDmsShouldNotBePubliclyAccessible','Ensure that AWS DMS replication instances are not publicly accessible and prone to security risks.','To disable public accessibility for your Amazon DMS replication instances, you must re-create these instances with the necessary configuration in order to be reachable only within your VPC network',NULL,'version-1',NULL,NULL,'2022-06-08','2022-06-08','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-to-dms');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Aws_dms_encryption_using_KMS_CMKs_version-1','AwsDmsKmsCmksEncryption','Ensure that Amazon DMS replication instances are encrypted with KMS Customer Master Keys (CMKs).','To encrypt an existing Amazon DMS replication instance with your own AWS KMS Customer Master Key (CMK) you have to re-create the instance with the new Customer Master Key.',NULL,'version-1',NULL,NULL,'2022-06-08','2022-06-08');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Aws_DynamoDB_should_use_aws_managed_cmk_for_sse_version-1','DynamoDbCMKServerSideEncryption','Ensure that Amazon DynamoDB data is encrypted using AWS-managed Customer Master Keys.','To make sure the DynamoDB is server side encrypted with KMS, update or create the DynamoDB with the encryption as AWS managed.',NULL,'version-1',NULL,NULL,'2022-06-02','2022-06-02');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('AwsElbWithUnrestrictedSecurityGroup_version-1','AwsElbWithUnrestrictedSecurityGroup','Ensure that your Amazon ELBv2 load balancers have secure and valid security groups.','Create a new security group and add rule to add the required inbound rule(s) that will match your load balancer listeners configuration and attach this security group to the load balancer',NULL,'version-1',NULL,NULL,'2022-05-26','2022-05-26');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AwsPublicAccessDefaultSecurityGroup_version-1','PublicAccessDefaultSecurityGroup','Ensure default security groups restrict all public traffic to follow AWS security best practices.','Configuring default security group to restrict all traffic will encourage least privilege security group development. Do not set Inbound Source to 0.0.0.0/0 (IPv4) or ::/0 (IPv6).',NULL,'version-1',NULL,NULL,'2022-05-20','2022-05-20','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-in-default-security-group');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWS_CloudTrail_Global_Services_version-1','AWS_CloudTrail_Global_Services','Ensure that CloudTrail trails record API calls for global services such as IAM, STS, and CloudFront.','Ensure that your Amazon CloudTrail trails are recording both regional and global events in order to increase the visibility of the API activity in your AWS cloud account for security and management purposes',NULL,'version-1',NULL,NULL,'2022-05-11','2022-05-11','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-cloudtrail-global-services');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) VALUES ('Azure_Enable_Encryption_for_Boot_Disk_Volumes_version-1','Encrypt boot Disk ','Ensure that encryption is enabled for Azure virtual machine boot volumes to protect data at rest.','create the Microsoft Azure Key Vault where the disk encryption key will be placed and set encryption enabled as true','','version-1','ENABLED',NULL,{d '2022-05-12'},{d '2022-05-12'},'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#encrypt-boot-disk');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWS_ElastiCache_Clusters_Enabled_Encryption_version-1','AWS_ElastiCache_Clusters_Enabled_Encryption','Ensure in-transit and at-rest encryption is enabled for Amazon ElastiCache Redis clusters.','To enable in-transit and at-rest encryption for your existing AWS ElastiCache Redis clusters, you must re-create them with the necessary encryption configuration',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-elastiCache-for-redis-data');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWSRdsUnencryptedPublicInstances_version-1','AWSRdsUnencryptedPublicInstances','Terminate all unencrypted or publicly available RDS upon creation','Ensure to terminate any publicly accessible rds instances or update the instance with storage encryption enabled.',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-public-access-to-rds-database');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Threat_Detection_on_SQL_Server','azure enable threat detection on sql server','Enable all types of threat detection for your Microsoft Azure SQL database servers','all types of threat detection for your Microsoft Azure SQL database servers should be enabled',NULL,'version-1',NULL,NULL,'2022-05-04','2022-05-04','https://github.com/PaladinCloud/Rev1/wiki/Azure-Policy#enable-azure-sql-advanced-threat-detection-alerts');


INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Check_for_Unrestricted_PostgreSQL_Database_Access','Deny public access to PostgreSQL Server port 5432','Restrict Azure Network Security Groups (NSGs) inbound access via TCP ports 5432 to trusted IP addresses only.','To reconfigure your Azure NSG rules in order to allow access on TCP port 5432',NULL,'version-1','ENABLED',NULL,'2022-05-13','2022-05-17','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-postgresql-server-port-5432');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) VALUES ('Azure_Enable_CMK_Encryption_For_Storage_Account_version-1','Enable Azure Storage Account Customer-Managed Key','Use customer-managed keys (CMKs) for Microsoft Azure Storage accounts encryption.','create the Microsoft Azure Key Vault where the required Customer Managed Key and also create the Customer Managed Key (CMK), required to encrypt data within Microsoft Azure Storage account',NULL,'version-1','ENABLED',NULL,{d '2022-05-18'},{d '2022-05-18'},'https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-azure-storage');

INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Azure_Account_Create_Policy_Assignment_log_alert','Enable Create Policy Assignment log alert','Ensure that an activity log alert is created for the Create Policy Assignment events.','To create a Microsoft Azure activity log alert for detecting Create Policy Assignment events within your Azure cloud account',NULL,'version-1','ENABLED',NULL,'2022-05-04','2022-05-04','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','Deny public access to RDP port 3389','Ensure that no network security groups allow unrestricted inbound access on TCP port 3389','Do not allow public access to well known ports of an EC2 instance directly (except for 80 and 443).',NULL,'version-1','ENABLED',NULL,'2022-05-04','2022-05-04','https://github.com/PaladinCloud/Rev1/wiki/Azure-Policy#deny-public-access-to-rdp-port-3389');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','Enable Create or update Load Balancer log alert','Ensure that an activity log alert is created for Create or Update Load Balancer events','create a Microsoft Azure activity log alert for "Create or Update Load Balancer (Microsoft.Network/loadBalancers) ',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','Enable  Create Policy Deallocate Virtual Machine log alert','Ensure that an activity log alert is created for Deallocate Virtual Machine events','create a Microsoft Azure activity log alert for "Deallocate Virtual Machine Event (Microsoft.Compute/virtualMachines) ',NULL,'version-1',NULL,NULL,'2022-05-24','2022-05-24','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWS_ACM_Certificate_Expired_version-1','AWS_ACM_Certificate_Expired','Ensure expired SSL/TLS certificates are removed from AWS Certificate Manager (ACM).','Remove all the expired Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificates managed by AWS Certificate Manager.',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#remove-expired-acm-certificates');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Azure_Virtual_Machine_Endpoint_Protection','Azure_Virtual_Machine_Endpoint_Protection','End point protection for VM','Ensure end point protection for VM',NULL,'version-1',NULL,NULL,'2022-05-18','2022-05-18');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','Enable  Azure Account Create Policy Assignment log alert','Ensure that an activity log alert is created for Create or Update Load Balancer events','create a Microsoft Azure activity log alert for "Create or Update Load Balancer (Microsoft.Network/loadBalancers) ',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Azure_Check_Public_Acess_For_Storage_Account','Check Azure Storage Account Access','Ensure that storage account is not publicly accessible','Ensure that storage account is not publicly accessible',NULL,'version-1',NULL,NULL,'2022-06-03','2022-06-03');

INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_Remote_Debugging_For_WebApp','Disable App Service Remote Debugging','Ensure that Remote Debugging For Azure App Services web apps is disabled','Disable remote debugging for Azure App Services web apps',NULL,'version-1',NULL,NULL,'2022-06-31','2022-06-31','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#disable-app-service-remote-debugging');

INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','Enable Create or Update Load Balancer log alert','Ensure that an activity log alert is created for Create or Update Load Balancer events','create a Microsoft Azure activity log alert for "Create or Update Load Balancer (Microsoft.Network/loadBalancers) ',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','Enable  Create or Update Virtual Machine log alert','Ensure that an activity log alert is created for Create or Update Virtual Machine events','create a Microsoft Azure activity log alert for Create or Update Virtual Machine (Microsoft.Compute/virtualMachines) ',NULL,'version-1',NULL,NULL,'2022-05-24','2022-05-24','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_Account_Security_Solution_log_alert','Enable A Create or Update Security Solution log alert','Ensure that an activity log alert is created for the Create or Update Security Solution events.','To create a Microsoft Azure activity log alert for Create or Update Security Solution (Microsoft.Security/securitySolutions)',NULL,'version-1',NULL,NULL,'2022-05-20','2022-05-20','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_Create_Update_Storage_Account_log_alert','Enable Create or Update Storage Account Log Alert','Ensure there is an activity log alert created for the "Create_Update Storage Account" events','To create a Microsoft Azure activity log alert for Create_Update Storage Account (Microsoft.Storage/storageAccounts)',NULL,'version-1',NULL,NULL,'2022-05-23','2022-05-23','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) VALUES ('Enable_Azure_Defender_for_App_Service_version-1','Enable Azure Defender for App Service','Ensure that Azure Defender is enabled for the Microsoft Azure App Service.','Set the pricingTier to "Standard" to turn on the Defender for Cloud pricing plan for App Service instances.','','version-1','ENABLED',NULL,{d '2022-05-19'},{d '2022-05-19'});
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) VALUES ('Enable_Azure_Defender_for_SQL_Database_version-1','Enable Azure Defender for SQL Database','Ensure that Azure Defender is enabled for Microsoft SQL database servers','Set the pricingTier to "Standard" to turn on the Defender for Cloud pricing plan for Azure SQL databases.','','version-1','ENABLED',NULL,{d '2022-05-19'},{d '2022-05-19'});
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) VALUES ('Enable_Azure_Defender_for_Storage_Account_version-1','Enable Azure Defender for Storage Account','Ensure that the Azure Defender feature is enabled for Azure Storage accounts','Set the pricingTier to "Standard" to turn on the Defender for Cloud pricing plan for storage accounts','','version-1','ENABLED',NULL,{d '2022-05-19'},{d '2022-05-19'});
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`) VALUES ('Enable_Azure_Defender_for_Virtual_Machine_version-1','Enable Azure Defender for Virtual Machine','Ensure that Azure Defender is enabled for Azure virtual machine (VM) servers.','Set the pricingTier to "Standard" to turn on the Defender for Cloud pricing plan for virtual machines','','version-1','ENABLED',NULL,{d '2022-05-19'},{d '2022-05-19'});
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Account_Create_Update_Azure_SQL_Database_log_alert',' Enable Create Update Azure SQL Database log alert','Ensure that an activity log alert is created for Create or Update Azure SQL Database events.','create a Microsoft Azure activity log alert for Create or Update Azure SQL Database (Microsoft.Sql/servers/databases) event',NULL,'version-1','ENABLED',NULL,'2022-05-04','2022-05-04','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Account_Delete_Azure_SQL_Database_log_alert','Enable Delete SQL Database Log Alert','Ensure that an activity log alert is created for Delete Azure SQL Database (Microsoft.Sql/servers/databases) events','To create a Microsoft Azure activity log alert for Delete Azure SQL Database events',NULL,'version-1','ENABLED',NULL,'2022-05-24','2022-05-24','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AwsELBListenerSecurity_version-1','ElbListenerSecurity','Ensure that your AWS ELBs listeners are using a secure protocol (HTTPS or SSL or TLS).','To secure the connection between your application clients and your load balancers, update AWS ELB listeners configuration to support the secured protocols. For classic ELB update the configuration with HTTPS/SSL protocol.For ELBV2 use HTTPS/TLS',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-secure-listener');


INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Account_Delete_Azure_Key_Valut_log_alert','Enable Delete Key Valut log alert','Ensure there is an activity log alert created for the Delete Key Vault events','To implement a Microsoft Azure activity log alert for Delete Key Vault (Microsoft.KeyVault/vaults) events',NULL,'version-1','ENABLED',NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-update-security-policy-activity-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','Enable Create,Delete or Update for SQL server firewall Policy Assignment log alert','Ensure that an activity log alert is created for Create or Update or Delete SQL Firewall Server events','create a Microsoft Azure activity log alert for Create or Update or Delete SQL Firewall Servers (Microsoft.Sql/servers/firewallRules/write) ',NULL,'version-1',NULL,NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');

INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_Account_Update_KeyVault_log_alert','Enable Update Key Vault Activity Log Alert','Ensure that an activity log alert is created for Update Key vault events','create a Microsoft Azure activity log alert for Update Key vault (Microsoft.KeyVault/vaults/write) ',NULL,'version-1',NULL,NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_Account_Update_SecurityPolicy_log_alert','Enable  Update Security Policy log alert','Ensure that an activity log alert is created for Update Security Policy events','create a Microsoft Azure activity log alert for Update Security policy (Microsoft.Security/policies/write) ',NULL,'version-1',NULL,NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','Enable  Create or Update MySQL Database log alert','Ensure that an activity log alert is created for Create or Update MySQL Database events','create a Microsoft Azure activity log alert for Create or Update MySQL database policy (Microsoft.DBforMySQL/servers/databases/write) ',NULL,'version-1',NULL,NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','Enable  Create or Update PostgreSQL Database log alert','Ensure that an activity log alert is created for Create or Update PostgreSQL Database events','create a Microsoft Azure activity log alert for Create or Update PostgreSQL Database (Microsoft.DBforPostgreSQL/servers/databases/write) ',NULL,'version-1',NULL,NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_Account_Delete_MySQLDatabase_log_alert','Enable  Delete MySQL Database log alert','Ensure that an activity log alert is created for Delete MySQL Database events','create a Microsoft Azure activity log alert for Delete MySQL Database (Microsoft.DBforMySQL/servers/databases/delete) ',NULL,'version-1',NULL,NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','Enable  Delete PostgreSQL Database log alert','Ensure that an activity log alert is created for Delete PostgreSQL Database events','create a Microsoft Azure activity log alert for Delete PostgreSQL Database (Microsoft.DBforPostgreSQL/servers/databases/delete) ',NULL,'version-1',NULL,NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Create_Network_Security_Group_log_alert','Enable Create or Update Network Security Group log alert',' Ensure that an activity log alert is created for the Create or Update Network Security Group events','create a Microsoft Azure activity log alert for Create or Update Network Security Group event',NULL,'version-1','ENABLED',NULL,'2022-05-04','2022-05-04','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');

INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','Enable  Delete Load Balancer log alert','Ensure that an activity log alert is created for Delete Load Balancer events.','create a Microsoft Azure activity log alert for Delete Load Balancer (Microsoft.Network/loadBalancers/delete) event',NULL,'version-1','ENABLED',NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','Enable  Delete Network Security Group Rule log alert','Ensure that an activity log alert is created for Delete Network Security Group Rule events.','create a Microsoft Azure activity log alert for Delete Network Security Group Rule (Microsoft.Network/networkSecurityGroups/securityRules/delete) event',NULL,'version-1','ENABLED',NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-create-update-delete-nsg-rule-activity-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Azure_Account_Create_or_Update_Network_Security_Group_Rule_Event_log_alert','Enable Create/Update Network Security Group Rule log alert','Ensure that an activity log alert is created for Create/Update Network Security Group Rule events.','create a Microsoft Azure activity log alert for create or update Network Security Group Rule (Microsoft.Network/networkSecurityGroups/securityRules/write) event',NULL,'version-1','ENABLED',NULL,'2022-07-07','2022-07-07','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','Enable   Delete Network Security Group log alert','Ensure that an activity log alert is created for Delete Network Security Group events.','create a Microsoft Azure activity log alert for Delete Network Security Group  (Microsoft.Network/networkSecurityGroups/delete) event',NULL,'version-1','ENABLED',NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-create-update-delete-nsg-rule-activity-log-alert');


INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','Enable   Delete  Policy Assignment log alert','Ensure that an activity log alert is created for Delete Policy Assignment events.','create a Microsoft Azure activity log alert for Delete Policy Assignment  (Microsoft.Authorization/policyAssignments/delete) event',NULL,'version-1','ENABLED',NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','Enable   Delete Security Solution log alert','Ensure that an activity log alert is created for Delete Security Solution events.','create a Microsoft Azure activity log alert for Delete Security Solution  (Microsoft.Security/securitySolutions/delete) event',NULL,'version-1','ENABLED',NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','Enable log Alert for Delete Storage Account','Ensure that an activity log alert is created for Delete Storage Account events.','create a Microsoft Azure activity log alert for Delete Storage Account (Microsoft.Storage/storageAccounts/delete) event',NULL,'version-1','ENABLED',NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','Enable log Alert for Account Delete VM','Ensure that an activity log alert is created for Delete Virtual Machine events.','create a Microsoft Azure activity log alert for Delete Virtual Machine (Microsoft.Compute/virtualMachines/delete) event',NULL,'version-1','ENABLED',NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','Enable log Alert for Delete VM','Ensure that an activity log alert is created for Power Off Virtual Machine events.','create a Microsoft Azure activity log alert for Power Off Virtual Machine (Microsoft.Compute/virtualMachines/powerOff/action) event',NULL,'version-1','ENABLED',NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','Enable  Rename Azure SQL Database Event log alert','Ensure that an activity log alert is created for Rename Azure SQL Database events.','create a Microsoft Azure activity log alert for Rename Azure SQL Database (Microsoft.Sql/servers/databases/move/action) event',NULL,'version-1','ENABLED',NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');

INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Enable_key_Vault_Customer_Managed_Key','Enable Azure key Vault Customer-Managed Key','Ensure that a Customer-Managed Key is created for your Azure cloud application tier','create and configure a dedicated Customer-Managed Key  to be used by the Azure cloud resources provisioned within your application tier',NULL,'version-1','ENABLED',NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-azure-storage');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Enable_Web_Tier_Customer_Managed_Key','Ensure Web Tier Customer-Managed Key','Ensure that a Customer-Managed Key is created for your Microsoft Azure cloud web tier.','create and configure a dedicated Customer-Managed Key (CMK) for the Azure cloud resources provisioned within your web tier',NULL,'version-1','ENABLED',NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-azure-storage');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Azure_Enable_Database_Tier_Customer_Managed_Key','Ensure Database Tier Customer-Managed Key','Ensure that a Customer-Managed Key is created for your Microsoft Azure cloud Database tier.','create and configure a dedicated Customer-Managed Key (CMK) for the Azure cloud resources provisioned within your Database tier',NULL,'version-1','ENABLED',NULL,'2022-05-25','2022-05-25','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-azure-storage');

INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWS_ElasticSearch_Domain_At_Rest_Encryption_version-1','AWS_ElasticSearch_Domain_At_Rest_Encryption_version','Ensure at-rest encryption is enabled for your Amazon ElasticSearch domains','To enable at-rest encryption for your existing AWS ElasticSearch domains, you must re-create them with the necessary encryption configuration',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-opensearch-data-at-rest');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWS_ElasticSearch_Domain_Encryption_Using_CMK_KMS_Key_version-1','AWS_ElasticSearch_Domain_Encryption_Using_CMK_KMS_Key','Ensure AWS ElasticSearch domains are encrypted with KMS Customer Master Keys.','To encrypt an existing AWS ElasticSearch domain with your own KMS Customer Master Key, you must re-create the domain with the necessary encryption configuration. To create the necessary KMS CMK and set up the new ES domain, enable custom encryption and copy your existing data to it.',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#use-customer-managed-key-to-encrypt-opensearch-data-at-rest');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('AWS_ElasticSearch_Domain_Node_to_Node_Encryption_version-1','AWS_ElasticSearch_Domain_Node_to_Node_Encryption','Ensure node-to-node encryption is enabled for your Amazon ElasticSearch (ES) clusters.','To enable node-to-node encryption for your existing Amazon ElasticSearch domains, you need to re-create them with the necessary configuration.',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/AWS-Policy#encrypt-opensearch-data-in-transit');

INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','Enable Encryption for App-Tier Disk Volumes.','Ensure that Azure virtual machine disk volumes created for the app tier are encrypted.','Enable encryption for your app-tier Azure virtual machines disk volumes',NULL,'version-1',NULL,NULL,'2022-06-12','2022-06-12','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#encrypt-app-tier-disk-volumes');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('GCP_Virtual_Machine_public_access_version-1','Ensure VM instances does not have the public access','Ensure that Google Cloud VM instances are not using public IP addresses.','Remove the public (external) IP address from VM instances.',NULL,'version-1',NULL,NULL,'2022-06-09','2022-06-09');

INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Encryption_for_Unattached_Disk_Volumes','Encrypt Unattached Disk Volumes','Always encrypt your disk storage.','enable encryption for your unattached Microsoft Azure VM disk volumes',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#encrypt-unattached-disk-volumes');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`) VALUES ('Enable_Azure_BlobContainer_Immutability','Enable Immutable Blob Storage','Ensure that critical Azure Blob Storage data is protected from accidental deletion or modification','Set hasLegalHold and hasImmutabilityPolicy to true for blob container storage to ensure immutability',NULL,'version-1',NULL,NULL,'2022-06-09','2022-06-09');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Deny_Azure_KeyVault_Admin_Privileges','Deny_Azure_KeyVault_Admin_Privileges','Deny Azure Key Vault full administrator privilege',' providing every principal the minimal amount of access required to perform its tasks',NULL,'version-1',NULL,NULL,'2022-06-09','2022-06-09','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-administrator-full-access-to-key-vault');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','VPC Firewall with RDP port 3389 should not be publicly accessible','Ensure there are no VPC firewall rules that allow unrestricted inbound access on RDP port 3389','update your VPC network firewall rule configuration in order to restrict Remote Desktop Protocol access to trusted, authorized IP addresses',NULL,'version-1',NULL,NULL,'2022-06-09','2022-06-09','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-rdp-port-3389');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','VPC Firewall with SSH port 22 should not be publicly accessible','Ensure that no VPC firewall rules allow unrestricted inbound access on SSH port 22','update your VPC network firewall rule configuration in order to restrict SSH access to trusted, authorized IP addresses',NULL,'version-1',NULL,NULL,'2022-06-09','2022-06-09','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-ssh-port-22');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','VPC Firewall with DNS port 53 should not be publicly accessible','Ensure there are no VPC firewall rules that allow unrestricted inbound access on TCP and UDP port 53','update your VPC network firewall rule configuration in order to restrict DNS access to trusted, authorized IP addresses',NULL,'version-1',NULL,NULL,'2022-06-09','2022-06-09','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-dns-port-53');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_PostgreSQL_Server_In_Transit_Encryption','Enable In-transit encryption for PostgreSQL Server','Encrypt data in-transit with SSL/TLS.',' enable in-transit encryption by enforcing SSL connections between your PostgreSQL database servers and your client applications',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-in-transit-encryption-for-postgresql-server');

INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','Use CMK to Encrypt Database','Use customer-managed keys for Microsoft Azure virtual machine (VM) disk volumes encryption.','To configure Azure Disk Encryption (ADE) service to encrypt your Azure virtual machine disk volumes using your own customer-managed key (also known as Bring Your Own Key - BYOK ',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-database');

INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Deny_Azure_KeyVault_Admin_Privileges','Deny_Azure_KeyVault_Admin_Privileges','Deny Azure Key Vault full administrator privilege',' providing every principal the minimal amount of access required to perform its tasks',NULL,'version-1',NULL,NULL,'2022-06-09','2022-06-09','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-administrator-full-access-to-key-vault');

INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','Deny Firewall public access to RDP port 3389','Do not allow firewall rules that give unrestricted access (i.e. 0.0.0.0/0) on TCP port 3389 in order to restrict Remote Desktop Protocol (RDP) traffic to reduce the attack surface','update your VPC network firewall rule configuration in order to restrict Remote Desktop Protocol access to trusted, authorized IP addresses',NULL,'version-1',NULL,NULL,'2022-06-09','2022-06-09','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-rdp-port-3389');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','Deny Firewall public access to SSH port 22',' Do not allow firewall rules that give unrestricted access (i.e. 0.0.0.0/0) on TCP port 22 in order to restrict Secure Socket Shell (SSH) traffic to reduce the attack surface.','update your VPC network firewall rule configuration in order to restrict SSH access to trusted, authorized IP addresses',NULL,'version-1',NULL,NULL,'2022-06-09','2022-06-09','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-ssh-port-22');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','Deny Firewall public access to DNS port 53','Do not allow firewall rules that give unrestricted access (i.e. 0.0.0.0/0) on TCP and UDP port 53 in order to restrict Domain Name Server (DNS) traffic to reduce the attack surface.','update your VPC network firewall rule configuration in order to restrict DNS access to trusted, authorized IP addresses',NULL,'version-1',NULL,NULL,'2022-06-09','2022-06-09','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-dns-port-53');

INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','Use CSEK to encrypt VM Disk','Ensure that the disks attached to your Virtual Machine Instance are encrypted with Customer Supplied Encryption Keys (CSEK) to protect your data-at-rest','enable encryption with Customer-Supplied Encryption Keys (CSEKs) for all the disks attached to your business critical Google Compute Engine instances',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#use-csek-to-encrypt-vm-disk');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','Use CMEK to encrypt VM Disk','Ensure that the disks attached to your production Google Compute Engine instances are encrypted with Customer managed Keys (CMKs)','enable encryption with Customer-managed Keys (CMKs) for all the disks attached to your business critical Google Compute Engine instances',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#use-cmek-to-encrypt-vm-disk');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_FTP_port_should_not_be_publicly_accessible','Deny Firewall public access to FTP ports 20 and 21','Do not allow firewall rules that give unrestricted access (i.e. 0.0.0.0/0) on TCP port 20 and 21 in order to restrict File Transfer Protocol (FTP) traffic to reduce the attack surface.','update your VPC network firewall rules configuration in order to restrict File Transfer Protocol  access to trusted, authorized IP addresses or IP ranges',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-ftp-ports-20-and-21');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_ICMP_port_should_not_be_publicly_accessible','Deny Firewall public access to ICMP','Ensure that no VPC firewall rules allow unrestricted inbound access using Internet Control Message Protocol','update your VPC network firewall rules configuration in order to restrict Internet Control Message Protocol (ICMP) access to trusted, authorized IP addresses or IP ranges',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-icmp');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_UnCommon_ports_should_not_be_publicly_accessible','Deny Firewall public access to uncommon ports','Do not allow firewall rules that give unrestricted access (i.e. 0.0.0.0/0) to restrict to uncommon ports to reduce the attack surface.','update your VPC network firewall rules configuration in order to restrict access on uncommon TCP or UDP ports to trusted, authorized IP addresses or IP ranges',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-uncommon-ports');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','Deny Firewall public access to MySQL port 3306','Do not allow firewall rules that give unrestricted access (i.e. 0.0.0.0/0) on MySQL port 3306 in order to reduce the attack surface.','update your VPC network firewall rules configuration in order to restrict MySQL Database Server access to trusted entities',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-mysql-port-3306');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','Deny Firewall public access to Oracle port 1521','Do not allow firewall rules that give unrestricted access (i.e. 0.0.0.0/0) on Oracle port 1521 in order to reduce the attack surface.','update your VPC network firewall rules configuration in order to restrict Oracle Database access to trusted entities only (i.e. authorized IP addresses or IP ranges)',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-oracle-port-1521');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','Deny Firewall public access to PostgreSQL port 5432','Do not allow firewall rules that give unrestricted access (i.e. 0.0.0.0/0) on PostgreSQL port 5432 to reduce the attack surface.','update your VPC network firewall rules configuration in order to restrict PostgreSQL Database Server access to trusted, authorized IP addresses or IP ranges',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-postgresql-port-5432');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_RPC_port_should_not_be_publicly_accessible','Deny Firewall public access to RPC port 135','Do not allow firewall rules that give unrestricted access (i.e. 0.0.0.0/0) on RPC port 135 in order to restrict Remote Procedure Call (RPC) traffic to reduce the attack surface.','update your VPC network firewall rules configuration in order to restrict Remote Procedure Call (RPC)  to trusted, authorized IP addresses or IP ranges',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-rpc-port-135');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_SMTP_port_should_not_be_publicly_accessible','Deny Firewall public access to SMTP port 25','Do not allow firewall rules that give unrestricted access (i.e. 0.0.0.0/0) on SMTP port 25 in order to restrict Simple Mail Transfer Protocol (SMTP) traffic to reduce the attack surface.','update your VPC network firewall rules configuration in order to restrict Simple Mail Transfer Protocol (SMTP) access to trusted, authorized IP addresses or IP ranges',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-smtp-port-25');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','Deny Firewall public access to SQL port 1433','Do not allow firewall rules that give unrestricted access (i.e. 0.0.0.0/0) on SQL port 1433in order to reduce the attack surface.','update your VPC network firewall rules configuration in order to restrict SQL Server access to trusted, authorized IP addresses or IP ranges',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-access-to-sql-port-1433');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('GCP_bigquery_table_encryption_cmks_rule_version-1','Use CMEK to encrypt Big Query','Ensure that Big Query dataset is encrypted with Customer Managed Encryption Keys (CMEK) to protect your data-at-rest.','Enable encryption with Cloud KMS Customer-Managed Keys (CMKs) for all of your BigQuery dataset tables.',NULL,'version-1','ENABLED','ASGC','2022-06-24','2022-06-24','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#use-cmek-to-encrypt-big-query');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('GCP_cloud_sql_encryption_cmks_rule_version-1','Use CMEK to encrypt Cloud SQL','Ensure Cloud SQL is encrypted with Customer Managed Encryption Keys (CMEK) to protect your data-at-rest.','Enable encryption with Cloud KMS Customer-Managed Keys (CMKs) for all of your Cloud SQL database instances.',NULL,'version-1','ENABLED','ASGC','2022-06-24','2022-06-24','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#use-cmek-to-encrypt-cloud-sql');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Cloud_Storage_should_not_be_public','Deny public access to Cloud Storage','Do not allow public access to Cloud Storage to protect you data-at-rest','Restrict permissions to buckets to remove public access',NULL,'version-1',NULL,NULL,'2022-06-24','2022-06-24','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-cloud-storage');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('GCP_Virtual_Machine_2FA_Rule','Enable MFA for OS Login','Enable Operating System Multi-Factor Authentication for maximum protection','configure your production and mission-critical VM instances to use OS Login with Two-Factor Authentication (2FA)',NULL,'version-1',NULL,NULL,'2022-06-21','2022-06-21','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-mfa-for-os-login');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('Cloud_Storage_should_be_encrypted_with_CMK','Use CMEK to encrypt Cloud Storage','Ensure that Cloud Storage is encrypted with Customer Managed Encryption Keys (CMEK) to protect your data-at-rest','Configure google cloud storage encryption to use customer managed key',NULL,'version-1','ENABLED','ASGC','2022-06-27','2022-06-27','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#use-cmek-to-encrypt-cloud-storage');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate,resolutionUrl) VALUES ('GCP_bigquery_dataset_public_access_version-1','Deny public access to Big Query','Do not allow public access to Big Query. Granting permissions to allUsers and allAuthenticatedUsers members can allow anyone to access your datasets.','Remove allUsers and allAuthenticatedUsers member bindings from the dataset ACLs in order to restrict anonymous and public access to your Google Cloud BigQuery datasets',NULL,'version-1','ENABLED','ASGC','2022-06-23','2022-06-23','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-public-access-to-big-query');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('GCP_kms_public_access_rule_version-1','Check for Publicly Accessible Cloud KMS Keys','Ensure there are no publicly accessible KMS cryptographic keys available within your Google Cloud account.','Remove "allUsers" and/or "allAuthenticatedUsers" IAM member bindings from the required IAM policy in order to restrict anonymous and/or public access to your Cloud Key Management Service (KMS) keys',NULL,'version-1','ENABLED','ASGC','2022-07-14','2022-07-14');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','Deny Firewall public egress on all ports','Do not allow firewall rule with unrestricted outbound (i.e. 0.0.0.0/0) traffic on any ports.','update your VPC network firewall rules configuration in order to restrict egress access to trusted entities only',NULL,'version-1',NULL,NULL,'2022-06-15','2022-06-15','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#deny-firewall-public-egress-on-all-ports');
INSERT IGNORE INTO `cf_Policy` (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('GCP_PubSub_CMK_Encryption','Ensure pub sub is encrypted with customer managed key','Ensure that Pub/Sub topics are encrypted using Customer-Managed Keys (CMKs).','Configure your pubsub to be encrypted with customer managed key',NULL,'version-1',NULL,NULL,'2022-07-01','2022-07-01','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#use-cmek-to-encrypt-pubsub');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`) VALUES ('AWS_EMR_Clusters_Enabled_Encryption_version-1','Enable_Amazon_EMR_clusters_encryption');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`) VALUES ('SQS_Public_Access_Rule_version-1','Non-Allow listed SQS resources should not be publicly accessible');
INSERT IGNORE INTO cf_Policy (policyId,policyName,policyDesc,resolution,policyUrl,policyVersion,status,userId,createdDate,modifiedDate) VALUES ('Azure_Check_Public_Access_For_Storage_Account','Deny public access to Storage Account', 'Azure Storage Account should not be publically accessible','Enable cloudtrail for all regions','','version-1','',710383,{d '2017-08-18'},{d '2017-08-18'});
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_PostgreSQL_Server_In_Transit_Encryption-1','Enable In-transit encryption for PostgreSQL Server','Encrypt data in-transit with SSL/TLS.',' enable in-transit encryption by enforcing SSL connections between your PostgreSQL database servers and your client applications',NULL,'version-1',NULL,NULL,'2022-05-12','2022-05-12','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-in-transit-encryption-for-postgresql-server');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('GCP_DataProc_CMK_Encryption','Use CMEK to encrypt Dataproc Clusters','Ensure that your Dataproc clusters are encrypted using Customer-Managed Keys (CMKs).','Create a new cluster with CMEK as encryption, then copy the previous configuration of cluster to the new one',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Network_Security_for_SQLSERVER','Deny public access to SQL Server port 1434','Ensure that no network security groups allow unrestricted inbound access on UDP port 1434',' Access should be restricted for permissive Network Security Groups with Internet-facing SQLSERVER',NULL,'version-1',NULL,NULL,'2022-05-04','2022-05-04','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-public-access-to-sql-server-port-1433');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('GCP_VM_Instance_Migrate','VM instance should be migrated during maintenance','Determine if vm instances are migrated during maintenance event','Select the vm instance,Select EDIT mode,In the Availability policies section, select Migrate VM instance',NULL,'version-1',NULL,NULL,'2022-08-02','2022-08-02','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Ensure_web_app_using_latest_version_of_the_HTTP_protocol','Ensure  Azure App Service web applications are using the latest version of the HTTP protocol 2.0','Ensure that your Microsoft Azure App Service web applications are using the latest version of the HTTP protocol (i.e. HTTP/2) in order to make your web applications load faster. HTTP 2.0 represents a major upgrade of the HTTP/1.1 protocol, that has the primary goal of reducing the impact of latency and connection load on web servers by implementing full request and response multiplexing, minimizing protocol overhead via compression of HTTP header fields, and by adding support for HTTP request prioritization and server push','enable Http protocol 2.0 for the webapps',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Deny_access_to_Kubernate_Engine_cluster','Deny access to GKE Cluster','Ensure that your Google Kubernetes Engine (GKE) clusters are configured with master authorized networks in order to limit their exposure to the Internet. Master authorized networks allow you to Allowlist specific IP addresses and/or IP address ranges to access your cluster master endpoint using HTTPS.','update GKE cluster configuration with master authorized networks in order to limit their exposure to the Internet.',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('GCP_sql_database_high_availability_rule-1','Production Cloud SQL database instances should be configured for high availability','Ensure that production Cloud SQL database instances are configured for high availability','1. Select the sql instance \n 2. Select \"overview\" in navigation  panel \n 3. Click on \"Edit\" button to enter edit mode \n 4. In \"Confguration options\", click on \"Backups,recovery and availability\" \n 5. Under \"Availability\", enable \"point in time recovery\" and \"High availability(regional)\" \n 6. Save the changes ',NULL,'version-1',NULL,NULL,'2022-08-09','2022-08-09','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('trusted_ms_services_access_storage_account','Enable trusted microsoft services to access Storage Account','Ensure that Allow trusted Microsoft services to access this storage account exception is enabled within your Azure Storage account configuration settings to grant access to trusted cloud services.',NULL,NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Encrypt_App_Layer_secrets_for_GKE_Cluster','Encrypt App layer secret in GKE Cluster','Use Cloud KMS Customer-Managed Keys (CMKs) to enable application-layer secrets encryption for your Google Kubernetes Engine (GKE) clusters in order to meet security and compliance requirements.','update GKE cluster configuration to enable App-layer secrets encryption.',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Encrypt_GKE_Cluster_Node_with_CMK','Use CMK to encrypt GKE Cluster Node','Ensure that your Google Kubernetes Engine (GKE) cluster nodes are encrypted with Customer-Managed Keys (CMKs) in order to have fine control over your GKE data encryption/decryption process','To enable encryption with Customer-Managed Keys (CMKs) for your Google Kubernetes Engine (GKE) cluster nodes, you have to re-create the existing GKE cluster node pools with the appropriate encryption configuration ',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Deny_public_ip_for_sql','SQL database instances should not use public IP addresses','Ensure That Cloud SQL Database Instances Do Not Have Public Ips','Configure private Ip for sql db instance',NULL,'version-1',NULL,NULL,'2022-08-18','2022-08-18','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','Ensure DNSSEC security feature is enabled for Google Cloud DNS managed zones','Ensure that DNSSEC security feature is enabled for all your Google Cloud DNS managed zones in order to protect your domains against spoofing and cache poisoning attacks. By default, DNSSEC is not enabled for Google Cloud public DNS managed zones.','enable security Config state for Google Cloud DNS',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');


INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Authentication_For_WebApp','App Service web app authentication should be enabled','Ensure App Service Authentication is set up for apps in Azure App Service','1. Go to App Services \n 2. Select Authentication/Authorisation \n 3. In App Service Authentication, select On and click Save',NULL,'version-1',NULL,NULL,'2022-08-16','2022-08-16','https://github.com/PaladinCloud/CE/wiki/Azure-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Automated_backups_for_sql_database','Enable Automated backups for cloud sql database','Ensure that automated backups are created for all Cloud SQL database instances available within your Google Cloud Platform (GCP) account,in order to protect against data deletion and/or data corruption.','To enable automated backups for cloud SQL database instance you have to run sql instances patch command using the name of the Cloud SQL database instance that you want to reconfigure as identifier parameter ',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Ensure_cross_DB_ownership_flag_disabled_for_SQL','Ensure cross DB ownership flag is disabled for SQL DB Server','Ensure that cross db ownership chaining database flag is disabled for your Google Cloud SQL Server database instances.','create DB Instance and select DB instance and disable db ownership changing flag ',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','Ensure Web App Redirects All HTTP traffic to HTTPS','Ensure that your Azure App Service web applications redirect all non-secure HTTP traffic to HTTPS in order to encrypt the communication between applications and web clients. HTTPS uses the Secure Sockets Layer (SSL)/Transport Layer Security (TLS) protocol to provide a secure connection, which is both encrypted and authenticated. This adds an extra layer of security to the HTTP requests made to the web application.','create webapp in appesrvice and select the webapplicationa and In general settings enable HttpsOnly',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Ensure-Web-App-Redirects-All-HTTP-traffic-to-HTTPS');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_Web_App_traffic_to_plain_Ftp','Disable Plain FTP Deployment','Ensure that your Microsoft Azure App Services web applications are not configured to be deployed over plain FTP. Instead the deployment can be disabled over FTP or performed over FTPS. FTPS (Secure FTP) is used to enhance security for your Azure web application as it adds an extra layer of security to the FTP protocol','change the ftpsState to disable or ftps only this will restrict traffic  on FTP only.',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Client_Certificate_Function_App','Enable Incoming client certificates for function app','Ensure that function apps have client certificates enabled for incoming request. Client certificates allow for the app to request a certificate for incoming requests. Only clients with valid certificates can reach the app','1. Go to function app in azure portal 2. Select your function app 3. Select Configuration->General Settings 4. In Client certificate mode, select Require and click Save',NULL,'version-1',NULL,NULL,'2022-08-23','2022-08-23','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-incoming-client-certificates-for-function-app');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','Disable External Scripts Enabled Flag for SQL Server Database Instances','Ensure "external scripts enabled" database flag is turned off for your Google Cloud SQL Server database instances in order to disable the execution of scripts with certain remote language extensions','set external scripts enabled off for SQL SERVER Instance',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_latest_TLS_version','Enable latest TLS version','Ensure that latest version of TLS encryption protocol to secure the applications traffic over the Internet and comply with the industry standards.','For web app : \n 1.Go to Azure portal \n 2.Navigate to App Services blade at https://portal.azure.com/#blade/HubsExtension/BrowseResourceBlade/resourceType/Microsoft.Web%2Fsites. \n 3.Click on the name of the App Service web application that you want to examine. \n 4.In the navigation panel, under Settings, select TLS/SSL settings to access the Transport Layer Security (TLS)/Secure Sockets Layer (SSL) configuration settings available for the selected app. \n 5.On the TLS/SSL settings panel, under Protocol Settings, check the Minimum TLS Version configuration to determine the TLS version used by the application. If Minimum TLS Version setting value is not set to 1.2, the selected Microsoft Azure App Service web application is not configured to use the latest version of TLS protocol (i.e. TLS 1.2) to encrypt data in transit.\nFor mysql flexible server: \n 1. Go to azure portal \n 2. Search for MySQL flexible server \n 3. For each database , click on on Server parameters under Settings \n 4. Type tls_version in search box \n 5. Select value as TLSV1.2 \nFor storage account: \n 1.Go to Azure portal \n 2.Navigate to App Services blade at https://portal.azure.com/#blade/HubsExtension/BrowseResourceBlade/resourceType/Microsoft.Storage%2FStorageAccounts. \n 3.Click on the name of the Azure Storage accoun  that you want to examine. \n 4.In the navigation panel, under Settings, choose Configuration to access the selected storage account configuration settings. \n 5On the Configuration page, under Minimum TLS Version, select Version 1.2 to enable the latest version of the TLS protocol (TLS version 1.2) for the selected Microsoft Azure Storage account. Choose Save to apply the changes.',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-latest-tls-version');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Client_Certificate_for_webApp','Enable  Client Certificate for Web App','Ensure that your Microsoft Azure App Service web applications are configured to request an SSL certificate for all incoming requests, for security and compliance purposes. Once the certificate is implemented, only web clients that have this valid SSL certificate will be able to reach your application. By default, incoming client certificates are disabled for Azure App Service web applications.','Ensure to set on the web app client certificate.',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_keyvault_delete_protection','Enable keyvault delete protection','Ensure that production Azure Key Vaults are recoverable in order to prevent permanent deletion of encryption keys, secrets and certificates stored within these vaults.','Enable softdelete and purgeProtection for the vaults',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/AZURE-Policy#enable-keyvault-delete-protection');INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','Disable Database Remote Access flag for SQL Server Instances','Ensure that remote access database flag is disabled for your Google Cloud SQL Server database instances.','set remote access flag off for SQL SERVER Instance',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-database-remote-access-flag-for-sql-server-instances');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Deny_allowlist_all_public_ip_for_sql','Deny Allowlist of all Public IP Addresses Cloud SQL Database Instances','Ensure that your Google Cloud SQL database instances are configured to accept connections from trusted networks and IP addresses only.','set the IP address or IP address range you want to allow connections from. The authorized IP address/IP range must use the CIDR format ',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Enable-keyvault-delete-protection');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Default_Network_should_Not_Exist_in_a_Project','Default Network should Not Exist in a Project','Ensure that GCP projects are not using the default Virtual Private Cloud network, in order to follow security best practices and meet networking requirements.','make sure to delete default vpc with in Google projects',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#default-network-should-not-exist-in-a-project');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_3625_Flag_for_SQL_Server_DB_Instances','Disable \'3625 (trace flag)\' database flag for Cloud SQL Server instance','Ensure that 3625 (trace flag) database flag is disabled for your Google Cloud SQL Server database instances.','set 3625 DataBase Flag off for SQL SERVER Instance',NULL,'version-1',NULL,NULL,'2022-09-01','2022-09-01','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-database-3625trace-flag-flag-for-sql-server-instances');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Uniform_Bucket_Level_Access','Enable Uniform Bucket-Level Access for cloud storage Buckets','Ensure that uniform bucket-level access is enabled for all your Google Cloud Storage buckets. With this level of access, object access is controlled entirely through bucket-level permissions (IAM) to ensure uniform access to all the objects within a storage bucket.','set 3625 DataBase Flag off for SQL SERVER Instance',NULL,'version-1',NULL,NULL,'2022-09-01','2022-09-01','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-database-3625trace-flag-flag-for-sql-server-instances');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','Enforce cloud SQL incoming Connections To Use SSL','Enforce all incoming connections to your Cloud SQL database instances to use SSL/TLS only. If the SSL/TLS protocol is not enforced for all Cloud SQL connections, clients without a valid certificate are not allowed to connect to the database.','Enable SSL for Cloud SQL database instances',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enforce-cloud-sql-incoming-connections-to-use-ssl');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Deny_Default_Network_Access_Rule_for_Storage_Accounts','Deny Default Network Access Rule for Storage Accounts','Ensure that  Storage account is configured to deny access to traffic from all networks which results in adding new  layer of security, since the default action is to accept connections from clients on any network.','Deny public Network Access to Storage Account',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#deny-default-network-access-rule-for-storage-accounts');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','Use CMK to encrypt Storage Account for Activity logs','Customer-managed keys provide more control over data access and lifecycle, and allow you to act quickly in the event of a breach by disabling or deleting the key. To get these benefits for your activity logs, configure the storage account with the activity log export container to use customer-managed keys.','Configure the storage account containing activity logs to use a customer-manager key.',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-storage-account-for-activity-logs');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_soft_delete_for_Blob_storage','Enable soft delete for  Blob storage','Ensure that Soft Delete feature is enabled for all your Microsoft Azure Storage blob objects. Soft Delete enables you to save and recover blob data in case your Azure Storage blobs or blob snapshots are deleted','enable soft delete for blob service',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-soft-delete-for-blob-storage');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Legacy_Subnet_should_Not_Exist_in_a_Project','Deny legacy subnet mode for VPC','Ensure Legacy Networks Do Not Exist for Older Projects','1. Create a new VPC with subnet mode as CUSTOM \n 2. Migrate the old VPC to this newly created VPC',NULL,'version-1',NULL,NULL,'2022-09-12','2022-09-12','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Subnet-mode-for-VPC-should-not-be-legacy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Compute_Engine_using_instance_level_SSH_keys','Enable Compute Engine using instance-level SSH keys','Ensure that your Google Compute Engine instances are configured to ignore GCP project-wide (shared) public SSH keys and use instance-level SSH keys instead.','To block users with project-wide SSH keys from connecting to the instance, set block-project-wide-ssh-keys=true in instance metadata.',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-compute-engine-using-instance-level-ssh-keys');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('GCP_VM_Instance_Shielded_Config','Enable Shielded VM for compute instances','Google compute engines should be configured to use Shielded VM Security feature','1. Select the VM instance you want to reconfigure \n 2. Stop the VM \n 3. Click Edit to enter the Edit mode \n 4. Under "Shielded VM" : select "turn on vTPM" , "Turn on Integrity Monitoring" and "Turn on Secure Boot " \n 5. Click on Save \n 6. Click on Start',NULL,'version-1',NULL,NULL,'2022-09-14','2022-09-14','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-shielded-vm-for-compute-instances');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_osLogin_for_a_project','Enable OS Login for a project','Ensure that the OS Login feature is enabled at the GCP project level in order to provide you with centralized and automated SSH key pair management.','Enable OS Login for GCP Project.',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/Gcp-Policy#enable-os-login-for-a-project');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_User_Managed_Service_Account_Key_Creation','Disable User-Managed Service Account Key Creation','Ensure that GCP user-managed service accounts are using GCP-managed keys instead of user-managed keys for authentication..','delete user managed service account keys',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Disable-User-Managed-Service-Account-Key-Creation');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('kms_keys_rotation_period_within_90_days','Enforce 90 days rotation period of KMS encryption keys','Ensure that all your Cloud Key Management Service (KMS) keys are rotated within a period of 90 days in order to meet security and compliance requirements.','set the kms keys rotation period flag to 90 days',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enforce-90-days-rotation-period-of-kms-encryption-keys');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_transparent_data_encryption_for_sql_db','Enable transparent data encryption for sql database ','Ensure that Transparent Data Encryption (also known as encryption at rest) is enabled for all SQL databases available within your Microsoft Azure cloud account for protecting your data at rest.','set transparent data encryption  to On.',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-transparent-data-encryption-for-sql-database');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Network_Security_Group_Flow_Log_retention_more_than_90_days','Enforce Network Security Group Flow Log retention for more than 90 days','Ensure that your Microsoft Azure Network Security Groups (NSGs) have a sufficient flow log retention period, i.e. greater than or equal to 90 days, configured for reliability and compliance purposes','Enable Rentention and Retention days should be Greater than or equal to 90 days for NSG log flow',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enforce-network-security-group-flow-log-retention-for-more-than-90-days');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Cloud_Asset_Inventory','Enable Cloud Asset Inventory','Ensure that Cloud Asset Inventory is enabled for all your GCP projects in order to efficiently manage the history and the inventory of your cloud resources.','Enable Cloud Asset Inventory',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-Cloud-Asset-Inventory');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_connecting_to_Serial_Ports_for_VM_Instance','Disable connecting to Serial Ports for VM Instance','Ensure that "Enable connecting to serial ports" configuration setting is disabled for all your production Google Compute Engine instances.','Unselect Enable connecting to serial ports below Remote access block.',NULL,'version-1',NULL,NULL,'2022-07-20','2022-07-20','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-connecting-to-serial-ports-for-vm-instance');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Use_CMK_to_encrypt_OS_and_Data_disk','Use CMK to  Encrypt OS and Data disk','Ensure that OS disks (boot volumes) and data disks (non-boot volumes) are encrypted with CMK','Ensure that the OS disk and Data disks have encryption set to CMK.',NULL,'version-1',NULL,NULL,'2022-09-30','2022-09-30','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#use-cmk-to-encrypt-os-and-data-disk');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Azure_DiagnosticSettings_Mandatory_Tags','Include mandatory categories in the diagnostics setting','Selecting mandatory categories (Administrative, Alert, Policy, and Security) ensures alerting for activities performed within your Azure subscription','1. Navigate to Azure monitor : https://portal.azure.com/#blade/Microsoft_Azure_Monitoring/AzureMonitoringBrowseBlade/overview\n2. Choose "Activity log" in left navigation bar\n3. Choose  the subscription you want to examine \n4. Click on the "Export activity logs" in top menu \n5. Create a new diagnostic setting or Edit existing diagnostic setting \n6. Select "Administrative","Alert,"Policy","Security" in Category section \n7. Click on Save',NULL,'version-1',NULL,NULL,'2022-09-26','2022-09-26','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#include-mandatory-categories-in-the-diagnostics-setting');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Deny_Admin_Privilege_Service_Account','Deny admin Privileges to service accounts','Service accounts should not be given admin privilege to avoid to prevent any accidental or intentional modifications that may lead to data loss or data leaks','Delete the Admin/ Owner/Editor role for the service accounts',NULL,'version-1',NULL,NULL,'2022-09-28','2022-09-28','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Deny-admin-Privileges-to-service-accounts');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Ensure_Active_Directory_Web_App','Enable Active Directory on AppServices','Active directory needs to be enabled for app services so that user\'s application can connect to other azure cloud services without need of credentials like user names and password','1. Navigate to App services\n2. Select the webapp you want to configure\n3. Under Settings, select identity\n4. On the identity panel, select On for the Status configuration setting to enable system assigned manged identity',NULL,'version-1',NULL,NULL,'2022-09-29','2022-09-29','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Enable-Active-Directory-on-AppServices');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','Deny usage of service accounts with full cloud API access for VM instances','Enforce the principle of least privilege to prevent privilege escalation, ensure that compute engine instances are not configured to use default service account with the cloud api access scope set to "Allow full acess to all cloud Apis"','To ensure the principle of least privilege execute one of the two options:\n1.replace default service account with a secure and compliant service account\n2.change the access scope for default service account',NULL,'version-1',NULL,NULL,'2022-09-30','2022-09-30','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Deny-usage-of-service-accounts-with-full-cloud-API-access-for-VM-instances');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Deny_usage_of_default_service_accounts_for_instances','Deny usage of default service accounts for instances','ensure that your Google Compute Engine instances are not configured to use the default service account','NULL',NULL,'version-1',NULL,NULL,'2022-09-26','2022-09-26','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Deny-usage-of-default-service-accounts-for-instances');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_Local_infile_for_MySQL_Server_DB_Instances','Disable Local_infile DB Flag for Cloud SQL','Ensure that the "local_infile" database flag is disabled for your Google Cloud MySQL database instances, in order to follow data security best practices','1. Navigate cloud sql instances at https://console.cloud.google.com/sql/instances\n2. Click Filter tree box, select Type and MySQL \n3. Click the database you want to reconfigure\n4. In the navigation panel, select Overview\n5. Click on Edit button\n6. In the Configuration options, click on Flags\n7. Find the local_infile flag and turn it off by selecting off from the flag configuration dropdown list\n8. Click Save',NULL,'version-1',NULL,NULL,'2022-10-06','2022-10-06','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Disable-Local_infile-DB-Flag-for-Cloud-SQL');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_skip_show_database_for_MySQL_Server_DB_Instances','Enable skip_show_database Flag for Cloud SQL','Ensure that the skip_show_database database flag is enabled for your Google Cloud MySQL database instances in order to prevent users from using the SHOW DATABASES statement if they dont have this privilege.',' Set skip_show_database database flag for Cloud SQL Mysql instance to on',NULL,'version-1',NULL,NULL,'2022-10-06','2022-10-06','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Disable-Local_infile-DB-Flag-for-Cloud-SQL');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Azure_KeyVault_Key_ExpiryDate','Set expiration date for key in vault key','Ensure that the Expiration Date is set for all Keys in Key Vaults','set expiration date for key under settings->keys',NULL,'version-1',NULL,NULL,'2022-08-05','2022-08-05','https://github.com/PaladinCloud/CE/wiki/Azure-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Azure_KeyVault_Secret_ExpiryDate','Set expiration date for secret in vault key','Ensure that the Expiration Date is set for all secrets in Key Vaults','set expiration date for secrets under settings->secrets',NULL,'version-1',NULL,NULL,'2022-08-05','2022-08-05','https://github.com/PaladinCloud/CE/wiki/Azure-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Log_connections_for_Postgres_Server_DB_Instances','Enable Log_connections DB Flag for PostgreSQL','Ensure that "log_connections" database flag is enabled for your Google Cloud PostgreSQL database instances. The "log_connections" flag causes each attempted connection to the database instance to be logged, including successful client authentication request','1. Navigate cloud sql instances at https://console.cloud.google.com/sql/instances\n2. Click Filter tree box, select Type and PostGres \n3. Click the database you want to reconfigure\n4. In the navigation panel, select Overview\n5. Click on Edit button\n6. In the Configuration options, click on Flags\n7. Find the Log_connections flag and turn it on by selecting off from the flag configuration dropdown list\n8. Click Save',NULL,'version-1',NULL,NULL,'2022-10-07','2022-10-07','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-Log_connections-DB-Flag-for-PostgreSQL');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Log_disconnections_for_Postgres_Server_DB_Instances','Enable Log_disconnections DB Flag for PostgreSQL','Ensure that "log_disconnections" database flag is enabled for all your Google Cloud PostgreSQL database instances. When this flag is enabled, PostgreSQL database logs the end of each session. The log output provides information similar to the one generated by the "log_connections" flag, plus the duration of the session. The database flag can be changed at the session start, and it cannot be changed during a session.','choose the flag log_disconnections from the drop-down menu and set the value as on .',NULL,'version-1',NULL,NULL,'2022-10-07','2022-10-07','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-log_disconnections-db-flag-for-postgresql');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_log_hostname_for_Postgres_Server_DB_Instances','Enable log_hostname DB Flag for postgres, Cloud SQL','Ensure that the "log_hostname" database flag is enabled for your Google Cloud Postgres database instances, in order to follow data security best practices','1. Navigate cloud sql instances at https://console.cloud.google.com/sql/instances\n2. Click Filter tree box, select Type and MySQL \n3. Click the database you want to reconfigure\n4. In the navigation panel, select Overview\n5. Click on Edit button\n6. In the Configuration options, click on Flags\n7. Find the log_hostname flag and turn it on by selecting on from the flag configuration dropdown list\n8. Click Save',NULL,'version-1',NULL,NULL,'2022-10-10','2022-10-10','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-log_hostname-db-flag-for-postgres-cloud-sql');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','Enforce log_min_error_statement database flag for postgres Instance is set to Error or Stricter','Ensure that "log_min_error_statement" database flag configured for your Google Cloud PostgreSQL database instances has the appropriate level of severity in accordance with your organizations logging policy.','To set a flag that has not been set on the instance before click Add item choose the flag log_min_error_statement from the drop-down menu and set appropriate value.',NULL,'version-1',NULL,NULL,'2022-10-10','2022-10-10','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enforce-log_min_error_statement-database-flag-for-postgres-instance-is-set-to-error-or-stricter');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_Log_min_duration_statement_for_PostgreSQL','Disable Log_min_duration_statement Database Flag for PostgreSQL Instance','Ensure that log_min_duration_statement database flag is disabled for a Cloud PostgreSQL database instances.',NULL,NULL,'version-1',NULL,NULL,'2022-10-06','2022-10-06','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Disable-Log_min_duration_statement-Database-Flag-for-PostgreSQL-Instance');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','Enforce user Connections Database Flag for Sql Server Instance is Set to Non-limiting Value','Ensure that the user connections database flag configured for your Google Cloud SQL Server database instances has the optimal value, in accordance with your organization or project guidelines.',NULL,NULL,'version-1',NULL,NULL,'2022-10-06','2022-10-06','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enforce-user-Connections-Database-Flag-for-Sql-Server-Instance-is-Set-to-Non-limiting-Value');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Create_or_Update_SQL_Database_Log_Alert','Enable Create or Update SQL Database Log Alert','Ensure that an activity log alert is created for Create/Update SQL Database Rule events.',NULL,NULL,'version-1','ENABLED',NULL,'2022-07-07','2022-07-07','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO `cf_Policy` (`policyId`, `policyName`, `policyDesc`, `resolution`, `policyUrl`, `policyVersion`, `status`, `userId`, `createdDate`, `modifiedDate`,`resolutionUrl`) values('Enable_Delete_SQL_Database_Log_Alert','Enable Delete SQL Database Log Alert','Ensure that an activity log alert is created for Delete SQL Database Rule events.',NULL,NULL,'version-1','ENABLED',NULL,'2022-07-07','2022-07-07','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-log-alert');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Confidential_Computing_for_Compute_Instance','Enable Confidential Computing for Compute Instance','Ensure that the Confidential Computing security feature is enabled for VM instances in order to add protection to your sensitive data in use by keeping it encrypted in memory and using encryption keys that Google does not have access to.','NULL',NULL,'version-1',NULL,NULL,'2022-10-04','2022-10-04','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-Confidential-Computing-for-Compute-Instance');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_pgAudit_Database_Flag_for_Postgresql_Instance','Enable cloudsql.enable_pgaudit Database Flag for Postgresql Instance','Ensure that the cloudsql.enable_pgaudit database flag is enabled for your Google Cloud PostgreSQL server instances in order to allow for database auditing that is often required to comply with government, financial, and ISO certifications.',NULL,NULL,'version-1',NULL,NULL,'2022-10-04','2022-10-04','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-cloudsqlenable_pgaudit-database-flag-for-postgresql-instance');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Remove_user_options_for_SQLServer','Remove user options database flag for Cloud SQL SERVER instance','In order to avoid defining global defaults for all database users, delete user options database flag','1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting  https://console.cloud.google.com/sql/instances. \n2. Select the SQL server instance where the database flag needs to be enabled. \n3. Click Edit . \n4. Scroll down to the Flags section. \n5. Delete user options flag from database flags section \n6. Click Save . \n7. Confirm the changes under Flags on the Overview page.',NULL,'version-1',NULL,NULL,'2022-10-17','2022-10-17','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Remove-user-options-Database-Flag-for-SQL-server-Instance');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Auto_Upgrade_for_GKE_nodes','Enable Auto-Upgrade for GKE nodes','Automatic node upgrade ensures that when new binaries are released you instantly get a fix with the latest security issues resolved. GKE will automatically ensure that security updates are applied and kept up to date.',NULL,NULL,'version-1',NULL,NULL,'2022-10-27','2022-10-27','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-Auto-Upgrade-for-GKE-nodes');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Auto_Repair_for_GKE_nodes','Enable Auto-Repair for GKE nodes','Kubernetes Engines node auto-repair feature helps you keep the nodes in your cluster in a healthy, running state.',NULL,NULL,'version-1',NULL,NULL,'2022-10-27','2022-10-27','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-Auto-Repair-for-GKE-nodes');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Configure_email_in_ms_defender','Configure additional email address in MS defender email notifications settings','In MS defender email alert settings, ensure additional email address is configured.',NULL,NULL,'version-1',NULL,NULL,'2022-10-19','2022-10-19','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#in-ms-defender-ensure-additional-email-addresses-is-configured-with-a-security-contact-email');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Set_notify_alerts_severity_to_high','Set notify alerts severity to high in MS defender','Set notify email alerts severity to high in MS defender.',NULL,NULL,'version-1',NULL,NULL,'2022-10-19','2022-10-19','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#in-ms-defender-ensure-that-notify-about-alerts-with-the-following-severity-is-set-to-high');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Send_Scan_Reports_Should_Be_Configured','Enforce configuration of Vulnerability Assessment (VA) setting Send scan reports to for a SQL server','Configure Send scan reports to with email ids of concerned data owners/stakeholders for a critical SQL servers','1.Go to SQL servers \n2.Select a server instance \n3.Click on Security Center \n4.Ensure that Azure Defender for SQL is set to Enabled \n5.Select Configure next to Enabled at subscription-level \n6.In Section Vulnerability Assessment Settings , configure Storage Accounts if not already \n7. Configure email ids for concerned data owners/stakeholders at Send scan reports to \n8. Click Save',NULL,'version-1',NULL,NULL,'2022-10-19','2022-10-19','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Ensure-that-Vulnerability-Assessment-setting-Send-scan-reports-to-is-configured-for-a-SQL-server');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Email_Subscription_Admin','Enable send email notifications to admins and subscription owners in vulnerability settings for sql server','Vulnerability Assessment scan reports and alerts will be sent to admins and subscription owners by enabling setting called Also send email notifications to admins and subscription owners','1.Go to SQL servers \n2.Select a server instance \n3.Click on Security Center \n4.Select Configure next to Enabled at subscription-level \n5.In Section Vulnerability Assessment Settings , configure Storage Accounts if not already \n6. Check/enable Also send email notifications to admins and subscription owners \n7. Click Save',NULL,'version-1',NULL,NULL,'2022-10-20','2022-10-20','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Enable-send-email-notifications-to-admins-and-subscription-owners-in-vulnerability-settings-for-sql-server');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Integrity_Monitoring_For_Node_Pool','Enable Integrity Monitoring for Shielded GKE Nodes','Integrity monitoring should be enabled to monitor and check runtime boot integrity of shielded cluster nodes using Cloud Monitoring service','Once a Node pool is provisioned, it cannot be updated to enable Integrity Monitoring. You must create new Node pools within the cluster with Integrity Monitoring enabled Using Google Cloud Console \n1. Go to Kubernetes Engine by visiting https://console.cloud.google.com/kubernetes/list \n2. From the list of clusters, click on the cluster requiring the update and click ADD NODE POOL \n3. Ensure that the Integrity monitoring checkbox is checked under the Shielded options Heading. \n4. Click SAVE.',NULL,'version-1',NULL,NULL,'2022-10-26','2022-10-26','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-Integrity-Monitoring-for-Shielded-GKE-Nodes');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Secure_Boot_For_Node_Pool','Enable Secure Boot for Shielded GKE Nodes','Secure Boot should be enabled for shielded GKE nodes to ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot  process if signature verification fails','Once a Node pool is provisioned, it cannot be updated to enable Secure Boot. You must create new Node pools within the cluster with Secure Boot enabled. Using Google Cloud Console \n1. Go to Kubernetes Engine by visiting https://console.cloud.google.com/kubernetes/list \n2. From the list of clusters, click on the cluster requiring the update and click ADD NODE POOL \n3. Ensure that the Secure boot checkbox is checked under the Shielded options Heading \n4. Click SAVE.',NULL,'version-1',NULL,NULL,'2022-10-26','2022-10-26','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-Secure-Boot-for-Shielded-GKE-Nodes');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_rbac_for_azure_kubernetes','Enable RBAC for Azure Kubernetes Services','In Azure kubernetes services, role-based access control should be enabled','1. Login to Azure and navigate to Kubernetes Services.\n2. For each Kubernetes Services instance, click on Automation Script. \n3. Ensure that each variable enableRBAC is set to true.',NULL,'version-1',NULL,NULL,'2022-10-27','2022-10-27','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#enable-role-based-access-control-rbac-within-azure-kubernetes-services');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_Legacy_Authorization','Disable Legacy Authorization','Legacy Authorization should be disabled','From the list of clusters, click on each cluster to open the Details pane, and make sure Legacy Authorization is set to Disabled.',NULL,'version-1',NULL,NULL,'2022-10-27','2022-10-27','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-legacy-authorization');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_VPC_Flow_Logs_and_IntraNode_Visibility','Enable VPC Flow Logs and IntraNode Visibility','Enable VPC Flow Logs and Intranode Visibility to see pod-level traffic, even for traffic within a worker node','Select Kubernetes clusters and set intraNode visibility to enabled',NULL,'version-1',NULL,NULL,'2022-10-27','2022-10-27','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-vpc-flow-logs-and-intranode-visibility');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_Alpha_Cluster','Disable Alpha clusters for Production Workloads','Alpha clusters are not covered by an SLA and are not production-ready','Alpha features cannot be disabled. To remediate, a new cluster must be created.\nUsing Google Cloud Console\n1. Go to Kubernetes Engine by visiting\nhttps://console.cloud.google.com/kubernetes/\n2. Click CREATE CLUSTER\n3. Unless Node Auto-Upgrade and Node Auto-Repair are disabled, under Availability, networking, security, and additional features, the option Enable Kubernetes alpha features in this cluster will not be available. Ensure this feature is not checked \n4. Click CREATE.',NULL,'version-1',NULL,NULL,'2022-11-02','2022-11-02','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Disable-Alpha-clusters-for-Production-Workloads');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Ensure_clusters_created_with_pvtnodes','Enforce clusters are created with Private Nodes','Disable public IP addresses for cluster nodes, so that they only have private IP addresses. Private Nodes are nodes with no public IP addresses.','1. Go to Kubernetes Engine by visiting https://console.cloud.google.com/kubernetes/list \n2. Select the desired cluster, and within the Details pane, make sure ''Private Clusters'' is set to ''Enabled'' ',NULL,'version-1',NULL,NULL,'2022-11-03','2022-11-03','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#ensure-clusters-are-created-with-private-nodes');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Ensure_clusters_created_with_pvt_endpoints','Enforce clusters are created with Private end points','Disable access to the Kubernetes API from outside the node network if it is not required.','1. Go to Kubernetes Engine by visiting https://console.cloud.google.com/kubernetes/list \n2. Select the desired cluster, and within the Details pane, make sure the ''Endpoint'' does not have a public IP address.',NULL,'version-1',NULL,NULL,'2022-11-03','2022-11-03','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#ensure-clusters-are-created-with-private-end-points');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_auto_provisioning_of_log_analytics_agent','Enable auto provisioning of log analytics agent','Ensure that automatic provisioning of the monitoring agent is enabled in your Microsoft Azure account to collect security data and events from your cloud compute resources in order to help you prevent, detect, and respond efficiently to security vulnerabilities and threats.','Set auto provision flag to On',NULL,'version-1',NULL,NULL,'2022-11-03','2022-11-03','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#enable-auto-provisioning-of-log-analytics-agent');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_Kubernetes_Web_UI','Disable Kubernetes Web UI','The Kubernetes Web UI  has been a historical source of vulnerability and should only be deployed when necessary.',NULL,NULL,'version-1',NULL,NULL,'2022-11-03','2022-11-03','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_Basic_Authentication','Disable Basic Authentication using static passwords','Basic Authentication allows a user to authenticate to a Kubernetes cluster with a username and static password which is stored in plaintext (without any encryption).Disabling Basic Authentication will prevent attacks like brute force and credential stuffing','1.Go to Kubernetes Engine by visiting https://console.cloud.google.com/kubernetes/list \n2.Select the Kubernetes cluster for which Basic Authentication is currently enabled \n3.Click on EDIT \n4.Set Basic authentication to Disabled \n5.Click SAVE.',NULL,'version-1',NULL,NULL,'2022-11-01','2022-11-01','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Disable-Basic-Authentication-using-static-passwords');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_VPC_native_for_clusters','Enable VPC-native for clusters','Create Alias IPs for the node network CIDR range in order to subsequently configure IP-based policies and firewalling for pods. A cluster that uses Alias IPs is called a VPC-native cluster.',NULL,NULL,'version-1',NULL,NULL,'2022-10-27','2022-10-27','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-VPC-native-for-clusters');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_client_certificate_Authentication_for_Cluster','Disable client certificate Authentication for GKE Cluster','Disable Client Certificates, which require certificate rotation, for authentication. Instead, use another authentication method like OpenID Connect.',NULL,NULL,'version-1',NULL,NULL,'2022-10-27','2022-10-27','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Disable-client-certificate-Authentication-for-GKE-Cluster');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Remove_custom_owner_roles','Remove custom Owner roles','Ensure that there are no custom subscription owner roles available in your Azure account in order to adhere to cloud security best practices and implement the principle of least privilege','remove the custom subscription owner roles',NULL,'version-1',NULL,NULL,'2022-11-12','2022-11-12','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#remove-custom-owner-roles');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Azure_KeyVault_Key_ExpiryDate_RBAC','Set expiration date for Role base access control of keys in key vaults','Keys in Role Based Access Control (RBAC) Azure Key Vaults should have an expiration time set because keys cannot be used beyond their assigned expiration times','1.Ensure that the user has the role of Key Vault Secrets Officer assigned \n2.Go to Key vaults \n3.For each Key vault, click on keys . \n4.Under the Settings section, Make sure Enabled? is set to Yes \n5.Ensure that each key in the vault has EXPIRATION DATE set as appropriate',NULL,'version-1',NULL,NULL,'2022-11-10','2022-11-10','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Set-expiration-date-for-Role-base-access-control-of-keys-in-key-vaults');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Azure_KeyVault_Secret_ExpiryDate_RBAC','Set expiration date for Role base access control of secrets in key vaults','Secrets in Role Based Access Control (RBAC) Azure Key Vaults should have an expiration time set because secrets cannot be used beyond their assigned expiration times','1.Ensure that the user has the role of Key Vault Secrets Officer assigned \n2.Go to Key vaults \n3.For each Key vault, click on Secrets . \n4.Under the Settings section, Make sure Enabled? is set to Yes \n5.Ensure that each secret in the vault has EXPIRATION DATE set as appropriate',NULL,'version-1',NULL,NULL,'2022-11-10','2022-11-10','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Set-expiration-date-for-Role-base-access-control-of-secrets-in-key-vaults');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Set_Retention_Days_Greater_Than_Ninety','Set Retention days days greater than 90 for SQL Server','SQL Server Audit Retention should be configured to be greater than 90 days, these logs can be used to check for anomalies and give insight into suspected breaches or misuse of information and access','1. Go to SQL servers\n2. For each server instance\n3. Click on Auditing\n4. If storage is selected, expand Advanced properties\n5. Set the Retention (days) setting greater than 90 days or 0 for unlimited retention.\n6. Select Save',NULL,'version-1',NULL,NULL,'2022-11-17','2022-11-17','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Set-Retention-days-greater-than-90-for-SQL-Server');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Cloud_Logging_Monitoring','Enable Cloud Logging and Monitoring','Enabling cloud logging and monitoring Send logs and metrics to a remote aggregator to mitigate the risk of local tampering in the event of a breach.',NULL,NULL,'version-1',NULL,NULL,'2022-10-27','2022-10-27','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Set_all_users_to_owner_email_notifications','Set all users option to owner in email notifications for MS defender','In MS defender email notifications for security alerts for a subscription, ''All users with the following roles'' should be set to ''Owner''.',NULL,NULL,'version-1',NULL,NULL,'2022-10-14','2022-10-14','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#in-ms-defender-ensure-that-all-users-with-the-following-roles-is-set-to-owner');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Addon_policies_for_AKS','Enable Add-on Policies for AKS','Azure Policy Add-on for Kubernetes service (AKS) extends Gatekeeper v3, an admission controller webhook for Open Policy Agent (OPA), to apply at-scale enforcements and safeguards on your clusters in a centralized, consistent manner.',NULL,NULL,'version-1',NULL,NULL,'2022-11-22','2022-11-22','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#in-ms-defender-ensure-that-all-users-with-the-following-roles-is-set-to-owner');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_private_cluster_for_AKS','Enable Private Cluster for AKS','Enable the private cluster feature for your Azure Kubernetes Service cluster to ensure network traffic between your API server and your node pools remains on the private network only.',NULL,NULL,'version-1',NULL,NULL,'2022-11-22','2022-11-22','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#in-ms-defender-ensure-that-all-users-with-the-following-roles-is-set-to-owner');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Define_Authorised_IP_for_kubernetes','Define authorised IP ranges for AKS API server','To enhance cluster security and minimise attacks, the API server should only be accessible from a limited set of IP address ranges. These IP ranges allow defined IP address ranges to communicate with the API server. A request made to the API server from an IP address that is not part of these authorised IP ranges is blocked.','1. In azure portal, select Kubernetes services \n2. Select the kubernete service from the list \n3. Under Settings tab, select Networking \n4. Under security section in the Networking tab, select Set authorized IP ranges \n5. After selecting set authorized IP ranges, Specify IP ranges',NULL,'version-1',NULL,NULL,'2022-11-22','2022-11-22','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Define-authorised-IP-ranges-for-AKS-API-server');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Cluster_Monitoring_for_kubernetes','Enable azure AKS cluster monitoring','The Azure Monitoring service collects and stores valuable telemetry reported by AKS. This includes: memory and processor metrics for controllers, nodes and containers logs, and logs from the individual containers','To enable monitoring of your AKS cluster in the Azure portal from Azure Monitor:\n.In the Azure portal, select Monitor. \n2.Select Containers from the list. \n3.On the Monitor - containers page, select Unmonitored clusters. \n4.From the list of unmonitored clusters, find the cluster in the list and select Enable. \n5.On the Configure Container insights page, select Configure. \n6.On the Configure Container insights page, fill in the following information: \nLog Analytics workspace        :Select a Log Analytics workspace from the dropdown list or select Create new to create a default Log Analytics workspace. The Log Analytics workspace must be in the same subscription as the AKS container.',NULL,'version-1',NULL,NULL,'2022-11-22','2022-11-22','https://github.com/PaladinCloud/CE/wiki/Azure-Policy#Enable-azure-AKS-cluster-monitoring');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enforce_Separation_Of_Duties_For_KMS_Roles','Enforce Separation of Duties While Assigning KMS Related Roles to Users','Separation of duties is the concept of ensuring that one individual does not have all necessary permissions to be able to complete a malicious action. In Cloud KMS, this could be an action such as using a key to access and decrypt data a user should not normally have access to.','1.Go to IAM & Admin/IAM using https://console.cloud.google.com/iam-admin/iam \n2.For any member having Cloud KMS Admin and any of the Cloud KMS CryptoKey Encrypter/Decrypter , Cloud KMS CryptoKey Encrypter , Cloud KMS CryptoKey Decrypter roles granted/assigned, click the Delete Bin icon to remove the role from the member.',NULL,'version-1',NULL,NULL,'2022-11-29','2022-11-29','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enforce-Separation-of-Duties-While-Assigning-KMS-Related-Roles-to-Users');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Avoid_Service_roles_to_IAM_user_at_project_level','Avoid_Service_roles_to_IAM_user_at_project_level','Ensure that Service Account User and Service Account Token Creator roles to a user for a specific service account rather than assigning the role to a user at project level.','Remove Service Account user and Service Account token creator from the role parameter at project level.',NULL,'version-1',NULL,NULL,'2022-11-29','2022-11-29','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Avoid-Assigning-Service-Roles-to-IAM-Users-at-the-Project-Level');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_HTTPS_For_LoadBalancer','Enable HTTPS for Google Cloud Load Balancers','Google Cloud Platform (GCP) load balancers should be configured to use valid SSL/TLS certificates in order to handle encrypted web traffic. SSL certificate resources contain SSL certificate information that the load balancer uses to terminate SSL/TLS when HTTPS clients connect to it','1. Navigate to Cloud Load Balancing dashboard at https://console.cloud.google.com/net-services/loadbalancing.\n2. On the Load balancing page, select Load balancers to access the list with the Google Cloud load balancers created for the selected project\n3. Choose the HTTP load balancer that you want to reconfigure , click on the 3-dot button to access the options menu, then select Edit\n4. On the Edit HTTP(S) load balancer page, select Frontend configuration tab, and choose Add Frontend IP and port to create a new, secure frontend configuration for the selected load balancer\n5. On the Edit HTTP(S) load balancer page, click Update to associate the newly created HTTPS frontend configuration with the selected Google Cloud load balancer',NULL,'version-1',NULL,NULL,'2022-12-08','2022-12-08','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-HTTPS-for-Google-Cloud-Load-Balancers');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_Logging_For_BackendServices_LoadBalancer','Enable HTTP(S) logging for Load Balancing Backend Services','Google Cloud Platform (GCP) load balancing backend services should be configured to log HTTP(S) traffic because log entries contain information useful for monitoring and debugging web traffic','1. Navigate to Cloud Load Balancing dashboard at https://console.cloud.google.com/net-services/loadbalancing. \n2. On the Load balancing page, select Load balancers to access the list with the Google Cloud load balancers created for the selected project \n3. Click on the 3-dot button to access the options menu, then select Edit \n4. On the Edit HTTP(S) load balancer page, select Backend configuration tab, and click on the Edit button (pencil icon) available next to the associated backend service, to enter the resource edit mode \n5. On the Edit backend service configuration panel, under Logging, select Enable logging checkbox and set the Sample rate fraction to a value between 0.0 and 1.0 \n6. On the Edit HTTP(S) load balancer page, click Update to save the changes',NULL,'version-1',NULL,NULL,'2022-12-08','2022-12-08','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Enable-HTTPS-logging-for-Load-Balancing-Backend-Services');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Secure_SSL_Cipher_Suites','Secure SSL Cipher Suites','Check the Secure Socket Layer (SSL) policies associated with your HTTPS and SSL Proxy load balancers for any cipher suites that demonstrate vulnerabilities or have been considered insecure by recent exploits. Secure Sockets Layer (SSL) policies determine which Transport Layer Security (TLS) features clients are permitted to use when connecting to external Google Cloud load balancers. ','1. Navigate to Cloud Load Balancing dashboard at https://console.cloud.google.com/net-services/loadbalancing. \n2. On the Load balancing page, select Load balancers to access the list with the Google Cloud load balancers created for the selected project \n3. Click on the 3-dot button to access the options menu, then select Edit \n4. On the Edit HTTP(S) load balancer page, select the Frontend configuration tab, and click on the frontend configuration listed on the right panel.\n5. On the frontend configuration panel, select Create policy from the SSL policy dropdown list to initiate the setup process.\n6. Click Create to create the new, secure SSL policy.',NULL,'version-1',NULL,NULL,'2022-12-08','2022-12-08','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#Secure-SSL-Cipher-Suites');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_API_Key_Restrictions','Configure API Restriction for API Keys','Ensure that the usage of your Google Cloud API keys is restricted to specific APIs such as Cloud Key Management Service (KMS) API, Cloud Storage API, Cloud Monitoring API and/or Cloud Logging API.',NULL,NULL,'version-1',NULL,NULL,'2022-11-29','2022-11-29','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enforce_Separate_Service_Account_Duties_for_Users','Enforce Separate Service Account Duties for Users','In MS defender email notifications for security alerts for a subscription,It is recommended that the principle of Separation of Duties is enforced while assigning service-account related roles to users.',NULL,NULL,'version-1',NULL,NULL,'2022-10-14','2022-10-14','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','Disable Contained Database Authentication Flag for SQL Server Database Instances','Ensure contained database authentication flag is disabled for your Google Cloud SQL Server database instances.',NULL,NULL,'version-1',NULL,NULL,'2022-11-22','2022-11-22','https://github.com/PaladinCloud/CE/wiki/GCP-Policy#disable-contained-database-authentication-flag-for-sql-server-database-instances');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Enable_API_Key_Application_Restrictions','Configure Application Restrictions for Google Cloud API Key','Ensure that Google Cloud API key usage is restricted to trusted hosts, HTTP referrers, or applications',NULL,NULL,'version-1',NULL,NULL,'2022-11-29','2022-11-29','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');
INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Rotate_Google_Cloud_API_Keys','Rotate Google Cloud API Keys','Ensure that all your Google Cloud API keys are regularly regenerated  in order to meet security and compliance requirements',NULL,NULL,'version-1',NULL,NULL,'2022-11-29','2022-11-29','https://github.com/PaladinCloud/CE/wiki/GCP-Policy');

INSERT IGNORE INTO cf_Policy (`policyId`,`policyName`,`policyDesc`,`resolution`,`policyUrl`,`policyVersion`,`status`,`userId`,`createdDate`,`modifiedDate`,`resolutionUrl`) VALUES ('Disable_kubernetes_DashBoard','Disable kubernetes DashBoard','Disable the Kubernetes dashboard to prevent the need to manage its individual access interface and to eliminating it as an attack vector.',NULL,NULL,'version-1',NULL,NULL,'2022-11-22','2022-11-22','https://github.com/PaladinCloud/CE/wiki/Azure-Policy');

/* Rule  Initialisation */


INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_kms_public_access_rule','gcp_kms_public_access_rule','GCP_kms_public_access_rule_version-1','KMSPublicAccessRule','kmskey','gcp','KMSPublicAccessRule','{"params":[{"encrypt":false,"value":"check-kms-key-public-access","key":"ruleKey"},{"key":"description","value":"Ensure there are no publicly accessible KMS cryptographic keys available within your Google Cloud account.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Google Cloud key is publicly accessible","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_kmskey/_search","encrypt":false},{"key":"policyName","value":"Check for Publicly Accessible Cloud KMS Keys","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"GCP_kms_public_access_rule","autofix":false,"alexaKeyword":"KMSPublicAccessRule","ruleRestUrl":"","targetType":"kmskey","pac_ds":"gcp","policyId":"GCP_kms_public_access_rule_version-1","assetGroup":"gcp","ruleUUID":"gcp_kms_public_access_rule","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_kms_public_access_rule','ENABLED','ASGC','Check for Publicly Accessible Cloud KMS Keys','2022-07-14','2022-07-14','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_cloud_sql_encryption_cmks_rule','gcp_cloud_sql_encryption_cmks_rule','GCP_cloud_sql_encryption_cmks_rule_version-1','CloudSqlEncryptionCMKs','cloudsql','gcp','CloudSqlEncryptionCMKs','{"params":[{"encrypt":false,"value":"check-customer-managed-key-encryption","key":"ruleKey"},{"key":"description","value":"Ensure Cloud SQL is encrypted with Customer Managed Encryption Keys (CMEK) to protect your data-at-rest.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Google Cloud SQL database instance is not encrypted using a Customer-Managed Key (CMK)","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_cloudsql/_search","encrypt":false},{"key":"policyName","value":"Use CMEK to encrypt Cloud SQL","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"GCP_cloud_sql_encryption_cmks_rule","autofix":false,"alexaKeyword":"CloudSqlEncryptionCMKs","ruleRestUrl":"","targetType":"cloudsql","pac_ds":"gcp","policyId":"GCP_cloud_sql_encryption_cmks_rule_version-1","assetGroup":"gcp","ruleUUID":"gcp_cloud_sql_encryption_cmks_rule","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_cloud_sql_encryption_cmks_rule','ENABLED','ASGC','Encrypt Cloud SQL Using CMEK','2022-06-29','2022-06-29','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_bigquery_table_encryption_cmks_rule','gcp_bigquery_table_encryption_cmks_rule','GCP_bigquery_table_encryption_cmks_rule_version-1','BigqueryTableEncryptionCMKs','bigquerytable','gcp','BigqueryTableEncryptionCMKs','{"params":[{"encrypt":false,"value":"check-customer-managed-key-encryption","key":"ruleKey"},{"key":"description","value":"Ensure that Big Query dataset is encrypted with Customer Managed Encryption Keys (CMEK) to protect your data-at-rest.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Google Cloud BigQuery dataset table is not encrypted using a Customer-Managed Key (CMK)","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_bigquerytable/_search","encrypt":false},{"key":"policyName","value":"Use CMEK to encrypt Big Query","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"GCP_bigquery_table_encryption_cmks_rule","autofix":false,"alexaKeyword":"BigqueryTableEncryptionCMKs","ruleRestUrl":"","targetType":"bigquerytable","pac_ds":"gcp","policyId":"GCP_bigquery_table_encryption_cmks_rule_version-1","assetGroup":"gcp","ruleUUID":"gcp_bigquery_table_encryption_cmks_rule","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_bigquery_table_encryption_cmks_rule','ENABLED','ASGC','Use CMEK to encrypt Big Query','2022-06-24','2022-06-24','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_bigquery_dataset_public_access_rule','gcp_bigquery_dataset_public_access_rule','GCP_bigquery_dataset_public_access_version-1','BigqueryDatasetPublicAccess','bigquerydataset','gcp','BigqueryDatasetPublicAccess','{"params":[{"encrypt":false,"value":"check-bigquery-dataset-public-access","key":"ruleKey"},{"key":"description","value":"Do not allow public access to Big Query. Granting permissions to allUsers and allAuthenticatedUsers members can allow anyone to access your datasets.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"One or more roles are using the allUsers or allAuthenticatedUsers member bindings in the dataset ACLs","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_bigquerydataset/_search","encrypt":false},{"key":"policyName","value":"Deny public access to Big Query","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"GCP_bigquery_dataset_public_access_rule","autofix":false,"alexaKeyword":"BigqueryDatasetPublicAccess","ruleRestUrl":"","targetType":"bigquerydataset","pac_ds":"gcp","policyId":"GCP_bigquery_dataset_public_access_version-1","assetGroup":"gcp","ruleUUID":"gcp_bigquery_dataset_public_access_rule","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/gcp_bigquery_dataset_public_access_rule','ENABLED','ASGC','Deny public access to Big Query','2022-06-23','2022-06-23','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VpcFlowLogsEnabled_version-1_VpcFlowLogsEnabled_vpc','aws_account_should_have_vpclogs_enabled','VpcFlowLogsEnabled_version-1','VpcFlowLogsEnabled','vpc','aws','VpcFlowLogsEnabled','{"params":[{"encrypt":"false","value":"role/paladincloud_ro","key":"roleIdentifyingString"},{"encrypt":"false","value":"check-for-vpc-flowlog-enabled","key":"ruleKey"},{"encrypt":false,"value":"high","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"VpcFlowLogsEnabled_version-1_VpcFlowLogsEnabled_vpc","autofix":false,"alexaKeyword":"VpcFlowLogsEnabled","ruleRestUrl":"","targetType":"vpc","pac_ds":"aws","policyId":"VpcFlowLogsEnabled_version-1","assetGroup":"aws","ruleUUID":"aws_account_should_have_vpclogs_enabled","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_should_have_vpclogs_enabled'),'ENABLED','ASGC','Enable VPC Flowlogs for all VPCs',{d '2017-08-11'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Unused-Security-group_version-1_UnusedSecurityGroup_sg','aws_security_groups_should_not_be_unused','Unused-Security-group_version-1','UnusedSecurityGroup','sg','aws','UnusedSecurityGroup','{"params":[{"encrypt":false,"value":"check-for-unused-security-group","key":"ruleKey"},{"encrypt":false,"value":"governance","key":"ruleCategory"},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":",","key":"splitterChar"},{"key":"fixKey","value":"unused-sg-auto-fix","isValueNew":true,"encrypt":false},{"key":"esServiceWithSgUrl","value":"/aws/ec2_secgroups/_search,/aws/rdsdb_secgroups/_search,/aws/rdscluster_secgroups/_search,/aws/redshift_secgroups/_search,/aws_lambda/lambda_secgroups/_search,/aws_appelb/appelb_secgroups/_search,/aws_classicelb/classicelb_secgroups/_search,/aws/elasticsearch/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"Unused-Security-group_version-1_UnusedSecurityGroup_sg","autofix":false,"alexaKeyword":"UnusedSecurityGroup","ruleRestUrl":"","targetType":"sg","pac_ds":"aws","policyId":"Unused-Security-group_version-1","assetGroup":"aws","ruleUUID":"aws_security_groups_should_not_be_unused","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_security_groups_should_not_be_unused'),'ENABLED','ASGC','Delete Unused Security Groups',{d '2017-10-16'},{d '2018-12-18'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','aws_elasticip_should_not_be_unused','UnusedElasticIpRule_version-1','UnusedElasticIpRule','elasticip','aws','UnusedElasticIpRule','{"params":[{"encrypt":false,"value":"check-for-unused-elastic-ip","key":"ruleKey"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"governance","key":"ruleCategory"},{"key":"esElasticIpUrl","value":"/aws_elasticip/elasticip/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip","autofix":false,"alexaKeyword":"UnusedElasticIpRule","ruleRestUrl":"","targetType":"elasticip","pac_ds":"aws","policyId":"UnusedElasticIpRule_version-1","assetGroup":"aws","ruleUUID":"aws_elasticip_should_not_be_unused","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_elasticip_should_not_be_unused'),'ENABLED','ASGC','Elastic Ip''s should not be in unused state',{d '2018-02-01'},{d '2018-09-19'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('UnusedEBSRule_version-1_UnusedEbsRule_volume','aws_ebs_volume_should_not_be_unused','UnusedEBSRule_version-1','UnusedEbsRule','volume','aws','UnusedEBSRule','{"params":[{"encrypt":false,"value":"check-for-unused-ebs-rule","key":"ruleKey"},{"encrypt":false,"value":"governance","key":"ruleCategory"},{"encrypt":false,"value":"low","key":"severity"},{"key":"esEbsWithInstanceUrl","value":"/aws/volume_attachments/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"UnusedEBSRule_version-1_UnusedEbsRule_volume","autofix":false,"alexaKeyword":"UnusedEBSRule","ruleRestUrl":"","targetType":"volume","pac_ds":"aws","policyId":"UnusedEBSRule_version-1","assetGroup":"aws","ruleUUID":"aws_ebs_volume_should_not_be_unused","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ebs_volume_should_not_be_unused'),'ENABLED','ASGC','EBS volumes should not be in unused state',{d '2017-10-13'},{d '2018-11-12'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('UnusedClassicElbRule_version-1_UnusedClassicElbRule_classicelb','aws_classic_elb_should_not_be_unused','UnusedClassicElbRule_version-1','UnusedClassicElbRule','classicelb','aws','UnusedClassicElbRule','{"params":[{"encrypt":false,"value":"check-for-unused-classic-elb","key":"ruleKey"},{"encrypt":false,"value":"true","key":"threadsafe"},{"encrypt":false,"value":"governance","key":"ruleCategory"},{"encrypt":false,"value":"low","key":"severity"},{"key":"esClassicElbWithInstanceUrl","value":"/aws/classicelb_instances/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"sdfsd","key":"sdf"}],"ruleId":"UnusedClassicElbRule_version-1_UnusedClassicElbRule_classicelb","autofix":false,"alexaKeyword":"UnusedClassicElbRule","ruleRestUrl":"","targetType":"classicelb","pac_ds":"aws","policyId":"UnusedClassicElbRule_version-1","assetGroup":"aws","ruleUUID":"aws_classic_elb_should_not_be_unused","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_classic_elb_should_not_be_unused'),'ENABLED','ASGC','Clean up Unused ELB',{d '2017-09-28'},{d '2018-11-12'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('UnusedApplicationElbRule_version-1_UnusedApplicationElbRule_appelb','aws_app_elb_should_not_be_unused','UnusedApplicationElbRule_version-1','UnusedApplicationElbRule','appelb','aws','UnusedApplicationElbRule','{"params":[{"encrypt":"false","value":"check-for-unused-application-elb","key":"ruleKey"},{"encrypt":false,"value":"governance","key":"ruleCategory"},{"encrypt":false,"value":"low","key":"severity"},{"key":"esAppElbWithInstanceUrl","value":"/aws/appelb_instances/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"UnusedApplicationElbRule_version-1_UnusedApplicationElbRule_appelb","autofix":false,"alexaKeyword":"UnusedApplicationElbRule","ruleRestUrl":"","targetType":"appelb","pac_ds":"aws","policyId":"UnusedApplicationElbRule_version-1","assetGroup":"aws","ruleUUID":"aws_app_elb_should_not_be_unused","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_app_elb_should_not_be_unused'),'ENABLED','ASGC','Application ELB should not be in unused state',{d '2017-09-28'},{d '2018-11-12'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('UntaggedOrUnusedEbsRule_version-1_version-1_UntaggedOrUnusedEbsRule_volume','aws_ebs_volumes_should_not_be_tagged_and_under_utilized','UntaggedOrUnusedEbsRule_version-1','UntaggedOrUnusedEbsRule','volume','aws','UntaggedOrUnusedEbsRule','{"params":[{"key":"ruleKey","value":"check-for-unused-or-untagged-ebs-rule","encrypt":false},{"key":"esEbsWithInstanceUrl","value":"/aws/volume_attachments/_search","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"severity","value":"high","encrypt":false}],"environmentVariables":[],"ruleId":"UntaggedOrUnusedEbsRule_version-1_version-1_UntaggedOrUnusedEbsRule_volume","autofix":false,"alexaKeyword":"UntaggedOrUnusedEbsRule","ruleRestUrl":"","targetType":"volume","pac_ds":"aws","policyId":"UntaggedOrUnusedEbsRule_version-1","assetGroup":"aws","ruleUUID":"aws_ebs_volumes_should_not_be_tagged_and_under_utilized","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ebs_volumes_should_not_be_tagged_and_under_utilized'),'ENABLED','ASGC','EBS volumes should not be in unused or untagged state',{d '2018-08-22'},{d '2018-09-19'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('UnderutilizedAmazonRedshiftClustersRule_version-1_UnderutilizedAmazonRedshiftClustersRule_redshift','aws_redshift_clusters_should_not_be_under_utilized','UnderutilizedAmazonRedshiftClustersRule_version-1','UnderutilizedAmazonRedshiftClustersRule','redshift','aws','UnderutilizedAmazonRedshiftClustersRule','{"params":[{"encrypt":false,"value":"check-for-under-utilized-amazon-redshift-clusters","key":"ruleKey"},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"G31sQ1E9U","key":"checkId"},{"isValueNew":true,"encrypt":false,"value":"costOptimization","key":"ruleCategory"},{"key":"esServiceURL","value":"/aws_checks/checks_resources/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"UnderutilizedAmazonRedshiftClustersRule_version-1_UnderutilizedAmazonRedshiftClustersRule_redshift","autofix":false,"alexaKeyword":"UnderutilizedAmazonRedshiftClustersRule","ruleRestUrl":"","targetType":"redshift","pac_ds":"aws","policyId":"UnderutilizedAmazonRedshiftClustersRule_version-1","assetGroup":"aws","ruleUUID":"aws_redshift_clusters_should_not_be_under_utilized","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_redshift_clusters_should_not_be_under_utilized'),'ENABLED','ASGC','Check for Underutilized Amazon Redshift Clusters',{d '2018-03-14'},{d '2018-09-19'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Underutilized-Amazon-EBS-Volumes_version-1_Underutilized-EBS-Volumes_volume','aws_ebs_volume_should_not_be_under_utilized','Underutilized-Amazon-EBS-Volumes_version-1','Underutilized EBS Volumes','volume','aws','Underutilized Amazon EBS Volumes','{"params":[{"encrypt":false,"value":"check-for-underutilized-EBS-Volumes","key":"ruleKey"},{"encrypt":false,"value":"DAvU99Dc4C","key":"checkId"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"costOptimization","key":"ruleCategory"},{"key":"esServiceURL","value":"/aws_checks/checks_resources/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"Underutilized-Amazon-EBS-Volumes_version-1_Underutilized-EBS-Volumes_volume","autofix":false,"alexaKeyword":"Underutilized Amazon EBS Volumes","ruleRestUrl":"","targetType":"volume","pac_ds":"aws","policyId":"Underutilized-Amazon-EBS-Volumes_version-1","assetGroup":"aws","ruleUUID":"aws_ebs_volume_should_not_be_under_utilized","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ebs_volume_should_not_be_under_utilized'),'ENABLED','ASGC','Check for Underutilized Amazon EBS Volumes',{d '2018-05-14'},{d '2018-09-19'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_VpcTaggingRule_vpc','aws_vpc_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','VpcTaggingRule','vpc','aws','VpcTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_VpcTaggingRule_vpc","autofix":false,"alexaKeyword":"VpcTaggingRule","ruleRestUrl":"","targetType":"vpc","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_vpc_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_vpc_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to VPC',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_VolumeTaggingRule_volume','aws_volume_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','VolumeTaggingRule','volume','aws','VolumeTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_VolumeTaggingRule_volume","autofix":false,"alexaKeyword":"VolumeTaggingRule","ruleRestUrl":"","targetType":"volume","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_volume_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_volume_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to EBS Volumes',{d '2017-11-03'},{d '2018-08-31'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_version-1_ElasticSearchTaggingRule_elasticsearch','aws_elasticsearch_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','ElasticSearchTaggingRule','elasticsearch','aws','ElasticSearchTaggingRule','{"params":[{"key":"ruleKey","value":"check-for-missing-mandatory-tags","encrypt":false},{"key":"splitterChar","value":",","encrypt":false},{"key":"severity","value":"high","encrypt":false},{"key":"mandatoryTags","value":"Application,Environment,Stack,Role","encrypt":false},{"key":"ruleCategory","value":"tagging","encrypt":false}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_version-1_ElasticSearchTaggingRule_elasticsearch","autofix":false,"alexaKeyword":"ElasticSearchTaggingRule","ruleRestUrl":"","targetType":"elasticsearch","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_elasticsearch_should_be_tagged_with_mandatory_tags","ruleType":"Manage Rule"}','0 0/12 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_elasticsearch_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to Elastic Search Resources',{d '2018-08-29'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_SubnetTaggingRule_subnet','aws_subnet_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','SubnetTaggingRule','subnet','aws','SubnetTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_SubnetTaggingRule_subnet","autofix":false,"alexaKeyword":"SubnetTaggingRule","ruleRestUrl":"","targetType":"subnet","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_subnet_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_subnet_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Subnets should be tagged with mandatory tags  ',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_StackTaggingRule_stack','aws_stack_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','StackTaggingRule','stack','aws','StackTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_StackTaggingRule_stack","autofix":false,"alexaKeyword":"StackTaggingRule","ruleRestUrl":"","targetType":"stack","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_stack_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_stack_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Cloud formation stacks should be tagged with mandatory tags',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_SnapshotTaggingRule_snapshot','aws_snapshot_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','SnapshotTaggingRule','snapshot','aws','SnapshotTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"true","key":"threadsafe"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_SnapshotTaggingRule_snapshot","autofix":false,"alexaKeyword":"SnapshotTaggingRule","ruleRestUrl":"","targetType":"snapshot","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_snapshot_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_snapshot_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','EBS snapshots should be tagged with mandatory tags ',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_SgTaggingRule_sg','aws_sg_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','SgTaggingRule','sg','aws','SgTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_SgTaggingRule_sg","autofix":false,"alexaKeyword":"SgTaggingRule","ruleRestUrl":"","targetType":"sg","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_sg_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_sg_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to the Network Security Group',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_S3TaggingRule_s3','aws_s3_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','S3TaggingRule','s3','aws','S3TaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_S3TaggingRule_s3","autofix":false,"alexaKeyword":"S3TaggingRule","ruleRestUrl":"","targetType":"s3","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_s3_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_s3_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','S3 should be tagged with mandatory tags',{d '2017-11-02'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_RedshiftTaggingRule_redshift','aws_redshift_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','RedshiftTaggingRule','redshift','aws','RedshiftTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_RedshiftTaggingRule_redshift","autofix":false,"alexaKeyword":"RedshiftTaggingRule","ruleRestUrl":"","targetType":"redshift","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_redshift_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_redshift_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to Redshift',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_RdsdbTaggingRule_rdsdb','aws_rdsdb_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','RdsdbTaggingRule','rdsdb','aws','RdsdbTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_RdsdbTaggingRule_rdsdb","autofix":false,"alexaKeyword":"RdsdbTaggingRule","ruleRestUrl":"","targetType":"rdsdb","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_rdsdb_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_rdsdb_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to RDS Database',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_LambdaTaggingRule_lambda','aws_lambda_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','LambdaTaggingRule','lambda','aws','LambdaTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_LambdaTaggingRule_lambda","autofix":false,"alexaKeyword":"LambdaTaggingRule","ruleRestUrl":"","targetType":"lambda","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_lambda_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_lambda_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Lambda functions should be tagged with mandatory tags ',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_KmsTaggingRule_kms','aws_kms_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','KmsTaggingRule','kms','aws','KmsTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_KmsTaggingRule_kms","autofix":false,"alexaKeyword":"KmsTaggingRule","ruleRestUrl":"","targetType":"kms","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_kms_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_kms_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','AWS KMS should be tagged with mandatory tags ',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_EmrTaggingRule_emr','aws_emr_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','EmrTaggingRule','emr','aws','EmrTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_EmrTaggingRule_emr","autofix":false,"alexaKeyword":"EmrTaggingRule","ruleRestUrl":"","targetType":"emr","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_emr_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_emr_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to AWS Elastic MapReduce',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_ElasticacheTaggingRule_elasticache','aws_elasticache_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','ElasticacheTaggingRule','elasticache','aws','ElasticacheTaggingRule','{"params":[{"key":"ruleKey","value":"check-for-missing-mandatory-tags","encrypt":false},{"key":"splitterChar","value":",","encrypt":false},{"key":"severity","value":"high","encrypt":false},{"key":"mandatoryTags","value":"Application,Environment,Stack,Role","encrypt":false},{"key":"ruleCategory","value":"tagging","encrypt":false}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_ElasticacheTaggingRule_elasticache","autofix":false,"alexaKeyword":"ElasticacheTaggingRule","ruleRestUrl":"","targetType":"elasticache","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_elasticache_should_be_tagged_with_mandatory_tags","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_elasticache_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to Elasticache',{d '2018-09-10'},{d '2018-09-10'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_EfsTaggingRule_efs','aws_efs_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','EfsTaggingRule','efs','aws','EfsTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_EfsTaggingRule_efs","autofix":false,"alexaKeyword":"EfsTaggingRule","ruleRestUrl":"","targetType":"efs","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_efs_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_efs_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to AWS Elastic File System',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_Ec2TaggingRule_ec2','aws_ec2_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','Ec2TaggingRule','ec2','aws','Ec2TaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_Ec2TaggingRule_ec2","autofix":false,"alexaKeyword":"Ec2TaggingRule","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to EC2 Instance',{d '2017-11-02'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_DynamodbTaggingRule_dynamodb','aws_dynamodb_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','DynamodbTaggingRule','dynamodb','aws','DynamodbTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_DynamodbTaggingRule_dynamodb","autofix":false,"alexaKeyword":"DynamodbTaggingRule","ruleRestUrl":"","targetType":"dynamodb","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_dynamodb_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_dynamodb_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to Dynamo db',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_CloudfrontTaggingRule_cloudfront','aws_cloudfront_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','CloudfrontTaggingRule','cloudfront','aws','CloudfrontTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_CloudfrontTaggingRule_cloudfront","autofix":false,"alexaKeyword":"CloudfrontTaggingRule","ruleRestUrl":"","targetType":"cloudfront","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_cloudfront_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_cloudfront_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to Cloudfront',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_ClassicelbTaggingRule_classicelb','aws_classic_elb_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','ClassicelbTaggingRule','classicelb','aws','ClassicelbTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_ClassicelbTaggingRule_classicelb","autofix":false,"alexaKeyword":"ClassicelbTaggingRule","ruleRestUrl":"","targetType":"classicelb","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_classic_elb_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_classic_elb_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to Classic ELB',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_AsgTaggingRule_asg','aws_asg_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','AsgTaggingRule','asg','aws','AsgTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_AsgTaggingRule_asg","autofix":false,"alexaKeyword":"AsgTaggingRule","ruleRestUrl":"","targetType":"asg","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_asg_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_asg_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Auto scaling groups should be tagged with mandatory tags ',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_AppelbTaggingRule_appelb','aws_app_elb_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','AppelbTaggingRule','appelb','aws','AppelbTaggingRule','{"params":[{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"isValueNew":true,"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_AppelbTaggingRule_appelb","autofix":false,"alexaKeyword":"AppelbTaggingRule","ruleRestUrl":"","targetType":"appelb","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_app_elb_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_app_elb_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to Application ELB',{d '2017-11-03'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_ECSClusterTaggingRule_ecscluster','aws_ecs_cluster_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','ECSClusterTaggingRule','ecscluster','aws','ECSClusterTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"ruleKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"TaggingRule_version-1_ECSClusterTaggingRule_ecscluster\",\"autofix\":false,\"alexaKeyword\":\"ECSClusterTaggingRule\",\"ruleRestUrl\":\"\",\"targetType\":\"ecscluster\",\"pac_ds\":\"aws\",\"policyId\":\"TaggingRule_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_ecs_cluster_should_be_tagged_with_mandatory_tags\",\"ruleType\":\"ManageRule\"}','0 * * * ? *"','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ecs_cluster_should_be_tagged_with_mandatory_tags'),'ENABLED','','ECS Cluster should be tagged with mandatory tags','2022-10-13','2022-10-13','low','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_ECSTaskDefinitionTaggingRule_ecstaskdefinition','aws_ecs_task_definition_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','ECSTaskDefinitionTaggingRule','ecstaskdefinition','aws','ECSTaskDefinitionTaggingRule','{\"params\":[{\"encrypt\":false,\"value\":\",\",\"key\":\"splitterChar\"},{\"encrypt\":false,\"value\":\"check-for-missing-mandatory-tags\",\"key\":\"ruleKey\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"Application,Environment,Stack,Role\",\"key\":\"mandatoryTags\"},{\"isValueNew\":true,\"encrypt\":false,\"value\":\"tagging\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"TaggingRule_version-1_ECSTaskDefinitionTaggingRule_ecstaskdefinition\",\"autofix\":false,\"alexaKeyword\":\"ECSTaskDefinitionTaggingRule\",\"ruleRestUrl\":\"\",\"targetType\":\"ecstaskdefinition\",\"pac_ds\":\"aws\",\"policyId\":\"TaggingRule_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_ecs_task_definition_should_be_tagged_with_mandatory_tags\",\"ruleType\":\"ManageRule\"}','0 * * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ecs_task_definition_should_be_tagged_with_mandatory_tags'),'ENABLED','','ECS Task Definition should be tagged with mandatory tags','2022-10-13','2022-10-13','low','tagging'); 
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('SQS_Public_Access_Rule_version-1_SQS_Public_access_rule_sqs','aws_sqs_should_not_have_public_access','SQS_Public_Access_Rule_version-1','SQS_Public_access_rule','sqs','aws','sqs public access','{"params":[{"key":"severity","value":"critical","encrypt":false},{"key":"ruleCategory","value":"security","encrypt":false},{"key":"ruleKey","value":"check-for-sqs-public-access","isValueNew":true,"encrypt":false},{"key":"threadsafe","value":"true","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"SQS_Public_Access_Rule_version-1_SQS_Public_access_rule_sqs","autofix":false,"alexaKeyword":"sqs public access","ruleRestUrl":"","targetType":"sqs","pac_ds":"aws","policyId":"SQS_Public_Access_Rule_version-1","assetGroup":"aws","ruleUUID":"aws_sqs_should_not_have_public_access","ruleType":"Manage Rule"}','0 0/2 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_sqs_should_not_have_public_access'),'ENABLED','ASGC','Non-Allow listed SQS resources should not be publicly accessible',{d '2018-11-10'},{d '2018-11-14'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('SGWithAnywhereAccess_version-1_SgWithSshPort22OpenToInternetAccess_sg','aws_sg_should_not_have_public_access_with_port22','SGWithAnywhereAccess_version-1','SgWithSshPort22OpenToInternetAccess','sg','aws','SgWithSshPort22OpenToInternetAccess','{"params":[{"key":"ruleKey","value":"check-for-security-group-global-access","encrypt":false},{"key":"severity","value":"high","encrypt":false},{"key":"ruleCategory","value":"security","encrypt":false},{"key":"cidrIp","value":"0.0.0.0/0","encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","encrypt":false},{"key":"portToCheck","value":"22","encrypt":false},{"key":"cidripv6","value":"::/0","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"SGWithAnywhereAccess_version-1_SgWithSshPort22OpenToInternetAccess_sg","autofix":false,"alexaKeyword":"SgWithSshPort22OpenToInternetAccess","ruleRestUrl":"","targetType":"sg","pac_ds":"aws","policyId":"SGWithAnywhereAccess_version-1","assetGroup":"aws","ruleUUID":"aws_sg_should_not_have_public_access_with_port22","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_sg_should_not_have_public_access_with_port22'),'ENABLED','ASGC','Restrict Internet access to Security Group with SSH Port 22',{d '2018-10-01'},{d '2018-11-02'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg','aws_sg_should_not_have_anywhere_access_with_anyport','SGWithAnywhereAccess_version-1','SgWithAnywhereAccess','sg','aws','SgWithAnywhereAccess','{"params":[{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"0.0.0.0/0","key":"cidrIp"},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","isValueNew":true,"encrypt":false},{"key":"workerThreadCount","value":"50","isValueNew":true,"encrypt":false},{"key":"portToCheck","value":"ANY","isValueNew":true,"encrypt":false},{"key":"ruleKey","value":"check-for-security-group-global-access","isValueNew":true,"encrypt":false},{"key":"cidripv6","value":"::/0","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"SGWithAnywhereAccess_version-1_SgWithAnywhereAccess_sg","autofix":false,"alexaKeyword":"SgWithAnywhereAccess","ruleRestUrl":"","targetType":"sg","pac_ds":"aws","policyId":"SGWithAnywhereAccess_version-1","assetGroup":"aws","ruleUUID":"aws_sg_should_not_have_anywhere_access_with_anyport","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_sg_should_not_have_anywhere_access_with_anyport'),'ENABLED','ASGC','Unapproved security groups should not have inbound rule allowing 0.0.0.0/0 for any port.',{d '2017-08-11'},{d '2018-11-08'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('ServiceLimitRule_version-1_ServiceLimitRule_account','aws_account_service_limit_rule','ServiceLimitRule_version-1','ServiceLimitRule','account','aws','ServiceLimitRule','{"params":[{"encrypt":false,"value":"check-for-service-limit","key":"ruleKey"},{"encrypt":false,"value":"true","key":"threadsafe"},{"encrypt":false,"value":"governance","key":"ruleCategory"},{"encrypt":false,"value":"medium","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"eW7HH0l7J9","key":"checkId"},{"key":"esServiceURL","value":"/aws_checks/checks_resources/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"ServiceLimitRule_version-1_ServiceLimitRule_account","autofix":false,"alexaKeyword":"ServiceLimitRule","ruleRestUrl":"","targetType":"account","pac_ds":"aws","policyId":"ServiceLimitRule_version-1","assetGroup":"aws","ruleUUID":"aws_account_service_limit_rule","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_service_limit_rule'),'ENABLED','ASGC','AWS service limits should be upgraded to match growing needs',{d '2017-10-17'},{d '2018-09-19'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','aws_s3_should_not_be_publicly_accessible','S3GlobalAccess_version-1','S3BucketShouldnotpubliclyaccessble','s3','aws','s3GlobalAccess','{"params":[{"key":"apiKeyValue","value":"","encrypt":true},{"key":"apiKeyName","value":"","encrypt":true},{"key":"ruleCategory","value":"security","encrypt":false},{"key":"severity","value":"critical","encrypt":false},{"key":"esServiceURL","value":"/aws_checks/checks_resources/_search","encrypt":false},{"key":"apiGWURL","value":"","encrypt":false},{"key":"ruleKey","value":"check-for-s3-global-access","isValueNew":true,"encrypt":false},{"key":"checkId","value":"Pfx0RwqBli","isValueNew":true,"encrypt":false},{"key":"roleIdentifyingString","value":"role/paladincloud_ro","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"s3-global-access-fix","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3","autofix":false,"alexaKeyword":"s3GlobalAccess","ruleRestUrl":"","targetType":"s3","pac_ds":"aws","policyId":"S3GlobalAccess_version-1","assetGroup":"aws","ruleUUID":"aws_s3_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/2 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_s3_should_not_be_publicly_accessible'),'ENABLED','ASGC','Deny Public Access to Non-Allow Listed S3 Buckets',{d '2018-10-09'},{d '2018-12-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','aws_redshift_should_not_be_publicly_accessible','RedShiftPublicAccess_version-1','RedShiftPublicAccess','redshift','aws','RedShift','{"params":[{"encrypt":false,"value":"check-for-redshift-public-access","key":"ruleKey"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"critical","key":"severity"},{"key":"cidrIp","value":"0.0.0.0/0","isValueNew":true,"encrypt":false},{"key":"esRedshiftSgURL","value":"/aws/redshift_secgroups/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","isValueNew":true,"encrypt":false},{"key":"cidripv6","value":"::/0","isValueNew":true,"encrypt":false},{"key":"internetGateWay","value":"igw","isValueNew":true,"encrypt":false},{"key":"defaultCidrIp","value":"","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"publicly-accessible-redshift","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift","autofix":false,"alexaKeyword":"RedShift","ruleRestUrl":"","targetType":"redshift","pac_ds":"aws","policyId":"RedShiftPublicAccess_version-1","assetGroup":"aws","ruleUUID":"aws_redshift_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_redshift_should_not_be_publicly_accessible'),'ENABLED','ASGC','Redshift attached Security Group should not be publicly accessible',{d '2017-10-09'},{d '2018-12-10'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('RdsSnapshotWithPublicAccess_version-1_RdsSnapshotWithPublicAccess_rdssnapshot','aws_rdssnapshot_should_not_be_there_in_non_standard_region','RdsSnapshotWithPublicAccess_version-1','RdsSnapshotWithPublicAccess','rdssnapshot','aws','RdsSnapshotWithPublicAccess','{"params":[{"encrypt":"false","value":"check-for-rds-snapshot-with-public-access","key":"ruleKey"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"rSs93HQwa1","key":"checkId"},{"key":"esServiceURL","value":"/aws_checks/checks_resources/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"RdsSnapshotWithPublicAccess_version-1_RdsSnapshotWithPublicAccess_rdssnapshot","autofix":false,"alexaKeyword":"RdsSnapshotWithPublicAccess","ruleRestUrl":"","targetType":"rdssnapshot","pac_ds":"aws","policyId":"RdsSnapshotWithPublicAccess_version-1","assetGroup":"aws","ruleUUID":"aws_rdssnapshot_should_not_be_there_in_non_standard_region","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_rdssnapshot_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','RDS snapshot should not be publicly accessible',{d '2017-08-31'},{d '2018-12-10'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('rdsdb_version-1_RdsDbPublicAccess_rdsdb','aws_rdsdb_should_not_be_publicly_accessible','rdsdb_version-1','RdsDbPublicAccess','rdsdb','aws','rdsdb','{"params":[{"encrypt":false,"value":"check-for-rds-db-public-access","key":"ruleKey"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"critical","key":"severity"},{"key":"cidrIp","value":"0.0.0.0/0","isValueNew":true,"encrypt":false},{"key":"esRdsDbSgUrl","value":"/aws/rdsdb_secgroups/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","isValueNew":true,"encrypt":false},{"key":"cidripv6","value":"::/0","isValueNew":true,"encrypt":false},{"key":"internetGateWay","value":"igw","isValueNew":true,"encrypt":false},{"key":"defaultCidrIp","value":"","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"publicly-accessible-rdsdb","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"rdsdb_version-1_RdsDbPublicAccess_rdsdb","autofix":false,"alexaKeyword":"rdsdb","ruleRestUrl":"","targetType":"rdsdb","pac_ds":"aws","policyId":"rdsdb_version-1","assetGroup":"aws","ruleUUID":"aws_rdsdb_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_rdsdb_should_not_be_publicly_accessible'),'ENABLED','ASGC','RDS database endpoints should not be publicly accessible',{d '2017-10-09'},{d '2018-12-10'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_VpcWithNonStandardRule_vpc','aws_vpc_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','VpcWithNonStandardRule','vpc','aws','VpcWithNonStandardRule','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_VpcWithNonStandardRule_vpc","autofix":false,"alexaKeyword":"VpcWithNonStandardRule","ruleRestUrl":"","targetType":"vpc","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_vpc_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_vpc_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','VPC resource should have standard region',{d '2018-10-03'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_version-1_VolumeWithNonStandardRegion_volume','aws_volume_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','VolumeWithNonStandardRegion','volume','aws','VolumeWithNonStandardRegion','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_version-1_VolumeWithNonStandardRegion_volume","autofix":false,"alexaKeyword":"VolumeWithNonStandardRegion","ruleRestUrl":"","targetType":"volume","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_volume_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_volume_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Assign Standard Region to EBS Volume',{d '2018-08-30'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_version-1_SubnetWithNonStandardRegion_subnet','aws_subnet_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','SubnetWithNonStandardRegion','subnet','aws','SubnetWithNonStandardRegion','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_version-1_SubnetWithNonStandardRegion_subnet","autofix":false,"alexaKeyword":"SubnetWithNonStandardRegion","ruleRestUrl":"","targetType":"subnet","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_subnet_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_subnet_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Subnet should have standard region',{d '2018-08-30'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_version-1_StackWithNonStandardRegion_stack','aws_stack_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','StackWithNonStandardRegion','stack','aws','StackWithNonStandardRegion','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_version-1_StackWithNonStandardRegion_stack","autofix":false,"alexaKeyword":"StackWithNonStandardRegion","ruleRestUrl":"","targetType":"stack","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_stack_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_stack_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Stack should have standard region',{d '2018-08-30'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_version-1_SnstopicWithNonStandardRegion_snstopic','aws_snstopic_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','SnstopicWithNonStandardRegion','snstopic','aws','SnstopicWithNonStandardRegion','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_version-1_SnstopicWithNonStandardRegion_snstopic","autofix":false,"alexaKeyword":"SnstopicWithNonStandardRegion","ruleRestUrl":"","targetType":"snstopic","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_snstopic_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_snstopic_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Assign Standard Region to SNS Topic',{d '2018-08-30'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_version-1_SnapshotWithNonStandardRegion_snapshot','aws_snapshot_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','SnapshotWithNonStandardRegion','snapshot','aws','SnapshotWithNonStandardRegion','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_version-1_SnapshotWithNonStandardRegion_snapshot","autofix":false,"alexaKeyword":"SnapshotWithNonStandardRegion","ruleRestUrl":"","targetType":"snapshot","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_snapshot_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_snapshot_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Snapshot should have standard region',{d '2018-08-30'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_version-1_SgWithNonStandardRegion_sg','aws_sg_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','SgWithNonStandardRegion','sg','aws','SgWithNonStandardRegion','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_version-1_SgWithNonStandardRegion_sg","autofix":false,"alexaKeyword":"SgWithNonStandardRegion","ruleRestUrl":"","targetType":"sg","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_sg_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_sg_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Assign Standard Regions to Security Groups',{d '2018-08-30'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_version-1_S3WithNonStandardRegion_s3','aws_s3_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','S3WithNonStandardRegion','s3','aws','S3WithNonStandardRegion','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_version-1_S3WithNonStandardRegion_s3","autofix":false,"alexaKeyword":"S3WithNonStandardRegion","ruleRestUrl":"","targetType":"s3","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_s3_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_s3_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Assign Standard Region to S3',{d '2018-08-30'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_version-1_ResourceWithNonStandardRule_ec2','aws_ec2_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','ResourceWithNonStandardRule','ec2','aws','Ec2WithNonStandardRegion','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_version-1_ResourceWithNonStandardRule_ec2","autofix":false,"alexaKeyword":"Ec2WithNonStandardRegion","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Assign Standard Region to EC2 Instance',{d '2018-08-30'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_version-1_RdsSnapshotWithNonStandardRegion_rdssnapshot','aws_rdssnapshot_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','RdsSnapshotWithNonStandardRegion','rdssnapshot','aws','RdsSnapshotWithNonStandardRegion','{"params":[{"key":"threadsafe","value":"true","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_version-1_RdsSnapshotWithNonStandardRegion_rdssnapshot","autofix":false,"alexaKeyword":"RdsSnapshotWithNonStandardRegion","ruleRestUrl":"","targetType":"rdssnapshot","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_rdssnapshot_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_rdssnapshot_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','RDS Snapshot should have standard region',{d '2018-08-30'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_version-1_LaunchconfigWithNonStandardRegion_launchconfig','aws_launchconfig_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','LaunchconfigWithNonStandardRegion','launchconfig','aws','LaunchconfigWithNonStandardRegion','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_version-1_LaunchconfigWithNonStandardRegion_launchconfig","autofix":false,"alexaKeyword":"LaunchconfigWithNonStandardRegion","ruleRestUrl":"","targetType":"launchconfig","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_launchconfig_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_launchconfig_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Launchconfig should have standard region',{d '2018-08-30'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_version-1_LambdaWithNonStandardRegion_lambda','aws_lambda_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','LambdaWithNonStandardRegion','lambda','aws','LambdaWithNonStandardRegion','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_version-1_LambdaWithNonStandardRegion_lambda","autofix":false,"alexaKeyword":"LambdaWithNonStandardRegion","ruleRestUrl":"","targetType":"lambda","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_lambda_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_lambda_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Lambda should have standard region',{d '2018-08-30'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_version-1_ClassicelbWithNonStandardRegion_classicelb','aws_classicelb_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','ClassicelbWithNonStandardRegion','classicelb','aws','ClassicelbWithNonStandardRegion','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_version-1_ClassicelbWithNonStandardRegion_classicelb","autofix":false,"alexaKeyword":"ClassicelbWithNonStandardRegion","ruleRestUrl":"","targetType":"classicelb","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_classicelb_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_classicelb_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Classicelb should have standard region',{d '2018-08-30'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_version-1_AsgWithNonStandardRegion_asg','aws_asg_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','AsgWithNonStandardRegion','asg','aws','AsgWithNonStandardRegion','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_version-1_AsgWithNonStandardRegion_asg","autofix":false,"alexaKeyword":"AsgWithNonStandardRegion","ruleRestUrl":"","targetType":"asg","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_asg_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_asg_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Asg should have standard region',{d '2018-08-30'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_RedshiftWithNonStandardRule_redshift','aws_redshift_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','RedshiftWithNonStandardRule','redshift','aws','RedshiftWithNonStandardRule','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_RedshiftWithNonStandardRule_redshift","autofix":false,"alexaKeyword":"RedshiftWithNonStandardRule","ruleRestUrl":"","targetType":"redshift","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_redshift_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_redshift_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Redshift resource should have standard region',{d '2018-10-03'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_RdsdbWithNonStandardRule_rdsdb','aws_rdsdb_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','RdsdbWithNonStandardRule','rdsdb','aws','RdsdbWithNonStandardRule','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_RdsdbWithNonStandardRule_rdsdb","autofix":false,"alexaKeyword":"RdsdbWithNonStandardRule","ruleRestUrl":"","targetType":"rdsdb","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_rdsdb_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_rdsdb_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Rdsdb resource should have standard region',{d '2018-10-03'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_KmsWithNonStandardRule_kms','aws_kms_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','KmsWithNonStandardRule','kms','aws','KmsWithNonStandardRule','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_KmsWithNonStandardRule_kms","autofix":false,"alexaKeyword":"KmsWithNonStandardRule","ruleRestUrl":"","targetType":"kms","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_kms_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_kms_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Assign Standard Region to KMS Resource',{d '2018-10-03'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_EniWithNonStandardRule_eni','aws_eni_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','EniWithNonStandardRule','eni','aws','EniWithNonStandardRule','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_EniWithNonStandardRule_eni","autofix":false,"alexaKeyword":"EniWithNonStandardRule","ruleRestUrl":"","targetType":"eni","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_eni_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_eni_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Eni resource should have standard region',{d '2018-10-03'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_EmrWithNonStandardRule_emr','aws_emr_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','EmrWithNonStandardRule','emr','aws','EmrWithNonStandardRule','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_EmrWithNonStandardRule_emr","autofix":false,"alexaKeyword":"EmrWithNonStandardRule","ruleRestUrl":"","targetType":"emr","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_emr_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_emr_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Emr resource should have standard region',{d '2018-10-03'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_ElasticsearchWithNonStandardRule_elasticsearch','aws_elasticsearch_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','ElasticsearchWithNonStandardRule','elasticsearch','aws','ElasticsearchWithNonStandardRule','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_ElasticsearchWithNonStandardRule_elasticsearch","autofix":false,"alexaKeyword":"ElasticsearchWithNonStandardRule","ruleRestUrl":"","targetType":"elasticsearch","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_elasticsearch_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_elasticsearch_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Elasticsearch resource should have standard region',{d '2018-10-03'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_ElasticipWithNonStandardRule_elasticip','aws_elasticip_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','ElasticipWithNonStandardRule','elasticip','aws','ElasticipWithNonStandardRule','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_ElasticipWithNonStandardRule_elasticip","autofix":false,"alexaKeyword":"ElasticipWithNonStandardRule","ruleRestUrl":"","targetType":"elasticip","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_elasticip_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_elasticip_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Elasticip resource should have standard region',{d '2018-10-03'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_ElasticacheWithNonStandardRule_elasticache','aws_elasticahe_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','ElasticacheWithNonStandardRule','elasticache','aws','ElasticacheWithNonStandardRule','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_ElasticacheWithNonStandardRule_elasticache","autofix":false,"alexaKeyword":"ElasticacheWithNonStandardRule","ruleRestUrl":"","targetType":"elasticache","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_elasticahe_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_elasticahe_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Elasticache resource should have standard region',{d '2018-10-03'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_EfsWithNonStandardRule_efs','aws_efs_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','EfsWithNonStandardRule','efs','aws','EfsWithNonStandardRule','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_EfsWithNonStandardRule_efs","autofix":false,"alexaKeyword":"EfsWithNonStandardRule","ruleRestUrl":"","targetType":"efs","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_efs_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_efs_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Efs resource should have standard region',{d '2018-10-03'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_DynamodbWithNonStandardRule_dynamodb','aws_dynamodb_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','DynamodbWithNonStandardRule','dynamodb','aws','DynamodbWithNonStandardRule','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_DynamodbWithNonStandardRule_dynamodb","autofix":false,"alexaKeyword":"DynamodbWithNonStandardRule","ruleRestUrl":"","targetType":"dynamodb","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_dynamodb_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_dynamodb_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Dynamodb should have standard region',{d '2018-10-03'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_AppelbWithNonStandardRule_appelb','aws_app_elb_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','AppelbWithNonStandardRule','appelb','aws','AppelbWithNonStandardRule','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_AppelbWithNonStandardRule_appelb","autofix":false,"alexaKeyword":"AppelbWithNonStandardRule","ruleRestUrl":"","targetType":"appelb","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_app_elb_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_app_elb_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','Appelb resource should have standard region',{d '2018-10-03'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonStandardRegionRule_version-1_ApiWithNonStandardRule_api','aws_api_resource_should_not_be_there_in_non_standard_region','NonStandardRegionRule_version-1','ApiWithNonStandardRule','api','aws','ApiWithNonStandardRule','{"params":[{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"check-for-non-standard-region-rule","encrypt":false},{"key":"severity","value":"low","encrypt":false},{"key":"ruleCategory","value":"governance","encrypt":false},{"key":"standardRegions","value":"us-west-2,us-east-1,us-east-2,us-west-1","encrypt":false}],"environmentVariables":[],"ruleId":"NonStandardRegionRule_version-1_ApiWithNonStandardRule_api","autofix":false,"alexaKeyword":"ApiWithNonStandardRule","ruleRestUrl":"","targetType":"api","pac_ds":"aws","policyId":"NonStandardRegionRule_version-1","assetGroup":"aws","ruleUUID":"aws_api_resource_should_not_be_there_in_non_standard_region","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_api_resource_should_not_be_there_in_non_standard_region'),'ENABLED','ASGC','API resource should have standard region',{d '2018-10-03'},{d '2018-10-03'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole','aws_non_admin_iam_role_should_not_have_iam_full_access','NonAdminAccountsWithIAMFullAccess_version-1','IAMAccessGrantForNonAdminAccountRule','iamrole','aws','IAMAccessGrantForNonAdminAccountRule','{"assetGroup":"aws","policyId":"NonAdminAccountsWithIAMFullAccess_version-1","environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleUUID":"aws_non_admin_iam_role_should_not_have_iam_full_access","ruleType":"ManageRule","pac_ds":"aws","targetType":"iamrole","params":[{"encrypt":"false","value":"role/paladincloud_ro","key":"roleIdentifyingString"},{"encrypt":"false","value":"Admin","key":"adminRolesToCompare"},{"encrypt":"false","value":"check-non-admin-accounts-for-iamfullccess","key":"ruleKey"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"high","key":"severity"}],"ruleId":"NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole","autofix":false,"alexaKeyword":"IAMAccessGrantForNonAdminAccountRule","ruleRestUrl":""}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_non_admin_iam_role_should_not_have_iam_full_access'),'ENABLED','710383','Non Admin IAM roles should not have full IAM access',{d '2017-08-31'},{d '2018-02-09'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('LambdaFunWithAdmin-OrIamPrivileges_version-1_LambdaFunWithAdminOrIamPrivileges_lambda','aws_lambda_function_should_not_have_administrative_privilege','LambdaFunWithAdmin-OrIamPrivileges_version-1','LambdaFunWithAdminOrIamPrivileges','lambda','aws','LambdaFunWithAdmin-OrIamPrivileges','{"params":[{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"check-for-lambda-fun-with-admin-or-IAM-privileges","key":"ruleKey"},{"encrypt":false,"value":"NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole","key":"nonAdminAccntsWithIAMFullAccessRuleId"},{"key":"esNonAdminAccntsWithIAMFullAccessUrl","value":"/aws/issue_iamrole/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"LambdaFunWithAdmin-OrIamPrivileges_version-1_LambdaFunWithAdminOrIamPrivileges_lambda","autofix":false,"alexaKeyword":"LambdaFunWithAdmin-OrIamPrivileges","ruleRestUrl":"","targetType":"lambda","pac_ds":"aws","policyId":"LambdaFunWithAdmin-OrIamPrivileges_version-1","assetGroup":"aws","ruleUUID":"aws_lambda_function_should_not_have_administrative_privilege","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_lambda_function_should_not_have_administrative_privilege'),'ENABLED','ASGC','Lambda functions should not have administrative permissions',{d '2018-02-15'},{d '2018-09-19'},n'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('IdleLoadBalancerRule_version-1_IdleLoadbalancerRule_classicelb','aws_classic_elb_should_not_be_in_idle_state','IdleLoadBalancerRule_version-1','IdleLoadbalancerRule','classicelb','aws','IdleLoadBalancer','{"params":[{"encrypt":false,"value":"check-for-idle-load-balancers","key":"ruleKey"},{"encrypt":false,"value":"hjLMh88uM8","key":"checkId"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"costOptimization","key":"ruleCategory"},{"key":"esServiceURL","value":"/aws_checks/checks_resources/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"IdleLoadBalancerRule_version-1_IdleLoadbalancerRule_classicelb","autofix":false,"alexaKeyword":"IdleLoadBalancer","ruleRestUrl":"","targetType":"classicelb","pac_ds":"aws","policyId":"IdleLoadBalancerRule_version-1","assetGroup":"aws","ruleUUID":"aws_classic_elb_should_not_be_in_idle_state","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_classic_elb_should_not_be_in_idle_state'),'ENABLED','ASGC','Terminate/Delete Idle Load Balancers ',{d '2018-02-25'},{d '2018-09-19'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('IamPasswordPolicy_version-1_IamPasswordPolicy_account','aws_accounts_should_follow_iam_password_policy','IamPasswordPolicy_version-1','IamPasswordPolicy','account','aws','IamPasswordPolicy','{"assetGroup":"aws","policyId":"IamPasswordPolicy_version-1","environmentVariables":[],"ruleUUID":"aws_accounts_should_follow_iam_password_policy","ruleType":"ManageRule","pac_ds":"aws","targetType":"account","params":[{"encrypt":false,"value":"role/paladincloud_ro","key":"roleIdentifyingString"},{"encrypt":false,"value":"check-iam-password-policy","key":"ruleKey"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"90","key":"maxPasswordAge"},{"encrypt":false,"value":"true","key":"requireSymbols"},{"encrypt":false,"value":"true","key":"requireNumbers"},{"encrypt":false,"value":"true","key":"requireUppercaseCharacters"},{"encrypt":false,"value":"true","key":"requireLowercaseCharacters"},{"encrypt":false,"value":"true","key":"allowUsersToChangePassword"},{"encrypt":false,"value":"true","key":"expirePasswords"},{"encrypt":false,"value":"false","key":"hardExpiry"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"14","key":"minPasswordLength"},{"encrypt":false,"value":"24","key":"lastPasswordsToRemember"},{"encrypt":false,"value":"iam-password-policy-fix","key":"fixKey"}],"ruleId":"IamPasswordPolicy_version-1_IamPasswordPolicy_account","autofix":false,"alexaKeyword":"IamPasswordPolicy","ruleRestUrl":""}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_accounts_should_follow_iam_password_policy'),'ENABLED','1205352','All AWS accounts should follow the IAM password policy',{d '2018-01-08'},{d '2018-06-29'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('IamAccessKeyRotatedInEvery90Days_version-1_IamAccessKeyRotatedInEvery90Days_iamuser','aws_iam_keys_should_be_rotated_every_target_period','IamAccessKeyRotatedInEvery90Days_version-1','IamAccessKeyRotatedInEvery90Days','iamuser','aws','IamAccessKeyRotatedInEvery90Days','{"assetGroup":"aws","policyId":"IamAccessKeyRotatedInEvery90Days_version-1","environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleUUID":"aws_iam_keys_should_be_rotated_every_target_period","ruleType":"ManageRule","pac_ds":"aws","targetType":"iamuser","params":[{"encrypt":"false","value":"role/paladincloud_ro","key":"roleIdentifyingString"},{"encrypt":"false","value":"check-for-accesskeys-rotated-in-every-90-days","key":"ruleKey"},{"encrypt":false,"value":"high","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"security","key":"ruleCategory"}],"ruleId":"IamAccessKeyRotatedInEvery90Days_version-1_IamAccessKeyRotatedInEvery90Days_iamuser","autofix":false,"alexaKeyword":"IamAccessKeyRotatedInEvery90Days","ruleRestUrl":""}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_iam_keys_should_be_rotated_every_target_period'),'ENABLED','1205352','Set Rotation Period of IAM Access Key to 90 Days',{d '2017-08-30'},{d '2018-01-05'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GuardDutyFindingsExists_version-1_GuardDutyFindingsExists_ec2','aws_ec2_should_not_have_guardduty_findings','GuardDutyFindingsExists_version-1','GuardDutyFindingsExists','ec2','aws','GuardDutyFindingsExists','{"params":[{"encrypt":false,"value":"check-guard-duty-findings-exists","key":"ruleKey"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"key":"esGuardDutyUrl","value":"/guardduty/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"GuardDutyFindingsExists_version-1_GuardDutyFindingsExists_ec2","autofix":false,"alexaKeyword":"GuardDutyFindingsExists","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"GuardDutyFindingsExists_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_should_not_have_guardduty_findings","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_should_not_have_guardduty_findings'),'ENABLED','ASGC','EC2 instance should not have guard duty findings',{d '2018-02-12'},{d '2018-09-19'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','aws_classic_elb_should_not_be_publicly_accessible','ElbWithPublicAccess_version-1','ClassicElbWithPublicAccess','classicelb','aws','ClassicElbWithPublicAccess','{"params":[{"key":"ruleKey","value":"check-for-elb-public-access","encrypt":false},{"key":"internetGateWay","value":"igw","encrypt":false},{"key":"severity","value":"critical","encrypt":false},{"key":"ruleCategory","value":"security","encrypt":false},{"key":"cidrIp","value":"0.0.0.0/0","encrypt":false},{"key":"esElbWithSGUrl","value":"/aws/classicelb_secgroups/_search","encrypt":false},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","encrypt":false},{"key":"cidripv6","value":"::/0","isValueNew":true,"encrypt":false},{"key":"defaultCidrIp","value":"","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"publicly-accessible-classicelb","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb","autofix":false,"alexaKeyword":"ClassicElbWithPublicAccess","ruleRestUrl":"","targetType":"classicelb","pac_ds":"aws","policyId":"ElbWithPublicAccess_version-1","assetGroup":"aws","ruleUUID":"aws_classic_elb_should_not_be_publicly_accessible","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_classic_elb_should_not_be_publicly_accessible'),'ENABLED','ASGC','Restrict Internet Access to Classic ELB',{d '2018-10-12'},{d '2018-12-10'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','aws_application_elb_should_not_be_publicly_accessible','ElbWithPublicAccess_version-1','ApplicationElbWithPublicAccess','appelb','aws','ApplicationElbWithPublicAccess','{"params":[{"key":"ruleKey","value":"check-for-elb-public-access","encrypt":false},{"key":"internetGateWay","value":"igw","encrypt":false},{"key":"severity","value":"critical","encrypt":false},{"key":"ruleCategory","value":"security","encrypt":false},{"key":"cidrIp","value":"0.0.0.0/0","encrypt":false},{"key":"esElbWithSGUrl","value":"/aws/appelb_secgroups/_search","encrypt":false},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","encrypt":false},{"key":"cidripv6","value":"::/0","isValueNew":true,"encrypt":false},{"key":"defaultCidrIp","value":"","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"publicly-accessible-appelb","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb","autofix":false,"alexaKeyword":"ApplicationElbWithPublicAccess","ruleRestUrl":"","targetType":"appelb","pac_ds":"aws","policyId":"ElbWithPublicAccess_version-1","assetGroup":"aws","ruleUUID":"aws_application_elb_should_not_be_publicly_accessible","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_application_elb_should_not_be_publicly_accessible'),'ENABLED','ASGC','Restrict Internet Access to Application ELB ',{d '2018-10-11'},{d '2018-12-10'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','aws_elasticsearch_endpoint_should_not_be_publicly_accessible','ElasticSearchPublicAccess_version-1','ElasticSearchPublicAccessRule','elasticsearch','aws','ElasticSearchPublicAccessRule','{"params":[{"key":"ruleKey","value":"check-for-elastic-search-public-access","encrypt":false},{"key":"severity","value":"critical","encrypt":false},{"key":"ruleCategory","value":"security","encrypt":false},{"key":"internetGateWay","value":"igw","isValueNew":true,"encrypt":false},{"key":"cidrIp","value":"0.0.0.0/0","isValueNew":true,"encrypt":false},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","isValueNew":true,"encrypt":false},{"key":"cidripv6","value":"::/0","isValueNew":true,"encrypt":false},{"key":"defaultCidrIp","value":"","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"publicly-accessible-elasticsearch","isValueNew":true,"encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch","autofix":false,"alexaKeyword":"ElasticSearchPublicAccessRule","ruleRestUrl":"","targetType":"elasticsearch","pac_ds":"aws","policyId":"ElasticSearchPublicAccess_version-1","assetGroup":"aws","ruleUUID":"aws_elasticsearch_endpoint_should_not_be_publicly_accessible","ruleType":"Manage Rule"}','0 0/6 * * ? *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_elasticsearch_endpoint_should_not_be_publicly_accessible'),'ENABLED','ASGC','Restrict Internet Access to Elastic Search Endpoint',{d '2018-10-10'},{d '2018-12-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','aws_ec2_should_not_be_publicly_accessible_with_any_port','EC2WithPublicIPAccess_version-1','Ec2WithPublicAccess','ec2','aws','Ec2WithPublicAccess','{"params":[{"encrypt":"false","value":"igw","key":"internetGateWay"},{"encrypt":"false","value":"check-for-ec2-public-access","key":"ruleKey"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"0.0.0.0/0","key":"cidrIp"},{"key":"esEc2SgURL","value":"/aws/ec2_secgroups/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","isValueNew":true,"encrypt":false},{"key":"esSubnetURL","value":"/aws_subnet/_search","isValueNew":true,"encrypt":false},{"key":"cidripv6","value":"::/0","isValueNew":true,"encrypt":false},{"key":"defaultCidrIp","value":"","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"ec2-global-access-fix","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2","autofix":false,"alexaKeyword":"Ec2WithPublicAccess","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"EC2WithPublicIPAccess_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_should_not_be_publicly_accessible_with_any_port","ruleType":"ManageRule"}','0 0/2 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_should_not_be_publicly_accessible_with_any_port'),'ENABLED','ASGC','EC2 instances should not have any publicly accessible ports',{d '2017-08-18'},{d '2018-12-10'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2','aws_ec2_should_not_be_publicly_accessible_on_port22','EC2WithPublicAccessSSHPort22_version-2','EC2WithPublicAccessForConfiguredPort22','ec2','aws','EC2WithPublicAccessForConfiguredPort22','{"params":[{"encrypt":false,"value":"igw","key":"internetGateWay"},{"encrypt":false,"value":"22","key":"portToCheck"},{"encrypt":false,"value":"check-for-ec2-with-public-access-for-configured-port","key":"ruleKey"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"0.0.0.0/0","key":"cidrIp"},{"key":"esEc2SgURL","value":"/aws/ec2_secgroups/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","isValueNew":true,"encrypt":false},{"key":"esSubnetURL","value":"/aws_subnet/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"EC2WithPublicAccessSSHPort22_version-2_EC2WithPublicAccessForConfiguredPort22_ec2","autofix":false,"alexaKeyword":"EC2WithPublicAccessForConfiguredPort22","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"EC2WithPublicAccessSSHPort22_version-2","assetGroup":"aws","ruleUUID":"aws_ec2_should_not_be_publicly_accessible_on_port22","ruleType":"ManageRule"}','0 0/2 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_should_not_be_publicly_accessible_on_port22'),'ENABLED','ASGC','EC2 instances should not be publicly accessible on SSH port 22',{d '2017-08-23'},{d '2018-11-09'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2','aws_ec2_should_not_be_publicly_accessible_on_port80','Ec2WithPublicAccessNonWebPorts80_version-1','Ec2WithPublicAccessNonWebPort80','ec2','aws','Ec2WithPublicAccessNonWebPort80','{"params":[{"encrypt":"false","value":"igw","key":"internetGateWay"},{"encrypt":"false","value":"80","key":"portToCheck"},{"encrypt":"false","value":"check-for-ec2-with-public-access-for-configured-port","key":"ruleKey"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"0.0.0.0/0","key":"cidrIp"},{"key":"esEc2SgURL","value":"/aws/ec2_secgroups/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","isValueNew":true,"encrypt":false},{"key":"esSubnetURL","value":"/aws_subnet/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"Ec2WithPublicAccessNonWebPorts80_version-1_Ec2WithPublicAccessNonWebPort80_ec2","autofix":false,"alexaKeyword":"Ec2WithPublicAccessNonWebPort80","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"Ec2WithPublicAccessNonWebPorts80_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_should_not_be_publicly_accessible_on_port80","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_should_not_be_publicly_accessible_on_port80'),'ENABLED','ASGC','EC2 instances should not be publicly accessible on port 80 ',{d '2017-09-06'},{d '2018-09-28'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ec2StoppedInstanceForLong_version-1_Ec2StoppedInstanceForLong_ec2','aws_ec2_should_not_be_stopped_state_for_too_long','Ec2StoppedInstanceForLong_version-1','Ec2StoppedInstanceForLong','ec2','aws','Ec2StoppedInstanceForLong','{"params":[{"encrypt":"false","value":"true","key":"threadsafe"},{"encrypt":"false","value":"check-for-stopped-instance-for-long","key":"ruleKey"},{"encrypt":false,"value":"90","key":"targetstoppedDuration"},{"encrypt":false,"value":"governance","key":"ruleCategory"},{"encrypt":false,"value":"low","key":"severity"}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"Ec2StoppedInstanceForLong_version-1_Ec2StoppedInstanceForLong_ec2","autofix":false,"alexaKeyword":"Ec2StoppedInstanceForLong","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"Ec2StoppedInstanceForLong_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_should_not_be_stopped_state_for_too_long","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_should_not_be_stopped_state_for_too_long'),'ENABLED','ASGC','EC2 instances should not be in stopped state for more than 60 days',{d '2017-08-29'},{d '2018-11-12'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('ec2deperecatedinstancetype_version-1_ec2deprecatedinstancetype_ec2','aws_ec2_instances_should_not_use_deprecates_instance_types','ec2deperecatedinstancetype_version-1','ec2deprecatedinstancetype','ec2','aws','ec2deprecatedinstancetype','{"params":[{"encrypt":false,"value":"m1,m2,t1,c1,c2","key":"deprecatedInstanceType"},{"encrypt":false,"value":"true","key":"threadsafe"},{"encrypt":false,"value":"check-for-deprecated-instance-type","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"medium","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"governance","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"ec2deperecatedinstancetype_version-1_ec2deprecatedinstancetype_ec2","autofix":false,"alexaKeyword":"ec2deprecatedinstancetype","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"ec2deperecatedinstancetype_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_instances_should_not_use_deprecates_instance_types","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_instances_should_not_use_deprecates_instance_types'),'ENABLED','ASGC','Do Not Use Deprecated EC2 instances types to Launch Instances',{d '2017-08-11'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('EbsSnapShot_version-1_EbsSnapShot_snapshot','aws_ec2_instances_should_not_use_deprecates_instance_types','EbsSnapShot_version-1','EbsSnapShot','snapshot','aws','EbsSnapShot','{"params":[{"encrypt":false,"value":"check-for-ebs-snapshot-with-public-access","key":"ruleKey"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"ePs02jT06w","key":"checkId"},{"key":"esServiceURL","value":"/aws_checks/checks_resources/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"EbsSnapShot_version-1_EbsSnapShot_snapshot","autofix":false,"alexaKeyword":"EbsSnapShot","ruleRestUrl":"","targetType":"snapshot","pac_ds":"aws","policyId":"EbsSnapShot_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_instances_should_not_use_deprecates_instance_types","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_instances_should_not_use_deprecates_instance_types'),'ENABLED','ASGC','EBS snapshots should not be publicly accessible',{d '2017-08-16'},{d '2018-09-19'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('CheckInactiveIamUser_version-1_CheckInactiveIamUser_iamuser','aws_iam_users_should_not_be_inactive_for_than_target_period','CheckInactiveIamUser_version-1','CheckInactiveIamUser','iamuser','aws','CheckInactiveIamUser','{"assetGroup":"aws","policyId":"CheckInactiveIamUser_version-1","environmentVariables":[],"ruleUUID":"aws_iam_users_should_not_be_inactive_for_than_target_period","ruleType":"ManageRule","pac_ds":"aws","targetType":"iamuser","params":[{"encrypt":false,"value":"90","key":"pwdInactiveDuration"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"check-for-inactive-iam-users","key":"ruleKey"},{"encrypt":false,"value":"true","key":"threadsafe"}],"ruleId":"CheckInactiveIamUser_version-1_CheckInactiveIamUser_iamuser","autofix":false,"alexaKeyword":"CheckInactiveIamUser","ruleRestUrl":""}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_iam_users_should_not_be_inactive_for_than_target_period'),'ENABLED','710383','IAM users should not be inactive for more than 90 days',{d '2018-02-13'},{d '2018-02-13'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('CheckGuardDutyIsEnabledForAllAccount_version-1_CheckGuardDutyIsEnabledForAllAccount_account','aws_guardduty_should_be_enabled','CheckGuardDutyIsEnabledForAllAccount_version-1','CheckGuardDutyIsEnabledForAllAccount','account','aws','CheckGuardDutyIsEnabledForAllAccount','{"params":[{"encrypt":false,"value":"check-guard-duty-enabled-for-all-accounts","key":"ruleKey"},{"encrypt":false,"value":"role/paladincloud_ro","key":"roleIdentifyingString"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"CheckGuardDutyIsEnabledForAllAccount_version-1_CheckGuardDutyIsEnabledForAllAccount_account","autofix":false,"alexaKeyword":"CheckGuardDutyIsEnabledForAllAccount","ruleRestUrl":"","targetType":"account","pac_ds":"aws","policyId":"CheckGuardDutyIsEnabledForAllAccount_version-1","assetGroup":"aws","ruleUUID":"aws_guardduty_should_be_enabled","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_guardduty_should_be_enabled'),'ENABLED','ASGC','Enable AWS Guard Duty Service across all regions and accounts',{d '2018-01-19'},{d '2018-08-31'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AmazonRDSIdleDBInstancesRule_version-1_AmazonRDSIdleDBInstancesRule_rdsdb','aws_rds_instances_should_not_tbe_idle_state','AmazonRDSIdleDBInstancesRule_version-1','AmazonRDSIdleDBInstancesRule','rdsdb','aws','AmazonRDSIdleDBInstancesRule','{"params":[{"encrypt":false,"value":"Ti39halfu8","key":"checkId"},{"encrypt":false,"value":"check-for-amazon-RDS-idle-DB-instances","key":"ruleKey"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"costOptimization","key":"ruleCategory"},{"key":"esServiceURL","value":"/aws_checks/checks_resources/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"AmazonRDSIdleDBInstancesRule_version-1_AmazonRDSIdleDBInstancesRule_rdsdb","autofix":false,"alexaKeyword":"AmazonRDSIdleDBInstancesRule","ruleRestUrl":"","targetType":"rdsdb","pac_ds":"aws","policyId":"AmazonRDSIdleDBInstancesRule_version-1","assetGroup":"aws","ruleUUID":"aws_rds_instances_should_not_tbe_idle_state","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_rds_instances_should_not_tbe_idle_state'),'ENABLED','ASGC','Delete AWS RDS DB instances running in idle mode',{d '2018-03-15'},{d '2018-09-19'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole','aws_iamrole_shouldnothave_ec2runinstance_privilege','EC2-RunInstance-iam-role-with-unapproved-access_version-1','ec2-runInstance-iam-role-with-unapproved-access','iamrole','aws','ec2-runInstance-iam-role-with-unapproved-access','{"params":[{"key":"roleIdentifyingString","value":"role/paladincloud_ro","encrypt":false},{"key":"splitterChar","value":",","encrypt":false},{"key":"unApprovedIamActions","value":"ec2:*,*,ec2:RunInstances","encrypt":false},{"key":"ruleKey","value":"iam-role-with-unapproved-access","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"iam-role-with-unapproved-access-autofix","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole","autofix":false,"alexaKeyword":"ec2-runInstance-iam-role-with-unapproved-access","ruleRestUrl":"","targetType":"iamrole","pac_ds":"aws","policyId":"EC2-RunInstance-iam-role-with-unapproved-access_version-1","assetGroup":"aws","ruleUUID":"aws_iamrole_shouldnothave_ec2runinstance_privilege","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_iamrole_shouldnothave_ec2runinstance_privilege'),'ENABLED','asgc','Non-Allow listed  IAM Role should not have EC2 RunInstance privilege',{d '2019-02-08'},{d '2019-02-23'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole','aws_iamrole_shouldnothave_network_privileges','IAMRoleNetworkPrivilegesRule_version-1','IAMRoleNetworkPrivilegesRule','iamrole','aws','networkprivileges','{"params":[{"key":"ruleKey","value":"iam-role-with-unapproved-access","isValueNew":true,"encrypt":false},{"key":"roleIdentifyingString","value":"role/paladincloud_ro","isValueNew":true,"encrypt":false},{"key":"unApprovedIamActions","value":"ec2:CreateDefaultSubnet,ec2:CreateDefaultVpc,ec2:CreateInternetGateway,ec2:CreateSubnet,ec2:CreateVpc,ec2:CreateVpcEndpoint,ec2:CreateVpcEndpointConnectionNotification,ec2:CreateVpcEndpointServiceConfiguration,ec2:CreateVpcPeeringConnection,ec2:CreateVpnConnection,ec2:CreateVpnConnectionRoute,ec2:CreateVpnGateway,ec2:ModifySubnetAttribute,ec2:ModifyVpcAttribute,ec2:ModifyVpcEndpoint,ec2:ModifyVpcEndpointConnectionNotification,ec2:ModifyVpcEndpointServiceConfiguration,ec2:ModifyVpcEndpointServicePermissions,ec2:ModifyVpcPeeringConnectionOptions,ec2:ModifyVpcTenancy,ec2:MoveAddressToVpc,ec2:AttachInternetGateway,ec2:CreateEgressOnlyInternetGateway,ec2:AttachVpnGateway.ec2:*,*","isValueNew":true,"encrypt":false},{"key":"splitterChar","value":",","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"iam-role-with-unapproved-access-autofix","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole","autofix":false,"alexaKeyword":"networkprivileges","ruleRestUrl":"","targetType":"iamrole","pac_ds":"aws","policyId":"IAMRoleNetworkPrivilegesRule_version-1","assetGroup":"aws","ruleUUID":"aws_iamrole_shouldnothave_network_privileges","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_iamrole_shouldnothave_network_privileges'),'ENABLED','asgc','Non-Allow listed IAM Roles should not have core networking privileges',{d '2019-02-06'},{d '2019-02-26'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole','aws_iamrole_shouldnothave_lambda_privilege','UnapprovedIamRoleWithLambdaAccess_version-1','UnapprovedIamRoleLambdaAccess','iamrole','aws','UnapprovedIamRoleWithLambdaAccess','{"params":[{"key":"ruleKey","value":"iam-role-with-unapproved-access","encrypt":false},{"key":"roleIdentifyingString","value":"role/paladincloud_ro","encrypt":false},{"key":"unApprovedIamActions","value":"lambda:CreateFunction,lambda:Create*,*,lambda:*","encrypt":false},{"key":"splitterChar","value":",","encrypt":false},{"key":"fixKey","value":"iam-role-with-unapproved-access-autofix","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole","autofix":false,"alexaKeyword":"UnapprovedIamRoleWithLambdaAccess","ruleRestUrl":"","targetType":"iamrole","pac_ds":"aws","policyId":"UnapprovedIamRoleWithLambdaAccess_version-1","assetGroup":"aws","ruleUUID":"aws_iamrole_shouldnothave_lambda_privilege","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_iamrole_shouldnothave_lambda_privilege'),'ENABLED','asgc','Non-Allow listed  IAM Role Should not have Lambda  privilege',{d '2019-02-07'},{d '2019-02-23'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser','aws_iamuser_shouldnothave_corenetwork_privileges','core-networking-iam-user-with-unapproved-access_version-1','core-networking-iam-user-with-unapproved-access','iamuser','aws','core-networking-iam-user-with-unapproved-access','{"params":[{"key":"roleIdentifyingString","value":"role/paladincloud_ro","encrypt":false},{"key":"unApprovedIamActions","value":"ec2:CreateDefaultSubnet,ec2:CreateDefaultVpc,ec2:CreateInternetGateway,ec2:CreateSubnet,ec2:CreateVpc,ec2:CreateVpcEndpoint,ec2:CreateVpcEndpointConnectionNotification,ec2:CreateVpcEndpointServiceConfiguration,ec2:CreateVpcPeeringConnection,ec2:CreateVpnConnection,ec2:CreateVpnConnectionRoute,ec2:CreateVpnGateway,ec2:ModifySubnetAttribute,ec2:ModifyVpcAttribute,ec2:ModifyVpcEndpoint,ec2:ModifyVpcEndpointConnectionNotification,ec2:ModifyVpcEndpointServiceConfiguration,ec2:ModifyVpcEndpointServicePermissions,ec2:ModifyVpcPeeringConnectionOptions,ec2:ModifyVpcTenancy,ec2:MoveAddressToVpc,ec2:AttachInternetGateway,ec2:CreateEgressOnlyInternetGateway,ec2:AttachVpnGateway.ec2:*,*","encrypt":false},{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"iam-user-with-unapproved-access","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"iam-user-with-unapproved-access-autofix","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser","autofix":false,"alexaKeyword":"core-networking-iam-user-with-unapproved-access","ruleRestUrl":"","targetType":"iamuser","pac_ds":"aws","policyId":"core-networking-iam-user-with-unapproved-access_version-1","assetGroup":"aws","ruleUUID":"aws_iamuser_shouldnothave_corenetwork_privileges","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_iamuser_shouldnothave_corenetwork_privileges'),'ENABLED','asgc','Restrict Core Networking Privileges to Non-Allow listed IAM Users ',{d '2019-02-12'},{d '2019-02-23'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('cloudfront-check-for-unauthorized-html_version-1_Cloudfront_Unauthorized_HTML_Content_cloudfront','aws_cloudfront_shouldnothave_unauthorized_html_content','cloudfront-check-for-unauthorized-html_version-1','Cloudfront_Unauthorized_HTML_Content','cloudfront','aws','Cloudfront_Unauthorized_HTML_Content','{"params":[{"key":"ruleKey","value":"check-for-unauthorized-html-cloudfront-distribution","encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"cloudfront-check-for-unauthorized-html_version-1_Cloudfront_Unauthorized_HTML_Content_cloudfront","autofix":false,"alexaKeyword":"Cloudfront_Unauthorized_HTML_Content","ruleRestUrl":"","targetType":"cloudfront","pac_ds":"aws","policyId":"cloudfront-check-for-unauthorized-html_version-1","assetGroup":"aws","ruleUUID":"aws_cloudfront_shouldnothave_unauthorized_html_content","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_cloudfront_shouldnothave_unauthorized_html_content'),'ENABLED','asgc','Cloudfront should not have unauthorized html content',{d '2019-04-26'},{d '2019-04-26'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('ServiceAccountPrivilegesRule_version-1_UnapprovedServiceAccountAccess_iamuser','aws_iamuser_service-acc-shouldnothave_unauth_privileges','ServiceAccountPrivilegesRule_version-1','UnapprovedServiceAccountAccess','iamuser','aws','UnapprovedServiceAccountAccess','{"params":[{"key":"ruleKey","value":"iam-serviceaccount-privileges-rule","encrypt":false},{"key":"splitterChar","value":",","encrypt":false},{"key":"roleIdentifyingString","value":"role/paladincloud_ro","encrypt":false},{"key":"fixKey","value":"iam-user-with-unapproved-access-autofix","isValueNew":true,"encrypt":false},{"key":"unApprovedIamActions","value":"ec2:TerminateInstances,ec2:RunInstances,s3:DeleteBucket,s3:PutBucketPolicy,ec2:ModifyInstanceAttribute,s3:DeleteObject,ec2:*,*,s3:*,s3:Put*,cloudtrail:*,cloudtrail:DeleteTrail,config:*,config:DeleteConfigRule","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"ServiceAccountPrivilegesRule_version-1_UnapprovedServiceAccountAccess_iamuser","autofix":false,"alexaKeyword":"UnapprovedServiceAccountAccess","ruleRestUrl":"","targetType":"iamuser","pac_ds":"aws","policyId":"ServiceAccountPrivilegesRule_version-1","assetGroup":"aws","ruleUUID":"aws_iamuser_service-acc-shouldnothave_unauth_privileges","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_iamuser_service-acc-shouldnothave_unauth_privileges'),'ENABLED','asgc','Service Account should not have listed privileges',{d '2019-04-26'},{d '2019-04-26'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2','aws_ec2_should_not_be_publicly_accessible_on_port8080','Ec2WithPublicAccessPort8080_version-1','Ec2WithPublicAccessPort8080','ec2','aws','Ec2WithPublicAccessPort8080','{"params":[{"key":"internetGateWay","value":"igw","encrypt":false},{"key":"portToCheck","value":"8080","encrypt":false},{"key":"ruleKey","value":"check-for-ec2-with-public-access-for-configured-port","encrypt":false},{"key":"ruleCategory","value":"security","encrypt":false},{"key":"severity","value":"critical","encrypt":false},{"key":"cidrIp","value":"0.0.0.0/0","encrypt":false},{"key":"esEc2SgURL","value":"/aws/ec2_secgroups/_search","encrypt":false},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","encrypt":false},{"key":"esSubnetURL","value":"/aws_subnet/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"Ec2WithPublicAccessPort8080_version-1_Ec2WithPublicAccessPort8080_ec2","autofix":false,"alexaKeyword":"Ec2WithPublicAccessPort8080","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"Ec2WithPublicAccessPort8080_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_should_not_be_publicly_accessible_on_port8080","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_should_not_be_publicly_accessible_on_port8080'),'ENABLED','ASGC','EC2 instances should not be publicly accessible on port 8080',{d '2017-09-06'},{d '2018-09-28'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2','aws_ec2_should_not_be_publicly_accessible_on_port3306','Ec2WithPublicAccessMySqlPort3306_version-1','Ec2WithPubAccMySqlPort3306','ec2','aws','Ec2WithPubAccMySqlPort3306','{"params":[{"encrypt":"false","value":"igw","key":"internetGateWay"},{"encrypt":"false","value":"3306","key":"portToCheck"},{"encrypt":"false","value":"check-for-ec2-with-public-access-for-configured-port","key":"ruleKey"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"0.0.0.0/0","key":"cidrIp"},{"key":"esEc2SgURL","value":"/aws/ec2_secgroups/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","isValueNew":true,"encrypt":false},{"key":"esSubnetURL","value":"/aws_subnet/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"Ec2WithPublicAccessMySqlPort3306_version-1_Ec2WithPubAccMySqlPort3306_ec2","autofix":false,"alexaKeyword":"Ec2WithPubAccMySqlPort3306","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"Ec2WithPublicAccessMySqlPort3306_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_should_not_be_publicly_accessible_on_port3306","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_should_not_be_publicly_accessible_on_port3306'),'ENABLED','ASGC','EC2 instances should not be publicly accessible on default MySQL port 3306',{d '2017-09-06'},{d '2018-09-28'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2','aws_ec2_should_not_be_publicly_accessible_on_port138','Ec2WithPublicAccessNetBIOSPort138_version-1','Ec2WithPubAccNetBIOS138','ec2','aws','Ec2WithPubAccNetBIOS138','{"params":[{"encrypt":"false","value":"igw","key":"internetGateWay"},{"encrypt":"false","value":"138","key":"portToCheck"},{"encrypt":"false","value":"check-for-ec2-with-public-access-for-configured-port","key":"ruleKey"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"0.0.0.0/0","key":"cidrIp"},{"key":"esEc2SgURL","value":"/aws/ec2_secgroups/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","isValueNew":true,"encrypt":false},{"key":"esSubnetURL","value":"/aws_subnet/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"Ec2WithPublicAccessNetBIOSPort138_version-1_Ec2WithPubAccNetBIOS138_ec2","autofix":false,"alexaKeyword":"Ec2WithPubAccNetBIOS138","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"Ec2WithPublicAccessNetBIOSPort138_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_should_not_be_publicly_accessible_on_port138","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_should_not_be_publicly_accessible_on_port138'),'ENABLED','ASGC','EC2 instances should not be publicly accessible on port 138',{d '2017-09-06'},{d '2018-09-28'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('S3HostsWebsiteRule_version-1_S3HostsWebsiteRule_s3','s3_should_not_have_host_website_or_redirect_req','S3HostsWebsiteRule_version-1','S3HostsWebsiteRule','s3','aws','S3HostsWebsiteRule','{"params":[{"key":"ruleKey","value":"check-for-s3-hosting-website","encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"S3HostsWebsiteRule_version-1_S3HostsWebsiteRule_s3","autofix":false,"alexaKeyword":"S3HostsWebsiteRule","ruleRestUrl":"","targetType":"s3","pac_ds":"aws","policyId":"S3HostsWebsiteRule_version-1","assetGroup":"aws","ruleUUID":"s3_should_not_have_host_website_or_redirect_req","ruleType":"ManageRule"}','0 0/2 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/s3_should_not_have_host_website_or_redirect_req'),'ENABLED','ASGC','S3 bucket should not have hosting website or redirecting requests',{d '2019-06-10'},{d '2019-06-10'},null,null);
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Unauthorized-Cloudfront-Distribution_version-1_Unauthorized-Cloudfront-Distribution_cloudfront','cloudfront_should_have_auth_dist','Unauthorized-Cloudfront-Distribution_version-1','Unauthorized-Cloudfront-Distribution','cloudfront','aws','CloudfrontUnauthorizedContentDistributionRule','{"params":[{"key":"ruleKey","value":"check-for-unauthorized-cloudfront-distribution","encrypt":false},{"key":"threadsafe","value":"true","encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"Unauthorized-Cloudfront-Distribution_version-1_Unauthorized-Cloudfront-Distribution_cloudfront","autofix":false,"alexaKeyword":"CloudfrontUnauthorizedContentDistributionRule","ruleRestUrl":"","targetType":"cloudfront","pac_ds":"aws","policyId":"Unauthorized-Cloudfront-Distribution_version-1","assetGroup":"aws","ruleUUID":"cloudfront_should_have_auth_dist","ruleType":"ManageRule"}','0 0/2 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/cloudfront_should_have_auth_dist'),'ENABLED','ASGC','Unauthorized Cloudfront Content Distribution',{d '2019-06-10'},{d '2019-06-10'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2','aws_ec2_should_not_be_publicly_accessible_on_port1434','Ec2WithPubAccPort1434_version-1','Ec2WithPublicAccessOnPort1434','ec2','aws','Ec2WithPublicAccessOnPort1434','{"params":[{"encrypt":"false","value":"1434","key":"portToCheck"},{"encrypt":"false","value":"igw","key":"internetGateWay"},{"encrypt":"false","value":"check-for-ec2-with-public-access-for-configured-port","key":"ruleKey"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"0.0.0.0/0","key":"cidrIp"},{"key":"esEc2SgURL","value":"/aws/ec2_secgroups/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","isValueNew":true,"encrypt":false},{"key":"esSubnetURL","value":"/aws_subnet/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"Ec2WithPubAccPort1434_version-1_Ec2WithPubAccPort1434_ec2","autofix":false,"alexaKeyword":"Ec2WithPubAccPort1434","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"Ec2WithPubAccPort1434_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_should_not_be_publicly_accessible_on_port1434","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_should_not_be_publicly_accessible_on_port1434'),'ENABLED','ASGC','EC2 instances should not be publicly accessible on default SQL Browser port 1434',{d '2019-06-10'},{d '2019-06-10'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2','aws_ec2_should_not_be_publicly_accessible_on_port5432','Ec2WithPublicAccessPostgreSqlPort5432_version-1','Ec2WithPubAcc5432','ec2','aws','Ec2WithPubAcc5432','{"params":[{"encrypt":"false","value":"igw","key":"internetGateWay"},{"encrypt":"false","value":"5432","key":"portToCheck"},{"encrypt":"false","value":"check-for-ec2-with-public-access-for-configured-port","key":"ruleKey"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"0.0.0.0/0","key":"cidrIp"},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","isValueNew":true,"encrypt":false},{"key":"esEc2SgURL","value":"/aws/ec2_secgroups/_search","isValueNew":true,"encrypt":false},{"key":"esSubnetURL","value":"/aws_subnet/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"Ec2WithPublicAccessPostgreSqlPort5432_version-1_Ec2WithPubAcc5432_ec2","autofix":false,"alexaKeyword":"Ec2WithPubAcc5432","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"Ec2WithPublicAccessPostgreSqlPort5432_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_should_not_be_publicly_accessible_on_port5432","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_should_not_be_publicly_accessible_on_port5432'),'ENABLED','ASGC','EC2 instances should not be publicly accessible on default POSTGRESQL port 5432',{d '2019-06-10'},{d '2019-06-10'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2','aws_ec2_should_not_be_publicly_accessible_on_port3389','Ec2WithPublicAccessRdpPort3389_version-1','Ec2WithPubAcc3389','ec2','aws','Ec2WithPubAcc3389','{"params":[{"encrypt":"false","value":"igw","key":"internetGateWay"},{"encrypt":"false","value":"3389","key":"portToCheck"},{"encrypt":"false","value":"check-for-ec2-with-public-access-for-configured-port","key":"ruleKey"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"0.0.0.0/0","key":"cidrIp"},{"key":"esEc2SgURL","value":"/aws/ec2_secgroups/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableAssociationsURL","value":"/aws_routetable/routetable_associations/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableRoutesURL","value":"/aws_routetable/routetable_routes/_search","isValueNew":true,"encrypt":false},{"key":"esRoutetableURL","value":"/aws_routetable/routetable/_search","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/aws_sg/sg_rules/_search","isValueNew":true,"encrypt":false},{"key":"esSubnetURL","value":"/aws_subnet/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"Ec2WithPublicAccessRdpPort3389_version-1_Ec2WithPublicAccessRdpPort3389_ec2","autofix":false,"alexaKeyword":"Ec2WithPublicAccessRdpPort3389","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"Ec2WithPublicAccessRdpPort3389_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_should_not_be_publicly_accessible_on_port3389","ruleType":"ManageRule"}','0 0/23 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_should_not_be_publicly_accessible_on_port3389'),'ENABLED','ASGC','EC2 instances should not be publicly accessible on port 3389',{d '2019-06-10'},{d '2019-06-10'},'critical','security');

INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('Check_MFA_RootUSer_version-1_Check_MFA_RootUser_account','aws_account_mfa_root_user','Check_MFA_RootUSer_version-1','Check_MFA_RootUser','account','aws','mfa','{"params":[{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[{"key":"ruleKey","value":"check-for-MFA-RootUser","encrypt":false},{"key":"roleIdentifyingString","value":"role/paladincloud_ro","encrypt":false}],"ruleId":"Check_MFA_RootUSer_version-1_Check_MFA_RootUser_account","autofix":false,"alexaKeyword":"mfa","ruleRestUrl":"","targetType":"account","pac_ds":"aws","policyId":"Check_MFA_RootUSer_version-1","assetGroup":"aws","ruleUUID":"aws_account_mfa_root_user","ruleType":"ManageRule"}','0 0 ? * MON *','pac-managed-rules.jar','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_mfa_root_user'),'ENABLED','ASGC','Enable MFA for Root User','2019-06-19','2019-06-19','high','security');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('Centralized_CloudTrail_version-1_Centralized_Cloudtrail_account','aws_account_centralized-cloudtrial','Centralized_CloudTrail_version-1','Centralized_Cloudtrail','account','aws','Centralized_Cloudtrail','{"params":[{"key":"ruleKey","value":"check-cloudtrail-multiRegion-enabled","encrypt":false},{"key":"inputCloudTrailName","value":"","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"Centralized_CloudTrail_version-1_Centralized_Cloudtrail_account","autofix":false,"alexaKeyword":"Centralized_Cloudtrail","ruleRestUrl":"","targetType":"account","pac_ds":"aws","policyId":"Centralized_CloudTrail_version-1","assetGroup":"aws","ruleUUID":"aws_account_centralized-cloudtrial","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_centralized-cloudtrial'),'ENABLED','ASGC','Cloudtrail should be enabled in multi region','2019-06-19','2019-06-19','medium','security');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('ACMCertificate_Expiry_For_X_Days_version-1_ACMCertificate_Expiry_acmcertificate','aws_acmcertificate_expiry','ACMCertificate_Expiry_For_X_Days_version-1','ACMCertificate_Expiry','acmcertificate','aws','ACMCertificate_Expiry','{"params":[{"key":"ruleKey","value":"check-for-acm-certificate-expiry","encrypt":false},{"key":"targetExpireDuration","value":"90","encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"governance","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"ACMCertificate_Expiry_For_X_Days_version-1_ACMCertificate_Expiry_acmcertificate","autofix":false,"alexaKeyword":"ACMCertificate_Expiry","ruleRestUrl":"","targetType":"acmcertificate","pac_ds":"aws","policyId":"ACMCertificate_Expiry_For_X_Days_version-1","assetGroup":"aws","ruleUUID":"aws_acmcertificate_expiry","ruleType":"Manage Rule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_acmcertificate_expiry'),'ENABLED','ASGC','Check the Expiry status of the ACM Certificate','2019-02-18','2019-04-16','high','governance');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('IAMCertificate_Expiry_For_X_Days_version-1_IAMCertificate_Expiry_For_X_Days_iamcertificate','aws_iamcertificate_expiry','IAMCertificate_Expiry_For_X_Days_version-1','IAMCertificate_Expiry_For_X_Days','iamcertificate','aws','IAMCertificate_Expiry_For_X_Days','{"params":[{"key":"ruleKey","value":"check-for-iam-certificate-expiry","encrypt":false},{"key":"targetExpireDuration","value":"90","encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"governance","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"IAMCertificate_Expiry_For_X_Days_version-1_IAMCertificate_Expiry_For_X_Days_iamcertificate","autofix":false,"alexaKeyword":"IAMCertificate_Expiry_For_X_Days","ruleRestUrl":"","targetType":"iamcertificate","pac_ds":"aws","policyId":"IAMCertificate_Expiry_For_X_Days_version-1","assetGroup":"aws","ruleUUID":"aws_iamcertificate_expiry","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_iamcertificate_expiry'),'ENABLED','ASGC','IAM certificate should not expire in mentioned days from current date','2019-02-18','2019-03-01','high','governance');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('ELB_Access_Logs_version-1_AppLB_Access_Logs_appelb','aws_appelb_access_logs','ELB_Access_Logs_version-1','AppLB_Access_Logs','appelb','aws','AppLB_Access_Logs','{"params":[{"key":"ruleKey","value":"check-for-access-log-for-elb","encrypt":false},{"key":"accessLogBucketName","value":"","encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"governance","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"ELB_Access_Logs_version-1_AppLB_Access_Logs_appelb","autofix":false,"alexaKeyword":"AppLBAccessLogs","ruleRestUrl":"","targetType":"appelb","pac_ds":"aws","policyId":"ELB_Access_Logs_version-1","assetGroup":"aws","ruleUUID":"aws_appelb_access_logs","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_appelb_access_logs'),'ENABLED','ASGC','Access log should be enabled to App ELB and attached to mentioned bucket','2019-02-24','2019-03-14','high','governance');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('ELB_Access_Logs_version-1_ClassicLB_Access_Logs_classicelb','aws_classicelb_access_logs','ELB_Access_Logs_version-1','ClassicLB_Access_Logs','classicelb','aws','ClassicLB_Access_Logs','{"params":[{"key":"ruleKey","value":"check-for-access-log-for-elb","encrypt":false},{"key":"accessLogBucketName","value":"","encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"governance","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"ELB_Access_Logs_version-1_ClassicLB_Access_Logs_classicelb","autofix":false,"alexaKeyword":"ClassicLBAccessLogs","ruleRestUrl":"","targetType":"classicelb","pac_ds":"aws","policyId":"ELB_Access_Logs_version-1","assetGroup":"aws","ruleUUID":"aws_classicelb_access_logs","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_classicelb_access_logs'),'ENABLED','ASGC','Access log should be enabled to Classic ELB and attached to mentioned bucket','2019-02-24','2019-02-27','high','governance');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('CloudFront_AccessLogs_version-1_CloudFront_AccessLogs_cloudfront','aws_cloudfront_accesslogs','CloudFront_AccessLogs_version-1','CloudFront_AccessLogs','cloudfront','aws','CloudFront_AccessLogs','{"params":[{"key":"ruleKey","value":"check-access-log-for-cloudfront","encrypt":false},{"key":"accessLogBucketName","value":"","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"governance","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"CloudFront_AccessLogs_version-1_CloudFront_AccessLogs_cloudfront","autofix":false,"alexaKeyword":"CloudFront_AccessLogs","ruleRestUrl":"","targetType":"cloudfront","pac_ds":"aws","policyId":"CloudFront_AccessLogs_version-1","assetGroup":"aws","ruleUUID":"aws_cloudfront_accesslogs","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_cloudfront_accesslogs'),'ENABLED','ASGC','Access log should be enabled to cloudfront and attached to mentioned bucket','2019-02-18','2019-02-28','high','governance');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('S3AccessLogsRule_version-1_S3AccessLogsRule_s3','aws_s3_accesslogs','S3AccessLogsRule_version-1','S3AccessLogsRule','s3','aws','S3AccessLogsRule','{"params":[{"key":"ruleKey","value":"check-for-s3-access-logs","encrypt":false},{"key":"esS3PubAccessIssueUrl","value":"/aws_s3/issue_s3/_search","encrypt":false},{"key":"s3PublicAccessRuleId","value":"S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3","encrypt":false},{"key":"splitterChar","value":",","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"private-s3-server-access-logs-fix","isValueNew":true,"encrypt":false},{"key":"accessLogsEnabledRegions","value":"","isValueNew":true,"encrypt":false},{"key":"destinationBucketForAutofix","value":"tmo-s3-accesslog-ACCOUNT_ID-REGION-dev","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"governance","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"S3AccessLogsRule_version-1_S3AccessLogsRule_s3","autofix":false,"alexaKeyword":"S3AccessLogsRule","ruleRestUrl":"","targetType":"s3","pac_ds":"aws","policyId":"S3AccessLogsRule_version-1","assetGroup":"aws","ruleUUID":"aws_s3_accesslogs","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_s3_accesslogs'),'ENABLED','ASGC','Private s3 buckets should be enabled with access logs','2019-08-05','2019-08-05','high','governance');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('CloudWatchEventsForAllAccounts_version-1_CloudWatchEventsForAllAccounts_account','aws_account_cloud_watch_events','CloudWatchEventsForAllAccounts_version-1','CloudWatchEventsForAllAccounts','account','aws','CloudWatchEventsForAllAccounts','{"params":[{"encrypt":false,"value":"check-cloudwatch-event-rule","key":"ruleKey"},{"encrypt":false,"value":"role/pac_ro","key":"roleIdentifyingString"},{"encrypt":false,"value":"DO-NOT-DELETE-all-events-to-eventbus-in-ACCOUNTID","key":"ruleName"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"governance","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"CloudWatchEventsForAllAccounts_version-1_CloudWatchEventsForAllAccounts_account","autofix":false,"alexaKeyword":"CloudWatchEventsForAllAccounts","ruleRestUrl":"","targetType":"account","pac_ds":"aws","policyId":"CloudWatchEventsForAllAccounts_version-1","assetGroup":"aws","ruleUUID":"aws_account_cloud_watch_events","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloud_watch_events'),'ENABLED','ASGC','All Cloud watch events from all accounts should be sent to DEDICATED ACCOUNTID default event bus','2019-08-05','2019-08-05','high','governance');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('LowUtilizationAmazonEC2InstancesRule_version-1_LowUtilizationAmazonEC2InstancesRule_ec2','aws_ec2_low_utilization','LowUtilizationAmazonEC2InstancesRule_version-1','LowUtilizationAmazonEC2InstancesRule','ec2','aws','LowUtilizationAmazonEC2InstancesRule','{"params":[{"encrypt":false,"value":"check-for-low-utilization-amazon-ec2-instance","key":"ruleKey"},{"encrypt":false,"value":"","key":"checkId"},{"encrypt":false,"value":"low","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"costOptimization","key":"ruleCategory"},{"key":"esServiceURL","value":"/aws_checks/checks_resources/_search","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"LowUtilizationAmazonEC2InstancesRule_version-1_LowUtilizationAmazonEC2InstancesRule_ec2","autofix":false,"alexaKeyword":"LowUtilizationAmazonEC2InstancesRule","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"LowUtilizationAmazonEC2InstancesRule_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_low_utilization","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_low_utilization'),'ENABLED','ASGC','Amazon EC2 instances should not have low utilization','2019-08-05','2019-08-05','high','governance');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('TaggingRule_version-1_VPNGatewayMandatoryTagging_vpngateway','aws_vpngateway_mandatory_tag_rule','TaggingRule_version-1','VpnGatewayTaggingRule','vpngateway','aws','VpnGatewayTaggingRule','{"params":[{"key":"ruleKey","value":"check-for-missing-mandatory-tags","encrypt":false},{"key":"splitterChar","value":",","encrypt":false},{"key":"mandatoryTags","value":"Application,Environment,Stack,Role","encrypt":false},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_VPNGatewayMandatoryTagging_vpngateway","autofix":false,"alexaKeyword":"VPNGatewayTagging","ruleRestUrl":"","targetType":"vpngateway","pac_ds":"aws","policyId":"TaggingRule_version-1","assetGroup":"aws","ruleUUID":"aws_vpngateway_mandatory_tag_rule","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_vpngateway_mandatory_tag_rule'),'ENABLED','ASGC','Assign Mandatory Tags to VPNGateway','2019-08-05','2019-08-05','high','governance');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS3Vulnerability_ec2','aws_ec2_vuln_severity_rule','Ec2WithSeverityVulnerability_version-1','Ec2WithS3VulnerabilityRule','ec2','aws','Ec2WithS3VulnerabilityRule','{"params":[{"encrypt":false,"value":"S3","key":"severityVulnValue"},{"key":"esResourceWithVulnInfoForSeverityUrl","value":"/aws_ec2/vulninfo/_search","isValueNew":true,"encrypt":false},{"key":"ruleKey","value":"check-for-resource-with-severity-vulnerabilities","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"Ec2WithSeverityVulnerability_version-1_Ec2WithS3Vulnerability_ec2","autofix":false,"alexaKeyword":"Ec2WithS3Vulnerability","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"Ec2WithSeverityVulnerability_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_vuln_severity_rule","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_vuln_severity_rule'),'ENABLED','ASGC','Any Ec2 instance should not have S3 vulnerability','2019-08-05','2019-08-05','high','governance');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS4Vulnerability_ec2','aws_ec2_vuln_s4_rule','Ec2WithSeverityVulnerability_version-1','Ec2WithS4VulnerabilityRule','ec2','aws','Ec2WithS4VulnerabilityRule','{"params":[{"encrypt":false,"value":"S4","key":"severityVulnValue"},{"key":"esResourceWithVulnInfoForSeverityUrl","value":"/aws_ec2/vulninfo/_search","isValueNew":true,"encrypt":false},{"key":"ruleKey","value":"check-for-resource-with-severity-vulnerabilities","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"Ec2WithSeverityVulnerability_version-1_Ec2WithS4Vulnerability_ec2","autofix":false,"alexaKeyword":"Ec2WithS4Vulnerability","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"Ec2WithSeverityVulnerability_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_vuln_s4_rule","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_vuln_s4_rule'),'ENABLED','ASGC','Any Ec2 instance should not have S4 vulnerability','2019-08-05','2019-08-05','high','governance');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('Ec2WithSeverityVulnerability_version-1_Ec2WithS5Vulnerability_ec2','aws_ec2_vuln_s5_rule','Ec2WithSeverityVulnerability_version-1','Ec2WithS5VulnerabilityRule','ec2','aws','Ec2WithS5VulnerabilityRule','{"params":[{"encrypt":false,"value":"S5","key":"severityVulnValue"},{"key":"esResourceWithVulnInfoForSeverityUrl","value":"/aws_ec2/vulninfo/_search","isValueNew":true,"encrypt":false},{"key":"ruleKey","value":"check-for-resource-with-severity-vulnerabilities","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"Ec2WithSeverityVulnerability_version-1_Ec2WithS5Vulnerability_ec2","autofix":false,"alexaKeyword":"Ec2WithS5Vulnerability","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"Ec2WithSeverityVulnerability_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_vuln_s5_rule","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_vuln_s5_rule'),'ENABLED','ASGC','Any Ec2 instance should not have S5 vulnerability','2019-08-05','2019-08-05','high','governance');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2','aws_ec2_pub_vuln_s5_rule','Ec2PublicAccessPortWithS5Vulnerability_version-1','Ec2PublicAccessPortWithS5Vuln','ec2','aws','Ec2PublicAccessPortWithS5Vuln','{"params":[{"encrypt":false,"value":"check-for-ec2-public-access-port-with-s5-vulnerabilities","key":"ruleKey"},{"encrypt":false,"value":"S5","key":"severityVulnValue"},{"encrypt":false,"value":"EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2","key":"ec2PortRuleId"},{"key":"esEc2WithVulnInfoForS5Url","value":"/aws_ec2/vulninfo/_search","isValueNew":true,"encrypt":false},{"key":"esEc2PubAccessPortUrl","value":"/aws/issue_ec2/_search","isValueNew":true,"encrypt":false},{"key":"esAppElbWithInstanceUrl","value":"/aws_appelb/appelb_instances/_search","isValueNew":true,"encrypt":false},{"key":"esClassicElbWithInstanceUrl","value":"/aws_classicelb/classicelb_instances/_search","isValueNew":true,"encrypt":false},{"key":"esAppElbPubAccessPortUrl","value":"/aws_appelb/issue_appelb/_search","isValueNew":true,"encrypt":false},{"key":"esClassicElbPubAccessPortUrl","value":"/aws_classicelb/issue_classicelb/_search","isValueNew":true,"encrypt":false},{"key":"appElbPortRuleId","value":"ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb","isValueNew":true,"encrypt":false},{"key":"classicElbPortRuleId","value":"ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"Ec2PublicAccessPortWithS5Vulnerability_version-1_Ec2PublicAccessPortWithS5Vulnerability_ec2","autofix":false,"alexaKeyword":"Ec2PublicAccessPortWithS5Vulnerability","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"Ec2PublicAccessPortWithS5Vulnerability_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_pub_vuln_s5_rule","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_pub_vuln_s5_rule'),'ENABLED','ASGC','An Ec2 instance with remotely exploitable vulnerability (S5) should not be open to internet','2019-08-05','2019-08-05','high','governance');
INSERT IGNORE INTO cf_RuleInstance (`ruleId`,`ruleUUID`,`policyId`,`ruleName`,`targetType`,`assetGroup`,`alexaKeyword`,`ruleParams`,`ruleFrequency`,`ruleExecutable`,`ruleRestUrl`,`ruleType`,`ruleArn`,`status`,`userId`,`displayName`,`createdDate`,`modifiedDate`,`severity`,`category`) VALUES ('Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2','aws_ec2_qualys_scanned_rule','Ec2InstanceScannedByQualys_version-1','Ec2InstanceScannedByQualysAPI','ec2','aws','Ec2InstanceScannedByQualysAPI','{"params":[{"encrypt":false,"value":"30","key":"target"},{"key":"esQualysUrl","value":"/aws_ec2/qualysinfo/_search","isValueNew":true,"encrypt":false},{"key":"discoveredDaysRange","value":"7","isValueNew":true,"encrypt":false},{"key":"ruleKey","value":"check-for-resource-scanned-by-qualys","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"Ec2InstanceScannedByQualys_version-1_Ec2-instance-scanned-by-qualys-API_ec2","autofix":false,"alexaKeyword":"Ec2InstanceScannedByQualysAPI","ruleRestUrl":"","targetType":"ec2","pac_ds":"aws","policyId":"Ec2InstanceScannedByQualys_version-1","assetGroup":"aws","ruleUUID":"aws_ec2_qualys_scanned_rule","ruleType":"ManageRule"}','0 0 ? * MON *','','','Manage Rule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ec2_qualys_scanned_rule'),'ENABLED','ASGC','Every EC2 instance should be scanned by Qualys vulnerability assessment tool atleast once a month','2019-09-18','2019-09-18','high','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_VirtualmachineTaggingRule_virtualmachine','azure_virtualmachine_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','VirtualmachineTaggingRule','virtualmachine','azure','VirtualmachineTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_VirtualmachineTaggingRule_virtualmachine","autofix":false,"alexaKeyword":"VirtualmachineTaggingRule","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"TaggingRule_version-1","assetGroup":"azure","ruleUUID":"azure_virtualmachine_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_virtualmachine_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to Virtual Machine',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_SqlserverTaggingRule_sqlserver','azure_sqlserver_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','SqlserverTaggingRule','sqlserver','azure','SqlserverTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_SqlserverTaggingRule_sqlserver","autofix":false,"alexaKeyword":"SqlserverTaggingRule","ruleRestUrl":"","targetType":"sqlserver","pac_ds":"azure","policyId":"TaggingRule_version-1","assetGroup":"azure","ruleUUID":"azure_sqlserver_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_sqlserver_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to SQL Server',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_SqldatabaseTaggingRule_sqldatabase','azure_sqldatabase_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','SqldatabaseTaggingRule','sqldatabase','azure','SqldatabaseTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_SqldatabaseTaggingRule_sqldatabase","autofix":false,"alexaKeyword":"SqldatabaseTaggingRule","ruleRestUrl":"","targetType":"sqldatabase","pac_ds":"azure","policyId":"TaggingRule_version-1","assetGroup":"azure","ruleUUID":"azure_sqldatabase_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_sqldatabase_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to SQL Database',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_BlobcontainerTaggingRule_blobcontainer','azure_blobcontainer_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','BlobcontainerTaggingRule','blobcontainer','azure','BlobcontainerTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_BlobcontainerTaggingRule_blobcontainer","autofix":false,"alexaKeyword":"BlobcontainerTaggingRule","ruleRestUrl":"","targetType":"blobcontainer","pac_ds":"azure","policyId":"TaggingRule_version-1","assetGroup":"azure","ruleUUID":"azure_blobcontainer_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_blobcontainer_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to Blob Container',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_SecuritycenterTaggingRule_securitycenter','azure_securitycenter_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','SecuritycenterTaggingRule','securitycenter','azure','SecuritycenterTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_SecuritycenterTaggingRule_securitycenter","autofix":false,"assetGroup":"azure","alexaKeyword":"SecuritycenterTaggingRule","ruleRestUrl":"","targetType":"securitycenter","pac_ds":"azure","policyId":"TaggingRule_version-1","ruleUUID":"azure_securitycenter_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_securitycenter_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Security Center mandatory tags',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_ResourcegroupTaggingRule_resourcegroup','azure_resourcegroup_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','ResourcegroupTaggingRule','resourcegroup','azure','ResourcegroupTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_ResourcegroupTaggingRule_resourcegroup","autofix":false,"alexaKeyword":"ResourcegroupTaggingRule","ruleRestUrl":"","targetType":"resourcegroup","pac_ds":"azure","policyId":"TaggingRule_version-1","assetGroup":"azure","ruleUUID":"azure_resourcegroup_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_resourcegroup_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Resource Group mandatory tags',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_DiskTaggingRule_disk','azure_disk_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','DiskTaggingRule','disk','azure','DiskTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_DiskTaggingRule_disk","autofix":false,"alexaKeyword":"DiskTaggingRule","ruleRestUrl":"","targetType":"disk","pac_ds":"azure","policyId":"TaggingRule_version-1","assetGroup":"azure","ruleUUID":"azure_disk_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_disk_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Disk mandatory tags ',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_StorageaccountTaggingRule_storageaccount','azure_storageaccount_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','StorageaccountTaggingRule','storageaccount','azure','StorageaccountTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_StorageaccountTaggingRule_storageaccount","autofix":false,"alexaKeyword":"StorageaccountTaggingRule","ruleRestUrl":"","targetType":"storageaccount","pac_ds":"azure","policyId":"TaggingRule_version-1","assetGroup":"azure","ruleUUID":"azure_storageaccount_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_storageaccount_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Storage Account mandatory tags',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_NetworkinterfaceTaggingRule_networkinterface','azure_networkinterface_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','NetworkinterfaceTaggingRule','networkinterface','azure','NetworkinterfaceTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_NetworkinterfaceTaggingRule_networkinterface","autofix":false,"alexaKeyword":"NetworkinterfaceTaggingRule","ruleRestUrl":"","targetType":"networkinterface","pac_ds":"azure","policyId":"TaggingRule_version-1","assetGroup":"azure","ruleUUID":"azure_networkinterface_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_networkinterface_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to Network Interface',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_NsgTaggingRule_nsg','azure_nsg_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','NsgTaggingRule','nsg','azure','NsgTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_NsgTaggingRule_nsg","autofix":false,"alexaKeyword":"NsgTaggingRule","ruleRestUrl":"","targetType":"nsg","pac_ds":"azure","policyId":"TaggingRule_version-1","assetGroup":"azure","ruleUUID":"azure_nsg_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_nsg_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Network Security Group mandatory tags',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_VnetTaggingRule_vnet','azure_vnet_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','VnetTaggingRule','vnet','azure','VnetTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_VnetTaggingRule_vnet","autofix":false,"alexaKeyword":"VnetTaggingRule","ruleRestUrl":"","targetType":"vnet","pac_ds":"azure","policyId":"TaggingRule_version-1","assetGroup":"azure","ruleUUID":"azure_vnet_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_vnet_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Virtual Network mandatory tags',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_DatabricksTaggingRule_databricks','azure_databricks_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','DatabricksTaggingRule','databricks','azure','DatabricksTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_DatabricksTaggingRule_databricks","autofix":false,"alexaKeyword":"DatabricksTaggingRule","ruleRestUrl":"","targetType":"databricks","pac_ds":"azure","policyId":"TaggingRule_version-1","assetGroup":"azure","ruleUUID":"azure_databricks_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_databricks_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to Databricks',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_LoadbalancerTaggingRule_loadbalancer','azure_loadbalancer_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','LoadbalancerTaggingRule','loadbalancer','azure','LoadbalancerTaggingRule','{"params":[{"key":"ruleKey","value":"check-for-missing-mandatory-tags","encrypt":false},{"key":"splitterChar","value":",","encrypt":false},{"key":"mandatoryTags","value":"Application,Environment,Stack,Role","encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_LoadbalancerTaggingRule_loadbalancer","autofix":false,"alexaKeyword":"LoadbalancerTaggingRule","ruleRestUrl":"","targetType":"loadbalancer","pac_ds":"azure","policyId":"TaggingRule_version-1","assetGroup":"azure","ruleUUID":"azure_loadbalancer_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_loadbalancer_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to Load Balancer',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_MysqlserverTaggingRule_mysqlserver','azure_mysqlserver_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','MysqlserverTaggingRule','mysqlserver','azure','MysqlserverTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_MysqlserverTaggingRule_mysqlserver","autofix":false,"alexaKeyword":"MysqlserverTaggingRule","ruleRestUrl":"","targetType":"mysqlserver","pac_ds":"azure","policyId":"TaggingRule_version-1","assetGroup":"azure","ruleUUID":"azure_mysqlserver_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_mysqlserver_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory tags to MySQL Server',{d '2019-10-25'},{d '2019-10-25'},'critical','tagging');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Close_management_ports_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_security_center','Azure_Close_management_ports_version-1','Close_management_ports','virtualmachine','azure','Close_management_ports','{"params":[{"encrypt":false,"value":"check-for-azure-security-rule","key":"ruleKey"},{"key":"policyName","value":"Management@ports@should@be@closed@on@your@virtual@machines","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Close_management_ports_version-1_SecurityCenter_virtualmachine","autofix":false,"alexaKeyword":"close management port","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"Azure_Close_management_ports_version-1","assetGroup":"azure","ruleUUID":"azure_virtualmachine_security_center","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_virtualmachine_security_center'),'ENABLED','ASGC','Deny Access to Virtual Machine Management Ports',{d '2019-10-25'},{d '2019-10-25'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Enable_Adaptive_Application_controls_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_enable_adaptive_application','Azure_Enable_Adaptive_Application_controls_version-1','Enable_Adaptive_Application_controls','virtualmachine','azure','Enable_Adaptive_Application_controls','{"params":[{"encrypt":false,"value":"check-for-azure-security-rule","key":"ruleKey"},{"key":"policyName","value":"Adaptive@Application@Controls@should@be@enabled@on@virtual@machines","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Enable_Adaptive_Application_controls_version-1_SecurityCenter_virtualmachine","autofix":false,"alexaKeyword":"enable adaptive controls","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"Azure_Enable_Adaptive_Application_controls_version-1","assetGroup":"azure","ruleUUID":"Azure_Enable_Adaptive_Application_controls_version-1","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_virtualmachine_enable_adaptive_application'),'ENABLED','ASGC','Enable Adaptive Application Controls',{d '2019-10-25'},{d '2019-10-25'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Enable_Network_Security_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_enable_network_security','Azure_Enable_Network_Security_version-1','Enable_Network_Security','virtualmachine','azure','Enable_Network_Security','{"params":[{"encrypt":false,"value":"check-for-azure-security-rule","key":"ruleKey"},{"key":"policyName","value":"Access@should@be@restricted@for@permissive@Network@Security@Groups@with@Internet-facing@VMs","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Enable_Network_Security_version-1_SecurityCenter_virtualmachine","autofix":false,"alexaKeyword":"enable network security","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"Azure_Enable_Network_Security_version-1","assetGroup":"azure","ruleUUID":"azure_virtualmachine_enable_network_security","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_virtualmachine_enable_network_security'),'ENABLED','ASGC','Enable Network Security Groups on Virtual Machines',{d '2019-10-25'},{d '2019-10-25'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Install_a_vulnerability_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_install_a_vulnerability','Azure_Install_a_vulnerability_version-1','Install_A_Vulnerability','virtualmachine','azure','Install_A_Vulnerability','{"params":[{"encrypt":false,"value":"check-for-azure-security-rule","key":"ruleKey"},{"key":"policyName","value":"Vulnerability@assessment@solution@should@be@installed@on@your@virtual@machines","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Install_a_vulnerability_version-1_SecurityCenter_virtualmachine","autofix":false,"alexaKeyword":"install vulnerability scan tool","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"Azure_Install_a_vulnerability_version-1","assetGroup":"azure","ruleUUID":"azure_virtualmachine_install_a_vulnerability","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_virtualmachine_install_a_vulnerability'),'ENABLED','ASGC','Install a vulnerability assessment solution on your virtual machines',{d '2019-10-25'},{d '2019-10-25'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Install_monitoring_agent_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_install_monitoring_agent','Azure_Install_monitoring_agent_version-1','Install_Monitoring_Agent','virtualmachine','azure','Install_Monitoring_Agent','{"params":[{"encrypt":false,"value":"check-for-azure-security-rule","key":"ruleKey"},{"key":"policyName","value":"Monitoring@agent@should@be@installed@on@your@machines","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Install_monitoring_agent_version-1_SecurityCenter_virtualmachine","autofix":false,"alexaKeyword":"install monitoring agent","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"Azure_Install_monitoring_agent_version-1","assetGroup":"azure","ruleUUID":"azure_virtualmachine_install_monitoring_agent","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_virtualmachine_install_monitoring_agent'),'ENABLED','ASGC','Install monitoring agent on your machines',{d '2019-10-25'},{d '2019-10-25'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Just_in_time_network_access_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_just_in_time_network_access','Azure_Just_in_time_network_access_version-1','Just_in_time_network_access','virtualmachine','azure','Just_in_time_network_access','{"params":[{"encrypt":false,"value":"check-for-azure-security-rule","key":"ruleKey"},{"key":"policyName","value":"Just-In-Time@network@access@control@should@be@applied@on@virtual@machines","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Just_in_time_network_access_version-1_SecurityCenter_virtualmachine","autofix":false,"alexaKeyword":"enable just in time access","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"Azure_Just_in_time_network_access_version-1","assetGroup":"azure","ruleUUID":"azure_virtualmachine_just_in_time_network_access","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_virtualmachine_just_in_time_network_access'),'ENABLED','ASGC','Apply a Just-In-Time network access control',{d '2019-10-25'},{d '2019-10-25'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Remediate_vulnerabilities_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_remediate_vulnerabilities','Azure_Remediate_vulnerabilities_version-1','Remediate_vulnerabilities','virtualmachine','azure','Remediate_vulnerabilities','{"params":[{"encrypt":false,"value":"check-for-azure-security-rule","key":"ruleKey"},{"key":"policyName","value":"Vulnerabilities@should@be@remediated@by@a@Vulnerability@Assessment@solution","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Remediate_vulnerabilities_version-1_SecurityCenter_virtualmachine","autofix":false,"alexaKeyword":"remediate vulnerabilities","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"Azure_Remediate_vulnerabilities_version-1","assetGroup":"azure","ruleUUID":"azure_virtualmachine_remediate_vulnerabilities","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_virtualmachine_remediate_vulnerabilities'),'ENABLED','ASGC','Remediate vulnerabilities - by a Vulnerability Assessment solution',{d '2019-10-25'},{d '2019-10-25'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Resolve_monitoring_agent_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_resolve_monitoring_agent','Azure_Resolve_monitoring_agent_version-1','resolve_monitoring_agent','virtualmachine','azure','resolve_monitoring_agent','{"params":[{"encrypt":false,"value":"check-for-azure-security-rule","key":"ruleKey"},{"key":"policyName","value":"Monitoring@agent@health@issues@should@be@resolved@on@your@machines","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Resolve_monitoring_agent_version-1_SecurityCenter_virtualmachine","autofix":false,"alexaKeyword":"resolve monitoring agent findings","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"Azure_Resolve_monitoring_agent_version-1","assetGroup":"azure","ruleUUID":"azure_virtualmachine_resolve_monitoring_agent","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_virtualmachine_resolve_monitoring_agent'),'ENABLED','ASGC','Resolve App Service Health check issues',{d '2019-10-25'},{d '2019-10-25'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_harden-NSGs_internet_version-1_SecurityCenter_virtualmachine','azure_virtualmachine_harden-nsgs_internet','Azure_harden-NSGs_internet_version-1','harden-NSGs_internet','virtualmachine','azure','harden-NSGs_internet','{"params":[{"encrypt":false,"value":"check-for-azure-security-rule","key":"ruleKey"},{"key":"policyName","value":"Harden@Network@Security@Group@rules@of@internet@facing@virtual@machines","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_harden-NSGs_internet_version-1_SecurityCenter_virtualmachine","autofix":false,"alexaKeyword":"harden nsgs for internet facing vms","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"Azure_harden-NSGs_internet_version-1","assetGroup":"azure","ruleUUID":"azure_virtualmachine_harden-nsgs_internet","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_virtualmachine_harden-nsgs_internet'),'ENABLED','ASGC','Harden Network Security Group rules of internet facing Virtual Machines',{d '2019-10-25'},{d '2019-10-25'},'high','security');


INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Access_Through_Internet_version-1_AIE_virtualmachine','azure_aie_virtualmachine','Access_Through_Internet_version-1','AIE','virtualmachine','azure','AIE','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"9daedab3-fb2d-461e-b861-71790eead4f6\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Access_Through_Internet_version-1_AIE_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"AIE\",\"ruleRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"policyId\":\"Access_Through_Internet_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_aie_virtualmachine\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_aie_virtualmachine'),'ENABLED','','Access through Internet facing endpoint should be restricted.','2019-09-26','2019-11-23','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Adaptive_App_Control_version-1_AAC_virtualmachine','azure_aac_virtualmachine','Adaptive_App_Control_version-1','AAC','virtualmachine','azure','AdaptiveAppControl','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"47a6b606-51aa-4496-8bb7-64b11cf66adc\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Adaptive_App_Control_version-1_AAC_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"AdaptiveAppControl\",\"ruleRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"policyId\":\"Adaptive_App_Control_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_aac_virtualmachine\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_aac_virtualmachine'),'ENABLED','','Enable Adaptive Application Controls on Virtual Machines','2019-08-27','2019-11-06','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Auditing_Advanced_Data_Security_version-1_SADS_sqlserver','azure_sads_sqlserver','Auditing_Advanced_Data_Security_version-1','SADS','sqlserver','azure','SADS','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Auditing_Advanced_Data_Security_version-1_SADS_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"SADS\",\"ruleRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"policyId\":\"Auditing_Advanced_Data_Security_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_sads_sqlserver\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_sads_sqlserver'),'ENABLED','','Enable Auditing for Advanced Data Security SQL Server ','2019-09-26','2019-11-06','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AzureAuditNetworkAccessToStorageAccounts_version-1_ConfigureNetworkRulesOnStorageAccount_storageaccount','azure_ConfigureNetworkRules_storageaccount','AzureAuditNetworkAccessToStorageAccounts_version-1','ConfigureNetworkRulesOnStorageAccount','storageaccount','azure','ConfigureNetworkRulesOnStorageAccount','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"34c877ad-507e-4c82-993e-3452a6e0ad3c\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"AzureAuditNetworkAccessToStorageAccounts_version-1_ConfigureNetworkRulesOnStorageAccount_storageaccount\",\"autofix\":false,\"alexaKeyword\":\"ConfigureNetworkRulesOnStorageAccount\",\"ruleRestUrl\":\"\",\"targetType\":\"storageaccount\",\"pac_ds\":\"azure\",\"policyId\":\"AzureAuditNetworkAccessToStorageAccounts_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_ConfigureNetworkRules_storageaccount\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_ConfigureNetworkRules_storageaccount'),'ENABLED','','Audit unrestricted network access to storage accounts.','2019-11-08','2019-11-23','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AzureAuditStorageVnetIntegration_version-1_AuditStorageVnetIntegration_storageaccount','azure_AuditStorageVnetInt_storageaccount','AzureAuditStorageVnetIntegration_version-1','AuditStorageVnetIntegration','storageaccount','azure','AuditStorageVnetIntegration','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"deb3d6f0-8113-4ed4-8492-d64f90919223\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"AzureAuditStorageVnetIntegration_version-1_AuditStorageVnetIntegration_storageaccount\",\"autofix\":false,\"alexaKeyword\":\"AuditStorageVnetIntegration\",\"ruleRestUrl\":\"\",\"targetType\":\"storageaccount\",\"pac_ds\":\"azure\",\"policyId\":\"AzureAuditStorageVnetIntegration_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_AuditStorageVnetInt_storageaccount\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_AuditStorageVnetInt_storageaccount'),'ENABLED','','Audit Storage VNet Integration.','2019-11-08','2019-11-23','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AzureAuditTransferToStorageAccounts_version-1_EnableSecureTransferToStorageAccounts_storageaccount','azure_EnableSecureTransfer_storageaccount','AzureAuditTransferToStorageAccounts_version-1','EnableSecureTransferToStorageAccounts','storageaccount','azure','EnableSecureTransferToStorageAccounts','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"404c3081-a854-4457-ae30-26a93ef643f9\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"AzureAuditTransferToStorageAccounts_version-1_EnableSecureTransferToStorageAccounts_storageaccount\",\"autofix\":false,\"alexaKeyword\":\"EnableSecureTransferToStorageAccounts\",\"ruleRestUrl\":\"\",\"targetType\":\"storageaccount\",\"pac_ds\":\"azure\",\"policyId\":\"AzureAuditTransferToStorageAccounts_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_EnableSecureTransfer_storageaccount\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_EnableSecureTransfer_storageaccount'),'ENABLED','','Enable Secure Transfer to Storage Accounts','2019-11-08','2019-11-23','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AzureBatchAccountMetricAlertRules_version-1_ConfigureMetricAlertRules_batchaccounts','azure_ConfigureMetric_batchaccounts','AzureBatchAccountMetricAlertRules_version-1','ConfigureMetricAlertRules','batchaccounts','azure','ConfigureMetricAlertRules','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"26ee67a2-f81a-4ba8-b9ce-8550bd5ee1a7\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"AzureBatchAccountMetricAlertRules_version-1_ConfigureMetricAlertRules_batchaccounts\",\"autofix\":false,\"alexaKeyword\":\"ConfigureMetricAlertRules\",\"ruleRestUrl\":\"\",\"targetType\":\"batchaccounts\",\"pac_ds\":\"azure\",\"policyId\":\"AzureBatchAccountMetricAlertRules_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_ConfigureMetric_batchaccounts\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_ConfigureMetric_batchaccounts'),'ENABLED','','Configure Metric Alert Rules on Batch Accounts','2019-11-08','2019-11-23','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AzureBatchAccountsDiagnosticLogs_version-1_EnableDiagnosticLogsInBatchAccount_batchaccounts','azure_EnableDiagnosticLogs_batchaccounts','AzureBatchAccountsDiagnosticLogs_version-1','EnableDiagnosticLogsInBatchAccount','batchaccounts','azure','EnableDiagnosticLogsInBatchAccount','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"428256e6-1fac-4f48-a757-df34c2b3336d\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"AzureBatchAccountsDiagnosticLogs_version-1_EnableDiagnosticLogsInBatchAccount_batchaccounts\",\"autofix\":false,\"alexaKeyword\":\"EnableDiagnosticLogsInBatchAccount\",\"ruleRestUrl\":\"\",\"targetType\":\"batchaccounts\",\"pac_ds\":\"azure\",\"policyId\":\"AzureBatchAccountsDiagnosticLogs_version-1\",\"assetGroup\":null,\"ruleUUID\":\"azure_EnableDiagnosticLogs_batchaccounts\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_EnableDiagnosticLogs_batchaccounts'),'ENABLED','','Enable Diagnostic Logs in Batch Accounts ','2019-11-08','2019-11-23','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AzureNamespacesDiagnosticLogs_version-1_EnableDiagnosticLogsInServiceBus_namespaces','azure_EnableDiagnosticLogs_namespaces','AzureNamespacesDiagnosticLogs_version-1','EnableDiagnosticLogsInServiceBus','namespaces','azure','EnableDiagnosticLogsInServiceBus','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"f8d36e2f-389b-4ee4-898d-21aeb69a0f45\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"AzureNamespacesDiagnosticLogs_version-1_EnableDiagnosticLogsInServiceBus_namespaces\",\"autofix\":false,\"alexaKeyword\":\"EnableDiagnosticLogsInServiceBus\",\"ruleRestUrl\":\"\",\"targetType\":\"namespaces\",\"pac_ds\":\"azure\",\"policyId\":\"AzureNamespacesDiagnosticLogs_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_EnableDiagnosticLogs_namespaces\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_EnableDiagnosticLogs_namespaces'),'ENABLED','','Enable Diagnostic Logs in Service Bus','2019-11-08','2019-11-23','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AzureSQLAuditLogging_version-1_ConfigureActionGroupsInSQLAuditSettings_sqlserver','azure_ConfigureActionGroups_sqlserver','AzureSQLAuditLogging_version-1','ConfigureActionGroupsInSQLAuditSettings','sqlserver','azure','ConfigureActionGroupsInSQLAuditSettings','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"7ff426e2-515f-405a-91c8-4f2333442eb5\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"governance\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"AzureSQLAuditLogging_version-1_ConfigureActionGroupsInSQLAuditSettings_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"ConfigureActionGroupsInSQLAuditSettings\",\"ruleRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"policyId\":\"AzureSQLAuditLogging_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_ConfigureActionGroups_sqlserver\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_ConfigureActionGroups_sqlserver'),'ENABLED','','Configure SQL Audit Action Groups','2019-11-08','2019-11-23','high','governance');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AzureSQLServerAuthenticationSettings_version-1_EnableAzureADAuthentication_sqlserver','azure_EnableAzureADAuth_sqlserver','AzureSQLServerAuthenticationSettings_version-1','EnableAzureADAuthentication','sqlserver','azure','EnableAzureADAuthentication','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"1f314764-cb73-4fc9-b863-8eca98ac36e9\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"AzureSQLServerAuthenticationSettings_version-1_EnableAzureADAuthentication_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"EnableAzureADAuthentication\",\"ruleRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"policyId\":\"AzureSQLServerAuthenticationSettings_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_EnableAzureADAuth_sqlserver\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_EnableAzureADAuth_sqlserver'),'ENABLED','','Provision Active Directory Administrator for SQL Servers','2019-11-08','2019-11-09','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_SQLServerDataSecuritySettings_version-1_ConfigureEmailInDataSecuritySettings_sqlserver','azure_ConfigureEmailInDataSecurity_sqlserver','Azure_SQLServerDataSecuritySettings_version-1','ConfigureEmailInDataSecuritySettings','sqlserver','azure','ConfigureEmailInDSS','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"9677b740-f641-4f3c-b9c5-466005c85278\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Azure_SQLServerDataSecuritySettings_version-1_ConfigureEmailInDataSecuritySettings_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"ConfigureEmailInDSS\",\"ruleRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"policyId\":\"Azure_SQLServerDataSecuritySettings_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_ConfigureEmailInDataSecurity_sqlserver\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_ConfigureEmailInDataSecurity_sqlserver'),'ENABLED','','Configure Email In Data Security Settings.','2019-11-14','2019-11-23','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_policies-Container_Security_Configurations_version-1_CSC_virtualmachine','azure_CSC_virtualmachine','Azure_policies-Container_Security_Configurations_version-1','CSC','virtualmachine','azure','Container security','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"e8cbc669-f12d-49eb-93e7-9273119e9933\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Azure_policies-Container_Security_Configurations_version-1_CSC_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"Container security\",\"ruleRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"policyId\":\"Azure_policies-Container_Security_Configurations_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_CSC_virtualmachine\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_CSC_virtualmachine'),'ENABLED','','Container Security Configuration.','2019-09-26','2019-11-06','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_policies-Disk_Encryption_version-1_DE_virtualmachine','azure_DiskEncryption_virtualmachine','Azure_policies-Disk_Encryption_version-1','DE','virtualmachine','azure','AzurepoliciesDiskEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"0961003e-5a0a-4549-abde-af6a37f2724d\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Azure_policies-Disk_Encryption_version-1_DE_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"AzurepoliciesDiskEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"policyId\":\"Azure_policies-Disk_Encryption_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_DiskEncryption_virtualmachine\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_DiskEncryption_virtualmachine'),'ENABLED','','VMs w/o enabled disk encryption will be monitored by Security Center as recommendations.','2019-08-27','2019-11-09','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_policies-JIT_Network_Access_version-1_JIT_virtualmachine','azure_JIT_virtualmachine','Azure_policies-JIT_Network_Access_version-1','JIT','virtualmachine','azure','AzurepoliciesJITNetworkAccess','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"b0f33259-77d7-4c9e-aac6-3aabcfae693c\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Azure_policies-JIT_Network_Access_version-1_JIT_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"AzurepoliciesJITNetworkAccess\",\"ruleRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"policyId\":\"Azure_policies-JIT_Network_Access_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_JIT_virtualmachine\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_JIT_virtualmachine'),'ENABLED','','Enable JIT Network access Control','2019-08-27','2019-11-06','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Data_Encryption_SQL_version-1_SDE_sqldatabase','azure_SDE_sqldatabase','Data_Encryption_SQL_version-1','SDE','sqldatabase','azure','SDE','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"17k78e20-9358-41c9-923c-fb736d382a12\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Data_Encryption_SQL_version-1_SDE_sqldatabase\",\"autofix\":false,\"alexaKeyword\":\"SDE\",\"ruleRestUrl\":\"\",\"targetType\":\"sqldatabase\",\"pac_ds\":\"azure\",\"policyId\":\"Data_Encryption_SQL_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_SDE_sqldatabase\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_SDE_sqldatabase'),'ENABLED','','Transparent Data Encryption on SQL databases should be enabled.','2019-09-26','2019-11-07','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('IP_Forwarding_version-1_IPF_virtualmachine','azure_IPF_virtualmachine','IP_Forwarding_version-1','IPF','virtualmachine','azure','IPF','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"bd352bd5-2853-4985-bf0d-73806b4a5744\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"IP_Forwarding_version-1_IPF_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"IPF\",\"ruleRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"policyId\":\"IP_Forwarding_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_IPF_virtualmachine\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_IPF_virtualmachine'),'ENABLED','','Disable IP Forwarding','2019-09-26','2019-11-06','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Missing_Endpoint_Protection_version-1_MEP_virtualmachine','azure_MEP_virtualmachine','Missing_Endpoint_Protection_version-1','MEP','virtualmachine','azure','MEP','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"af6cd1bd-1635-48cb-bde7-5b15693900b9\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Missing_Endpoint_Protection_version-1_MEP_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"MEP\",\"ruleRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"policyId\":\"Missing_Endpoint_Protection_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_MEP_virtualmachine\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_MEP_virtualmachine'),'ENABLED','','Monitor missing Endpoint Protection in Security Center.','2019-09-26','2019-11-09','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Namespaces_DiagnosticLogs_version-1_NDL_namespaces','azure_NDL_namespaces','Namespaces_DiagnosticLogs_version-1','NDL','namespaces','azure','NDL','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"83a214f7-d01a-484b-91a9-ed54470c9a6a\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Namespaces_DiagnosticLogs_version-1_NDL_namespaces\",\"autofix\":false,\"alexaKeyword\":\"NDL\",\"ruleRestUrl\":\"\",\"targetType\":\"namespaces\",\"pac_ds\":\"azure\",\"policyId\":\"Namespaces_DiagnosticLogs_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_NDL_namespaces\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_NDL_namespaces'),'ENABLED','','Diagnostic logs in namespaces should be enabled.','2019-09-30','2019-11-23','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('SQL_Auditing_Retention_version-1_SAR_sqlserver','azure_SAR_sqlserver','SQL_Auditing_Retention_version-1','SAR','sqlserver','azure','SAR','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"89099bee-89e0-4b26-a5f4-165451757743\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"SQL_Auditing_Retention_version-1_SAR_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"SAR\",\"ruleRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"policyId\":\"SQL_Auditing_Retention_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_SAR_sqlserver\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_SAR_sqlserver'),'ENABLED','','SQL Auditing for configured number of retention days.','2019-09-30','2019-11-07','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('SQL_TDE_Encryption_version-1_TPS_sqlserver','azure_TPS_sqlserver','SQL_TDE_Encryption_version-1','TPS','sqlserver','azure','TPS','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"0d134df8-db83-46fb-ad72-fe0c9428c8dd\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"SQL_TDE_Encryption_version-1_TPS_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"TPS\",\"ruleRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"policyId\":\"SQL_TDE_Encryption_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_TPS_sqlserver\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_TPS_sqlserver'),'ENABLED','','SQL TDE protector encryption check.','2019-09-30','2019-11-07','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('SQL_Vulnerability_Assessment_version-1_SVA_sqlserver','azure_SVA_sqlserver','SQL_Vulnerability_Assessment_version-1','SVA','sqlserver','azure','SVA','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"ef2a8f2a-b3d9-49cd-a8a8-9a3aaaf647d9\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"SQL_Vulnerability_Assessment_version-1_SVA_sqlserver\",\"autofix\":false,\"alexaKeyword\":\"SVA\",\"ruleRestUrl\":\"\",\"targetType\":\"sqlserver\",\"pac_ds\":\"azure\",\"policyId\":\"SQL_Vulnerability_Assessment_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_SVA_sqlserver\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_SVA_sqlserver'),'ENABLED','','Vulnerability assessment should be enabled on SQL servers.','2019-09-30','2019-11-07','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Sensitive_Data_SQL_version-1_SDS_sqldatabase','azure_SDS_sqldatabase','Sensitive_Data_SQL_version-1','SDS','sqldatabase','azure','SDS','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"cc9835f2-9f6b-4cc8-ab4a-f8ef615eb349\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Sensitive_Data_SQL_version-1_SDS_sqldatabase\",\"autofix\":false,\"alexaKeyword\":\"SDS\",\"ruleRestUrl\":\"\",\"targetType\":\"sqldatabase\",\"pac_ds\":\"azure\",\"policyId\":\"Sensitive_Data_SQL_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_SDS_sqldatabase\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_SDS_sqldatabase'),'ENABLED','','Sensitive data in SQL databases should be classified.','2019-09-26','2019-11-07','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Subnet_NSG_rule_version-1_SNR_subnets','azure_SNR_subnets','Subnet_NSG_rule_version-1','SNR','subnets','azure','SNR','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"e71308d3-144b-4262-b144-efdc3cc90517\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Subnet_NSG_rule_version-1_SNR_subnets\",\"autofix\":false,\"alexaKeyword\":\"SNR\",\"ruleRestUrl\":\"\",\"targetType\":\"subnets\",\"pac_ds\":\"azure\",\"policyId\":\"Subnet_NSG_rule_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_SNR_subnets\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_SNR_subnets'),'ENABLED','','Assign Subnet to Network Security Group','2019-09-30','2019-11-07','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('System_Updates_version-1_SSU_virtualmachine','azure_SSU_virtualmachine','System_Updates_version-1','SSU','virtualmachine','azure','SSU','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"86b3d65f-7626-441e-b690-81a8b71cff60\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"System_Updates_version-1_SSU_virtualmachine\",\"autofix\":false,\"alexaKeyword\":\"SSU\",\"ruleRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"policyId\":\"System_Updates_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_SSU_virtualmachine\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_SSU_virtualmachine'),'ENABLED','','Install System Updates on Virtual Machines','2019-09-26','2019-11-07','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Vaults_DiagnosticLogs_version-1_VDR_vaults','azure_VDR_vaults','Vaults_DiagnosticLogs_version-1','VDR','vaults','azure','VDR','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"cf820ca0-f99e-4f3e-84fb-66e913812d21\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Vaults_DiagnosticLogs_version-1_VDR_vaults\",\"autofix\":false,\"alexaKeyword\":\"VDR\",\"ruleRestUrl\":\"\",\"targetType\":\"vaults\",\"pac_ds\":\"azure\",\"policyId\":\"Vaults_DiagnosticLogs_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_VDR_vaults\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_VDR_vaults'),'ENABLED','','Enable Diagnostic Logs in Key Vault','2019-09-30','2019-11-06','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Workflows_DiagnlsticLogs_version-1_WDR_workflows','azure_WDR_workflows','Workflows_DiagnlsticLogs_version-1','WDR','workflows','azure','WDR','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-azure-policy-evaluation-results\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"azurePolicyEvaluationResults\",\"value\":\"/azure_policyevaluationresults/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyDefinitionName\",\"value\":\"34f95f76-5386-4de7-b824-0d8478470c9d\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Workflows_DiagnlsticLogs_version-1_WDR_workflows\",\"autofix\":false,\"alexaKeyword\":\"WDR\",\"ruleRestUrl\":\"\",\"targetType\":\"workflows\",\"pac_ds\":\"azure\",\"policyId\":\"Workflows_DiagnlsticLogs_version-1\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_WDR_workflows\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_WDR_workflows'),'ENABLED','','Enable Diagnostic logs in Logic Apps','2019-09-30','2019-11-06','high','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('UnrestrictedSqlDatabaseAccessRule_version-1','azure_should_not_allow_unrestricted_sqlDatabase_access','SQL_UnrestrictedDatabaseAccess_version-1','SqlUnRestrictedDBAccessRule','sqldatabase','azure','SqlUnrestrictedDBAccessRule','{"params":[{"encrypt":false,"value":"check-for-unrestricted-sql-database-access","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"UnrestrictedSqlDatabaseAccessRule_version-1","autofix":false,"alexaKeyword":"SqlUnrestrictedDBAccessRule","ruleRestUrl":"","targetType":"sqldatabase","pac_ds":"azure","policyId":"Vnet_DDoSProtection_version-1","assetGroup":"azure","ruleUUID":"azure_should_not_allow_unrestricted_sqlDatabase_access","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_should_not_allow_unrestricted_sqlDatabase_access','ENABLED','ASGC','Deny Public Access to SQL Database',{d '2022-05-05'},{d '2022-05-05'},'critical','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_SSH_Authentication_Type_version-1_SSH_virtualmachine','azure_SSH_Authentication_virtualmachine','Azure_SSH_Authentication_Type_version-1','SSHAuthentication','virtualmachine','azure','SSHAuthentication','{"params":[{"encrypt":false,"value":"check-for-ssh-authentication-type","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_SSH_Authentication_Type_version-1_SSH_virtualmachine","autofix":false,"alexaKeyword":"SSHAuthentication","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"Azure_SSH_Authentication_Type_version-1","assetGroup":"azure","ruleUUID":"azure_SSH_Authentication_virtualmachine","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_SSH_Authentication_virtualmachine','ENABLED','ASGC','Disable Password Authentication',{d '2022-05-06'},{d '2022-05-06'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Unrestricted_MySQL_Database_Access','unrestricted_MySQL_Database_Access','Unrestricted_MySQL_Database_Access','MySqlDatabaseAccess','nsg','azure','EnableNetworkSecurityforSQLDatabase','{"params":[{"encrypt":false,"value":"check-for-azure-nsg-rule","key":"ruleKey"},{"key":"protocol","value":"tcp","isValueNew":true,"encrypt":false},{"key":"port","value":"3306","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Deny public access to MySQL Server port 3306","isValueNew":true,"encrypt":false},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Unrestricted_MySQL_Database_Access","autofix":false,"alexaKeyword":"EnableNetworkSecurityforSQLDatabase","ruleRestUrl":"","targetType":"nsg","pac_ds":"azure","policyId":"Unrestricted_MySQL_Database_Access","assetGroup":"azure","ruleUUID":"unrestricted_MySQL_Database_Access","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/unrestricted_MySQL_Database_Access'),'ENABLED','','Deny Public Access to MySQL Server Port 3306','2022-05-05','2022-05-05','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Unrestricted_Oracle_Database_Access','unrestricted_Oracle_Database_Access','Unrestricted_Oracle_Database_Access','OracleDatabaseAccess','nsg','azure','EnableNetworkSecurityforOracleDatabase','{"params":[{"encrypt":false,"value":"check-for-azure-nsg-rule","key":"ruleKey"},{"key":"protocol","value":"tcp","isValueNew":true,"encrypt":false},{"key":"port","value":"1521","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Access@should@be@restricted@for@permissive@Network@Security@Groups@with@Internet-facing@OracleDatabase","isValueNew":true,"encrypt":false},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Unrestricted_Oracle_Database_Access","autofix":false,"alexaKeyword":"EnableNetworkSecurityforOracleDatabase","ruleRestUrl":"","targetType":"nsg","pac_ds":"azure","policyId":"Unrestricted_Oracle_Database_Access","assetGroup":"azure","ruleUUID":"unrestricted_Oracle_Database_Access","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/unrestricted_Oracle_Database_Access'),'ENABLED','','Deny Public Access to Oracle Port 1521','2022-05-09','2022-05-09','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Enable_Network_Security_for_SQLSERVER','azure_enable_network_security_SQLSERVER','Azure_Enable_Network_Security_for_SQLSERVER','Enable_Network_Security_for_SQLSERVER','nsg','azure','SQLSERVER','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"ruleKey\"},{\"key\":\"protocol\",\"value\":\"tcp\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"1433\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny public access to SQL Server port 1433\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Azure_Enable_Network_Security_for_SQLSERVER\",\"autofix\":false,\"alexaKeyword\":\"Enable Network Security for SQLSERVER\",\"ruleRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"policyId\":\"Azure_Enable_Network_Security_for_SQLSERVER\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_enable_network_security_SQLSERVER\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_enable_network_security_SQLSERVER'),'ENABLED','','Deny Public Access to SQL Server Port 1433','2022-05-02','2022-05-02','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Enable_Network_Security_for_RPC','azure_enable_network_security_RPc','Azure_Enable_Network_Security_for_RPC','Enable_Network_Security_for_RPC','nsg','azure','RPC','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"ruleKey\"},{\"key\":\"protocol\",\"value\":\"tcp\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"135\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny public access to RPC port 135\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Azure_Enable_Network_Security_for_RPC\",\"autofix\":false,\"alexaKeyword\":\"Enable Network Security for RPC\",\"ruleRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"policyId\":\"Azure_Enable_Network_Security_for_RPC\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_enable_network_security_RPC\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_enable_network_security_RPC'),'ENABLED','','Deny Public Access to RPC Port 135','2022-05-02','2022-05-02','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Enable_Network_Security_for_SSH','azure_enable_network_security_SSH','Azure_Enable_Network_Security_for_SSH','Enable_Network_Security_for_SSH','nsg','azure','SSH','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"ruleKey\"},{\"key\":\"protocol\",\"value\":\"tcp\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"22\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny public access to SSH port 22\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Azure_Enable_Network_Security_for_SSH\",\"autofix\":false,\"alexaKeyword\":\"Enable Network Security for SSH\",\"ruleRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"policyId\":\"Azure_Enable_Network_Security_for_SSH\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_enable_network_security_SSH\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_enable_network_security_SSH'),'ENABLED','','Deny Public Access to SSH Port 22','2022-05-02','2022-05-02','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Enable_Email_Alerts_for_SQL_Threat_Detection_Service_version-1_sqldatabase','azure_sqldatabase_enable_email_alerts','Azure_Enable_Email_Alerts_for_SQL_Threat_Detection_Service_version-1','EnableEmailAlerts','sqldatabase','azure','EnableEmailAlerts','{"params":[{"encrypt":false,"value":"check-email-alerts-enabled-for-sql-threat-detection","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Enable_Email_Alerts_for_SQL_Threat_Detection_Service_version-1_sqldatabase","autofix":false,"alexaKeyword":"EnableEmailAlerts","ruleRestUrl":"","targetType":"sqldatabase","pac_ds":"azure","policyId":"Azure_Enable_Email_Alerts_for_SQL_Threat_Detection_Service_version-1","assetGroup":"azure","ruleUUID":"azure_sqldatabase_enable_email_alerts","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/check-email-alerts-enabled-for-sql-threat-detection','ENABLED','ASGC','Enable Alert for Azure SQL Advanced Threat Detection',{d '2022-05-10'},{d '2022-05-10'},'high','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Enable_Network_Security_for_FTP','azure_enable_network_security_FTP','Azure_Enable_Network_Security_for_FTP','Enable_Network_Security_for_FTP','nsg','azure','Enable_Network_Security_for_FTP','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"ruleKey\"},{\"key\":\"protocol\",\"value\":\"tcp\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"20,21\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny unresticted access to FTP port NNN\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Azure_Enable_Network_Security_for_FTP\",\"autofix\":false,\"alexaKeyword\":\"Enable Network Security for FTP\",\"ruleRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"policyId\":\"Azure_Enable_Network_Security_for_FTP\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_enable_network_security_FTP\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_enable_network_security_FTP'),'ENABLED','','Deny Public Access to FTP Ports 20 and 21','2022-05-02','2022-05-02','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Enable_Network_Security_for_UDP','azure_enable_network_security_UDP','Azure_Enable_Network_Security_for_UDP','Enable_Network_Security_for_UDP','nsg','azure','Enable_Network_Security_for_UDP','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"ruleKey\"},{\"key\":\"protocol\",\"value\":\"UDP\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"*\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny public UDP access\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Azure_Enable_Network_Security_for_UDP\",\"autofix\":false,\"alexaKeyword\":\"Enable Network Security for UDP\",\"ruleRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"policyId\":\"Azure_Enable_Network_Security_for_UDP\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_enable_network_security_UDP\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_enable_network_security_UDP'),'ENABLED','','Deny Public Access to UDP','2022-05-10','2022-05-10','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Attached-EBS-volumes-are-encrypted_version-1_Attached_EBS_volumes_should_be_encrypted','AWS_Attached_EBS_volumes_should_be_encrypted','Attached_EBS_volumes_are_encrypted_version-1','Attached_EBS_volumes_should_be_encrypted','volume','aws','EBSVolumeEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-ebs-snapshot-should-be-encrypted\",\"encrypt\":false},{\"key\":\"esEbsWithInstanceUrl\",\"value\":\"/aws/volume_attachments/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Attached-EBS-volumes-are-encrypted_version-1_Attached_EBS_volumes_should_be_encrypted\",\"autofix\":false,\"alexaKeyword\":\"EBSVolumeEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"volume\",\"pac_ds\":\"aws\",\"policyId\":\"Attached_EBS_volumes_are_encrypted_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"AWS_Attached_EBS_volumes_should_be_encrypted\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/AWS_Attached_EBS_volumes_should_be_encrypted'),'ENABLED','','Encrypt EBS Volume','2022-05-11','2022-05-11','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AwsVpcExternalPeeringConnection_version-1_AwsVpcExternalPeeringConnection_peeringconnection','aws_vpc_should_not_be_associated_with_external_peering','AwsVpcExternalPeeringConnection_version-1','Disable_VPC_External_Peering_Connections','peeringconnection','aws','ExternalPeeringVPC','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-external-vpc-peering-connections\",\"key\":\"ruleKey\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"key\":\"accountEsURL\",\"value\":\"\/aws\/account\/_search\",\"isValueNew\":true,\"encrypt\":false}],\"environmentVariables\":[],\"ruleId\":\"AwsVpcExternalPeeringConnection_version-1_AwsVpcExternalPeeringConnection_peeringconnection\",\"autofix\":false,\"alexaKeyword\":\"ExternalPeeringVPC\",\"ruleRestUrl\":\"\",\"targetType\":\"peeringconnection\",\"pac_ds\":\"aws\",\"policyId\":\"AwsVpcExternalPeeringConnection_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_vpc_should_not_be_associated_with_external_peering\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_vpc_should_not_be_associated_with_external_peering'),'ENABLED','','VPC Peering Connections To Accounts Outside AWS Organization','2022-05-18','2022-05-18','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_Attached_EBS_volumes_are_custom_kms_key_encrypted_version-1_Attached_EBS_volumes_should_be_custom_kms_key_encrypted','aws_attached_ebs_volumes_should_be_custom_kms_key_encrypted','Aws_Attached_EBS_volumes_are_custom_kms_key_encrypted_version-1','aws_ebs_should_be_kms_custom_encrypted','volume','aws','EBSVolumeCustomKmsKeyEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-ebs-volume-should-be-encrypted-with-kms-keys\",\"encrypt\":false},{\"key\":\"esEbsWithInstanceUrl\",\"value\":\"\/aws\/volume_attachments\/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esKmsUrl\",\"value\":\"\/aws\/kms\/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_Attached_EBS_volumes_are_custom_kms_key_encrypted_version-1_Attached_EBS_volumes_should_be_custom_kms_key_encrypted\",\"autofix\":false,\"alexaKeyword\":\"EBSVolumeCustomKmsKeyEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"volume\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_Attached_EBS_volumes_are_custom_kms_key_encrypted_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_attached_ebs_volumes_should_be_custom_kms_key_encrypted\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_attached_ebs_volumes_should_be_custom_kms_key_encrypted'),'ENABLED','','Use CMK to Encrypt EBS Volume','2022-06-01','2022-06-01','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_IAM_Role_Full_Admin_Privilege_version-1_Admin_Previlege_iamrole','aws_iam_role_with_full_admin_previlege','AWS_IAM_Role_Full_Admin_Privilege_version-1','IAM roles should not have customer managed policies with full administrative privileges','iamrole','aws','IAMRoleWithFullAdminAccess','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"iam-role-with-admin-privilege-policy\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role\/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"\/aws\/iampolicies\/_search\",\"key\":\"esIamPoliciesUrl\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_IAM_Role_Full_Admin_Privilege_version-1_Admin_Previlege_iamrole\",\"autofix\":false,\"alexaKeyword\":\"IAMRoleWithFullAdminAccess\",\"ruleRestUrl\":\"\",\"targetType\":\"iamrole\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_IAM_Role_Full_Admin_Privilege_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_iam_role_with_full_admin_previlege\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_iam_role_with_full_admin_previlege'),'ENABLED','','Detach any Customer Managed Policies with Full Access from the IAM Role','2022-08-25','2022-08-25','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_IAM_Customer_Mnged_Policy_With_Admin_Previlege_version-1_Admin_Previlege_iampolicies','aws_customer_managed_policy_with_admin_previlege','AWS_IAM_Customer_Mnged_Policy_With_Admin_Previlege_version-1','IAM customer managed policies should not have full administrative privileges','iampolicies','aws','CustomPolicyWithAdminAccess','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"iam-cutomer-managed-policy-with-admin-previlege\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role\/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_IAM_Customer_Mnged_Policy_With_Admin_Previlege_version-1_Admin_Previlege_iampolicies\",\"autofix\":false,\"alexaKeyword\":\"CustomPolicyWithAdminAccess\",\"ruleRestUrl\":\"\",\"targetType\":\"iampolicies\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_IAM_Customer_Mnged_Policy_With_Admin_Previlege_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_customer_managed_policy_with_admin_previlege\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_customer_managed_policy_with_admin_previlege'),'ENABLED','','Deny customer managed policy with full administrative privileges','2022-08-23','2022-08-23','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Expired_AWS_IAMCertificate_version-1_Expired_IAMCertificate_iamcertificate','aws_expired_iamcertificate','Expired_AWS_IAMCertificate_version-1','Expired IAM certificates should be removed','iamcertificate','aws','Expired_AWS_IAMCertificate','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-expired-iam-certificate\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Expired_AWS_IAMCertificate_version-1_Expired_IAMCertificate_iamcertificate\",\"autofix\":false,\"alexaKeyword\":\"Expired_AWS_IAMCertificate\",\"ruleRestUrl\":\"\",\"targetType\":\"iamcertificate\",\"pac_ds\":\"aws\",\"policyId\":\"Expired_AWS_IAMCertificate_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_expired_iamcertificate\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_expired_iamcertificate'),'ENABLED','','Remove expired IAM certificates','2022-08-19','2022-08-19','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('IamUserWithMultipleAccessKey_version-1_IAMUserShouldUseSingleKey_iamuser','aws_iam_user_should_have_single_access_key','IamUserWithMultipleAccessKey_version-1','AWS IAM user should have single access key','iamuser','aws','IamUserWithMultipleAccessKey','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-user-with-multiple-accesskeys\",\"encrypt\":false},{\"key\":\"esIamUserKeyUrl\",\"value\":\"/aws\/iamuser_keys\/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"IamUserWithMultipleAccessKey_version-1_IAMUserShouldUseSingleKey_iamuser\",\"autofix\":false,\"alexaKeyword\":\"IamUserWithMultipleAccessKey\",\"ruleRestUrl\":\"\",\"targetType\":\"iamuser\",\"pac_ds\":\"aws\",\"policyId\":\"IamUserWithMultipleAccessKey_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_iam_user_should_have_single_access_key\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_iam_user_should_have_single_access_key'),'ENABLED','','Use Single Access Key for IAM User','2022-08-16','2022-08-16','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_DocumentDB_should_be_encrypted_version-1_aws_enable_cluster_encryption_documentdb','aws_enable_document_db_cluster_encryption','Aws_DocumentDB_should_be_encrypted_version-1','aws_document_db_cluster_encryption_should_be_enabled','documentdb','aws','EnableAwsDocumentDbEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-document-db-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_DocumentDB_should_be_encrypted_version-1_aws_enable_cluster_encryption_documentdb\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsDocumentDbEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"documentdb\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_DocumentDB_should_be_encrypted_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_enable_document_db_cluster_encryption\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_enable_document_db_cluster_encryption'),'ENABLED','','Encrypt DocumentDB','2022-06-06','2022-06-06','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_DocumentDB_should_be_encrypted_with_kms_cmks_version-1_aws_enable_cluster_kms_cmks_encryption_documentdb','aws_enable_document_db_kms_cmks_cluster_encryption','Aws_DocumentDB_should_be_encrypted_with_kms_cmks_version-1','aws_document_db_cluster_kms_cmks_encryption_should_be_enabled','documentdb','aws','EnableAwsDocumentDbKmsCmksEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-document-db-encrypted-with-kms-cmks\",\"encrypt\":false},{\"key\":\"esKmsUrl\",\"value\":\"/aws/kms/_search\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_DocumentDB_should_be_encrypted_with_kms_cmks_version-1_aws_enable_cluster_kms_cmks_encryption_documentdb\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsDocumentDbKmsCmksEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"documentdb\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_DocumentDB_should_be_encrypted_with_kms_cmks_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_enable_document_db_kms_cmks_cluster_encryption\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_enable_document_db_kms_cmks_cluster_encryption'),'ENABLED','','Encrypt DocumentDB using Customer Managed Keys','2022-06-06','2022-06-06','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_dax_should_be_encrypted_version-1_aws_enable_encryption_dax','aws_enable_dax_encryption','Aws_dax_should_be_encrypted_version-1','aws_dax_cluster_should_be_encrypted','daxcluster','aws','EnableAwsDAXClusterEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-dynamodb-accelerator-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_dax_should_be_encrypted_version-1_aws_enable_encryption_dax\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsDAXClusterEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"daxcluster\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_dax_should_be_encrypted_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_enable_dax_encryption\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_enable_dax_encryption'),'ENABLED','','Encrypt DynamoDB Accelerator(DAX) Cluster','2022-06-13','2022-06-13','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_athena_query_results_should_be_encrypted_version-1_aws_enable_query_results_encryption_awsathena','aws_enable_athena_query_results_encryption','Aws_athena_query_results_should_be_encrypted_version-1','aws_athena_query_results_should_be_encrypted','awsathena','aws','EnableAwsAthenaQueryResultsEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-athena-query-results-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_athena_query_results_should_be_encrypted_version-1_aws_enable_query_results_encryption_awsathena\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsAthenaQueryResultsEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"awsathena\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_athena_query_results_should_be_encrypted_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_enable_athena_query_results_encryption\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_enable_athena_query_results_encryption'),'ENABLED','','Encrypt Athena Query Results','2022-06-13','2022-06-13','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_Support_Access_Role_version-1_Support_Access_account','aws_account_without_aws_support_access_role','AWS_Support_Access_Role_version-1','Support role should be created for the AWS support incidents','account','aws','AWSAccountWithoutSupportRole','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"iam-role-for-aws-support-access\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role\/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"AWSSupportAccess\",\"key\":\"policyName\"},{\"encrypt\":false,\"value\":\"\/aws\/iamrole\/_search\",\"key\":\"esIamRoleUrl\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_Support_Access_Role_version-1_Support_Access_account\",\"autofix\":false,\"alexaKeyword\":\"AWSAccountWithoutSupportRole\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_Support_Access_Role_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_without_aws_support_access_role\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_without_aws_support_access_role'),'ENABLED','','Configure Dedicated IAM Role for AWS Support Access','2022-08-31','2022-08-31','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('RDSDBEnableAutoMinorVersionUpgrade_version-1_EnableAutoMinorVersionUpgrade_rdsdb','aws_rds_db_enable_auto_minor_version_upgrade','RDSDBEnableAutoMinorVersionUpgrade_version-1','RDS Auto Minor Version UpgradeRDS Auto Minor Version Upgrade should be enabled','rdsdb','aws','RDSDBEnableAutoMinorVersionUpgrade','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-rds-auto-minor-version-upgrade\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"RDSDBEnableAutoMinorVersionUpgrade_version-1_EnableAutoMinorVersionUpgrade_rdsdb\",\"autofix\":false,\"alexaKeyword\":\"RDSDBEnableAutoMinorVersionUpgrade\",\"ruleRestUrl\":\"\",\"targetType\":\"rdsdb\",\"pac_ds\":\"aws\",\"policyId\":\"RDSDBEnableAutoMinorVersionUpgrade_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_rds_db_enable_auto_minor_version_upgrade\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_rds_db_enable_auto_minor_version_upgrade'),'ENABLED','','Enable RDS Auto Minor Version Upgrade','2022-09-23','2022-09-23','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('CloudTrailLogFileValidation_version-1_EnableLogFileValidation_cloudtrail','aws_cloud_trail_enable_log_file_validation','CloudTrailLogFileValidation_version-1','Validation should be enabled for CloudTrail log file','cloudtrail','aws','CloudTrailLogFileValidation','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudtrail-log-file-validation-enabled\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"CloudTrailLogFileValidation_version-1_EnableLogFileValidation_cloudtrail\",\"autofix\":false,\"alexaKeyword\":\"CloudTrailLogFileValidation\",\"ruleRestUrl\":\"\",\"targetType\":\"cloudtrail\",\"pac_ds\":\"aws\",\"policyId\":\"CloudTrailLogFileValidation_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_cloud_trail_enable_log_file_validation\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_cloud_trail_enable_log_file_validation'),'ENABLED','','Enable Validation for CloudTrail Log File','2022-05-12','2022-05-12','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('CloudTrailLogsEncryptedByKMS_version-1_EnableKMSEncryption_cloudtrail','aws_cloud_trail_encrypt_logs_using_kms','CloudTrailLogsEncryptedByKMS_version-1','CloudTrail logs should be configured to leverage SSE and KMS CMKs','cloudtrail','aws','CloudTrailLogsEncryptedByKMS','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudtrail-logs-encrypted-by-kms\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"CloudTrailLogsEncryptedByKMS_version-1_EnableKMSEncryption_cloudtrail\",\"autofix\":false,\"alexaKeyword\":\"CloudTrailLogsEncryptedByKMS\",\"ruleRestUrl\":\"\",\"targetType\":\"cloudtrail\",\"pac_ds\":\"aws\",\"policyId\":\"CloudTrailLogsEncryptedByKMS_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_cloud_trail_encrypt_logs_using_kms\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_cloud_trail_encrypt_logs_using_kms'),'ENABLED','','Encrypt CloudTrail to use KMS CMKs','2022-05-12','2022-05-12','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_unauthorized_api','AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1','Unauthorized API calls should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"UNAUTH_API_CALLS_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForUnAuthorizedAPI_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_unauthorized_api\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_unauthorized_api'),'ENABLED','','Configure Log Metric Filter and Alarm for Unauthorized API Calls','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_mc_signin','AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1','Management Console sign-in without MFA should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"MC_SIGNIN_WO_MFA_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForManagementConsoleSignin_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_mc_signin\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_mc_signin'),'ENABLED','','Configure log metric filter and alarm for Management Console sign-in without MFA','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_root_account_usage','AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1','Usage of root account should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"USAGE_OF_ROOT_ACC_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForRootAccountUsage_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_root_account_usage\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_root_account_usage'),'ENABLED','','Configure Log Metric Filter and Alarm for Root Account Usage','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_iam_policy_changes','AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1','IAM policy changes should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"IAM_POL_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForIAMPolicyChanges_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_iam_policy_changes\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_iam_policy_changes'),'ENABLED','','Configure Log Metric Filter and Alarm for IAM Policy Changes','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_ct_conf_changes','AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1','Log metric filter and alarm should be enabled for CloudTrail configuration changes','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"CT_CFGN_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForCloudTrailConfigurationChanges_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_ct_conf_changes\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_ct_conf_changes'),'ENABLED','','Configure Log Metric Filter and Alarm for CloudTrail Configuration Changes','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_mc_auth_failures','AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1','AWS Management Console authentication failures should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"MC_AUTH_FAIL_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForManagementConsoleAuthenticationFailures_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_mc_auth_failures\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_mc_auth_failures'),'ENABLED','','Configure Log Metric Filter and Alarm for AWS Management Console Authentication Failures','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_customer_cmk','AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1','Disabling or scheduled deletion of customer created CMKs should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"CUST_CMK_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForCustomerCMK_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_customer_cmk\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_customer_cmk'),'ENABLED','','Configure log metric filter and alarm for disabling or scheduled deletion of customer created CMKs','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_s3_policy_changes','AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1','S3 bucket policy changes should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"S3_BUCK_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForS3BucketPolicy_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_s3_policy_changes\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_s3_policy_changes'),'ENABLED','','Configure log metric filter and alarm for S3 bucket policy changes','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_aws_conf','AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1','AWS Config configuration changes should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"AWS_CONF_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForAWSConfiguration_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_aws_conf\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_aws_conf'),'ENABLED','','Configure log metric filter and alarm AWS Config configuration changes','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_sg_changes','AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1','Security group changes should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"SEC_GRP_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForSecurityGroupChanges_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_sg_changes\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_sg_changes'),'ENABLED','','Configure Log Metric Filter and Alarm for Security Group Changes','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_nacl_changes','AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1','Changes to NACL should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"NACL_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForNACLChanges_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_nacl_changes\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_nacl_changes'),'ENABLED','','Configure Log Metric Filter and Alarm for NACL Changes','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_network_gateway','AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1','Changes to network gateways  should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"NTWK_GTWY_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForNetworkGatewayChanges_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_network_gateway\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_network_gateway'),'ENABLED','','Configure log metric filter and alarm for changes to network gateways','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_root_table','AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1','Route table changes should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"ROUTE_TBL_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForRouteTableChanges_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_root_table\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_root_table'),'ENABLED','','Configure Log Metric Filter and Alarm for Route Table Changes','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_vpc_changes','AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1','VPC changes should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"VPC_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForVPCChanges_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_vpc_changes\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_vpc_changes'),'ENABLED','','Configure Log Metric Filter and Alarm for VPC Changes','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account','aws_account_cloudwatch_alarm_for_org_changes','AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1','AWS Organizations changes should have log metric filter and alarm','account','aws','AccountEnsureCloudwatchAlarm','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudwatch-alarm-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"CloudTrailEventCount\",\"key\":\"metricname\"},{\"encrypt\":false,\"value\":\"CloudTrailMetrics\",\"key\":\"metricnamespace\"},{\"encrypt\":false,\"value\":\"AWS_ORG_CHANGES_FILTER\",\"key\":\"filtername\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1_EnableCloudwatchAlarm_account\",\"autofix\":false,\"alexaKeyword\":\"AccountEnsureCloudwatchAlarm\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AccountEnsureCloudwatchAlarmExistsForAWSOrganizationChanges_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_cloudwatch_alarm_for_org_changes\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_cloudwatch_alarm_for_org_changes'),'ENABLED','','Configure Log Metric Filter and Alarm for AWS Organizations Changes','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('EksSgInboundTrafficValidation_version-1_SgInboundTrafficValidation_eks','aws_eks_sg_inbound_traffic_validation','EksSgInboundTrafficValidation_version-1','All Inbound traffic should be disabled for EKS Cluster other than TCP port 443','eks','aws','EksSgInboundTraffic','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-eks-inbound-traffic\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"EksSgInboundTrafficValidation_version-1_SgInboundTrafficValidation_eks\",\"autofix\":false,\"alexaKeyword\":\"EksSgInboundTraffic\",\"ruleRestUrl\":\"\",\"targetType\":\"eks\",\"pac_ds\":\"aws\",\"policyId\":\"EksSgInboundTrafficValidation_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_eks_sg_inbound_traffic_validation\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_eks_sg_inbound_traffic_validation'),'ENABLED','','Disable inbound traffic to EKS Cluster other than TCP port 443','2022-12-05','2022-12-05','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('RemoveRootUserAccessKey_version-1_RemoveRootUserAccessKey_account','aws_remove_root_user_account_access_key','RemoveRootUserAccessKey_version-1','Remove access keys associated with the root user','account','aws','RemoveRootUserAccessKey','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"remove-root-user-account-access-key\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"RemoveRootUserAccessKey_version-1_RemoveRootUserAccessKey_account\",\"autofix\":false,\"alexaKeyword\":\"RemoveRootUserAccessKey\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"RemoveRootUserAccessKey_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_remove_root_user_account_access_key\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_remove_root_user_account_access_key'),'ENABLED','','Remove Root User Account Access Key','2022-05-12','2022-05-12','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('S3MFADeleteEnabled_version-1_MFADeleteEnabled_s3','s3_mfa_delete_enabled','S3MFADeleteEnabled_version-1','MFA delete should be enabled on S3 bucket','s3','aws','S3MFADeleteEnabled','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-s3-MFA-delete-enabled\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"low\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"S3MFADeleteEnabled_version-1_MFADeleteEnabled_s3\",\"autofix\":false,\"alexaKeyword\":\"S3MFADeleteEnabled\",\"ruleRestUrl\":\"\",\"targetType\":\"s3\",\"pac_ds\":\"aws\",\"policyId\":\"S3MFADeleteEnabled_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"s3_mfa_delete_enabled\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/s3_mfa_delete_enabled'),'ENABLED','','Enable MFA Delete for S3 Bucket','2022-05-12','2022-05-12','low','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_account_security_hub_exists_version-1_enable_security_hub_account','aws_account_security_hub','AWS_account_security_hub_exists_version-1','AWS Security hub should be enabled','account','aws','AccountSecurityHub','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-security-hub-exists\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"us-east-1\",\"key\":\"regions\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_account_security_hub_exists_version-1_enable_security_hub_account\",\"autofix\":false,\"alexaKeyword\":\"AccountSecurityHub\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_account_security_hub_exists_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_account_security_hub\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_account_security_hub'),'ENABLED','','Enable AWS Security hub','2022-05-12','2022-05-12','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('S3ObjectLevelWriteLogging_version-1_ObjectLevelWriteLogging_s3','aws_s3_object_level_write_logging','S3ObjectLevelWriteLogging_version-1','S3 object level write operations should be logged','s3','aws','S3ObjectLevelWriteLogging','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-s3-object-level-write-logging-rule\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"S3ObjectLevelWriteLogging_version-1_ObjectLevelWriteLogging_s3\",\"autofix\":false,\"alexaKeyword\":\"S3ObjectLevelWriteLogging\",\"ruleRestUrl\":\"\",\"targetType\":\"s3\",\"pac_ds\":\"aws\",\"policyId\":\"S3ObjectLevelWriteLogging_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_s3_object_level_write_logging\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_s3_object_level_write_logging'),'ENABLED','','Enable S3 bucket object level write operation logging','2022-11-02','2022-11-02','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('S3ObjectLevelReadLogging_version-1_ObjectLevelReadLogging_s3','aws_s3_object_level_read_logging','S3ObjectLevelReadLogging_version-1','S3 object level read operations should be logged','s3','aws','S3ObjectLevelReadLogging','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-s3-object-level-read-logging-rule\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"S3ObjectLevelReadLogging_version-1_ObjectLevelReadLogging_s3\",\"autofix\":false,\"alexaKeyword\":\"S3ObjectLevelReadLogging\",\"ruleRestUrl\":\"\",\"targetType\":\"s3\",\"pac_ds\":\"aws\",\"policyId\":\"S3ObjectLevelReadLogging_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_s3_object_level_read_logging\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_s3_object_level_read_logging'),'ENABLED','','Enable S3 bucket object level read operation logging','2022-11-02','2022-11-02','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_eks_cluster_encryption_enabled_version-1_enable_cluster_encryption_eks','aws_eks_cluster_encryption_enabled','AWS_eks_cluster_encryption_enabled_version-1','EKS Kubernetes secrets should be encrypted','eks','aws','EksClusterEncryptionEnabled','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-eks-cluster-encryption-enabled\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_eks_cluster_encryption_enabled_version-1_enable_cluster_encryption_eks\",\"autofix\":false,\"alexaKeyword\":\"EksClusterEncryptionEnabled\",\"ruleRestUrl\":\"\",\"targetType\":\"eks\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_eks_cluster_encryption_enabled_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_eks_cluster_encryption_enabled\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_eks_cluster_encryption_enabled'),'ENABLED','','Enable encryption for EKS Kubernetes Secrets using envelope encryption','2022-01-17','2022-01-17','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_eks_cluster_logs_enabled_version-1_enable_cluster_logs_eks','aws_eks_cluster_logs_enabled','AWS_eks_cluster_logs_enabled_version-1','Control plane logs should be enabled for EKS','eks','aws','EksClusterLogsEnabled','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-eks-cluster-control-plane-logs-enabled\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_eks_cluster_logs_enabled_version-1_enable_cluster_logs_eks\",\"autofix\":false,\"alexaKeyword\":\"EksClusterLogsEnabled\",\"ruleRestUrl\":\"\",\"targetType\":\"eks\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_eks_cluster_logs_enabled_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_eks_cluster_logs_enabled\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_eks_cluster_logs_enabled'),'ENABLED','','Enable control plane logs for EKS','2022-01-17','2022-01-17','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_eks_cluster_public_access_disabled_version-1_disable_cluster_public_access_eks','aws_eks_cluster_public_access_disabled','AWS_eks_cluster_public_access_disabled_version-1','Public access should be disabled for EKS Cluster endpoint','eks','aws','EksClusterPublicAccessDisabled','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-eks-cluster-endpoint-public-access-disabled\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_eks_cluster_public_access_disabled_version-1_disable_cluster_public_access_eks\",\"autofix\":false,\"alexaKeyword\":\"EksClusterPublicAccessDisabled\",\"ruleRestUrl\":\"\",\"targetType\":\"eks\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_eks_cluster_public_access_disabled_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_eks_cluster_public_access_disabled\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_eks_cluster_public_access_disabled'),'ENABLED','','Disable public access to EKS Cluster endpoint','2022-01-17','2022-01-17','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_eks_cluster_version_upgrade_version-1_update_cluster_version_eks','aws_eks_cluster_version_update','AWS_eks_cluster_version_upgrade_version-1','EKS cluster version should be updated to the latest version','eks','aws','EksClusterVersionUpdate','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-eks-cluster-version-update\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"1.23\",\"key\":\"latestversion\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_eks_cluster_version_upgrade_version-1_update_cluster_version_eks\",\"autofix\":false,\"alexaKeyword\":\"EksClusterVersionUpdate\",\"ruleRestUrl\":\"\",\"targetType\":\"eks\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_eks_cluster_version_upgrade_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_eks_cluster_version_update\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_eks_cluster_version_update'),'ENABLED','','Update EKS cluster version to the latest','2022-01-17','2022-01-17','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('S3BucketAllowHTTPRequest_version-1_S3BucketAllowHTTPRequest_s3','aws_s3_bucket_should_not_allow_http_requests','S3BucketAllowHTTPRequest_version-1','S3 bucket policy to deny HTTP requests','s3','aws','S3BucketAllowHTTPRequest','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-s3-bucket-policy-denies-http\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"S3BucketAllowHTTPRequest_version-1_S3BucketAllowHTTPRequest_s3\",\"autofix\":false,\"alexaKeyword\":\"S3BucketAllowHTTPRequest\",\"ruleRestUrl\":\"\",\"targetType\":\"s3\",\"pac_ds\":\"aws\",\"policyId\":\"S3BucketAllowHTTPRequest_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_s3_bucket_should_not_allow_http_requests\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_s3_bucket_should_not_allow_http_requests'),'ENABLED','','Deny HTTP Requests to S3 Bucket','2022-09-21','2022-09-21','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_IAM_User_Full_Admin_Privilege_version-1_Admin_Privilege_iamuser','iam-user-with-admin-privilege-policy','AWS_IAM_User_Full_Admin_Privilege_version-1','IAM users should not have customer managed policy with full administrative privileges','iamuser','aws','IAMUserWithFullAdminAccess','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"iam-user-with-admin-privilege-policy\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"\/aws\/iampolicies\/_search\",\"key\":\"esIamPoliciesUrl\"},{\"encrypt\":false,\"value\":\"\/aws\/iamgroup\/_search\",\"key\":\"esIamGroupUrl\"},{\"encrypt\":false,\"value\":\"role\/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_IAM_User_Full_Admin_Privilege_version-1_Admin_Privilege_iamuser\",\"autofix\":false,\"alexaKeyword\":\"IAMUserWithFullAdminAccess\",\"ruleRestUrl\":\"\",\"targetType\":\"iamuser\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_IAM_User_Full_Admin_Privilege_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"iam-user-with-admin-privilege-policy\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/iam-user-with-admin-privilege-policy'),'ENABLED','','Detach any Customer Managed Policy with Full Access from IAM User','2022-08-26','2022-08-26','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_comprehend_job_results_should_be_encrypted_version-1_aws_enable_job_results_encryption_awscomprehend','aws_enable_comprehend_job_results_encryption','Aws_comprehend_job_results_should_be_encrypted_version-1','aws_comprehend_job_results_should_be_encrypted','awscomprehend','aws','EnableAwsComprehendJobResultsEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-comprehend-job-results-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_comprehend_job_results_should_be_encrypted_version-1_aws_enable_job_results_encryption_awscomprehend\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsComprehendJobResultsEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"awscomprehend\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_comprehend_job_results_should_be_encrypted_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_enable_comprehend_job_results_encryption\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_enable_comprehend_job_results_encryption'),'ENABLED','','Encrypt Comprehend Analysis Results','2022-06-13','2022-06-13','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('S3BucketEncryption_version-1_S3BucketWithoutEncryption_s3','aws_s3_bucket_should_be_encrypted','S3BucketEncryption_version-1','All S3 buckets should employ encryption-at-rest','s3','aws','S3BucketWithoutEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-s3-bucket-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"S3BucketEncryption_version-1_S3BucketWithoutEncryption_s3\",\"autofix\":false,\"alexaKeyword\":\"S3BucketWithoutEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"s3\",\"pac_ds\":\"aws\",\"policyId\":\"S3BucketEncryption_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_s3_bucket_should_be_encrypted\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_s3_bucket_should_be_encrypted'),'ENABLED','','Encrypt S3 Buckets at Rest','2022-09-16','2022-09-16','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort3389_networkacl','aws_nacl_should_not_have_rule_with_public_access_on_port3389','NaclPublicAccessPort_version-1','Network ACL should not allow public access to administration server port 3389','networkacl','aws','NACLWithPublicAccessForPort3389','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-nacl-with-public-access-configured-ports\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"3389\",\"key\":\"portToCheck\"},{\"key\":\"esNaclEntryUrl\",\"value\":\"\/aws\/networkacl_entries\/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort3389_networkacl\",\"autofix\":false,\"alexaKeyword\":\"NACLWithPublicAccessForPort3389\",\"ruleRestUrl\":\"\",\"targetType\":\"networkacl\",\"pac_ds\":\"aws\",\"policyId\":\"NaclPublicAccessPort_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_nacl_should_not_have_rule_with_public_access_on_port3389\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_nacl_should_not_have_rule_with_public_access_on_port3389'),'ENABLED','','Restrict Inbound Traffic on Remote Server Administration Port 3389','2022-09-14','2022-09-14','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort22_networkacl','aws_nacl_should_not_have_rule_with_public_access_on_port22','NaclPublicAccessPort_version-1','Network ACL should not allow public access to administration server port 22','networkacl','aws','NACLWithPublicAccessForPort22','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-nacl-with-public-access-configured-ports\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"22\",\"key\":\"portToCheck\"},{\"key\":\"esNaclEntryUrl\",\"value\":\"\/aws\/networkacl_entries\/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"NaclPublicAccessPort_version-1_NACLWithPublicAccessForPort22_networkacl\",\"autofix\":false,\"alexaKeyword\":\"NACLWithPublicAccessForPort22\",\"ruleRestUrl\":\"\",\"targetType\":\"networkacl\",\"pac_ds\":\"aws\",\"policyId\":\"NaclPublicAccessPort_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_nacl_should_not_have_rule_with_public_access_on_port22\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_nacl_should_not_have_rule_with_public_access_on_port22'),'ENABLED','','Restrict Inbound Traffic on Remote Server Administration Port 22','2022-09-14','2022-09-14','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_user_permissions_without_group_version-1_user_policy_via_group_iamuser','aws_user_permission_without_group','AWS_user_permissions_without_group_version-1','Permissions should be assigned through groups','iamuser','aws','AWSUserPermissionWithoutGroup','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"iam-permissions-through-group\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role\/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_user_permissions_without_group_version-1_user_policy_via_group_iamuser\",\"autofix\":false,\"alexaKeyword\":\"AWSUserPermissionWithoutGroup\",\"ruleRestUrl\":\"\",\"targetType\":\"iamuser\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_user_permissions_without_group_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_user_permission_without_group\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_user_permission_without_group'),'ENABLED','','Assign User Permission Only through IAM Groups ','2022-09-06','2022-09-06','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_rootaccount_hardware_MFA_version-1_enable_harware_mfa_account','aws_root_account_without_hardware_mfa','AWS_rootaccount_hardware_MFA_version-1','Hardware MFA should be enabled for root account','account','aws','AWSRootAccountWithoutHardwareMFA','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-hardware-MFA-root-account\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"role\/paladincloud_ro\",\"key\":\"roleIdentifyingString\"},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_rootaccount_hardware_MFA_version-1_enable_harware_mfa_account\",\"autofix\":false,\"alexaKeyword\":\"AWSRootAccountWithoutHardwareMFA\",\"ruleRestUrl\":\"\",\"targetType\":\"account\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_rootaccount_hardware_MFA_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_root_account_without_hardware_mfa\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_root_account_without_hardware_mfa'),'ENABLED','','Enable Hardware MFA for Root Account','2022-09-01','2022-09-01','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_appflow_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_appflow','aws_appflow_should_be_encrypted_with_CMKs','Aws_appflow_encryption_using_KMS_CMKs_version-1','aws_appflow_should_be_encrypted_using_CMKs','appflow','aws','EnableAwsAppFlowEncryptionWithCMK','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-app-flow-encrypted-with-cmks\",\"encrypt\":false},{\"key\":\"esKmsUrl\",\"value\":\"\/aws\/kms\/_search\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_appflow_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_appflow\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsAppFlowEncryptionWithCMK\",\"ruleRestUrl\":\"\",\"targetType\":\"appflow\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_appflow_encryption_using_KMS_CMKs_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_appflow_should_be_encrypted_with_CMKs\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_appflow_should_be_encrypted_with_CMKs'),'ENABLED','','Encrypt Appflow with Customer Managed Key','2022-06-15','2022-06-15','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_ecs_task_should_use_log_driver_version-1_aws_enable_task_log_driver_ecs','aws_enable_ecs_task_log_driver','Aws_ecs_task_should_use_log_driver_version-1','aws_ecs_task_should_configure_log_driver','ecstaskdefinition','aws','ConfigureAwsEcsTaskLogDriver','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-ecs-task-log-driver-in-use\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_ecs_task_should_use_log_driver_version-1_aws_enable_task_log_driver_ecs\",\"autofix\":false,\"alexaKeyword\":\"ConfigureAwsEcsTaskLogDriver\",\"ruleRestUrl\":\"\",\"targetType\":\"ecstaskdefinition\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_ecs_task_should_use_log_driver_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_enable_ecs_task_log_driver\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_enable_ecs_task_log_driver'),'ENABLED','','Configure Task Log Driver','2022-06-15','2022-06-15','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_iam_access_analyser_findings_version-1_aws_active_findings_accessanalyzer','aws_active_accessanalyzer_findings_should_be_resolved','Aws_iam_access_analyser_findings_version-1','aws_analyzer_findings_should_be_resolved','accessanalyzer','aws','ActiveAwsIAMAccessAnalyzerFindings','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-access-analyzer-findings\",\"encrypt\":false},{\"key\":\"esFindingsUrl\",\"value\":\"\/aws\/accessanalyzer_findings\/_search\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_iam_access_analyser_findings_version-1_aws_active_findings_accessanalyzer\",\"autofix\":false,\"alexaKeyword\":\"ActiveAwsIAMAccessAnalyzerFindings\",\"ruleRestUrl\":\"\",\"targetType\":\"accessanalyzer\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_iam_access_analyser_findings_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_active_accessanalyzer_findings_should_be_resolved\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_active_accessanalyzer_findings_should_be_resolved'),'ENABLED','','Resolve IAM Access Analyzer Findings','2022-06-17','2022-06-17','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AwsVaultMissingAccessPolicy_version-1_AwsVaultMissingAccessPolicy_backupvault','aws_vault_missing_delete_protection','AwsVaultMissingAccessPolicy_version-1','AWS backup should have delete access policy','backupvault','aws','AwsVaultMissingPolicy','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-bakup-vault-delete-policy\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AwsVaultMissingAccessPolicy_version-1_AwsVaultMissingAccessPolicy_backupvault\",\"autofix\":false,\"alexaKeyword\":\"AwsVaultMissingPolicy\",\"ruleRestUrl\":\"\",\"targetType\":\"backupvault\",\"pac_ds\":\"aws\",\"policyId\":\"AwsVaultMissingAccessPolicy_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_vault_missing_delete_protection\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_vault_missing_delete_protection'),'ENABLED','','Configure AWS Backup Vault Access Policy','2022-08-10','2022-08-10','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AwsAsgMissingAMI_version-1_AwsAsgMissingAMI_asg','aws_asg_config_should_use_active_AMI','AwsAsgMissingAMI_version-1','AWS_Asg_launch_configuration_should_use_active_AMIs','asg','aws','AwsAsgWithMissingAMIs','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-asg-referencing-missing-ami\",\"encrypt\":false},{\"key\":\"esAmiUrl\",\"value\":\"\/aws\/ami\/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esAsgLcURL\",\"value\":\"\/aws\/asg_launchconfig\/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AwsAsgMissingAMI_version-1_AwsAsgMissingAMI_asg\",\"autofix\":false,\"alexaKeyword\":\"AwsAsgWithMissingAMIs\",\"ruleRestUrl\":\"\",\"targetType\":\"asg\",\"pac_ds\":\"aws\",\"policyId\":\"AwsAsgMissingAMI_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_asg_config_should_use_active_AMI\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_asg_config_should_use_active_AMI'),'ENABLED','','Fix Invalid AMI Reference in Launch Configuration','2022-07-14','2022-07-14','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AwsAsgInactiveSecurityGroup_version-1_AwsAsgInactiveSecurityGroup_asg','aws_asg_config_should_use_active_security_group','AwsAsgInactiveSecurityGroup_version-1','AWS_Asg_launch_configuration_should_use_active_security _groups','asg','aws','AwsAsgWithMissingSecurityGroup','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-asg-referencing-inactive-sg\",\"encrypt\":false},{\"key\":\"esSgURL\",\"value\":\"\/aws\/sg\/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esAsgLcURL\",\"value\":\"\/aws\/asg_launchconfig\/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AwsAsgInactiveSecurityGroup_version-1_AwsAsgInactiveSecurityGroup_asg\",\"autofix\":false,\"alexaKeyword\":\"AwsAsgWithMissingSecurityGroup\",\"ruleRestUrl\":\"\",\"targetType\":\"asg\",\"pac_ds\":\"aws\",\"policyId\":\"AwsAsgInactiveSecurityGroup_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_asg_config_should_use_active_security_group\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_asg_config_should_use_active_security_group'),'ENABLED','','Invalid Security Group reference in Launch Config','2022-07-13','2022-07-13','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_AMI_encryption_version-1_aws_enable_encryption_ami','aws_ami_should_be_encrypted','Aws_AMI_encryption_version-1','aws_ami_snapshots_should_be_encrypted','ami','aws','EnableAwsAMIEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-ami-blockdevice-is-encrypted\",\"encrypt\":false},{\"key\":\"esAmiBlockDeviceMappingUrl\",\"value\":\"\/aws\/ami_blockdevicemap\/_search\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_AMI_encryption_version-1_aws_enable_encryption_ami\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsAMIEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"ami\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_AMI_encryption_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_ami_should_be_encrypted\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_ami_should_be_encrypted'),'ENABLED','','Enable AWS AMI Encryption','2022-06-20','2022-06-20','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_EKS_secrets_should_be_encrypted_version-1_aws_enable_secret_encryption_eks','aws_enable_eks_secret_encryption','Aws_EKS_secrets_should_be_encrypted_version-1','aws_eks_secrets_should_be_encrypted_with_kms_cmks','eks','aws','EnableAwsEKSSecretsEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-eks-secrets-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_EKS_secrets_should_be_encrypted_version-1_aws_enable_secret_encryption_eks\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsEKSSecretsEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"eks\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_EKS_secrets_should_be_encrypted_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_enable_eks_secret_encryption\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_enable_eks_secret_encryption'),'ENABLED','','Enable Envelope Encryption for EKS Kubernetes Secrets','2022-06-09','2022-06-09','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_EFS_should_be_encrypted_version-1_aws_enable_encryption_efs','aws_enable_efs_encryption','Aws_EFS_should_be_encrypted_version-1','aws_efs_encryption_should_be_enabled','efs','aws','EnableAwsEFSEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-efs-encryption\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_EFS_should_be_encrypted_version-1_aws_enable_encryption_efs\",\"autofix\":false,\"alexaKeyword\":\"EnableAwsEFSEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"efs\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_EFS_should_be_encrypted_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_enable_efs_encryption\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_enable_efs_encryption'),'ENABLED','','Encrypt EFS','2022-06-08','2022-06-08','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_efs_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_efs','aws_efs_should_be_encrypted_with_cmks','Aws_efs_encryption_using_KMS_CMKs_version-1','aws_efs_should_be_encrypted_with_kms_cmks','efs','aws','AwsEfsEncryptionUsingKMSCMKs','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-efs-encrypted-with-kms-cmks\",\"encrypt\":false},{\"key\":\"esKmsUrl\",\"value\":\"\/aws\/kms\/_search\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_efs_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_efs\",\"autofix\":false,\"alexaKeyword\":\"AwsEfsEncryptionUsingKMSCMKs\",\"ruleRestUrl\":\"\",\"targetType\":\"efs\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_efs_encryption_using_KMS_CMKs_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_efs_should_be_encrypted_with_cmks\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_efs_should_be_encrypted_with_cmks'),'ENABLED','','Use Customer Managed Key to encrypt EFS','2022-06-08','2022-06-08','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_dms_should_not_be_publicly_accessible_version-1_aws_public_access_dms','aws_dms_should_not_be_publicly_accessible','Aws_dms_should_not_be_publicly_accessible_version-1','aws_dms_relication_instances_should_not_be_publicly_accessible','dms','aws','AwsDmsPublicAccess','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-dms-public-access\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_dms_should_not_be_publicly_accessible_version-1_aws_public_access_dms\",\"autofix\":false,\"alexaKeyword\":\"AwsDmsPublicAccess\",\"ruleRestUrl\":\"\",\"targetType\":\"dms\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_dms_should_not_be_publicly_accessible_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_dms_should_not_be_publicly_accessible\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_dms_should_not_be_publicly_accessible'),'ENABLED','','Deny public access to DMS','2022-06-08','2022-06-08','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_dms_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_dms','aws_dms_should_be_encrypted_with_CMKs','Aws_dms_encryption_using_KMS_CMKs_version-1','aws_dms_replication_instances_kms_cmks_encryption_should_be_enabled','dms','aws','AwsDmsEncryptionUsingKMSCMKs','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-dms-encrypted-with-kms-cmks\",\"encrypt\":false},{\"key\":\"esKmsUrl\",\"value\":\"\/aws\/kms\/_search\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_dms_encryption_using_KMS_CMKs_version-1_aws_KMS_CMKs_Encryption_dms\",\"autofix\":false,\"alexaKeyword\":\"AwsDmsEncryptionUsingKMSCMKs\",\"ruleRestUrl\":\"\",\"targetType\":\"dms\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_dms_encryption_using_KMS_CMKs_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_dms_should_be_encrypted_with_CMKs\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_dms_should_be_encrypted_with_CMKs'),'ENABLED','','Use CMK to Encrypt DMS Replication','2022-06-08','2022-06-08','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Aws_DynamoDB_should_use_aws_managed_cmk_for_sse_version-1_aws_managed_cmk_for_sse_dynamodb','aws_dynamodb_should_use_aws_managed_cmk_for_sse','Aws_DynamoDB_should_use_aws_managed_cmk_for_sse_version-1','DynamoDB_should_use_aws_managed_CMK_for_SSE','dynamodb','aws','DynamoDBAwsManagedCmkServerSideEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-dynamodb-uses-aws-managed-cmks-for-sse\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"Aws_DynamoDB_should_use_aws_managed_cmk_for_sse_version-1_aws_managed_cmk_for_sse_dynamodb\",\"autofix\":false,\"alexaKeyword\":\"DynamoDBAwsManagedCmkServerSideEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"dynamodb\",\"pac_ds\":\"aws\",\"policyId\":\"Aws_DynamoDB_should_use_aws_managed_cmk_for_sse_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_dynamodb_should_use_aws_managed_cmk_for_sse\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_dynamodb_should_use_aws_managed_cmk_for_sse'),'ENABLED','','Use CMK to Encrypt DynamoDB Tables','2022-06-02','2022-06-02','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_appelb','aws_elb_with_unrestricted_sg','AwsElbWithUnrestrictedSecurityGroup_version-1','aws_elb_should_have_secured_sg','appelb','aws','AwsElbWithUnrestrictedSG','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-elb-unrestrcted-security-group\",\"encrypt\":false},{\"key\":\"esElbWithSGUrl\",\"value\":\"\/aws\/appelb_secgroups\/_search\",\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"\/aws_sg\/sg_rules\/_search\",\"encrypt\":false},{\"key\":\"esElbV2ListenerURL\",\"value\":\"\/aws\/appelb_listeners\/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_appelb\",\"autofix\":false,\"alexaKeyword\":\"AwsElbWithUnrestrictedSG\",\"ruleRestUrl\":\"\",\"targetType\":\"appelb\",\"pac_ds\":\"aws\",\"policyId\":\"AwsElbWithUnrestrictedSecurityGroup_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_elb_with_unrestricted_sg\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_elb_with_unrestricted_sg'),'ENABLED','','ELBv2 ALB Security Group','2022-05-12','2022-05-12','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AwsElbV2ListenerSecurity_version-1_AwsListenerSecurity_appelb','aws_elb_v2_listener_security','AwsELBListenerSecurity_version-1','aws_elb_v2_should_use_secured_protocols','appelb','aws','AwsElbV2ListenerSecurity','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-secured-elb-v2-listener-protocols\",\"encrypt\":false},{\"key\":\"esElbV2ListenerURL\",\"value\":\"\/aws\/appelb_listeners\/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AwsElbV2ListenerSecurity_version-1_AwsListenerSecurity_appelb\",\"autofix\":false,\"alexaKeyword\":\"AwsElbV2ListenerSecurity\",\"ruleRestUrl\":\"\",\"targetType\":\"appelb\",\"pac_ds\":\"aws\",\"policyId\":\"AwsELBListenerSecurity_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_elb_v2_listener_security\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_elb_v2_listener_security'),'ENABLED','','Enable ELB HTTPS Listener','2022-05-24','2022-05-24','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AwsPublicAccessDefaultSecurityGroup_version-1_AwsPublicAccessDefaultSecurityGroup_sg','aws_default_security_group_should_not_be_publicly_accessible','AwsPublicAccessDefaultSecurityGroup_version-1','default_security_group_open_to_internet_access','sg','aws','AwsPublicAccessDefaultSecurityGroup','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-default-security-group-public-access\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"default\",\"key\":\"securityGroupName\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"key\":\"esSgURL\",\"value\":\"/aws/sg/_search\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"0.0.0.0/0\",\"key\":\"cidrIp\"},{\"key\":\"cidripv6\",\"value\":\"::/0\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"}],\"environmentVariables\":[],\"ruleId\":\"AwsPublicAccessDefaultSecurityGroup_version-1_AwsPublicAccessDefaultSecurityGroup_sg\",\"autofix\":false,\"alexaKeyword\":\"AwsPublicAccessDefaultSecurityGroup\",\"ruleRestUrl\":\"\",\"targetType\":\"sg\",\"pac_ds\":\"aws\",\"policyId\":\"AwsPublicAccessDefaultSecurityGroup_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_default_security_group_should_not_be_publicly_accessible\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_default_security_group_should_not_be_publicly_accessible'),'ENABLED','','Deny Public Access in Default Security Group','2022-05-20','2022-05-20','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_memcached_port_11211_open_to_internet_access','aws_sg_should_not_have_public_access_to_memcached_port_11211','SGWithAnywhereAccess_version-1','Sg_with_memcached_port_11211_open_to_internet_access','sg','aws','Sg_with_memcached_port_11211_open_to_internet_access','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-security-group-global-access\",\"encrypt\":false},{\"key\":\"cidrIp\",\"value\":\"0.0.0.0/0\",\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"encrypt\":false},{\"key\":\"portToCheck\",\"value\":\"11211\",\"encrypt\":false},{\"key\":\"cidripv6\",\"value\":\"::/0\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"SGWithAnywhereAccess_version-1_Sg_with_memcached_port_11211_open_to_internet_access\",\"autofix\":false,\"alexaKeyword\":\"Sg_with_memcached_port_11211_open_to_internet_access\",\"ruleRestUrl\":\"\",\"targetType\":\"sg\",\"pac_ds\":\"aws\",\"policyId\":\"SGWithAnywhereAccess_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_sg_should_not_have_public_access_to_memcached_port_11211\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_sg_should_not_have_public_access_to_memcached_port_11211'),'ENABLED','','Deny Security Group public access on Memcached port 11211','2022-05-19','2022-05-19','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_CloudTrail_Global_Services_version-1_Enable_CloudTrail_Global_Services_cloudtrail','aws_enable_cloudtrail_global_services','AWS_CloudTrail_Global_Services_version-1','Enable_CloudTrail_Global_Services','cloudtrail','aws','CloudtrailGlobalServices','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-cloudtrail-global-services-enabled\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_CloudTrail_Global_Services_version-1_Enable_CloudTrail_Global_Services_cloudtrail\",\"autofix\":false,\"alexaKeyword\":\"CloudtrailGlobalServices\",\"ruleRestUrl\":\"\",\"targetType\":\"cloudtrail\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_CloudTrail_Global_Services_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_enable_cloudtrail_global_services\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_enable_cloudtrail_global_services'),'ENABLED','ASGC','Enable CloudTrail Global Services','2022-05-11','2022-05-11','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Enable_Encryption_for_Boot_Disk_Volumes_version-1_virtualmachine','azure_enable_boot_disk_encryption_virtualmachine','Azure_Enable_Encryption_for_Boot_Disk_Volumes_version-1','EnableBootDiskVolumesEncryption','virtualmachine','azure','EnableBootDiskVolumesEncryption','{"params":[{"encrypt":false,"value":"check-encryption-enabled-for-boot-disk-volumes","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Enable_Encryption_for_Boot_Disk_Volumes_version-1_virtualmachine","autofix":false,"alexaKeyword":"EnableBootDiskVolumesEncryption","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"Azure_Enable_Encryption_for_Boot_Disk_Volumes_version-1","assetGroup":"azure","ruleUUID":"azure_enable_boot_disk_encryption_virtualmachine","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_enable_boot_disk_encryption_virtualmachine','ENABLED','ASGC','Encrypt Boot Disk',{d '2022-05-12'},{d '2022-05-12'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_ElastiCache_Clusters_Enabled_Encryption_version-1_Enable_CloudTrail_Global_Services_cloudtrail','aws_enable_elasticache_redis_clusters_encryption','AWS_ElastiCache_Clusters_Enabled_Encryption_version-1','Enable_ElastiCache_Redis_clusters_encryption','elasticache','aws','RedisClusterEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-elasticache-clusters-encrypted\",\"encrypt\":false},{\"key\":\"engineType\",\"value\":\"redis\",\"encrypt\":false},{\"key\":\"engineVersion\",\"value\":\"3.2.6\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_ElastiCache_Clusters_Enabled_Encryption_version-1_Enable_CloudTrail_Global_Services_cloudtrail\",\"autofix\":false,\"alexaKeyword\":\"RedisClusterEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"elasticache\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_ElastiCache_Clusters_Enabled_Encryption_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_enable_elasticache_redis_clusters_encryption\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_enable_elasticache_redis_clusters_encryption'),'ENABLED','','Encrypt ElastiCache for Redis Data','2022-05-12','2022-05-12','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWSRdsUnencryptedPublicInstances_version-1_AwsRdsUnencryptedPublicAccess_rdsdb','aws_rds_unencrypted_public_access','AWSRdsUnencryptedPublicInstances_version-1','AwsRdsUnencryptedPublicAccess','rdsdb','aws','AwsRdsUnencryptedPublicAccess','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-rds-db-unencrypted-public-access\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWSRdsUnencryptedPublicInstances_version-1_AwsRdsUnencryptedPublicAccess_rdsdb\",\"autofix\":false,\"alexaKeyword\":\"AwsRdsUnencryptedPublicAccess\",\"ruleRestUrl\":\"\",\"targetType\":\"rdsdb\",\"pac_ds\":\"aws\",\"policyId\":\"AWSRdsUnencryptedPublicInstances_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_rds_unencrypted_public_access\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_rds_unencrypted_public_access'),'ENABLED','ASGC','Deny Public Access to RDS Database','2022-05-12','2022-05-13','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Threat_Detection_on_SQL_Server','azure_enable_threat_detection_on_sql_server','Azure_Threat_Detection_on_SQL_Server','enable_threat_detection_on_sql_server','sqldatabase','azure','Enable Threat Detection on SQL Server','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-threat-detection-on-sql-server\",\"key\":\"ruleKey\"},{\"key\":\"policyName\",\"value\":\"azure enable threat detection on sql server\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Azure_Threat_Detection_on_SQL_Server\",\"autofix\":false,\"alexaKeyword\":\"Enable Threat Detection on SQL Server\",\"ruleRestUrl\":\"\",\"targetType\":\"sqldatabase\",\"pac_ds\":\"azure\",\"policyId\":\"Azure_Threat_Detection_on_SQL_Server\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_enable_azure_threat_detection_on_sql_server\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_enable_azure_threat_detection_on_sql_server'),'ENABLED','','Enable Azure Threat Detection on SQL server','2022-05-02','2022-05-02','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Check_for_Unrestricted_PostgreSQL_Database_Access','Check_for_Unrestricted_PostgreSQL_Database_Access','Check_for_Unrestricted_PostgreSQL_Database_Access','PostgreSQLDatabaseAccess','nsg','azure','EnableNetworkSecurityforPostgreSQLDatabase','{"params":[{"encrypt":false,"value":"check-for-azure-nsg-rule","key":"ruleKey"},{"key":"protocol","value":"tcp","isValueNew":true,"encrypt":false},{"key":"port","value":"5432","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Deny public access to PostgreSQL Server port 5432","isValueNew":true,"encrypt":false},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Check_for_Unrestricted_PostgreSQL_Database_Access","autofix":false,"alexaKeyword":"EnableNetworkSecurityforPostgreSQLDatabase","ruleRestUrl":"","targetType":"nsg","pac_ds":"azure","policyId":"Check_for_Unrestricted_PostgreSQL_Database_Access","assetGroup":"azure","ruleUUID":"Check_for_Unrestricted_PostgreSQL_Database_Access","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/Check_for_Unrestricted_PostgreSQL_Database_Access'),'ENABLED','','Deny Public Access to PostgreSQL Server Port 5432','2022-05-13','2022-05-13','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Encryption_for_Data_in_RedisCache','azure_encryption_for_data_in_RedisCache','Azure_Encryption_for_Data_in_RedisCache','Data in Transit should be encrypted in Redis Cache','rediscache','azure','Enable Encryption for Data in RedisCache','{"params":[{"encrypt":false,"value":"check-for-azure-rediscache-rule","key":"ruleKey"},{"key":"policyName","value":"Enable Encryption for Data in RedisCache","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Encryption_for_Data_in_RedisCache","autofix":false,"alexaKeyword":"Enable Encryption for Data in RedisCache","ruleRestUrl":"","targetType":"rediscache","pac_ds":"azure","policyId":"Azure_Encryption_for_Data_in_RedisCache","assetGroup":"azure","ruleUUID":"azure_encryption_for_data_in_RedisCache","ruleType":"ManageRule"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_encryption_for_data_in_RedisCache'),'ENABLED','aishwarya.kulkarni@paladincloud.io','Enable In Transit Encryption for Redis Cache Server','2022-05-12','2022-05-12','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_ACM_Certificate_Expired_version-1_AWS_ACM_Certificate_Expired','aws_check_for_expired_acm_certificate','AWS_ACM_Certificate_Expired_version-1','AWS_ACM_Certificate_Expired','acmcertificate','aws','ExpiredACMCertificate','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-expired-acm-certificate\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_ACM_Certificate_Expired_version-1_AWS_ACM_Certificate_Expired\",\"autofix\":false,\"alexaKeyword\":\"ExpiredACMCertificate\",\"ruleRestUrl\":\"\",\"targetType\":\"acmcertificate\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_ACM_Certificate_Expired_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_check_for_expired_acm_certificate\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_check_for_expired_acm_certificate'),'ENABLED','','Delete Expired ACM Certificates','2022-05-12','2022-05-12','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Virtual_Machine_Endpoint_Protection','azure_Virtual_Machine_Endpoint_Protection','Azure_Virtual_Machine_Endpoint_Protection','End point protection for VM','virtualmachine','azure','Enable End point protection for VM','{"params":[{"encrypt":false,"value":"check-endpoint-protection-installed-for-virtual-machines","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Virtual_Machine_Endpoint_Protection","autofix":false,"alexaKeyword":"End point protection for VM","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"Azure_Virtual_Machine_Endpoint_Protection","assetGroup":"azure","ruleUUID":"azure_Virtual_Machine_Endpoint_Protection","ruleType":"ManageRule"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Virtual_Machine_Endpoint_Protection'),'ENABLED','','End point protection for VM','2022-05-18','2022-05-18','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Enable_CMK_Encryption_For_Storage_Account_version-1_storageaccount','azure_enable_storage_account_customer_managed_key_encryption','Azure_Enable_CMK_Encryption_For_Storage_Account_version-1','EnableStorageAccountCMKEncryption','storageaccount','azure','EnableStorageAccountCMKEncryption','{"params":[{"encrypt":false,"value":"check-customer-managed-keys-encryption-enabled-for-storage-account","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Enable_CMK_Encryption_For_Storage_Account_version-1_storageaccount","autofix":false,"alexaKeyword":"EnableStorageAccountCMKEncryption","ruleRestUrl":"","targetType":"storageaccount","pac_ds":"azure","policyId":"Azure_Enable_CMK_Encryption_For_Storage_Account_version-1","assetGroup":"azure","ruleUUID":"azure_enable_storage_account_customer_managed_key_encryption","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_enable_storage_account_customer_managed_key_encryption','ENABLED','ASGC','Enable Azure Storage Account Customer-Managed Key','2022-05-18','2022-05-18','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_EMR_Clusters_Enabled_Encryption_version-1_Enable_Amazon_EMR_clusters_encryption','aws_enable_emr_clusters_encryption','AWS_EMR_Clusters_Enabled_Encryption_version-1','Enable_Amazon_EMR_clusters_encryption','emr','aws','AmazonEMREncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-emr-clusters-encrypted\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_EMR_Clusters_Enabled_Encryption_version-1_Enable_Amazon_EMR_clusters_encryption\",\"autofix\":false,\"alexaKeyword\":\"AmazonEMREncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"emr\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_EMR_Clusters_Enabled_Encryption_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_enable_emr_clusters_encryption\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_enable_emr_clusters_encryption'),'ENABLED','','Enable EMR Data Encryption','2022-05-12','2022-05-12','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','Security_Groups_RDP_port_should_not_be_publicly_accessible','Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible','nsg','azure','Security_for_RDP_port_3889_should_not_be_acessed_publicly','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"ruleKey\"},{\"key\":\"protocol\",\"value\":\"TCP\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"3389\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Security Groups with RDP port 3389 should not be publicly accessible\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible\",\"autofix\":false,\"alexaKeyword\":\"Security_for_RDP_port_3889_should_not_be_acessed_publicly\",\"ruleRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"policyId\":\"Azure_Security_Groups_with_RDP_port_3389_should_not_be_publicly_accessible\",\"assetGroup\":\"azure\",\"ruleUUID\":\"Security_Groups_RDP_port_should_not_be_publicly_accessible\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/Security_Groups_RDP_port_should_not_be_publicly_accessible'),'ENABLED','','Deny Public Access to RDP Port 3389','2022-05-02','2022-05-02','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_Remote_Debugging_For_WebApp','azure_Disable_Remote_Debugging_For_WebApp','Disable_Remote_Debugging_For_WebApp','Disable_Remote_Debugging_For_WebApp','webapp','azure','Disable_Remote_Debugging_For_WebApp','{"params":[{"encrypt":false,"value":"check-for-remote-debugging-app-service","key":"ruleKey"},{"key":"policyName","value":"Disable App Service Remote Debugging","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_Remote_Debugging_For_WebApp","autofix":false,"alexaKeyword":"Disable_Remote_Debugging_For_WebApp","ruleRestUrl":"","targetType":"webapp","pac_ds":"azure","policyId":"Disable_Remote_Debugging_For_WebApp","assetGroup":"azure","ruleUUID":"azure_Disable_Remote_Debugging_For_WebApp","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Disable_Remote_Debugging_For_WebApp'),'ENABLED','','Disable App Service Remote Debugging','2022-05-31','2022-05-31','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('SGWithAnywhereAccess_version-1_Sg_with_redis_port_6379_open_to_internet_access','aws_sg_should_not_have_public_access_to_redis_port_6379','SGWithAnywhereAccess_version-1','Sg_with_redis_port_6379_open_to_internet_access','sg','aws','Sg_with_redis_port_6379_open_to_internet_access','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-security-group-global-access\",\"encrypt\":false},{\"key\":\"cidrIp\",\"value\":\"0.0.0.0/0\",\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/aws_sg/sg_rules/_search\",\"encrypt\":false},{\"key\":\"portToCheck\",\"value\":\"6379\",\"encrypt\":false},{\"key\":\"cidripv6\",\"value\":\"::/0\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"SGWithAnywhereAccess_version-1_Sg_with_redis_port_6379_open_to_internet_access\",\"autofix\":false,\"alexaKeyword\":\"Sg_with_redis_port_6379_open_to_internet_access\",\"ruleRestUrl\":\"\",\"targetType\":\"sg\",\"pac_ds\":\"aws\",\"policyId\":\"SGWithAnywhereAccess_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_sg_should_not_have_public_access_to_redis_port_6379\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_sg_should_not_have_public_access_to_redis_port_6379'),'ENABLED','','Deny Security Group public access on Redis port 6379','2022-05-12','2022-05-12','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Create_Policy_Assignment_log_alert','azure_Enable_Azure_Account_Create_Policy_Assignment_log_alert','Enable_Azure_Account_Create_Policy_Assignment_log_alert','Enable_Azure_Account_Create_Policy_Assignment_log_alert','subscription','azure','Enable_Azure_Account_Create_Policy_Assignment_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Authorization/policyAssignments/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Create Policy Assignment log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Azure_Account_Create_Policy_Assignment_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Create_Policy_Assignment_log_alert\",\"ruleRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"policyId\":\"Enable_Azure_Account_Create_Policy_Assignment_log_alert\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_Enable_Azure_Account_Create_Policy_Assignment_log_alert\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_Azure_Account_Create_Policy_Assignment_log_alert'),'ENABLED','','Enable Create Policy Assignment Activity Log Alert','2022-05-02','2022-05-02','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','azure_Enable_Account_Deallocate_Virtual_Machine_log_alert','Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','subscription','azure','Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect Deallocate Virtual Machine events","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect Deallocate Virtual Machine events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.Compute/virtualMachines/deallocate/action","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Deallocate Virtual Machine log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert","autofix":false,"alexaKeyword":"Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Azure_Account_Deallocate_Virtual_Machine_Event_log_alert","assetGroup":"azure","ruleUUID":"azure_Enable_Account_Deallocate_Virtual_Machine_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_Account_Deallocate_Virtual_Machine_Event_log_alert'),'ENABLED','','Enable log Alert for Deallocate VM','2022-05-24','2022-05-24','high','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','azure_Enable_Account_Create_Update_Virtual_Machine_log_alert','Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','subscription','azure','Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect Create Policy Assignment events","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect Create Policy Assignment events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.Compute/virtualMachines/write","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Create or Update Virtual Machine Event log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert","autofix":false,"alexaKeyword":"Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Azure_Account_Create_or_Update_Virtual_Machine_log_alert","assetGroup":"azure","ruleUUID":"azure_Enable_Account_Create_Update_Virtual_Machine_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_Account_Create_Update_Virtual_Machine_log_alert'),'ENABLED','','Enable log Alert for Create/Update Virtual Machine','2022-05-24','2022-05-24','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing','azure_Enable_Azure_Defender_for_App_Service','Enable_Azure_Defender_for_App_Service_version-1','AppServiceAzureDefender','securitypricings','azure','AppServiceAzureDefender','{"params":[{"encrypt":false,"value":"check-for-azure-security-pricing-rule","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Defender_for_App_Service_version-1_SecurityPricing","autofix":false,"alexaKeyword":"AppServiceAzureDefender","ruleRestUrl":"","targetType":"securitypricings","pac_ds":"azure","policyId":"Enable_Azure_Defender_for_App_Service_version-1","assetGroup":"azure","ruleUUID":"azure_Enable_Azure_Defender_for_App_Service","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Azure_Defender_for_App_Service','ENABLED','ASGC','Enable Azure Defender for App Service',{d '2022-05-19'},{d '2022-05-19'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing','azure_Enable_Azure_Defender_for_SQL_Database','Enable_Azure_Defender_for_SQL_Database_version-1','SQLDatabaseAzureDefender','securitypricings','azure','SQLDatabaseAzureDefender','{"params":[{"encrypt":false,"value":"check-for-azure-security-pricing-rule","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Defender_for_SQL_Database_version-1_SecurityPricing","autofix":false,"alexaKeyword":"SQLDatabaseAzureDefender","ruleRestUrl":"","targetType":"securitypricings","pac_ds":"azure","policyId":"Enable_Azure_Defender_for_SQL_Database_version-1","assetGroup":"azure","ruleUUID":"azure_Enable_Azure_Defender_for_SQL_Database","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Azure_Defender_for_SQL_Database','ENABLED','ASGC','Enable Azure Defender for SQL Database',{d '2022-05-19'},{d '2022-05-19'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Defender_for_Storage_Account_version-1_SecurityPricing','azure_Enable_Azure_Defender_for_Storage_Account','Enable_Azure_Defender_for_Storage_Account_version-1','StorageAccountAzureDefender','securitypricings','azure','StorageAccountAzureDefender','{"params":[{"encrypt":false,"value":"check-for-azure-security-pricing-rule","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Defender_for_Storage_Account_version-1_SecurityPricing","autofix":false,"alexaKeyword":"StorageAccountAzureDefender","ruleRestUrl":"","targetType":"securitypricings","pac_ds":"azure","policyId":"Enable_Azure_Defender_for_Storage_Account_version-1","assetGroup":"azure","ruleUUID":"azure_Enable_Azure_Defender_for_Storage_Account","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Azure_Defender_for_Storage_Account','ENABLED','ASGC','Enable Azure Defender for Storage Account',{d '2022-05-19'},{d '2022-05-19'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing','azure_Enable_Azure_Defender_for_Virtual_Machine','Enable_Azure_Defender_for_Virtual_Machine_version-1','VirtualMachineAzureDefender','securitypricings','azure','VirtualMachineAzureDefender','{"params":[{"encrypt":false,"value":"check-for-azure-security-pricing-rule","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Defender_for_Virtual_Machine_version-1_SecurityPricing","autofix":false,"alexaKeyword":"VirtualMachineAzureDefender","ruleRestUrl":"","targetType":"securitypricings","pac_ds":"azure","policyId":"Enable_Azure_Defender_for_Virtual_Machine_version-1","assetGroup":"azure","ruleUUID":"azure_Enable_Azure_Defender_for_Virtual_Machine","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Azure_Defender_for_Virtual_Machine','ENABLED','ASGC','Enable Azure Defender for Virtual Machine',{d '2022-05-19'},{d '2022-05-19'},'high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Security_Solution_log_alert','azure_Enable_Azure_Account_Security_Solution_log_alert','Enable_Azure_Account_Security_Solution_log_alert','Enable_Azure_Account_Security_Solution_log_alert','subscription','azure','Enable_Azure_Account_Security_Solution_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Create Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is configured to fire whenever Create or Update Security Solution events are triggered.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Security/securitySolutions/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Create or Update Security Solution log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Azure_Account_Security_Solution_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Security_Solution_log_alert\",\"ruleRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"policyId\":\"Enable_Azure_Account_Security_Solution_log_alert\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_Enable_Azure_Account_Security_Solution_log_alert\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_Azure_Account_Security_Solution_log_alert'),'ENABLED','','Enable log Alert for Create/Update Security Solution','2022-05-20','2022-05-20','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Create_Update_Storage_Account_log_alert','azure_Enable_Azure_Create_Update_Storage_Account_log_alert','Enable_Azure_Create_Update_Storage_Account_log_alert','Enable_Azure_Create_Update_Storage_Account_log_alert','subscription','azure','Enable_Azure_Create_Update_Storage_Account_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not configured to fire whenever Create_Update Storage Account events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is configured to fire whenever Create_Update Storage Account events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Storage/storageAccounts/write\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Create or Update Storage Account log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Azure_Create_Update_Storage_Account_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Create_Update_Storage_Account_log_alert\",\"ruleRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"policyId\":\"Enable_Azure_Create_Update_Storage_Account_log_alert\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_Enable_Azure_Create_Update_Storage_Account_log_alert\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_Azure_Account_Security_Solution_log_alert'),'ENABLED','','Enable log Alert for Create/Update Storage Account','2022-05-23','2022-05-23','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Account_Create_Update_Azure_SQL_Database_log_alert','Azure_Account_Create_Update_Azure_SQL_Database_log_alert','Azure_Account_Create_Update_Azure_SQL_Database_log_alert','Azure_Account_Create_Update_Azure_SQL_Database_log_alert','subscription','azure','Create_Update_Azure_SQL_Database_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect Create Update Azure SQL Database","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to Create or Update Azure SQL Database","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.Sql/servers/databases/write","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Create or Update Azure SQL Database Assignment log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Account_Create_Update_Azure_SQL_Database_log_alert","autofix":false,"alexaKeyword":"Create_Update_Azure_SQL_Database_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Azure_Account_Create_Update_Azure_SQL_Database_log_alert","assetGroup":"azure","ruleUUID":"Azure_Account_Create_Update_Azure_SQL_Database_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/Azure_Account_Create_Update_Azure_SQL_Database_log_alert'),'ENABLED','','Enable Create or Update SQL Database Log Alert','2022-05-16','2022-05-16','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AwsClassicELBListenerSecurity_version-1_AwsListenerSecurity_classicelb','aws_classic_elb_listener_security','AwsELBListenerSecurity_version-1','aws_classic_elb_should_use_secured_protocols','classicelb','aws','AwsClassicElbListenerSecurity','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-secured-classic-elb-listener-protocols\",\"encrypt\":false},{\"key\":\"esClassicELBListenerURL\",\"value\":\"\/aws\/classicelb_listeners\/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AwsClassicELBListenerSecurity_version-1_AwsListenerSecurity_classicelb\",\"autofix\":false,\"alexaKeyword\":\"AwsClassicElbListenerSecurity\",\"ruleRestUrl\":\"\",\"targetType\":\"classicelb\",\"pac_ds\":\"aws\",\"policyId\":\"AwsELBListenerSecurity_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_classic_elb_listener_security\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_classic_elb_listener_security'),'ENABLED','','Enable CLB Secure Listener','2022-05-12','2022-05-12','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Account_Delete_Azure_Key_Valut_log_alert','Azure_Account_Delete_Azure_Key_Valut_log_alert','Azure_Account_Delete_Azure_Key_Valut_log_alert','Azure_Account_Delete_Azure_Key_Valut_log_alert','subscription','azure','Delete_Azure_Key_Valut_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Key Vault events are triggered\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to Delete Key Vault events are triggered\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.KeyVault/vaults/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Delete Key Valut log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Azure_Account_Delete_Azure_Key_Valut_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Delete_Azure_Key_Valut_log_alert\",\"ruleRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"policyId\":\"Azure_Account_Delete_Azure_Key_Valut_log_alert\",\"assetGroup\":\"azure\",\"ruleUUID\":\"Azure_Account_Delete_Azure_Key_Valut_log_alert\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/Azure_Account_Delete_Azure_Key_Valut_log_alert'),'ENABLED','','Enable Log Alert for Delete Key Vault Events','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_classicelb','aws_classic_elb_with_unrestricted_sg','AwsElbWithUnrestrictedSecurityGroup_version-1','aws_classic_elb_should_have_secured_sg','classicelb','aws','AwsClassicElbWithUnrestrictedSG','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-classic-elb-unrestrcted-security-group\",\"encrypt\":false},{\"key\":\"esClassicElbWithSGUrl\",\"value\":\"\/aws\/classicelb_secgroups\/_search\",\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"\/aws_sg\/sg_rules\/_search\",\"encrypt\":false},{\"key\":\"esClassicELBListenerURL\",\"value\":\"\/aws\/classicelb_listeners\/_search\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AwsElbWithUnrestrictedSecurityGroup_version-1_AwsElbWithUnrestrictedSecurityGroup_classicelb\",\"autofix\":false,\"alexaKeyword\":\"AwsClassicElbWithUnrestrictedSG\",\"ruleRestUrl\":\"\",\"targetType\":\"classicelb\",\"pac_ds\":\"aws\",\"policyId\":\"AwsElbWithUnrestrictedSecurityGroup_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_classic_elb_with_unrestricted_sg\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_classic_elb_with_unrestricted_sg'),'ENABLED','','ELB Security Group','2022-05-12','2022-05-12','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Account_Delete_Azure_SQL_Database_log_alert','Azure_Account_Delete_Azure_SQL_Database_log_alert','Azure_Account_Delete_Azure_SQL_Database_log_alert','Azure_Account_Delete_Azure_SQL_Database_log_alert','subscription','azure','Delete_Azure_SQL_Database_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect Delete Azure SQL Database","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to Delete Azure SQL Database","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.Sql/servers/databases/delete","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable  Delete Azure SQL Database log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Account_Delete_Azure_SQL_Database_log_alert","autofix":false,"alexaKeyword":"Delete_Azure_SQL_Database_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Azure_Account_Delete_Azure_SQL_Database_log_alert","assetGroup":"azure","ruleUUID":"Azure_Account_Delete_Azure_SQL_Database_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/Azure_Account_Delete_Azure_SQL_Database_log_alert'),'ENABLED','','Enable Delete SQL Database Log Alert','2022-05-24','2022-05-24','high','security');
INSERT IGNORE INTO cf_RuleInstance(ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Create_Network_Security_Group_log_alert','Azure_Account_Create_Network_Security_Group_log_alert','Azure_Create_Network_Security_Group_log_alert','Azure_Create_Network_Security_Group_log_alert','subscription','azure','Create_Network_Security_Group','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to create or  Update Network Security Group","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to create or  Update Network Security Group","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.Network/networkSecurityGroups/write","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Create or Update Network Security Group log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Create_Network_Security_Group_log_alert","autofix":false,"alexaKeyword":"Create_Network_Security_Group","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Azure_Create_Network_Security_Group_log_alert","assetGroup":"azure","ruleUUID":"Azure_Account_Create_Network_Security_Group_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_Account_Create_Network_Security_Group_log_alert','ENABLED','ASGC','Enable Log Alert for Create/Update Network Security Group','2022-05-24','2022-05-24','high','security');

INSERT IGNORE INTO cf_RuleInstance(ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','Azure_Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','subscription','Azure','Enable_Azure_Account_Create_Update_Delete_SQL_Server_Firewall_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect Create or update sql server firewall events","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect Create or update sql server firewall events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.Sql/servers/firewallRules/write","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable  Azure Account Create Policy Assignment log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert","autofix":false,"alexaKeyword":"Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Azure_Account_Create_Update_Delete_SQL_Server_Firewall_log_alert","assetGroup":"azure","ruleUUID":"Azure_Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_Enable_Create_Update_Delete_SQL_Server_Firewall_log_alert','ENABLED','ASGC','Enable log Alert for Create/Update Delete SQL Server Firewall Rule','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance(ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Update_KeyVault_log_alert','azure_Enable_Account_Update_KeyVault_log_alert','Enable_Azure_Account_Update_KeyVault_log_alert','Enable_Azure_Account_Update_KeyVault_log_alert','subscription','Azure','Enable_Azure_Account_Update_KeyVault_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect Create Policy Assignment events","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect Create Policy Assignment events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.KeyVault/vaults/write","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Update Key Vault Activity Log Alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Account_Update_KeyVault_log_alert","autofix":false,"alexaKeyword":"Enable_Azure_Account_Update_KeyVault_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Azure_Account_Update_KeyVault_log_alert","assetGroup":"azure","ruleUUID":"azure_Enable_Account_Update_KeyVault_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Update_KeyVault_log_alert','ENABLED','ASGC','Enable log Alert for Update Key Vault Activity','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance(ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Update_SecurityPolicy_log_alert','azure_Enable_Account_Update_SecurityPolicy_log_alert','Enable_Azure_Account_Update_SecurityPolicy_log_alert','Enable_Azure_Account_Update_SecurityPolicy_log_alert','subscription','Azure','Enable_Azure_Account_Update_SecurityPolicy_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect Create Policy Assignment events","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect Create Policy Assignment events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.Security/policies/write","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Azure Account Update Security Policy log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Account_Update_SecurityPolicy_log_alert","autofix":false,"alexaKeyword":"Enable_Azure_Account_Update_SecurityPolicy_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Azure_Account_Update_SecurityPolicy_log_alert","assetGroup":"azure","ruleUUID":"azure_Enable_Account_Update_SecurityPolicy_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Update_SecurityPolicy_log_alert','ENABLED','ASGC','Enable log Alert for Update Security Policy','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance(ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','azure_Enable_Account_Create_Update_MySQLDatabase_log_alert','Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','subscription','Azure','Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect Create Policy Assignment events","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect Create Policy Assignment events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.DBforMySQL/servers/databases/write","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Azure Account Create or Update MySQL Database log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert","autofix":false,"alexaKeyword":"Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Azure_Account_Create_Update_MySQLDatabase_log_alert","assetGroup":"azure","ruleUUID":"azure_Enable_Account_Create_Update_MySQLDatabase_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Create_Update_MySQLDatabase_log_alert','ENABLED','ASGC','Enable log Alert for Create/Update MySQL DB','2022-05-25','2022-05-25','high','security');

INSERT IGNORE INTO cf_RuleInstance(ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','azure_Enable_Account_Create_Update_PostgreSQLDatabase_log_alert','Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','subscription','Azure','Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect Create Policy postgress events","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect Create postgress  events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.DBforPostgreSQL/servers/databases/write","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Azure Account Create or Update PostgreSQL Database log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert","autofix":false,"alexaKeyword":"Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Azure_Account_Create_Update_PostgreSQLDatabase_log_alert","assetGroup":"azure","ruleUUID":"azure_Enable_Account_Create_Update_PostgreSQLDatabase_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Create_Update_PostgreSQLDatabase_log_alert','ENABLED','ASGC','Enable log Alert for Create/Update PostgreSQL DB','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance(ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Delete_MySQLDatabase_log_alert','azure_Enable_Account_Delete_MySQLDatabase_log_alert','Enable_Azure_Account_Delete_MySQLDatabase_log_alert','Enable_Azure_Account_Delete_MySQLDatabase_log_alert','subscription','Azure','Enable_Azure_Account_Delete_MySQLDatabase_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect delete SQL DB  events","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect delete SQL DB events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.DBforMySQL/servers/databases/delete","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Azure Account Delete MySQL Database log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Account_Delete_MySQLDatabase_log_alert","autofix":false,"alexaKeyword":"Enable_Azure_Account_Delete_MySQLDatabase_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Azure_Account_Delete_MySQLDatabase_log_alert","assetGroup":"azure","ruleUUID":"azure_Enable_Account_Delete_MySQLDatabase_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Delete_MySQLDatabase_log_alert','ENABLED','ASGC','Enable log Alert for Delete MySQL DB','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance(ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','azure_Enable_Account_Delete_PostgreSQLDatabase_log_alert','Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','subscription','Azure','Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect delete Postgress DB events","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect delete POstgress DB events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.DBforPostgreSQL/servers/databases/delete","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Azure Account Delete PostgreSQL Database log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert","autofix":false,"alexaKeyword":"Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Azure_Account_Delete_PostgreSQLDatabase_log_alert","assetGroup":"azure","ruleUUID":"azure_Enable_Account_Delete_PostgreSQLDatabase_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Delete_PostgreSQLDatabase_log_alert','ENABLED','ASGC','Enable log Alert for PostgreSQL DB','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','azure_Enable_Account_Delete_Load_Balancer_log_alert','Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','subscription','azure','Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Load Balancer events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Load Balancer events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Network/loadBalancers/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Delete LOad Balancer  log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert\",\"ruleRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"policyId\":\"Enable_Azure_Account_Delete_Load_Balancer_Event_log_alert\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_Enable_Account_Delete_Load_Balancer_log_alert\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_Account_Delete_Load_Balancer_Event_log_alert'),'ENABLED','','Enable log Alert for Load Balancer','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Create_or_Update_Network_Security_Group_Rule_Event_log_alert','Create_or_Update_Network_Security_Group_Rule_log_alert','Enable_Azure_Account_Create_or_Update_Network_Security_Group_Rule_Event_log_alert','Enable_Azure_Account_Create_or_Update_Network_Security_Group_Rule_Event_log_alert','subscription','azure','Enable_Azure_Account_Create_or_Update_Network_Security_Group_Rule_Event_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect create or update Network Security Group Rule events","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect create or update Network Security Group Rule  events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.Network/networkSecurityGroups/securityRules/write","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable create or update Network Security Group Rule log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Account_Create_or_Update_Network_Security_Group_Rule_Event_log_alert","autofix":false,"alexaKeyword":"Enable_Azure_Account_Create_or_Update_Network_Security_Group_Rule_Event_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Azure_Account_Create_or_Update_Network_Security_Group_Rule_Event_log_alert","assetGroup":"azure","ruleUUID":"Create_or_Update_Network_Security_Group_Rule_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/Create_or_Update_Network_Security_Group_Rule_log_alert'),'ENABLED','','Enable create or update network security group rule log alert','2022-07-07','2022-07-07','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','azure_Enable_Acc_Delete_Network_Security_Group_Rule_log_alert','Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','subscription','azure','Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Network Security Group Rule events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Network Security Group Rule  events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Network/networkSecurityGroups/securityRules/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Delete Network Security Group Rule log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert\",\"ruleRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"policyId\":\"Enable_Azure_Account_Delete_Network_Security_Group_Rule_Event_log_alert\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_Enable_Acc_Delete_Network_Security_Group_Rule_log_alert\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_Account_Delete_Network_Security_Group_Rule_Event_log_alert'),'ENABLED','','Enable log Alert for Account Delete Network Security Group Rule','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','azure_Enable_Account_Delete_Network_Security_Group_log_alert','Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','subscription','azure','Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Network Security Group  events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Network Security Group Rule events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Network/networkSecurityGroups/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Delete Network Security Group  log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert\",\"ruleRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"policyId\":\"Enable_Azure_Account_Delete_Network_Security_Group_Event_log_alert\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_Enable_Account_Delete_Network_Security_Group_log_alert\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_Account_Delete_Network_Security_Group_Event_log_alert'),'ENABLED','','Enable log Alert for Network Security Group','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','azure_Enable_Account_Delete_Policy_Assignment_log_alert','Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','subscription','azure','Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Policy Assignment events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Authorization/policyAssignments/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Delete Policy Assignment log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert\",\"ruleRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"policyId\":\"Enable_Azure_Account_Delete_Policy_Assignment_Event_log_alert\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_Enable_Account_Delete_Policy_Assignment_log_alert\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_Account_Delete_Policy_Assignment_Event_log_alert'),'ENABLED','','Enable log Alert for Delete Policy AssignmenEnable Delete PostgreSQL Database log alert','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','azure_Enable_Account_Delete_Security_Solution_log_alert','Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','subscription','azure','Enable_Azure_Account_Delete_Security_Solution_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Security Solution events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Security Solution events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Security/securitySolutions/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Delete Security Solution log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Azure_Account_Delete_Security_Solution_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Security_Solution_Event_log_alert\",\"ruleRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"policyId\":\"Enable_Azure_Account_Delete_Security_Solution_Event_log_alert\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_Enable_Account_Delete_Security_Solution_log_alert\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_Account_Delete_Security_Solution_Event_log_alert'),'ENABLED','','Enable Delete Security Solution  Event log alert','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','azure_Enable_Account_Delete_Storage_Account_log_alert','Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','subscription','azure','Enable_Azure_Account_Delete_Storage_Account_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Storage Account  events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Storage Account events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Storage/storageAccounts/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Delete Storage Account log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Azure_Account_Delete_Storage_Account_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Storage_Account_Event_log_alert\",\"ruleRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"policyId\":\"Enable_Azure_Account_Delete_Storage_Account_Event_log_alert\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_Enable_Account_Delete_Storage_Account_log_alert\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_Account_Delete_Storage_Account_Event_log_alert'),'ENABLED','','Enable log Alert for Delete Storage Account','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','azure_Enable_Account_Delete_Virtual_Machine_log_alert','Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','subscription','azure','Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Delete Virtual Machine events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Delete Virtual Machine events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Compute/virtualMachines/delete\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable log Alert for Account Delete VM\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert\",\"ruleRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"policyId\":\"Enable_Azure_Account_Delete_Virtual_Machine_Event_log_alert\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_Enable_Account_Delete_Virtual_Machine_log_alert\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_Account_Delete_Virtual_Machine_Event_log_alert'),'ENABLED','','Enable log Alert for Account Delete VM','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','azure_Enable_Account_Power_Off_Virtual_Machine_log_alert','Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','subscription','azure','Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-activity-log-alert\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"selected alert rule is not  configured to detect Power Off Virtual Machine events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"selected alert rule is  configured to detect Power Off Virtual Machine events\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Compute/virtualMachines/powerOff/action\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable  Azure Account Power Off Virtual MAchine Event log alert\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert\",\"autofix\":false,\"alexaKeyword\":\"Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert\",\"ruleRestUrl\":\"\",\"targetType\":\"subscription\",\"pac_ds\":\"azure\",\"policyId\":\"Enable_Azure_Account_Power_Off_Virtual_Machine_Event_log_alert\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_Enable_Account_Power_Off_Virtual_Machine_log_alert\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_Account_Power_Off_Virtual_Machine_Event_log_alert'),'ENABLED','','Enable log Alert for Delete VM','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','azure_Enable_Account_Rename_Azure_SQL_Database_log_alert','Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','subscription','Azure','Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect Rename Azure SQL Database  events","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect Rename Azure SQL Database events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.Sql/servers/databases/move/action","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Rename Azure SQL Database log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert","autofix":false,"alexaKeyword":"Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Azure_Account_Rename_Azure_SQL_Database_Event_log_alert","assetGroup":"azure","ruleUUID":"azure_Enable_Account_Rename_Azure_SQL_Database_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Rename_Azure_SQL_Database_Event_log_alert','ENABLED','ASGC','Enable log Alert for Rename SQL DB','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Enable_key_Vault_Customer_Managed_Key','Azure_Enable_key_Vault_Customer_Managed_Key','Azure_Enable_key_Vault_Customer_Managed_Key','Azure_Enable_key_Vault_Customer_Managed_Key','vaults','azure','Enable_key_Vault_Customer_Managed_Key','{"params":[{"encrypt":false,"value":"check-for-azure-keyvault-rule-alert","key":"ruleKey"},{"key":"failure","value":"selected Customer Master Key  is not an app-tier resource","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected Customer Master Key  is an app-tier resource","isValueNew":true,"encrypt":false},{"key":"keyValutName","value":"cc-project5-key-vault,cc-user-access-vault","isValueNew":true,"encrypt":false},{"key":"keyVaultKey","value":"ProjectName","isValueNew":true,"encrypt":false},{"key":"keyVaultValue","value":"Project5","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Azure key Vault Customer-Managed Key","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Enable_key_Vault_Customer_Managed_Key","autofix":false,"alexaKeyword":"Enable_key_Vault_Customer_Managed_Key","ruleRestUrl":"","targetType":"vaults","pac_ds":"azure","policyId":"Azure_Enable_key_Vault_Customer_Managed_Key","assetGroup":"azure","ruleUUID":"Azure_Enable_key_Vault_Customer_Managed_Key","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_Enable_key_Vault_Customer_Managed_Key','ENABLED','ASGC','Enable Azure Key Vault Customer Managed Key','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Enable_Web_Tier_Customer_Managed_Key','Azure_Enable_Web_Tier_Customer_Managed_Key','Azure_Enable_Web_Tier_Customer_Managed_Key','Azure_Enable_Web_Tier_Customer_Managed_Key','vaults','azure','Enable_Web_Tier_Customer_Managed_Key','{"params":[{"encrypt":false,"value":"check-for-azure-keyvault-rule-alert","key":"ruleKey"},{"key":"failure","value":"selected Customer Master Key  is not an web-tier resource","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected Customer Master Key  is an Web-tier resource","isValueNew":true,"encrypt":false},{"key":"keyValutName","value":"cc-main-key-vault,cc-user-access-vault","isValueNew":true,"encrypt":false},{"key":"keyVaultKey","value":"Environment","isValueNew":true,"encrypt":false},{"key":"keyVaultValue","value":"Production","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Ensure web Tier Customer-Managed Key","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Enable_web_Tier_Customer_Managed_Key","autofix":false,"alexaKeyword":"Enable_web_Tier_Customer_Managed_Key","ruleRestUrl":"","targetType":"vaults","pac_ds":"azure","policyId":"Azure_Enable_web_Tier_Customer_Managed_Key","assetGroup":"azure","ruleUUID":"Azure_Enable_web_Tier_Customer_Managed_Key","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_Enable_Web_Tier_Customer_Managed_Key','ENABLED','ASGC','Enable Web Tier Customer-Managed Key','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Enable_Database_Tier_Customer_Managed_Key','Azure_Enable_Database_Tier_Customer_Managed_Key','Azure_Enable_Database_Tier_Customer_Managed_Key','Azure_Enable_Database_Tier_Customer_Managed_Key','vaults','azure','Enable_Database_Tier_Customer_Managed_Key','{"params":[{"encrypt":false,"value":"check-for-azure-keyvault-rule-alert","key":"ruleKey"},{"key":"failure","value":"selected Customer Master Key  is not an Database-tier resource","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected Customer Master Key  is an Database-tier resource","isValueNew":true,"encrypt":false},{"key":"keyValutName","value":"cc-production-vault,cc-user-access-vault","isValueNew":true,"encrypt":false},{"key":"keyVaultKey","value":"Owner","isValueNew":true,"encrypt":false},{"key":"keyVaultValue","value":"AzSQLManager","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Ensure Database Tier Customer-Managed Key","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Enable_Database_Tier_Customer_Managed_Key","autofix":false,"alexaKeyword":"Enable_Database_Tier_Customer_Managed_Key","ruleRestUrl":"","targetType":"vaults","pac_ds":"azure","policyId":"Azure_Enable_Database_Tier_Customer_Managed_Key","assetGroup":"azure","ruleUUID":"Azure_Enable_Database_Tier_Customer_Managed_Key","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_Enable_Database_Tier_Customer_Managed_Key','ENABLED','ASGC','Ensure Database Tier Customer-Managed','2022-05-25','2022-05-25','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_ElasticSearch_Domain_At_Rest_Encryption_version-1_ElasticSearchDomainAtRestEncryption','aws_elasticsearch_domain_at_rest_encryption','AWS_ElasticSearch_Domain_At_Rest_Encryption_version-1','ElasticSearchDomainAtRestEncryption','elasticsearch','aws','ESDomainEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-es-encrypted-at-rest\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_ElasticSearch_Domain_At_Rest_Encryption_version-1_ElasticSearchDomainAtRestEncryption\",\"autofix\":false,\"alexaKeyword\":\"ESDomainEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"elasticsearch\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_ElasticSearch_Domain_At_Rest_Encryption_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_elasticsearch_domain_at_rest_encryption\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_elasticsearch_domain_at_rest_encryption'),'ENABLED','','Encrypt OpenSearch Data at Rest','2022-05-12','2022-05-12','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_ElasticSearch_Domain_Encryption_Using_CMK_KMS_Key_version-1_Enable_CloudTrail_Global_Services_cloudtrail','aws_elasticsearch_domain_encryption_using_cmk_kms_keys','AWS_ElasticSearch_Domain_Encryption_Using_CMK_KMS_Key_version-1','ElasticSearchDomainEncryptionUsingCMKKMSKeys','elasticsearch','aws','ESDomainEncryptionUsingCMKKMSKeys','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-es-encrypted-using-kms-cmks\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_ElasticSearch_Domain_Encryption_Using_CMK_KMS_Key_version-1_Enable_CloudTrail_Global_Services_cloudtrail\",\"autofix\":false,\"alexaKeyword\":\"ESDomainEncryptionUsingCMKKMSKeys\",\"ruleRestUrl\":\"\",\"targetType\":\"elasticsearch\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_ElasticSearch_Domain_Encryption_Using_CMK_KMS_Key_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_elasticsearch_domain_encryption_using_cmk_kms_keys\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_elasticsearch_domain_encryption_using_cmk_kms_keys'),'ENABLED','','Use KMS CMK to encrypt OpenSearch','2022-05-12','2022-05-12','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('AWS_ElasticSearch_Domain_Node_to_Node_Encryption_version-1_ElasticSearchDomainNodeToNodeEncryption','aws_elasticsearch_domain_node_to_node_encryption','AWS_ElasticSearch_Domain_Node_to_Node_Encryption_version-1','ElasticSearchDomainNodeToNodeEncryption','elasticsearch','aws','ESNodeToNodeEncryption','{\"params\":[{\"key\":\"ruleKey\",\"value\":\"check-for-es-node-to-node-encrypted\",\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"}],\"environmentVariables\":[],\"ruleId\":\"AWS_ElasticSearch_Domain_Node_to_Node_Encryption_version-1_ElasticSearchDomainNodeToNodeEncryption\",\"autofix\":false,\"alexaKeyword\":\"ESNodeToNodeEncryption\",\"ruleRestUrl\":\"\",\"targetType\":\"elasticsearch\",\"pac_ds\":\"aws\",\"policyId\":\"AWS_ElasticSearch_Domain_Node_to_Node_Encryption_version-1\",\"assetGroup\":\"aws\",\"ruleUUID\":\"aws_elasticsearch_domain_node_to_node_encryption\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/aws_elasticsearch_domain_node_to_node_encryption'),'ENABLED','','Encrypt OpenSearch Data in Transit','2022-05-12','2022-05-12','high','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','azure_Enable_VM_disk_Volumes_Encrypted','Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','virtualmachine','Azure','Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted','{"params":[{"encrypt":false,"value":"check-for-azure-security-virtual-machine-rule","key":"ruleKey"},{"key":"failure","value":" App-tier disk volumes attached to the selected Microsoft Azure virtual machine (VM) are not encrypted. ","isValueNew":true,"encrypt":false},{"key":"SUCESS","value":"App-tier disk volumes attached to the selected Microsoft Azure virtual machine (VM) are not encrypted ","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"pricingTier","value":"Standard","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Encryption for App-Tier Disk Volumes.","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted","autofix":false,"alexaKeyword":"Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted","ruleRestUrl":"","targetType":"virtualmachine","pac_ds":"azure","policyId":"Enable_Azure_VM_disk_Volumes_for_App_Tier_Encrypted","assetGroup":"azure","ruleUUID":"azure_Enable_VM_disk_Volumes_Encrypted","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_VM_disk_Volumes_Encrypted','ENABLED','ASGC','Enable Encryption for App-Tier Disk Volumes.','2022-06-12','2022-06-12','high','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_Virtual_Machine_public_access_version-1_Rule','GCP_Virtual_Machine_public_access_Rule','GCP_Virtual_Machine_public_access_version-1','VirtualMachinePublicAccess','vminstance','gcp','VirtualMachinePublicIP','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-vminstnace-public-access\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"VM Instance is having public IP \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"VM Instance in not having public access \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"name\",\"value\":\"VirtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Ensure VM instances are not using public IP addresses\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"GCP_Virtual_Machine_public_access_version-1_Rule\",\"autofix\":false,\"alexaKeyword\":\"VirtualMachinePublicIP\",\"ruleRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"policyId\":\"GCP_Virtual_Machine_public_access_version-1\",\"assetGroup\":\"gcp\",\"ruleUUID\":\"GCP_Virtual_Machine_public_access_Rule\",\"ruleType\":\"ManageRule\"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/GCP_Virtual_Machine_public_access_Rule'),'ENABLED','','Deny Public Access to VM Instance','2022-06-09','2022-06-09','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_PostgreSQL_Server_In_Transit_Encryption','azure_Enable_PostgreSQL_Server_In_Transit_Encryption','Enable_PostgreSQL_Server_In_Transit_Encryption','PostgreSQL_Server_In_Transit_Encryption','postgresql','Azure','PostgreSQL_Server_In_Transit_Encryption','{"params":[{"encrypt":false,"value":"check-for-azure-postgree-ssl-enforcement","key":"ruleKey"},{"key":"policyName","value":"Enable_PostgreSQL_Server_In-Transit_Encryption","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_PostgreSQL_Server_In_Transit_Encryption","autofix":false,"alexaKeyword":"PostgreSQL_Server_In_Transit_Encryption","ruleRestUrl":"","targetType":"postgresql","pac_ds":"azure","policyId":"Enable_PostgreSQL_Server_In_Transit_Encryption","assetGroup":"azure","ruleUUID":"azure_Enable_PostgreSQL_Server_In_Transit_Encryption","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_PostgreSQL_Server_In_Transit_Encryption','ENABLED','ASGC','Enable In-transit encryption for PostgreSQL Server','2022-05-19','2022-05-19','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Encryption_for_Unattached_Disk_Volumes','azure_Enable_Encryption_for_Unattached_Disk_Volumes','Enable_Encryption_for_Unattached_Disk_Volumes','Enable_Encryption_for_Unattached_Disk_Volumes','disk','Azure','Enable_Encryption_for_Unattached_Disk_Volumes','{"params":[{"encrypt":false,"value":"check-for-azure-postgree-ssl-enforcement","key":"ruleKey"},{"key":"policyName","value":"Enable Encryption for Unattached Disk Volumes","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Encryption_for_Unattached_Disk_Volumes","autofix":false,"alexaKeyword":"Enable_Encryption_for_Unattached_Disk_Volumes","ruleRestUrl":"","targetType":"disk","pac_ds":"azure","policyId":"Enable_Encryption_for_Unattached_Disk_Volumes","assetGroup":"azure","ruleUUID":"azure_Enable_Encryption_for_Unattached_Disk_Volumes","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Encryption_for_Unattached_Disk_Volumes','ENABLED','ASGC','Encrypt Unattached Disk Volumes','2022-05-19','2022-05-19','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','virtualmachine','Azure','Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','{\"params\":[{\"encrypt\":false,\"value\":\"check-encryption-enabled-with-customer-managed-keys-for-Azure_VM_disks\",\"key\":\"ruleKey\"},{\"key\":\"failure\",\"value\":\"The Azure Disk Encryption (ADE) service is using a service-managed key instead of a customer-managed key \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"SUCCESS\",\"value\":\"Azure Disk Encryption (ADE) service will use the  customer-managed key to encrypt the disk volumes attached to the selected Microsoft Azure virtual machine.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"field\",\"value\":\"operationName\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"equals\",\"value\":\"Microsoft.Compute/virtualMachines\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Use CMK to Encrypt Database\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key\",\"autofix\":false,\"alexaKeyword\":\"Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key\",\"ruleRestUrl\":\"\",\"targetType\":\"virtualmachine\",\"pac_ds\":\"azure\",\"policyId\":\"Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key\",\"assetGroup\":\"azure\",\"ruleUUID\":\"Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Virtual_Machine_Disk_Volume_Customer_Managed_Key','ENABLED','ASGC','Use CMK to Encrypt Database','2022-05-19','2022-05-19','high','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_Check_Public_Access_For_Storage_Account','azure_check_public_access_for_storage_account','Azure_Check_Public_Access_For_Storage_Account','Azure_Check_Public_Access_For_Storage_Account','storageaccount','azure','CheckStorageAccountPublicAccess','{"params":[{"encrypt":false,"value":"check-public-access-for-storage-account","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_Check_Public_Access_For_Storage_Account","autofix":false,"alexaKeyword":"CheckStorageAccountPublicAccess","ruleRestUrl":"","targetType":"storageaccount","pac_ds":"azure","policyId":"Azure_Check_Public_Access_For_Storage_Account","assetGroup":"azure","ruleUUID":"azure_check_public_access_for_storage_account","ruleType":"ManageRule"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_check_public_access_for_storage_account'),'ENABLED','','Deny public access to Storage Account','2022-06-03','2022-06-03','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_VMInstanceTagging_vminstance','gcp_virtualmachine_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','VirtualmachineTaggingRule','vminstance','gcp','VirtualmachineTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_VMInstanceTagging_vminstance","autofix":false,"alexaKeyword":"VmInstanceTaggingRule","ruleRestUrl":"","targetType":"vminstance","pac_ds":"gcp","policyId":"TaggingRule_version-1","assetGroup":"gcp","ruleUUID":"gcp_vm_instance_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/gcp_vm_instance_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Virtualmachine should be tagged with mandatory tags',{d '2022-06-16'},{d '2022-06-16'},null,null);
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','RPDPortAcess','vpcfirewall','Gcp','RDP_port_3389_should_not_be_publicly_accessible','{"params":[{"encrypt":false,"value":"check-for-vpc-network-firewall-security","key":"ruleKey"},{"key":"port","value":"tcp:3389,tcp:0-65535","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure there are no VPC firewall rules that allow unrestricted inbound access on RDP port 3389","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VPC Firewall with RDP port 3389 was publicly accessible","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"VPC Firewall with RDP port 3389 should not be publicly accessible","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible","autofix":false,"alexaKeyword":"RDP_port_3389_should_not_be_publicly_accessible","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible","assetGroup":"gcp","ruleUUID":"VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','ENABLED','ASGC','Deny Public Access to RDP Port 3389','2022-06-09','2022-06-09','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','SSHPortAcess','vpcfirewall','Gcp','SSH_port_22_should_not_be_publicly_accessible','{"params":[{"encrypt":false,"value":"check-for-vpc-network-firewall-security","key":"ruleKey"},{"key":"port","value":"tcp:22,tcp:0-65535","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure that no VPC firewall rules allow unrestricted inbound access on SSH port 22","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VPC Firewall with SSH port 22 was publicly accessible","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"VPC Firewall with RDP port 3389 should not be publicly accessible","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"VPC_firewall_SSH_port_22_should_not_be_publicly_accessible","autofix":false,"alexaKeyword":"SSH_port_22_should_not_be_publicly_accessible","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"VPC_firewall_SSH_port_22_should_not_be_publicly_accessible","assetGroup":"gcp","ruleUUID":"VPC_firewall_SSH_port_22_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_SSH_port_22_should_not_be_publicly_accessible','ENABLED','ASGC','Deny Firewall public access to SSH port 22','2022-06-09','2022-06-09','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','DNSPortAcess','vpcfirewall','Gcp','DNS_port_53_should_not_be_publicly_accessible','{"params":[{"encrypt":false,"value":"check-for-vpc-network-firewall-security","key":"ruleKey"},{"key":"port","value":"tcp:53,tcp:0-65535,udp:53,udp:0-65535","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure there are no VPC firewall rules that allow unrestricted inbound access on TCP and UDP port 53","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VPC Firewall with DNS port 53 was publicly accessible","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"VPC Firewall with DNS port 53 should not be publicly accessible","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"VPC_firewall_DNS_port_53_should_not_be_publicly_accessible","autofix":false,"alexaKeyword":"DNS_port_53_should_not_be_publicly_accessible","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"VPC_firewall_DNS_port_53_should_not_be_publicly_accessible","assetGroup":"gcp","ruleUUID":"VPC_firewall_DNS_port_53_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_DNS_port_53_should_not_be_publicly_accessible','ENABLED','ASGC','Deny Firewall public access to DNS port 53','2022-06-09','2022-06-09','critical','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_BlobContainer_Immutability','azure_Enable_BlobContainer_Immutability','Enable_Azure_BlobContainer_Immutability','Enable_Azure_BlobContainer_Immutability','blobcontainer','azure','BlobContainerImmutability','{"params":[{"encrypt":false,"value":"check-if-blob-container-is-immutable","key":"ruleKey"},{"key":"failure","value":"Immutability is NOT enabled for Blob container","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"Immutability is enabled for Blob container ","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Immutability for Blob Container","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_BlobContainer_Immutability","autofix":false,"alexaKeyword":"BlobContainerImmutability","ruleRestUrl":"","targetType":"blobcontainer","pac_ds":"azure","policyId":"Enable_Azure_BlobContainer_Immutability","assetGroup":"azure","ruleUUID":"azure_Enable_BlobContainer_Immutability","ruleType":"ManageRule"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Enable_BlobContainer_Immutability'),'ENABLED','','Enable Immutable Blob Storage','2022-06-09','2022-06-09','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule','vminstance','gcp','VirtualMachineDiskEncryptionCSEK','{"params":[{"encrypt":false,"value":"check-for-disk-encryption-csek","key":"ruleKey"},{"key":"failure","value":"VM Instance Disk is not encrypted with Customer supplied key","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"VM Instance Disk is encrypted with Customer supplied key ","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Ensure VM instances Disk is encrypted with customer supplied key","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule","autofix":false,"alexaKeyword":"VirtualMachineDiskEncryptionCSEK","ruleRestUrl":"","targetType":"vminstance","pac_ds":"gcp","policyId":"GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule","assetGroup":"gcp","ruleUUID":"GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule","ruleType":"ManageRule"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/GCP_Virtual_Machine_Disk_Encryption_CSEK_Rule'),'ENABLED','','Encrypt VM Disk with Customer-Supplied Encryption Keys','2022-06-15','2022-06-15','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','GCP_Virtual_Machine_Disk_Encryption_CMK_Rule','vminstance','gcp','VirtualMachineDiskEncryptionCMK','{"params":[{"encrypt":false,"value":"check-for-disk-encryption-cmk","key":"ruleKey"},{"key":"failure","value":"VM Instance Disk is not encrypted with Customer managed key","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"VM Instance Disk is encrypted with Customer managed key ","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Ensure VM instances Disk is encrypted with customer managed key","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"GCP_Virtual_Machine_Disk_Encryption_CMK_Rule","autofix":false,"alexaKeyword":"VirtualMachineDiskEncryptionCMK","ruleRestUrl":"","targetType":"vminstance","pac_ds":"gcp","policyId":"GCP_Virtual_Machine_Disk_Encryption_CMK_Rule","assetGroup":"gcp","ruleUUID":"GCP_Virtual_Machine_Disk_Encryption_CMK_Rule","ruleType":"ManageRule"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/GCP_Virtual_Machine_Disk_Encryption_CMK_Rule'),'ENABLED','','Encrypt VM Disk with Customer Managed Encryption Keys','2022-06-15','2022-06-15','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Deny_Azure_KeyVault_Admin_Privileges','azure_Deny_KeyVault_Admin_Privileges','Deny_Azure_KeyVault_Admin_Privileges','Deny_Azure_KeyVault_Admin_Privileges','vaults','azure','KeyVaultDenyAdminPrivilege','{"params":[{"encrypt":false,"value":"deny-admin-privileges-azure-keyvault-rule","key":"ruleKey"},{"key":"failure","value":"Key vault has admin privilege","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"Key vault does not have admin privilege","isValueNew":true,"encrypt":false},{"key":"adminForKeys","value":"Get,List,Update,Create,Import,Delete,Recover,Backup,Restore,Decrypt,Encrypt,UnwrapKey,WrapKey,Verify,Sign,Purge","isValueNew":true,"encrypt":false},{"key":"adminForSecrets","value":"Get,List,Set,Delete,Recover,Backup,Restore,Purge","isValueNew":true,"encrypt":false},{"key":"adminForCertificates","value":"Get,List,Update,Create,Import,Delete,Recover,Backup,Restore,ManageContacts,ManageIssuers,GetIssuers,ListIssuers,SetIssuers,DeleteIssuers,Purge","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Deny admin privilege for dkey vaults","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Deny_Azure_KeyVault_Admin_Privileges","autofix":false,"alexaKeyword":"KeyVaultDenyAdminPrivilege","ruleRestUrl":"","targetType":"vaults","pac_ds":"azure","policyId":"Deny_Azure_KeyVault_Admin_Privileges","assetGroup":"azure","ruleUUID":"azure_Deny_KeyVault_Admin_Privileges","ruleType":"ManageRule"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_Deny_KeyVault_Admin_Privileges'),'ENABLED','','Deny Full Administrator Privilege to Azure Key Vault ','2022-06-13','2022-06-13','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VPC_firewall_ICMP_port_should_not_be_publicly_accessible','VPC_firewall_ICMP_port_should_not_be_publicly_accessible','VPC_firewall_ICMP_port_should_not_be_publicly_accessible','ICMPPortAcess','vpcfirewall','Gcp','VPC_firewall_ICMP_port_should_not_be_publicly_accessible','{"params":[{"encrypt":false,"value":"check-for-vpc-network-firewall-security","key":"ruleKey"},{"key":"port","value":"icmp:00","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure there are no VPC firewall rules that allow unrestricted inbound access on icmp ","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VPC Firewall with icmp port was publicly accessible","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Deny Firewall public access to ICMP","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"VPC_firewall_ICMP_port_should_not_be_publicly_accessible","autofix":false,"alexaKeyword":"VPC_firewall_ICMP_port_should_not_be_publicly_accessible","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"VPC_firewall_ICMP_port_should_not_be_publicly_accessible","assetGroup":"gcp","ruleUUID":"VPC_firewall_ICMP_port_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_ICMP_port_should_not_be_publicly_accessible','ENABLED','ASGC','Deny Firewall public access to ICMP','2022-06-09','2022-06-09','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VPC_firewall_FTP_port_should_not_be_publicly_accessible','VPC_firewall_FTP_port_should_not_be_publicly_accessible','VPC_firewall_FTP_port_should_not_be_publicly_accessible','FTPPortAcess','vpcfirewall','Gcp','VPC_firewall_FTP_port_should_not_be_publicly_accessible','{"params":[{"encrypt":false,"value":"check-for-vpc-network-firewall-security","key":"ruleKey"},{"key":"port","value":"tcp:20,tcp:21,tcp:0-65535","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure there are no VPC firewall rules that allow unrestricted inbound access on TCP 20 and 21","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VPC Firewall with Tcp port 20 and 21 was publicly accessible","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"VPC Firewall with FTP port 20 and 21 should not be publicly accessible","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"VPC_firewall_FTP_port_should_not_be_publicly_accessible","autofix":false,"alexaKeyword":"VPC_firewall_FTP_port_should_not_be_publicly_accessible","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"VPC_firewall_FTP_port_should_not_be_publicly_accessible","assetGroup":"gcp","ruleUUID":"VPC_firewall_FTP_port_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_FTP_port_should_not_be_publicly_accessible','ENABLED','ASGC','Deny Firewall public access to FTP ports 20 and 21','2022-06-09','2022-06-09','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VPC_UnCommon_ports_should_not_be_publicly_accessible','VPC_UnCommon_ports_should_not_be_publicly_accessible','VPC_UnCommon_ports_should_not_be_publicly_accessible','UncommonPortsAccess','vpcfirewall','Gcp','VPC_UnCommon_ports_should_not_be_publicly_accessible','{"params":[{"encrypt":false,"value":"check-for-vpc-network-firewall-security-uncommon-ports","key":"ruleKey"},{"key":"port","value":"80,443,20,21,22,23,53,3389,25,465,587,3306,5432,1521,1433,135,137,138,139,445","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure there are no VPC firewall rules that allow unrestricted inbound access on TCP or udp 1494 and 8010","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VPC Firewall with uncommon ports was publicly accessible","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"wall with Uncommon ports  should not be publicly accessible","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"VPC_UnCommon_ports_should_not_be_publicly_accessible","autofix":false,"alexaKeyword":"VPC_UnCommon_ports_should_not_be_publicly_accessible","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"VPC_UnCommon_ports_should_not_be_publicly_accessible","assetGroup":"gcp","ruleUUID":"VPC_UnCommon_ports_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_UnCommon_ports_should_not_be_publicly_accessible','ENABLED','ASGC','Deny Firewall public access to uncommon ports','2022-06-09','2022-06-09','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','MYSQLPortAcess','vpcfirewall','Gcp','VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','{"params":[{"encrypt":false,"value":"check-for-vpc-network-firewall-security","key":"ruleKey"},{"key":"port","value":"tcp:3306,tcp:0-65535","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure there are no VPC firewall rules that allow unrestricted inbound access on Mysql port 3306 ","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VPC Firewall with MYDQL port  3306 was publicly accessible","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"VPC Firewall with MYSQL port 3306  should not be publicly accessible","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"VPC_firewall_MYSQL_port_should_not_be_publicly_accessible","autofix":false,"alexaKeyword":"VPC_firewall_MYSQL_port_should_not_be_publicly_accessible","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"VPC_firewall_MYSQL_port_should_not_be_publicly_accessible","assetGroup":"gcp","ruleUUID":"VPC_firewall_MYSQL_port_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_MYSQL_port_should_not_be_publicly_accessible','ENABLED','ASGC','Deny Firewall public access to MySQL port 3306','2022-06-09','2022-06-09','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','ORACLEPortAcess','vpcfirewall','Gcp','VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','{"params":[{"encrypt":false,"value":"check-for-vpc-network-firewall-security","key":"ruleKey"},{"key":"port","value":"tcp:1521,tcp:0-65535","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure there are no VPC firewall rules that allow unrestricted inbound access on ORACLE DB port 1521 ","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VPC Firewall with ORACLE DB port  1521 was publicly accessible","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"VPC Firewall with Oracle DB  port 1521  should not be publicly accessible","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"VPC_firewall_ORACLE_port_should_not_be_publicly_accessible","autofix":false,"alexaKeyword":"VPC_firewall_ORACLE_port_should_not_be_publicly_accessible","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"VPC_firewall_ORACLE_port_should_not_be_publicly_accessible","assetGroup":"gcp","ruleUUID":"VPC_firewall_ORACLE_port_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_ORACLE_port_should_not_be_publicly_accessible','ENABLED','ASGC','Deny Firewall public access to Oracle port 1521','2022-06-09','2022-06-09','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','POSTGRESPortAccess','vpcfirewall','Gcp','VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','{"params":[{"encrypt":false,"value":"check-for-vpc-network-firewall-security","key":"ruleKey"},{"key":"port","value":"tcp:5432,tcp:0-65535","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure there are no VPC firewall rules that allow unrestricted inbound access on Postgres DB port 5432 ","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VPC Firewall with Postgres DB port  5432 was publicly accessible","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"VPC Firewall with POSTGRES DB  port 5432  should not be publicly accessible","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible","autofix":false,"alexaKeyword":"VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible","assetGroup":"gcp","ruleUUID":"VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_POSTGRES_port_should_not_be_publicly_accessible','ENABLED','ASGC','Deny Firewall public access to PostgreSQL port 5432','2022-06-09','2022-06-09','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VPC_firewall_RPC_port_should_not_be_publicly_accessible','VPC_firewall_RPC_port_should_not_be_publicly_accessible','VPC_firewall_RPC_port_should_not_be_publicly_accessible','RPCPortAccess','vpcfirewall','Gcp','VPC_firewall_RPC_port_should_not_be_publicly_accessible','{"params":[{"encrypt":false,"value":"check-for-vpc-network-firewall-security","key":"ruleKey"},{"key":"port","value":"tcp:135,tcp:0-65535","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure there are no VPC firewall rules that allow unrestricted inbound access on  RPC port 135 ","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VPC Firewall with Postgres RPC port  135 was publicly accessible","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"VPC Firewall with RPC  port 135  should not be publicly accessible","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"VPC_firewall_RPC_port_should_not_be_publicly_accessible","autofix":false,"alexaKeyword":"VPC_firewall_RPC_port_should_not_be_publicly_accessible","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"VPC_firewall_RPC_port_should_not_be_publicly_accessible","assetGroup":"gcp","ruleUUID":"VPC_firewall_RPC_port_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_RPC_port_should_not_be_publicly_accessible','ENABLED','ASGC','Deny Firewall public access to RPC port 135','2022-06-09','2022-06-09','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VPC_firewall_SMTP_port_should_not_be_publicly_accessible','VPC_firewall_SMTP_port_should_not_be_publicly_accessible','VPC_firewall_SMTP_port_should_not_be_publicly_accessible','SMTPPortAccess','vpcfirewall','Gcp','VPC_firewall_SMTP_port_should_not_be_publicly_accessible','{"params":[{"encrypt":false,"value":"check-for-vpc-network-firewall-security","key":"ruleKey"},{"key":"port","value":"tcp:25,tcp:0-65535","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure there are no VPC firewall rules that allow unrestricted inbound access on  SMTP port 25 ","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VPC Firewall with Postgres SMTP port  25 was publicly accessible","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"VPC Firewall with SMTP  port 25  should not be publicly accessible","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"VPC_firewall_SMTP_port_should_not_be_publicly_accessible","autofix":false,"alexaKeyword":"VPC_firewall_SMTP_port_should_not_be_publicly_accessible","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"VPC_firewall_SMTP_port_should_not_be_publicly_accessible","assetGroup":"gcp","ruleUUID":"VPC_firewall_SMTP_port_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_SMTP_port_should_not_be_publicly_accessible','ENABLED','ASGC','Deny Firewall public access to SMTP port 25','2022-06-09','2022-06-09','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','SMTPPortAccess','vpcfirewall','Gcp','VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','{"params":[{"encrypt":false,"value":"check-for-vpc-network-firewall-security","key":"ruleKey"},{"key":"port","value":"tcp:1433,tcp:0-65535","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure there are no VPC firewall rules that allow unrestricted inbound access on  SQL server port 1433 ","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VPC Firewall with Postgres SMTP port  25 was publicly accessible","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"VPC Firewall with SQL server  port 1433  should not be publicly accessible","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible","autofix":false,"alexaKeyword":"VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible","assetGroup":"gcp","ruleUUID":"VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_SQLSERVER_port_should_not_be_publicly_accessible','ENABLED','ASGC','Deny Public Access to SQL Port 1433','2022-06-09','2022-06-09','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Cloud_Storage_should_not_be_public','Cloud_Storage_should_not_be_public','Cloud_Storage_should_not_be_public','Cloud_Storage_should_not_be_public','cloudstorage','Gcp','Cloud_Storage_should_not_be_public','{"params":[{"encrypt":false,"value":"check-if-cloud-storage-has-public-access","key":"ruleKey"},{"key":"description","value":"Ensure there are no cloud storage buckets with public access ","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Google cloud storage should not have public access","isValueNew":true,"encrypt":false},{"key":"name","value":"cloudstorage","isValueNew":true,"encrypt":false},{"key":"policyName","value":"cloud storage should not have public access","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Cloud_Storage_should_not_be_public","autofix":false,"alexaKeyword":"Cloud_Storage_should_not_be_public","ruleRestUrl":"","targetType":"cloudstorage","pac_ds":"gcp","policyId":"Cloud_Storage_should_not_be_public","assetGroup":"gcp","ruleUUID":"Cloud_Storage_should_not_be_public","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Cloud_Storage_should_not_be_public','ENABLED','ASGC','Deny public access to Cloud Storage','2022-06-24','2022-06-24','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_Virtual_Machine_2FA_Rule','GCP_Virtual_Machine_2FA_Rule','GCP_Virtual_Machine_2FA_Rule','GCP_Virtual_Machine_2FA_Rule','vminstance','gcp','VirtualMachine2FA','{"params":[{"encrypt":false,"value":"check-for-vm-two-factor-authentication","key":"ruleKey"},{"key":"failure","value":"VM Instance does NOT have 2 Factor Authorisation","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"VM Instance has two factor authorisation ","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Ensure VM instances has 2 factor Authentication","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"GCP_Virtual_Machine_2FA_Rule","autofix":false,"alexaKeyword":"VirtualMachine2FA","ruleRestUrl":"","targetType":"vminstance","pac_ds":"gcp","policyId":"GCP_Virtual_Machine_2FA_Rule","assetGroup":"gcp","ruleUUID":"GCP_Virtual_Machine_2FA_Rule","ruleType":"ManageRule"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/GCP_Virtual_Machine_2FA_Rule'),'ENABLED','','Enable MFA for OS Login','2022-06-21','2022-06-21','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_PubSub_CMK_Encryption','GCP_PubSub_CMK_Encryption','GCP_PubSub_CMK_Encryption','GCP_PubSub_CMK_Encryption','pubsub','gcp','PubSubCMKEncryption','{"params":[{"encrypt":false,"value":"check-customer-managed-key-encryption","key":"ruleKey"},{"key":"description","value":"Ensure that Pub/Sub topics are encrypted using Customer-Managed Keys (CMKs).","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Google Pub sub is not encrypted using a Customer-Managed Key (CMK)","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_pubsub/_search","encrypt":false},{"key":"policyName","value":"Enable Pub sub Encryption with Customer-Managed Keys","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"GCP_PubSub_CMK_Encryption","autofix":false,"alexaKeyword":"PubSubCMKEncryption","ruleRestUrl":"","targetType":"pubsub","pac_ds":"gcp","policyId":"GCP_PubSub_CMK_Encryption","assetGroup":"gcp","ruleUUID":"GCP_PubSub_CMK_Encryption","ruleType":"ManageRule"}','0 0 1/1 * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/GCP_PubSub_CMK_Encryption'),'ENABLED','','Ensure that Pub/Sub topics are encrypted using Customer-Managed Keys (CMKs).','2022-07-01','2022-07-01','high','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Cloud_Storage_should_be_encrypted_with_CMK','Cloud_Storage_should_be_encrypted_with_CMK','Cloud_Storage_should_be_encrypted_with_CMK','Cloud_Storage_should_be_encrypted_with_CMK','cloudstorage','Gcp','Cloud_Storage_should_be_encrypted_with_CMK','{"params":[{"encrypt":false,"value":"check-if-cloud-storage-has-cmk-encryption","key":"ruleKey"},{"key":"description","value":"checks if cloud storage has customer managed key to encrypt data","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Google cloud storage is not encrypted with customer managed key","isValueNew":true,"encrypt":false},{"key":"name","value":"cloudstorage","isValueNew":true,"encrypt":false},{"key":"policyName","value":"cloud storage should be encrypted with customer managed key","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Cloud_Storage_should_be_encrypted_with_CMK","autofix":false,"alexaKeyword":"Cloud_Storage_should_be_encrypted_with_CMK","ruleRestUrl":"","targetType":"cloudstorage","pac_ds":"gcp","policyId":"Cloud_Storage_should_be_encrypted_with_CMK","assetGroup":"gcp","ruleUUID":"Cloud_Storage_should_be_encrypted_with_CMK","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Cloud_Storage_should_be_encrypted_with_CMK','ENABLED','ASGC','Use CMEK to encrypt Cloud Storage','2022-06-27','2022-06-27','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','SMTPPortAccess','vpcfirewall','Gcp','VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','{"params":[{"encrypt":false,"value":"check-for-vpc-network-firewall-outbound-security","key":"ruleKey"},{"key":"port","value":"udp:0-65535,tcp:0-65535","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure there are no VPC firewall rules that allow unrestricted outbound access ","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VPC Firewall with  unrestricted outbound  access","isValueNew":true,"encrypt":false},{"key":"name","value":"VirtualMachines","isValueNew":true,"encrypt":false},{"key":"policyName","value":"VPC Firewall with Egress ports  should not be publicly accessible","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible","autofix":false,"alexaKeyword":"VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible","assetGroup":"gcp","ruleUUID":"VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/VPC_firewall_OuBound_Egress_should_not_be_publicly_accessible','ENABLED','ASGC','Deny Firewall public egress on all ports','2022-06-09','2022-06-09','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','azure_Enable_Account_Create_Update_Load_Balancer_log_alert','Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','subscription','Azure','Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not configured to fire whenever Create or Update Load Balancer events are triggered.","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect Load Balancer events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.Network/loadBalancers/write","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Create or Update Load Balancer Assignment log alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert","autofix":false,"alexaKeyword":"Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Azure_Account_Create_or_Update_Load_Balancer_log_alert","assetGroup":"azure","ruleUUID":"azure_Enable_Account_Create_Update_Load_Balancer_log_alert","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Account_Create_Update_Load_Balancer_log_alert','ENABLED','ASGC','Enable log Alert for Create/Update Load Balancer','2022-05-16','2022-05-16','high','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_PubSubTagging_pubsub','gcp_pubsub_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','PubSubTaggingRule','pubsub','gcp','PubSubTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_PubSubTagging_pubsub","autofix":false,"alexaKeyword":"PubSubTaggingRule","ruleRestUrl":"","targetType":"pubsub","pac_ds":"gcp","policyId":"TaggingRule_version-1","assetGroup":"gcp","ruleUUID":"gcp_pubsub_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/gcp_pubsub_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','PubSub topics should be tagged with mandatory tags',{d '2022-06-16'},{d '2022-06-16'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_VpcFirewallTagging_vpcfirewall','gcp_vpcfirewall_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','VpcFirewallTaggingRule','vpcfirewall','gcp','VpcFirewallTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_VpcFirewallTagging_vpcfirewall","autofix":false,"alexaKeyword":"VpcFirewallTaggingRule","ruleRestUrl":"","targetType":"vpcfirewall","pac_ds":"gcp","policyId":"TaggingRule_version-1","assetGroup":"gcp","ruleUUID":"gcp_vpcfirewall_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/gcp_vpcfirewall_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to VPC Firewall',{d '2022-06-16'},{d '2022-06-16'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_CloudStorageTagging_cloudstorage','gcp_cloudstorage_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','CloudStorageTaggingRule','cloudstorage','gcp','CloudStorageTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_CloudStorageTagging_cloudstorage","autofix":false,"alexaKeyword":"CloudStorageTaggingRule","ruleRestUrl":"","targetType":"cloudstorage","pac_ds":"gcp","policyId":"TaggingRule_version-1","assetGroup":"gcp","ruleUUID":"gcp_cloudstorage_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/gcp_cloudstorage_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to CloudStorage',{d '2022-06-16'},{d '2022-06-16'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_BigQueryDatasetTagging_bigquerydataset','gcp_bigquerydataset_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','BigQueryDatasetTaggingRule','bigquerydataset','gcp','BigQueryDatasetTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_BigQueryDatasetTagging_bigquerydataset","autofix":false,"alexaKeyword":"BigQueryDatasetTaggingRule","ruleRestUrl":"","targetType":"bigquerydataset","pac_ds":"gcp","policyId":"TaggingRule_version-1","assetGroup":"gcp","ruleUUID":"gcp_bigquerydataset_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/gcp_bigquerydataset_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','Assign Mandatory Tags to BigQueryDataset',{d '2022-06-16'},{d '2022-06-16'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_CloudSqlTagging_cloudsql','gcp_cloudsql_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','CloudSQLTaggingRule','cloudsql','gcp','CloudSQLTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_CloudSqlTagging_cloudsql","autofix":false,"alexaKeyword":"CloudSqlTaggingRule","ruleRestUrl":"","targetType":"cloudsql","pac_ds":"gcp","policyId":"TaggingRule_version-1","assetGroup":"gcp","ruleUUID":"gcp_cloudsql_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/gcp_cloudsql_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','CloudSQL should be tagged with mandatory tags',{d '2022-06-16'},{d '2022-06-16'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TaggingRule_version-1_BigQueryTableTagging_bigquerytable','gcp_bigquerytable_should_be_tagged_with_mandatory_tags','TaggingRule_version-1','BigQueryTableTaggingRule','bigquerytable','gcp','BigQueryTableTaggingRule','{"params":[{"encrypt":false,"value":"check-for-missing-mandatory-tags","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TaggingRule_version-1_BigQueryTableTagging_bigquerytable","autofix":false,"alexaKeyword":"BigQueryTableTaggingRule","ruleRestUrl":"","targetType":"bigquerytable","pac_ds":"gcp","policyId":"TaggingRule_version-1","assetGroup":"gcp","ruleUUID":"gcp_bigquerytable_should_be_tagged_with_mandatory_tags","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/gcp_bigquerytable_should_be_tagged_with_mandatory_tags'),'ENABLED','ASGC','BigQueryTable should be tagged with mandatory tags',{d '2022-06-16'},{d '2022-06-16'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_DataProc_CMK_Encryption','GCP_DataProc_CMK_Encryption','GCP_DataProc_CMK_Encryption','GCP_DataProc_CMK_Encryption','dataproc','gcp','DataProcCMKEncryption','{"params":[{"encrypt":false,"value":"check-customer-managed-key-encryption","key":"ruleKey"},{"key":"description","value":"Ensure that data proc clusters are encrypted using Customer-Managed Keys (CMKs).","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Google Dataproc clusters is not encrypted using a Customer-Managed Key (CMK)","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_dataproc/_search","encrypt":false},{"key":"policyName","value":"Enable Dataproc clusters Encryption with Customer-Managed Keys","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"GCP_DataProc_CMK_Encryption","autofix":false,"alexaKeyword":"DataProcCMKEncryption","ruleRestUrl":"","targetType":"dataproc","pac_ds":"gcp","policyId":"GCP_DataProc_CMK_Encryption","assetGroup":"gcp","ruleUUID":"GCP_DataProc_CMK_Encryption","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/GCP_DataProc_CMK_Encryption'),'ENABLED','ASGC','Use CMEK to encrypt Dataproc Clusters',{d '2022-07-19'},{d '2022-07-19'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Network_Security_for_SQLSERVER','enable_network_security_SQLSERVER','Enable_Network_Security_for_SQLSERVER','Enable_Network_Security_for_SQLSERVER','nsg','azure','SQLSERVER','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-azure-nsg-rule\",\"key\":\"ruleKey\"},{\"key\":\"protocol\",\"value\":\"udp\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"port\",\"value\":\"1434\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny public access to SQL Server port 1434\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"critical\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Network_Security_for_SQLSERVER\",\"autofix\":false,\"alexaKeyword\":\"Enable Network Security for SQLSERVER\",\"ruleRestUrl\":\"\",\"targetType\":\"nsg\",\"pac_ds\":\"azure\",\"policyId\":\"Enable_Network_Security_for_SQLSERVER\",\"assetGroup\":\"azure\",\"ruleUUID\":\"azure_enable_network_security_SQLSERVER\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/azure_enable_network_security_SQLSERVER'),'ENABLED','','Deny Public Access to SQL Server Port 1434','2022-05-02','2022-05-02','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_VM_Instance_Migrate','GCP_VM_Instance_Migrate','GCP_VM_Instance_Migrate','GCP_VM_Instance_Migrate','vminstance','gcp','VMInstanceMigrate','{"params":[{"encrypt":false,"value":"check-for-vminstance-migrate-on-maintenance","key":"ruleKey"},{"key":"description","value":"checks if virtual machine instance will be migrated on maintenance","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VM instance will be terminated on maintenance event","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_vminstance/_search","encrypt":false},{"key":"policyName","value":"VM instance should be migrated during maintenance","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"operations","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"GCP_VM_Instance_Migrate","autofix":false,"alexaKeyword":"VMInstanceMigrate","ruleRestUrl":"","targetType":"vminstance","pac_ds":"gcp","policyId":"GCP_VM_Instance_Migrate","assetGroup":"gcp","ruleUUID":"GCP_VM_Instance_Migrate","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/GCP_VM_Instance_Migrate'),'ENABLED','ASGC','VM instance should be migrated during maintenance',{d '2022-08-01'},{d '2022-08-01'},'critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_KeyVault_Key_ExpiryDate','Azure_KeyVault_Key_ExpiryDate','Azure_KeyVault_Key_ExpiryDate','Azure_KeyVault_Key_ExpiryDate','vaults','Azure','KeyVaultKeyExpirationDate','{"params":[{"encrypt":false,"value":"key-should-have-expiration-date","key":"ruleKey"},{"key":"failure","value":"Key vault key does not have expiration date","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"Key vault key has expiration date","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Set expiration date for key in vault key","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_KeyVault_Key_ExpiryDate","autofix":false,"alexaKeyword":"KeyVaultKeyExpirationDate","ruleRestUrl":"","targetType":"vaults","pac_ds":"azure","policyId":"Azure_KeyVault_Key_ExpiryDate","assetGroup":"azure","ruleUUID":"Azure_KeyVault_Key_ExpiryDate","ruleType":"ManageRule"}','0 0/12 * * ? *','','','ManageRule',concat('arn:aws:events:',@region,':',@account,':rule/Azure_KeyVault_Key_ExpiryDate'),'ENABLED','ASGC','Set Expiration Date for Keys in Key Vault',{d '2022-08-05'},{d '2022-08-05'},'critical','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ensure_web_app_using_latest_version_of_the_HTTP_protocol','Ensure_web_app_using_latest_version_of_the_HTTP_protocol','Ensure_web_app_using_latest_version_of_the_HTTP_protocol','Ensure_web_app_using_latest_version_of_the_HTTP_protocol','webapp','azure','web_app_using_latest_version_of_the_HTTP_protocol','{"params":[{"encrypt":false,"value":"check-for-webapp-Http-protocal-latest-vesion","key":"ruleKey"},{"key":"description","value":" Ensure that your Microsoft Azure App Service web applications are using the latest version of the HTTP protocol","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Microsoft Azure App Service web applications are not using the latest version of the HTTP protocol","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Ensure  Azure App Service web applications are using the latest version of the HTTP protocol 2.0","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Ensure_web_app_using_latest_version_of_the_HTTP_protocol","autofix":false,"alexaKeyword":"web_app_using_latest_version_of_the_HTTP_protocol","ruleRestUrl":"","targetType":"webapp","pac_ds":"azure","policyId":"Ensure_web_app_using_latest_version_of_the_HTTP_protocol","assetGroup":"azure","ruleUUID":"Ensure_web_app_using_latest_version_of_the_HTTP_protocol","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_web_app_using_latest_version_of_the_HTTP_protocol','ENABLED','ASGC','Enable the HTTP/2 protocol Azure App Service Web applications','2022-07-19','2022-07-19','low','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Deny_access_to_Kubernate_Engine_cluster','Deny_access_to_Kubernate_Engine_cluster','Deny_access_to_Kubernate_Engine_cluster','Deny_access_to_Kubernate_Engine_cluster','gkecluster','gcp','Kubernate_Engine_cluster','{"params":[{"encrypt":false,"value":"check-access-for-gke-cluster","key":"ruleKey"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Deny_access_to_Kubernate_Engine_cluster","autofix":false,"alexaKeyword":"Kubernate_Engine_cluster","ruleRestUrl":"","targetType":"webapp","pac_ds":"azure","policyId":"Deny_access_to_Kubernate_Engine_cluster","assetGroup":"azure","ruleUUID":"Deny_access_to_Kubernate_Engine_cluster","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Deny_access_to_Kubernate_Engine_cluster','ENABLED','ASGC','Deny access to GKE Cluster','2022-07-19','2022-07-19','low','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_sql_database_high_availability_rule','GCP_sql_database_high_availability_rule','GCP_sql_database_high_availability_rule-1','SQL database should be highly available','cloudsql','gcp','SQLDatabaseHighAvilability','{"params":[{"encrypt":false,"value":"check-if-sql-db-is-highly-available","key":"ruleKey"},{"key":"description","value":"Configure sql db instances for high availability","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"SQL db instances are not highly available","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_cloudsql/_search","encrypt":false},{"key":"policyName","value":"Production Cloud SQL database instances should be configured for high availability","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"operations","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"GCP_sql_database_high_availability_rule","autofix":false,"alexaKeyword":"SQLDatabaseHighAvilability","ruleRestUrl":"","targetType":"cloudsql","pac_ds":"gcp","policyId":"GCP_sql_database_high_availability_rule-1","assetGroup":"gcp","ruleUUID":"GCP_sql_database_high_availability_rule","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_sql_database_high_availability_rule','ENABLED','ASGC','Configure Production Cloud SQL Database Instances for High Availability','2022-08-09','2022-08-09','high','operations');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('trusted_ms_services_access_storage_account','trusted_ms_services_access_storage_account','trusted_ms_services_access_storage_account','Enable trusted microsoft services to access Storage Account','storageaccount','Azure','trustedMicrosoftservicesAccesstoStorageAccount','{"params":[{"encrypt":false,"value":"Enable-Trusted-Microsoft-Services-for-storage-Account-Access","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"trusted_ms_services_access_storage_account","autofix":false,"alexaKeyword":"CheckStorageAccountPublicAccess","ruleRestUrl":"","targetType":"storageaccount","pac_ds":"azure","policyId":"trusted_ms_services_access_storage_account","assetGroup":"azure","ruleUUID":"trusted_ms_services_access_storage_account","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/trusted_ms_services_access_storage_account','ENABLED','ASGC','Enable Trusted Microsoft Services to Access Storage Account','2022-06-03','2022-06-03','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Encrypt_App_Layer_secrets_for_GKE_Cluster','Encrypt_App_Layer_secrets_for_GKE_Cluster','Encrypt_App_Layer_secrets_for_GKE_Cluster','Encrypt App layer secret in GKE Cluster','gkecluster','gcp','Kubernate_Engine_cluster','{"params":[{"encrypt":false,"value":"encrypt-App-layer-secret-in-GKE-Cluster","key":"ruleKey"},{"key":"description","value":"Use CMK to encrypt App layer secrets for GKE cluster","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"App-Layer secrets encryption is not enable using cmk.","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_gkecluster/_search","encrypt":false},{"key":"policyName","value":"Encrypt App layer secret in GKE Cluster","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Encrypt_App_Layer_secrets_for_GKE_Cluster","autofix":false,"alexaKeyword":"Kubernate_Engine_cluster","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"azure","policyId":"Encrypt_App_Layer_secrets_for_GKE_Cluster","assetGroup":"gcp","ruleUUID":"Encrypt_App_Layer_secrets_for_GKE_Cluster","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Encrypt_App_Layer_secrets_for_GKE_Cluster','ENABLED','ASGC','Encrypt App Layer secrets for GKE Cluster','2022-07-19','2022-07-19','low','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Encrypt_GKE_Cluster_Node_with_CMK','Encrypt_GKE_Cluster_Node_with_CMK','Encrypt_GKE_Cluster_Node_with_CMK','Use CMK to encrypt GKE Cluster Node','gkecluster','gcp','Kubernate_Engine_cluster','{\"params\":[{\"encrypt\":false,\"value\":\"check-node-encryption-access-for-gke-cluster\",\"key\":\"ruleKey\"},{\"key\":\"description\",\"value\":\"Use CMK to encrypt GKE Cluster Node\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"GKE Cluster node encryption is not enable using cmk.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_gkecluster/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Use CMK to encrypt GKE Cluster Node\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"high\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Encrypt_GKE_Cluster_Node_with_CMK\",\"autofix\":false,\"alexaKeyword\":\"Kubernate_Engine_cluster\",\"ruleRestUrl\":\"\",\"targetType\":\"gkecluster\",\"pac_ds\":\"gcp\",\"policyId\":\"Encrypt_GKE_Cluster_Node_with_CMK\",\"assetGroup\":\"gcp\",\"ruleUUID\":\"Encrypt_GKE_Cluster_Node_with_CMK\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Use CMK to encrypt GKE Cluster Node','ENABLED','ASGC','Use CMK to encrypt GKE Cluster Node','2022-07-19','2022-07-19','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Automated_backups_for_sql_database','Enable_Automated_backups_for_sql_database','Enable_Automated_backups_for_sql_database','Enable Automated backups for cloud sql database','cloudstorage','gcp','Enable_Automated_backups_for_sql_database','{"params":[{"encrypt":false,"value":"check-if-cloud-storage-has-automated-backups-enabled","key":"ruleKey"},{"key":"description","value":"check if the automated backups are enabled for all Cloud SQL database instances","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Automated backups are not enabled for Google cloud sql database.","isValueNew":true,"encrypt":false},{"key":"name","value":"cloudstorage","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Automated backups for cloud sql database","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Automated_backups_for_sql_database","autofix":false,"alexaKeyword":"Enable_Automated_backups_for_sql_database","ruleRestUrl":"","targetType":"cloudstorage","pac_ds":"gcp","policyId":"Enable_Automated_backups_for_sql_database","assetGroup":"gcp","ruleUUID":"Enable_Automated_backups_for_sql_database","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Automated_backups_for_sql_database','ENABLED','ASGC','Enable Automated Backups for Cloud SQL Database','2022-07-19','2022-07-19','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Deny_public_ip_for_sql','Deny_public_ip_for_sql','Deny_public_ip_for_sql','SQL DB instances should not have public IP','cloudsql','gcp','Deny_public_ip_for_sql','{"params":[{"encrypt":false,"value":"check-if-ip-public-for-db","key":"ruleKey"},{"key":"description","value":"SQL DB instances should not have public IP","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"SQL DB instances should not have public IP","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_cloudsql/_search","encrypt":false},{"key":"policyName","value":"SQL database instances should not use public IP addresses","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Deny_public_ip_for_sql","autofix":false,"alexaKeyword":"Deny_public_ip_for_sql","ruleRestUrl":"","targetType":"cloudsql","pac_ds":"gcp","policyId":"Deny_public_ip_for_sql","assetGroup":"gcp","ruleUUID":"Deny_public_ip_for_sql","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Deny_public_ip_for_sql','ENABLED','ASGC','SQL database instances should not use public IP addresses','2022-08-18','2022-08-18','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Authentication_For_WebApp','azure_Enable_Authentication_For_WebApp','Enable_Authentication_For_WebApp','Enable_Authentication_For_WebApp','webapp','azure','Enable_Authentication_For_WebApp','{"params":[{"encrypt":false,"value":"check-if-auth-enabled-app-service","key":"ruleKey"},{"key":"policyName","value":"App Service web app authentication should be enabled","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Authentication_For_WebApp","autofix":false,"alexaKeyword":"Enable_Authentication_For_WebApp","ruleRestUrl":"","targetType":"webapp","pac_ds":"azure","policyId":"Enable_Authentication_For_WebApp","assetGroup":"azure","ruleUUID":"azure_Enable_Authentication_For_WebApp","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/azure_Enable_Authentication_For_WebApp','ENABLED','ASGC','App Service web app authentication should be enabled','2022-08-16','2022-08-16','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ensure_cross_DB_ownership_flag_disabled_for_SQL','Ensure_cross_DB_ownership_flag_disabled_for_SQL','Ensure_cross_DB_ownership_flag_disabled_for_SQL','Ensure_cross_DB_ownership_flag_disabled_for_SQL','cloudsql','gcp','CrossDBOwnership','{"params":[{"encrypt":false,"value":"check-if-sql-instance-owner-changing-flag-disabled","key":"ruleKey"},{"key":"description","value":"Use CMK to encrypt GKE Cluster Node","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"GKE Cluster node encryption is not enable using cmk.","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_gkecluster/_search","encrypt":false},{"key":"policyName","value":"Ensure cross DB ownership flag is disabled for SQL DB Server","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Ensure_cross_DB_ownership_flag_disabled_for_SQL","autofix":false,"alexaKeyword":"CrossDBOwnership","ruleRestUrl":"","targetType":"cloudsql","pac_ds":"gcp","policyId":"Ensure_cross_DB_ownership_flag_disabled_for_SQL","assetGroup":"gcp","ruleUUID":"Ensure_cross_DB_ownership_flag_disabled_for_SQL","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_cross_DB_ownership_flag_disabled_for_SQL','ENABLED','ASGC','Ensure cross DB ownership flag is disabled for SQL DB Server','2022-07-19','2022-07-19','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','webapp','azure','Redirect_all_HTTP_to_HTTPS','{"params":[{"encrypt":false,"value":"check-for-https-only-rule","key":"ruleKey"},{"key":"description","value":"Ensure Web App Redirects All HTTP traffic to HTTPS","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"web apps does not alllow Http traffic to Https","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Ensure Web App Redirects All HTTP traffic to HTTPS","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS","autofix":false,"alexaKeyword":"web_app_using_latest_version_of_the_HTTP_protocol","ruleRestUrl":"","targetType":"webapp","pac_ds":"azure","policyId":"Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS","assetGroup":"azure","ruleUUID":"Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_Web_App_Redirects_All_HTTP_traffic_to_HTTPS','ENABLED','ASGC','Ensure Web App Redirects All HTTP traffic to HTTPS','2022-07-19','2022-07-19','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_Web_App_traffic_to_plain_Ftp','Disable_Web_App_traffic_to_plain_Ftp','Disable_Web_App_traffic_to_plain_Ftp','Disable Plain FTP Deployment','webapp','azure','Disable_Web_App_traffic_to_plain_Ftp','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-ftp-rule\",\"key\":\"ruleKey\"},{\"key\":\"description\",\"value\":\"disable ftp deployment\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"web apps does allow traffic on ftp.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/azure_webapp/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Disable Plain FTP Deployment\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Disable_Web_App_traffic_to_plain_Ftp\",\"autofix\":false,\"alexaKeyword\":\"Disable_Web_App_traffic_to_plain_Ftp\",\"ruleRestUrl\":\"\",\"targetType\":\"webapp\",\"pac_ds\":\"azure\",\"policyId\":\"Disable_Web_App_traffic_to_plain_Ftp\",\"assetGroup\":\"azure\",\"ruleUUID\":\"Disable_Web_App_traffic_to_plain_Ftp\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Web_App_traffic_to_plain_Ftp','ENABLED','ASGC','Disable Plain FTP Deployment','2022-07-19','2022-07-19','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ensure_Web_App_latest_TLS_version','Ensure_Web_App_latest_TLS_version','Enable_latest_TLS_version','Enable WebApp min TLS version is latest','webapp','azure','Ensure_Web_App_min_TLS_version_latest','{"params":[{"encrypt":false,"value":"check-for-Tls-version-rule","key":"ruleKey"},{"key":"description","value":"check TLS Protocol Latest Version","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"webapp min Tls version is not 1.2","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/azure_webapp/_search","encrypt":false},{"key":"policyName","value":"Enable WebApp min TLS version is 1.2","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"1.2","key":"minTlsVersion"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Ensure_Web_App_latest_TLS_version","autofix":false,"alexaKeyword":"Ensure_Web_App_min_TLS_version_latest","ruleRestUrl":"","targetType":"webapp","pac_ds":"azure","policyId":"Enable_latest_TLS_version","assetGroup":"azure","ruleUUID":"Ensure_Web_App_latest_TLS_version","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_Web_App_latest_TLS_version','ENABLED','ASGC','Enable WebApp min TLS version is latest version','2022-07-19','2022-07-19','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','clouddns','gcp','clouddns','{"params":[{"encrypt":false,"value":"check-DNS-Sec-config-state-enabled","key":"ruleKey"},{"key":"policyName","value":"Ensure DNSSEC security feature is enabled for Google Cloud DNS managed zones","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones","autofix":false,"alexaKeyword":"sqlserver","ruleRestUrl":"","targetType":"clouddns","pac_ds":"gcp","policyId":"Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones","assetGroup":"gcp","ruleUUID":"Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_DNSSEC_security_feature_enabled_for_DNS_managed_zones','ENABLED','ASGC','Ensure DNSSEC security feature is enabled for Google Cloud DNS managed zones','2022-08-16','2022-08-16','medium','security');

INSERT IGNORE INTO cf_RuleInstance(ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','Disable External Scripts Enabled Flag for SQL Server Database Instances','cloudsql_sqlserver','gcp','sqlserver','{"params":[{"encrypt":false,"value":"check-if-external-script-Enabled-flag-for-sql-server-disabled","key":"ruleKey"},{"key":"dataBaseType","value":"SQLSERVER","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"external scripts enabled","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Disable External Scripts Enabled Flag for SQL Server Database Instances","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_External_scripts_enabled_for_SQL_Server_DB_Instances","autofix":false,"alexaKeyword":"sqlserver","ruleRestUrl":"","targetType":"cloudsql_sqlserver","pac_ds":"gcp","policyId":"Disable_External_scripts_enabled_for_SQL_Server_DB_Instances","assetGroup":"gcp","ruleUUID":"Disable_External_scripts_enabled_for_SQL_Server_DB_Instances","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_External_scripts_enabled_for_SQL_Server_DB_Instances','ENABLED','ASGC','Disable External Scripts Enabled Flag for SQL Server Database Instances','2022-07-19','2022-07-19','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Client_Certificate_for_webApp','Enable_Client_Certificate_for_webApp','Enable_Client_Certificate_for_webApp','Enable_Client_Certificate_for_webApp','webapp','Azure','Enable_Client_Certificate_for_webApp','{"params":[{"encrypt":false,"value":"enable-client-cert-webapp-rule","key":"ruleKey"},{"key":"policyName","value":"Enable  Client Certificate for Web App","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Client_Certificate_for_webApp","autofix":false,"alexaKeyword":"Enable_Client_Certificate_for_webApp","ruleRestUrl":"","targetType":"webapp","pac_ds":"azure","policyId":"Enable_Client_Certificate_for_webApp","assetGroup":"azure","ruleUUID":"Enable_Client_Certificate_for_webApp","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Client_Certificate_for_webApp','ENABLED','ASGC','Enable  Client Certificate for Web App','2022-08-16','2022-08-16','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','Disable Contained Database Authentication Flag for SQL Server Database Instances','cloudsql_sqlserver','gcp','sqlserver','{"params":[{"encrypt":false,"value":"disable-contained-database-Auth-flag-for-sql-server","key":"ruleKey"},{"key":"dataBaseType","value":"SQLSERVER","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"contained database authentication","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Disable Contained Database Authentication Flag for SQL Server Database Instances","isValueNew":true,"encrypt":false},{"key":"description","value":"users within a contained database that have the ALTER ANY USER permission can grant access to the database without the knowledge or permission of the SQL Server administrator and also prone to DOS Attack","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"contained database authentication flag is enabled for your Google Cloud SQL Server database instances","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances","autofix":false,"alexaKeyword":"sqlserver","ruleRestUrl":"","targetType":"cloudsql_sqlserver","pac_ds":"gcp","policyId":"Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances","assetGroup":"gcp","ruleUUID":"Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Contained_DB_Auth_Flag_for_SQL_Server_DB_Instances','ENABLED','ASGC','Disable Contained Database Authentication Flag for SQL Server Database Instances','2022-07-19','2022-07-19','medium','security');


INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Client_Certificate_Function_App','Enable_Client_Certificate_Function_App','Enable_Client_Certificate_Function_App','Client certificates enabled for function app','functionapp','azure','Enable_Client_Certificate_Function_App','{"params":[{"encrypt":false,"value":"check-for-functionapp-incoming-certificate-enabled","key":"ruleKey"},{"key":"failure","value":"Incoming client certificate is NOT enabled for function app","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"Incoming client certificate is enabled for function app","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Incoming client certificates for function app","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Client_Certificate_Function_App","autofix":false,"alexaKeyword":"Enable_Client_Certificate_Function_App","ruleRestUrl":"","targetType":"functionapp","pac_ds":"azure","policyId":"Enable_Client_Certificate_Function_App","assetGroup":"azure","ruleUUID":"Enable_Client_Certificate_Function_App","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Client_Certificate_Function_App','ENABLED','ASGC','Enable Incoming Client Certificates for Function App','2022-08-23','2022-08-23','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','DisableRemoteAccessFlag','cloudsql_sqlserver','gcp','sqlserver','{"params":[{"encrypt":false,"value":"disable-contained-database-Auth-flag-for-sql-server","key":"ruleKey"},{"key":"dataBaseType","value":"SQLSERVER","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"remote access","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Disable Database Remote Access flag for SQL Server Instances","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure that remote access database flag is disabled for your Google Cloud SQL Server database instances.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"remote access flag is enabled for your Google Cloud SQL Server database instances","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances","autofix":false,"alexaKeyword":"sqlserver","ruleRestUrl":"","targetType":"cloudsql_sqlserver","pac_ds":"gcp","policyId":"Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances","assetGroup":"gcp","ruleUUID":"Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Remote_Access_Flag_for_SQL_Server_DB_Instances','ENABLED','ASGC','Disable Database Remote Access Flag for SQL Server Database Instances','2022-08-29','2022-08-29','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Deny_allowlist_all_public_ip_for_sql','Deny_allowlist_all_public_ip_for_sql','Deny_allowlist_all_public_ip_for_sql','Deny Allowlist of all Public IP Addresses Cloud SQL Database Instances','cloudsql','gcp','Deny_allowlist_all_public_ip_for_sql','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-allowlist-all-public-ip-for-db\",\"key\":\"ruleKey\"},{\"key\":\"description\",\"value\":\"Ensure that your Google Cloud SQL database instances are configured to accept connections from trusted networks and IP addresses only.\n\n \",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"SQL DB instances have allowed all public IP\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_cloudsql/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Deny Allowlist of all Public IP Addresses Cloud SQL Database Instances\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Deny_allowlist_all_public_ip_for_sql\",\"autofix\":false,\"alexaKeyword\":\"Deny_allowlist_all_public_ip_for_sql\",\"ruleRestUrl\":\"\",\"targetType\":\"cloudsql\",\"pac_ds\":\"gcp\",\"policyId\":\"Deny_allowlist_all_public_ip_for_sql\",\"assetGroup\":\"gcp\",\"ruleUUID\":\"Deny_allowlist_all_public_ip_for_sql\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Deny_allowlist_all_public_ip_for_sql','ENABLED','ASGC','Deny Allowlist of all Public IP Addresses Cloud SQL Database Instances','2022-08-29','2022-08-29','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_latest_TLS_version','Enable_latest_TLS_version','Enable_latest_TLS_version','Enable storage account min Tls version set to latest','storageaccount','azure','Enable_latest_TLS_version','{"params":[{"encrypt":false,"value":"check-for-latest-Tls-version-rule","key":"ruleKey"},{"key":"dataBaseType","value":"SQLSERVER","isValueNew":true,"encrypt":false},{"key":"minimumTlsVersion","value":"TLS1_2","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable storage account min Tls version set to latest","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_latest_TLS_version","autofix":false,"alexaKeyword":"Enable_latest_TLS_version","ruleRestUrl":"","targetType":"storageaccount","pac_ds":"azure","policyId":"Enable_latest_TLS_version","assetGroup":"azure","ruleUUID":"Enable_latest_TLS_version","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_latest_TLS_version','ENABLED','ASGC','Enable storage account min Tls version set to latest','2022-08-29','2022-08-29','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Default_Network_should_Not_Exist_in_a_Project','Default_Network_should_Not_Exist_in_a_Project','Default_Network_should_Not_Exist_in_a_Project','Default Network should Not Exist in a Project','networks','gcp','Cloud Vpc Networks','{"params":[{"encrypt":false,"value":"check-default-vpc-used-in-project","key":"ruleKey"},{"key":"policyName","value":"Default Network should Not Exist in a Project","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Default_Network_should_Not_Exist_in_a_Project","autofix":false,"alexaKeyword":"Cloud Vpc Networks","ruleRestUrl":"","targetType":"networks","pac_ds":"gcp","policyId":"Default_Network_should_Not_Exist_in_a_Project","assetGroup":"gcp","ruleUUID":"Default_Network_should_Not_Exist_in_a_Project","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Default_Network_should_Not_Exist_in_a_Project','ENABLED','ASGC','Ensure that Default Network does not Exist in a Project','2022-08-29','2022-08-29','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_3625_Flag_for_SQL_Server_DB_Instances','Disable_3625_Flag_for_SQL_Server_DB_Instances','Disable_3625_Flag_for_SQL_Server_DB_Instances','3625 database flag should be off','cloudsql_sqlserver','gcp','sqlserver','{"params":[{"encrypt":false,"value":"disable-contained-database-Auth-flag-for-sql-server","key":"ruleKey"},{"key":"dataBaseType","value":"SQLSERVER","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"3625","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Disable \'3625 (trace flag)\' database flag for Cloud SQL Server instance","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure that 3625 (trace flag) database flag is disabled for your Google Cloud SQL Server database instances.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"3625(trace flag) is enabled for your Google Cloud SQL Server database instances","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_3625_Flag_for_SQL_Server_DB_Instances","autofix":false,"alexaKeyword":"sqlserver","ruleRestUrl":"","targetType":"cloudsql_sqlserver","pac_ds":"gcp","policyId":"Disable_3625_Flag_for_SQL_Server_DB_Instances","assetGroup":"gcp","ruleUUID":"Disable_3625_Flag_for_SQL_Server_DB_Instances","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_3625_Flag_for_SQL_Server_DB_Instances','ENABLED','ASGC','Disable 3625 (trace flag) database flag for Cloud SQL Server instance','2022-08-20','2022-08-20','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_keyvault_delete_protection','Enable_keyvault_delete_protection','Enable_keyvault_delete_protection','Enable keyvault delete protection','vaults','azure','Enable_keyvault_delete_protection','{"params":[{"encrypt":false,"value":"keyvault-delete-protection","key":"ruleKey"},{"key":"policyName","value":"Enable keyvault delete protection","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_keyvault_delete_protection","autofix":false,"alexaKeyword":"Enable_keyvault_delete_protection","ruleRestUrl":"","targetType":"vaults","pac_ds":"azure","policyId":"Enable_keyvault_delete_protection","assetGroup":"azure","ruleUUID":"Enable_keyvault_delete_protection","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_keyvault_delete_protection','ENABLED','ASGC','Enable Delete Protection for the Key Vault','2022-08-23','2022-08-23','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','Enforce cloud SQL incoming Connections To Use SSL','cloudsql','gcp','Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','{"params":[{"encrypt":false,"value":"enforce-ssl-to-cloud-sql","key":"ruleKey"},{"key":"policyName","value":"Enforce cloud SQL incoming Connections To Use SSL","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enforce_cloud_SQL_incoming_Connections_To_Use_SSL","autofix":false,"alexaKeyword":"Enforce_cloud_SQL_incoming_Connections_To_Use_SSL","ruleRestUrl":"","targetType":"cloudsql","pac_ds":"gcp","policyId":"Enforce_cloud_SQL_incoming_Connections_To_Use_SSL","assetGroup":"gcp","ruleUUID":"Enforce_cloud_SQL_incoming_Connections_To_Use_SSL","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','ENABLED','ASGC','Enforce cloud SQL incoming Connections To Use SSL','2022-08-16','2022-08-16','medium','security');


INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Deny_Default_Network_Access_Rule_for_Storage_Accounts','Deny_Default_Network_Access_Rule_for_Storage_Accounts','Deny_Default_Network_Access_Rule_for_Storage_Accounts','Deny Default Network Access Rule for Storage Accounts','storageaccount','azure','Deny_Default_Network_Access_Rule_for_Storage_Accounts','{"params":[{"encrypt":false,"value":"restrict-default-network-access","key":"ruleKey"},{"key":"policyName","value":" Default Network Access Rule for Storage Accounts","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Deny_Default_Network_Access_Rule_for_Storage_Accounts","autofix":false,"alexaKeyword":"Deny_Default_Network_Access_Rule_for_Storage_Accounts","ruleRestUrl":"","targetType":"storageaccount","pac_ds":"azure","policyId":"Deny_Default_Network_Access_Rule_for_Storage_Accounts","assetGroup":"azure","ruleUUID":"Deny_Default_Network_Access_Rule_for_Storage_Accounts","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Deny_Default_Network_Access_Rule_for_Storage_Accounts','ENABLED','ASGC','Deny Network Access Rule for Storage Accounts','2022-08-23','2022-08-23','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Legacy_Subnet_should_Not_Exist_in_a_Project','Legacy_Subnet_should_Not_Exist_in_a_Project','Legacy_Subnet_should_Not_Exist_in_a_Project','subnet mode should be custom','networks','gcp','Cloud Vpc Networks','{"params":[{"encrypt":false,"value":"check-subnet-mode-is-legacy-vpc","key":"ruleKey"},{"key":"policyName","value":"Subnet mode for VPC should not be legacy","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Legacy_Subnet_should_Not_Exist_in_a_Project","autofix":false,"alexaKeyword":"Cloud Vpc Networks","ruleRestUrl":"","targetType":"networks","pac_ds":"gcp","policyId":"Legacy_Subnet_should_Not_Exist_in_a_Project","assetGroup":"gcp","ruleUUID":"Legacy_Subnet_should_Not_Exist_in_a_Project","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Legacy_Subnet_should_Not_Exist_in_a_Project','ENABLED','ASGC','Deny Legacy Subnet Mode for VPC','2022-09-12','2022-09-12','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Uniform_Bucket_Level_Access','Enable_Uniform_Bucket_Level_Access','Enable_Uniform_Bucket_Level_Access','Enable Uniform Bucket-Level Access for cloud storage Buckets','cloudstorage','Gcp','Enable_Uniform_Bucket_Level_Access','{"params":[{"encrypt":false,"value":"check-if-cloud-storage-has-uniform-bucket-level-access-enabled","key":"ruleKey"},{"key":"description","value":"check if cloud storage has uniform bucket level access enabled","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Uniform Bucket-level access is not enabled","isValueNew":true,"encrypt":false},{"key":"name","value":"cloudstorage","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_cloudstorage/_search","encrypt":false},{"key":"policyName","value":"Enable Uniform Bucket-Level Access for cloud storage Buckets","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Uniform_Bucket_Level_Access","autofix":false,"alexaKeyword":"Enable_Uniform_Bucket_Level_Access","ruleRestUrl":"","targetType":"cloudstorage","pac_ds":"gcp","policyId":"Enable_Uniform_Bucket_Level_Access","assetGroup":"gcp","ruleUUID":"Enable_Uniform_Bucket_Level_Access","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Uniform_Bucket_Level_Access','ENABLED','ASGC','Enable Uniform Bucket-Level Access for cloud storage Buckets','2022-08-23','2022-08-23','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Compute_Engine_using_instance_level_SSH_keys','Enable_Compute_Engine_using_instance_level_SSH_keys','Enable_Compute_Engine_using_instance_level_SSH_keys','Enable Compute Engine using instance-level SSH keys','vminstance','Gcp','Enable_Compute_Engine_using_instance_level_SSH_keys','{\"params\":[{\"encrypt\":false,\"value\":\"check-for-block-project-ssh-key\",\"key\":\"ruleKey\"},{\"key\":\"description\",\"value\":\"checks if instance-level SSH keys is enabled\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Compute Engine project-wide ssh keys is not enabled.\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/gcp_vminstance/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Compute Engine using instance-level SSH keys\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Enable_Compute_Engine_using_instance_level_SSH_keys\",\"autofix\":false,\"alexaKeyword\":\"Enable_Compute_Engine_using_instance_level_SSH_keys\",\"ruleRestUrl\":\"\",\"targetType\":\"vminstance\",\"pac_ds\":\"gcp\",\"policyId\":\"Enable_Compute_Engine_using_instance_level_SSH_keys\",\"assetGroup\":\"gcp\",\"ruleUUID\":\"Enable_Compute_Engine_using_instance_level_SSH_keys\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Compute_Engine_using_instance_level_SSH_keys','ENABLED','ASGC','Enable Compute Engine Using Instance-level SSH Keys','2022-08-23','2022-08-23','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_osLogin_for_a_project','Enable_osLogin_for_a_project','Enable_osLogin_for_a_project','Enable OS Login for a project','vminstance','gcp','Enable_osLogin_for_a_project','{"params":[{"encrypt":false,"value":"enable-os-login-project-level","key":"ruleKey"},{"key":"policyName","value":"Enable OS Login for a project","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_osLogin_for_a_project","autofix":false,"alexaKeyword":"Enable_osLogin_for_a_project","ruleRestUrl":"","targetType":"vminstance","pac_ds":"gcp","policyId":"Enable_osLogin_for_a_project","assetGroup":"gcp","ruleUUID":"Enable_osLogin_for_a_project","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_osLogin_for_a_project','ENABLED','ASGC','Enable OS Login for a project','2022-08-23','2022-08-23','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_soft_delete_for_Blob_storage','Enable_soft_delete_for_Blob_storage','Enable_soft_delete_for_Blob_storage','Enable soft delete for  Blob storage','blobservice','azure','Enable_soft_delete_for_Blob_storage','{"params":[{"encrypt":false,"value":"enable-soft-delete-for-blob-storage-account","key":"ruleKey"},{"key":"policyName","value":"Enable soft delete for  Blob storage","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_soft_delete_for_Blob_storage","autofix":false,"alexaKeyword":"Enforce_cloud_SQL_incoming_Connections_To_Use_SSL","ruleRestUrl":"","targetType":"blobservice","pac_ds":"azure","policyId":"Enable_soft_delete_for_Blob_storage","assetGroup":"azure","ruleUUID":"Enable_soft_delete_for_Blob_storage","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce_cloud_SQL_incoming_Connections_To_Use_SSL','ENABLED','ASGC','Enable Soft Delete for Blob Storage','2022-09-15','2022-09-15','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_VM_Instance_Shielded_Config','GCP_VM_Instance_Shielded_Config','GCP_VM_Instance_Shielded_Config','Compute instances should be shielded','vminstance','Gcp','VMInstanceShieldedConfig','{"params":[{"encrypt":false,"value":"check-if-vminstance-has-shielded-config","key":"ruleKey"},{"key":"description","value":"checks if virtual machine instance has shielded config","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VM instance does not have shielded config","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_vminstance/_search","encrypt":false},{"key":"policyName","value":"Enable Shielded VM for compute instances","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"GCP_VM_Instance_Shielded_Config","autofix":false,"alexaKeyword":"VMInstanceShieldedConfig","ruleRestUrl":"","targetType":"vminstance","pac_ds":"gcp","policyId":"GCP_VM_Instance_Shielded_Config","assetGroup":"gcp","ruleUUID":"GCP_VM_Instance_Shielded_Config","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_VM_Instance_Shielded_Config','ENABLED','ASGC','Enable Shielded VM for compute instances','2022-09-13','2022-09-13','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('TLS_Version_MySQL_Flexible_Server','TLS_Version_MySQL_Flexible_Server','Enable_latest_TLS_version','latestTLSVersion','mysqlflexible','Azure','MysqlFlexibleTLS','{"params":[{"encrypt":false,"value":"check-for-tls-version-mysql-flexible-server","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"Application,Environment,Stack,Role","key":"mandatoryTags"},{"encrypt":false,"value":"TLSV1.2","key":"supportedTlsVersions"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"TLS_Version_MySQL_Flexible_Server","autofix":false,"alexaKeyword":"MysqlFlexibleTLS","ruleRestUrl":"","targetType":"mysqlflexible","pac_ds":"azure","policyId":"Enable_latest_TLS_version","assetGroup":"azure","ruleUUID":"TLS_Version_MySQL_Flexible_Server","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/TLS_Version_MySQL_Flexible_Server','ENABLED','ASGC','Ensure that MySQL Flexible Database Server has the Latest TLS Version','2022-09-06','2022-09-06','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('kms_keys_rotation_period_within_90_days','kms_keys_rotation_period_within_90_days','kms_keys_rotation_period_within_90_days','Enforce 90 days rotation period of KMS encryption keys','kmskey','gcp','kms_keys_rotation_period_within_90_days','{"params":[{"encrypt":false,"value":"check-kms-key-rotation-period","key":"ruleKey"},{"key":"description","value":"Ensure that all your Cloud Key Management Service (KMS) keys are rotated within a period of 90 days in order to meet security and compliance requirements.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Kms key rotation period is greater than 90 days.","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_kmskey/_search","encrypt":false},{"key":"policyName","value":"Enforce 90 days rotation period of KMS encryption keys","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"kms_keys_rotation_period_within_90_days","autofix":false,"alexaKeyword":"kms_keys_rotation_period_within_90_days","ruleRestUrl":"","targetType":"kmskey","pac_ds":"gcp","policyId":"kms_keys_rotation_period_within_90_days","assetGroup":"gcp","ruleUUID":"kms_keys_rotation_period_within_90_days","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/kms_keys_rotation_period_within_90_days','ENABLED','ASGC','Enforce 90 days rotation period of KMS encryption keys','2022-09-06','2022-09-06','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_User_Managed_Service_Account_Key_Creation','Disable_User_Managed_Service_Account_Key_Creation','Disable_User_Managed_Service_Account_Key_Creation','Disable User-Managed Service Account Key Creation','serviceaccounts','gcp','Disable_User_Managed_Service_Account_Key_Creation','{"params":[{"encrypt":false,"value":"delete-user-manged-keys","key":"ruleKey"},{"key":"policyName","value":"Disable User-Managed Service Account Key Creation","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_User_Managed_Service_Account_Key_Creation","autofix":false,"alexaKeyword":"Disable_User_Managed_Service_Account_Key_Creation","ruleRestUrl":"","targetType":"serviceaccounts","pac_ds":"gcp","policyId":"Disable_User_Managed_Service_Account_Key_Creation","assetGroup":"gcp","ruleUUID":"Disable_User_Managed_Service_Account_Key_Creation","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_User_Managed_Service_Account_Key_Creation','ENABLED','ASGC','Disable User-Managed Service Account Key Creation','2022-09-19','2022-09-19','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_transparent_data_encryption_for_sql_db','Enable_transparent_data_encryption_for_sql_db','Enable_transparent_data_encryption_for_sql_db','Enable transparent data encryption for sql database','sqldatabase','azure','Enable_transparent_data_encryption_for_sql_db','{"params":[{"encrypt":false,"value":"check-for-transparent-data-encryption","key":"ruleKey"},{"key":"policyName","value":"Enable transparent data encryption for sql database","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_transparent_data_encryption_for_sql_db","autofix":false,"alexaKeyword":"Enable_transparent_data_encryption_for_sql_db","ruleRestUrl":"","targetType":"sqldatabase","pac_ds":"azure","policyId":"Enable_transparent_data_encryption_for_sql_db","assetGroup":"azure","ruleUUID":"Enable_transparent_data_encryption_for_sql_db","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_transparent_data_encryption_for_sql_db','ENABLED','ASGC','Enable transparent data encryption for sql database ','2022-09-19','2022-09-19','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Network_Security_Group_Flow_Log_retention_more_than_90_days','Network_Security_Group_Flow_Log_retention_more_than_90_days','Network_Security_Group_Flow_Log_retention_more_than_90_days','Enforce Network Security Group Flow Log retention for more than 90 days','nsg','Azure','Network_Security_Group_Flow_Log_retention_more_than_90_days','{"params":[{"encrypt":false,"value":"Enforce-Network-Security-Group-Flow-Log-retention-for-more-than-90-days","key":"ruleKey"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Network_Security_Group_Flow_Log_retention_more_than_90_days","autofix":false,"alexaKeyword":"Network_Security_Group_Flow_Log_retention_more_than_90_days","ruleRestUrl":"","targetType":"nsg","pac_ds":"azure","policyId":"Network_Security_Group_Flow_Log_retention_more_than_90_days","assetGroup":"azure","ruleUUID":"Network_Security_Group_Flow_Log_retention_more_than_90_days","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Network_Security_Group_Flow_Log_retention_more_than_90_days','ENABLED','ASGC','Configure Network Security Group Flow Log Retention Period to more than 90 Days','2022-09-20','2022-09-20','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','Use CMK to encrypt Storage Account for Activity logs','subscription','azure','Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','{"params":[{"encrypt":false,"value":"check-for-storageAcc-activitylog-encryption","key":"ruleKey"},{"key":"policyName","value":" Use CMK to encrypt Storage Account for Activity logs","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Use_CMK_to_encrypt_Storage_Account_for_Activity_logs","autofix":false,"alexaKeyword":"Use_CMK_to_encrypt_Storage_Account_for_Activity_logs","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Use_CMK_to_encrypt_Storage_Account_for_Activity_logs","assetGroup":"azure","ruleUUID":"Use_CMK_to_encrypt_Storage_Account_for_Activity_logs","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Use_CMK_to_encrypt_Storage_Account_for_Activity_logs','ENABLED','ASGC','Encrypt Storage Account for Activity Logs using CMK','2022-08-23','2022-08-23','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Cloud_Asset_Inventory','Enable_Cloud_Asset_Inventory','Enable_Cloud_Asset_Inventory','Enable Cloud Asset Inventory','project','gcp','CloudAsset','{"params":[{"encrypt":false,"value":"enable-cloud-asset-api","key":"ruleKey"},{"key":"policyName","value":"Enable Cloud Asset Inventory","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"tagging","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Cloud_Asset_Inventory","autofix":false,"alexaKeyword":"CloudAsset","ruleRestUrl":"","targetType":"project","pac_ds":"gcp","policyId":"Enable_Cloud_Asset_Inventory","assetGroup":"gcp","ruleUUID":"Enable_Cloud_Asset_Inventory","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Cloud_Asset_Inventory','ENABLED','ASGC','Enable Cloud Asset Inventory','2022-09-29','2022-09-29','medium','tagging');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Deny_Admin_Privilege_Service_Account','Deny_Admin_Privilege_Service_Account','Deny_Admin_Privilege_Service_Account','Deny Admin privilege for service account','serviceaccounts','gcp','Deny_Admin_Privilege_Service_Account','{"params":[{"encrypt":false,"value":"least-privilege-service-accounts","key":"ruleKey"},{"key":"policyName","value":"Deny admin Privileges to service accounts","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Deny_Admin_Privilege_Service_Account","autofix":false,"alexaKeyword":"Deny_Admin_Privilege_Service_Account","ruleRestUrl":"","targetType":"serviceaccounts","pac_ds":"gcp","policyId":"Deny_Admin_Privilege_Service_Account","assetGroup":"gcp","ruleUUID":"Deny_Admin_Privilege_Service_Account","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Deny_Admin_Privilege_Service_Account','ENABLED','ASGC','Deny Admin Privileges to Service Accounts','2022-09-28','2022-09-28','medium','security');


INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_connecting_to_Serial_Ports_for_VM_Instance','Disable_connecting_to_Serial_Ports_for_VM_Instance','Disable_connecting_to_Serial_Ports_for_VM_Instance','Disable connecting to Serial Ports for VM Instance','vminstance','Gcp','Disable_connecting_to_Serial_Ports_for_VM_Instance','{"params":[{"encrypt":false,"value":"check-for-serial-port-enable-key","key":"ruleKey"},{"key":"description","value":"Checks if instance-level serial port enable key is disabled","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Compute Engine serial-port is enabled.","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_vminstance/_search","encrypt":false},{"key":"policyName","value":"Disable connecting to Serial Ports for VM Instance","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_connecting_to_Serial_Ports_for_VM_Instance","autofix":false,"alexaKeyword":"Disable_connecting_to_Serial_Ports_for_VM_Instance","ruleRestUrl":"","targetType":"vminstance","pac_ds":"gcp","policyId":"Disable_connecting_to_Serial_Ports_for_VM_Instance","assetGroup":"gcp","ruleUUID":"Disable_connecting_to_Serial_Ports_for_VM_Instance","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_connecting_to_Serial_Ports_for_VM_Instance','ENABLED','ASGC','Disable connecting to Serial Ports for VM Instance','2022-08-23','2022-08-23','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Use_CMK_to_encrypt_OS_and_Data_disk','Use_CMK_to_encrypt_OS_and_Data_disk','Use_CMK_to_encrypt_OS_and_Data_disk','Use CMK to  Encrypt OS and Data disk','disk','Azure','Use_CMK_to_encrypt_OS_and_Data_disk','{"params":[{"encrypt":false,"value":"check-for-os-data-disks","key":"ruleKey"},{"key":"policyName","value":"Use CMK to  Encrypt OS and Data disk","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Use_CMK_to_encrypt_OS_and_Data_disk","autofix":false,"alexaKeyword":"Use_CMK_to_encrypt_OS_and_Data_disk","ruleRestUrl":"","targetType":"disk","pac_ds":"azure","policyId":"Use_CMK_to_encrypt_OS_and_Data_disk","assetGroup":"azure","ruleUUID":"Use_CMK_to_encrypt_OS_and_Data_disk","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Use_CMK_to_encrypt_OS_and_Data_disk','ENABLED','ASGC','Use CMK to  Encrypt OS and Data disk','2022-08-23','2022-08-23','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Azure_DiagnosticSettings_Mandatory_Tags','Enable_Azure_DiagnosticSettings_Mandatory_Tags','Enable_Azure_DiagnosticSettings_Mandatory_Tags','Enable_Azure_DiagnosticSettings_Mandatory_Tags','subscription','Azure','MandatoryTagsDiagnosticSettings','{"params":[{"encrypt":false,"value":"check-if-diagnostic-setting-has-mandatory-tags","key":"ruleKey"},{"key":"failure","value":"Mandatory categories is NOT enabled for diagnostic settings","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"Mandatory categories is enabled for Diagnostic settings","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Include mandatory categories in the diagnostics setting","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Azure_DiagnosticSettings_Mandatory_Tags","autofix":false,"alexaKeyword":"MandatoryTagsDiagnosticSettings","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Azure_DiagnosticSettings_Mandatory_Tags","assetGroup":"azure","ruleUUID":"Enable_Azure_DiagnosticSettings_Mandatory_Tags","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Azure_DiagnosticSettings_Mandatory_Tags','ENABLED','ASGC','Include mandatory categories in the diagnostics setting','2022-09-26','2022-09-26','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ensure_Active_Directory_Web_App','Ensure_Active_Directory_Web_App','Ensure_Active_Directory_Web_App','Active directory for App services','webapp','azure','Ensure_Active_Directory_Web_App','{\"params\":[{\"encrypt\":false,\"value\":\"check-if-active-directory-enabled\",\"key\":\"ruleKey\"},{\"key\":\"description\",\"value\":\"Active directory needs to be enabled for app services so that user\'s application can connect to other azure cloud services without need of credentials like user names and password\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"violationReason\",\"value\":\"Active directory is not enabled on app service\",\"isValueNew\":true,\"encrypt\":false},{\"key\":\"esSgRulesUrl\",\"value\":\"/azure_webapp/_search\",\"encrypt\":false},{\"key\":\"policyName\",\"value\":\"Enable Active Directory on AppServices\",\"isValueNew\":true,\"encrypt\":false},{\"encrypt\":false,\"value\":\"medium\",\"key\":\"severity\"},{\"encrypt\":false,\"value\":\"security\",\"key\":\"ruleCategory\"},{\"encrypt\":false,\"value\":\"\",\"key\":\"ruleOwner\"}],\"environmentVariables\":[],\"ruleId\":\"Ensure_Active_Directory_Web_App\",\"autofix\":false,\"alexaKeyword\":\"Ensure_Active_Directory_Web_App\",\"ruleRestUrl\":\"\",\"targetType\":\"webapp\",\"pac_ds\":\"azure\",\"policyId\":\"Ensure_Active_Directory_Web_App\",\"assetGroup\":\"azure\",\"ruleUUID\":\"Ensure_Active_Directory_Web_App\",\"ruleType\":\"ManageRule\"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_Active_Directory_Web_App','ENABLED','ASGC','Enable Active Directory on Application Services','2022-09-29','2022-09-29','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','Default Service Account for compute instances','vminstance','Gcp','GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','{"params":[{"encrypt":false,"value":"check-for-vminstance-serviceaccount-cloud-access","key":"ruleKey"},{"key":"description","value":"Deny usage of service accounts with full cloud API access for VM instances","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"VM instance service account has cloud api access","isValueNew":true,"encrypt":false},{"key":"esSgRulesUrl","value":"/gcp_vminstance/_search","encrypt":false},{"key":"policyName","value":"Deny usage of service accounts with full cloud API access for VM instances","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access","autofix":false,"alexaKeyword":"GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access","ruleRestUrl":"","targetType":"vminstance","pac_ds":"gcp","policyId":"GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access","assetGroup":"gcp","ruleUUID":"GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/GCP_VM_Instance_ServiceAccount_Full_CloudAPI_Access','ENABLED','ASGC','Deny usage of service accounts with full cloud API access for VM instances','2022-09-30','2022-09-30','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Deny_usage_of_default_service_accounts_for_instances','Deny_usage_of_default_service_accounts_for_instances','Deny_usage_of_default_service_accounts_for_instances','Deny_usage_of_default_service_accounts_for_instances','vminstance','Gcp','ServiceAccount','{"params":[{"encrypt":false,"value":"deny-usage-of-default-service-account","key":"ruleKey"},{"key":"policyName","value":"Deny usage of default service accounts for instances","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Deny_usage_of_default_service_accounts_for_instances","autofix":false,"alexaKeyword":"ServiceAccount","ruleRestUrl":"","targetType":"vminstance","pac_ds":"gcp","policyId":"Deny_usage_of_default_service_accounts_for_instances","assetGroup":"gcp","ruleUUID":"Deny_usage_of_default_service_accounts_for_instances","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Deny_usage_of_default_service_accounts_for_instances','ENABLED','ASGC','Deny Usage of Default Service Accounts for Instances','2022-09-29','2022-09-29','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('IP_forwarding_for_Instances','IP_forwarding_for_Instances','IP_forwarding_for_Instances','Disable IP forwarding for Compute Engine  Instances','vminstance','Gcp','IPFORWARDING','{"params":[{"encrypt":false,"value":"ip-forward-rule","key":"ruleKey"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"IP_forwarding_for_Instances","autofix":false,"alexaKeyword":"IPFORWARDING","ruleRestUrl":"","targetType":"vminstance","pac_ds":"gcp","policyId":"IP_forwarding_for_Instances","assetGroup":"gcp","ruleUUID":"IP_forwarding_for_Instances","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/IP_forwarding_for_Instances','ENABLED','ASGC','Disable IP Forwarding for Compute Instances','2022-09-29','2022-09-29','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_Local_infile_for_MySQL_Server_DB_Instances','Disable_Local_infile_for_MySQL_Server_DB_Instances','Disable_Local_infile_for_MySQL_Server_DB_Instances','Disable Local_infile DB Flag for Cloud SQL','cloudsql_mysqlserver','gcp','mysqlserver','{"params":[{"encrypt":false,"value":"disable-enable-database-flags-for-cloudsql-server","key":"ruleKey"},{"key":"dataBaseType","value":"gcp_cloudsql_mysqlserver","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"local_infile","isValueNew":true,"encrypt":false},{"key":"dbFlagValue","value":"off","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Disable Local_infile DB Flag for Cloud SQL","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure that the local_infile database flag is disabled for your Google Cloud MySQL database instances, in order to follow data security best practices","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Local_infile flag is enabled for your Google Cloud MySQL Server database instances","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_Local_infile_for_MySQL_Server_DB_Instances","autofix":false,"alexaKeyword":"mysqlserver","ruleRestUrl":"","targetType":"cloudsql_mysqlserver","pac_ds":"gcp","policyId":"Disable_Local_infile_for_MySQL_Server_DB_Instances","assetGroup":"gcp","ruleUUID":"Disable_Local_infile_for_MySQL_Server_DB_Instances","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Local_infile_for_MySQL_Server_DB_Instances','ENABLED','ASGC','Disable Local_infile DB Flag for Cloud SQL','2022-10-06','2022-10-06','low','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_skip_show_database_for_MySQL_Server_DB_Instances','Enable_skip_show_database_for_MySQL_Server_DB_Instances','Enable_skip_show_database_for_MySQL_Server_DB_Instances','Enable skip_show_database Flag for Cloud SQL','cloudsql_mysqlserver','gcp','mysqlserver','{"params":[{"encrypt":false,"value":"disable-enable-database-flags-for-cloudsql-server","key":"ruleKey"},{"key":"dataBaseType","value":"gcp_cloudsql_mysqlserver","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"skip_show_database","isValueNew":true,"encrypt":false},{"key":"dbFlagValue","value":"on","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable skip_show_database Flag for Cloud SQL","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure that the skip_show_database database flag is enabled for your Google Cloud MySQL database instances in order to prevent users from using the SHOW DATABASES statement if they dont have this privilege.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Skip_show_database flag is not enabled for your Google Cloud MySQL Server database instances","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_skip_show_database_for_MySQL_Server_DB_Instances","autofix":false,"alexaKeyword":"mysqlserver","ruleRestUrl":"","targetType":"cloudsql_mysqlserver","pac_ds":"gcp","policyId":"Enable_skip_show_database_for_MySQL_Server_DB_Instances","assetGroup":"gcp","ruleUUID":"Enable_skip_show_database_for_MySQL_Server_DB_Instances","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_skip_show_database_for_MySQL_Server_DB_Instances','ENABLED','ASGC','Enable skip_show_database Flag for Cloud SQL','2022-10-06','2022-10-06','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','Enforce user Connections Database Flag for  Sql Server Instance is Set to  Non-limiting Value','cloudsql_sqlserver','gcp','sqlserver','{"params":[{"encrypt":false,"value":"disable-enable-database-flags-for-cloudsql-server","key":"ruleKey"},{"key":"dataBaseType","value":"gcp_cloudsql_sqlserver","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"user connections","isValueNew":true,"encrypt":false},{"key":"dbFlagValue","value":"0","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enforce user Connections Database Flag for Sql Server Instance is Set to Non-limiting Value","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure that the user connections database flag configured for your Google Cloud SQL Server database instances has the optimal value, in accordance with your organization or project guidelines.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"user connections DataBase flag  for your Google Cloud SQL Server database instances is not set to organization defined value.","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting","autofix":false,"alexaKeyword":"sqlserver","ruleRestUrl":"","targetType":"cloudsql_sqlserver","pac_ds":"gcp","policyId":"Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting","assetGroup":"gcp","ruleUUID":"Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce_Sql_Server_user_Connections_DB_Flag_to_Non_Limiting','ENABLED','ASGC','Enforce user Connections Database Flag for Sql Server Instance is Set to Non-limiting Value','2022-10-06','2022-10-06','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Log_connections_for_Postgres_Server_DB_Instances','Enable_Log_connections_for_Postgres_Server_DB_Instances','Enable_Log_connections_for_Postgres_Server_DB_Instances','Enable Log_connections DB Flag for PostgreSQL','cloudsql_postgres','gcp','postgres','{"params":[{"encrypt":false,"value":"disable-enable-database-flags-for-cloudsql-server","key":"ruleKey"},{"key":"dataBaseType","value":"gcp_cloudsql_postgres","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"log_connections","isValueNew":true,"encrypt":false},{"key":"dbFlagValue","value":"on","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Log_connections DB Flag for PostgreSQL","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure that log_connections database flag is enabled for your Google Cloud PostgreSQL database instances. The log_connections flag causes each attempted connection to the database instance to be logged, including successful client authentication request","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"log_connections flag is disabled for your Google Cloud postgres Server database instances","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Log_connections_for_Postgres_Server_DB_Instances","autofix":false,"alexaKeyword":"postgres","ruleRestUrl":"","targetType":"cloudsql_postgres","pac_ds":"gcp","policyId":"Enable_Log_connections_for_Postgres_Server_DB_Instances","assetGroup":"gcp","ruleUUID":"Enable_Log_connections_for_Postgres_Server_DB_Instances","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Log_connections_for_Postgres_Server_DB_Instances','ENABLED','ASGC','Enable Log_connections DB Flag for PostgreSQL','2022-10-07','2022-10-07','low','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Log_disconnections_for_Postgres_Server_DB_Instances','Enable_Log_disconnections_for_Postgres_Server_DB_Instances','Enable_Log_disconnections_for_Postgres_Server_DB_Instances','Enable Log_disconnections DB Flag for PostgreSQL','cloudsql_postgres','gcp','postgres','{"params":[{"encrypt":false,"value":"disable-enable-database-flags-for-cloudsql-server","key":"ruleKey"},{"key":"dataBaseType","value":"gcp_cloudsql_postgres","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"log_disconnections","isValueNew":true,"encrypt":false},{"key":"dbFlagValue","value":"on","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Log_disconnections DB Flag for PostgreSQL","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure that log_disconnections database flag is enabled for all your Google Cloud PostgreSQL database instances. When this flag is enabled, PostgreSQL database logs the end of each session. The log output provides information similar to the one generated by the log_connections flag, plus the duration of the session. The database flag can be changed at the session start, and it cannot be changed during a session.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"log_disconnections flag is disabled for your Google Cloud postgres Server database instances","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Log_disconnections_for_Postgres_Server_DB_Instances","autofix":false,"alexaKeyword":"postgres","ruleRestUrl":"","targetType":"cloudsql_postgres","pac_ds":"gcp","policyId":"Enable_Log_disconnections_for_Postgres_Server_DB_Instances","assetGroup":"gcp","ruleUUID":"Enable_Log_disconnections_for_Postgres_Server_DB_Instances","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Log_disconnections_for_Postgres_Server_DB_Instances','ENABLED','ASGC','Enable Log_disconnections DB Flag for PostgreSQL','2022-10-07','2022-10-07','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_log_hostname_for_Postgres_Server_DB_Instances','Enable_log_hostname_for_Postgres_Server_DB_Instances','Enable_log_hostname_for_Postgres_Server_DB_Instances','Enable log_hostname DB Flag for postgres, Cloud SQL','cloudsql_postgres','gcp','postgres','{"params":[{"encrypt":false,"value":"disable-enable-database-flags-for-cloudsql-server","key":"ruleKey"},{"key":"dataBaseType","value":"gcp_cloudsql_postgres","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"log_hostname","isValueNew":true,"encrypt":false},{"key":"dbFlagValue","value":"on","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable log_hostname DB Flag for postgres, Cloud SQL","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure that the log_hostname database flag is enabled for your Postgres sql database instances, in order to follow data security best practices","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"log_hostname flag is disabled for your Postgres cloud Server database instances","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_log_hostname_for_Postgres_Server_DB_Instances","autofix":false,"alexaKeyword":"postgres","ruleRestUrl":"","targetType":"cloudsql_postgres","pac_ds":"gcp","policyId":"Enable_log_hostname_for_Postgres_Server_DB_Instances","assetGroup":"gcp","ruleUUID":"Enable_log_hostname_for_Postgres_Server_DB_Instances","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_log_hostname_for_Postgres_Server_DB_Instances','ENABLED','ASGC','Enable log_hostname DB Flag for postgres, Cloud SQL','2022-10-06','2022-10-06','low','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','Enforce log_min_error_statement database flag for postgres Instance is set to Error or Stricter','cloudsql_postgres','gcp','postgres','{"params":[{"encrypt":false,"value":"disable-enable-database-flags-for-cloudsql-server","key":"ruleKey"},{"key":"dataBaseType","value":"gcp_cloudsql_postgres","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"log_min_error_statement","isValueNew":true,"encrypt":false},{"key":"dbFlagValue","value":"ERROR","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enforce log_min_error_statement database flag for postgres Instance is set to Error or Stricter","isValueNew":true,"encrypt":false},{"key":"description","value":"The log_min_error_statement flag defines the minimum message severity level that are considered as an error statement. Messages for error statements are logged with the SQL statement.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":" log_min_error_statement flag is not set to ERROR or stricter","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance","autofix":false,"alexaKeyword":"mysqlserver","ruleRestUrl":"","targetType":"cloudsql_postgres","pac_ds":"gcp","policyId":"Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance","assetGroup":"gcp","ruleUUID":"Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce_log_min_error_statement_for_Postgres_Server_DB_Instance','ENABLED','ASGC','Enforce log_min_error_statement database flag for postgres Instance is set to Error or Stricter','2022-10-06','2022-10-06','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_Log_min_duration_statement_for_PostgreSQL','Disable_Log_min_duration_statement_for_PostgreSQL','Disable_Log_min_duration_statement_for_PostgreSQL','Disable Log_min_duration_statement Database Flag for PostgreSQL Instance','cloudsql_postgres','gcp','postgres','{"params":[{"encrypt":false,"value":"disable-enable-database-flags-for-cloudsql-server","key":"ruleKey"},{"key":"dataBaseType","value":"gcp_cloudsql_postgres","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"log_min_duration_statement","isValueNew":true,"encrypt":false},{"key":"dbFlagValue","value":"-1","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Disable Log_min_duration_statement Database Flag for PostgreSQL Instance","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure that log_min_duration_statement database flag is disabled for a Cloud PostgreSQL database instances.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Log_min_duration_statement flag for Postgres Instance is enabled","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_Log_min_duration_statement_for_PostgreSQL","autofix":false,"alexaKeyword":"postgres","ruleRestUrl":"","targetType":"cloudsql_postgres","pac_ds":"gcp","policyId":"Disable_Log_min_duration_statement_for_PostgreSQL","assetGroup":"gcp","ruleUUID":"Disable_Log_min_duration_statement_for_PostgreSQL","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Log_min_duration_statement_for_PostgreSQL','ENABLED','ASGC','Disable Log_min_duration_statement Database Flag for PostgreSQL Instance','2022-10-06','2022-10-06','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Confidential_Computing_for_Compute_Instance','Enable_Confidential_Computing_for_Compute_Instance','Enable_Confidential_Computing_for_Compute_Instance','Enable Confidential Computing for Compute Instance','vminstance','Gcp','confidential_computing','{"params":[{"encrypt":false,"value":"enable-confidential-computing-instance","key":"ruleKey"},{"key":"policyName","value":"Enable Confidential Computing for Compute Instance","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Confidential_Computing_for_Compute_Instance","autofix":false,"alexaKeyword":"confidential_computing","ruleRestUrl":"","targetType":"vminstance","pac_ds":"gcp","policyId":"Enable_Confidential_Computing_for_Compute_Instance","assetGroup":"gcp","ruleUUID":"Enable_Confidential_Computing_for_Compute_Instance","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Confidential_Computing_for_Compute_Instance','ENABLED','ASGC','Enable Confidential Computing for Compute Instance','2022-10-04','2022-10-04','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_pgAudit_Database_Flag_for_Postgresql_Instance','Enable_pgAudit_Database_Flag_for_Postgresql_Instance','Enable_pgAudit_Database_Flag_for_Postgresql_Instance','Enable cloudsql.enable_pgaudit Database Flag for Postgresql Instance','cloudsql_postgres','gcp','postgres','{"params":[{"encrypt":false,"value":"disable-enable-database-flags-for-cloudsql-server","key":"ruleKey"},{"key":"dataBaseType","value":"gcp_cloudsql_postgres","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"cloudsql.enable_pgaudit","isValueNew":true,"encrypt":false},{"key":"dbFlagValue","value":"on","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable cloudsql.enable_pgaudit Database Flag for Postgresql Instance","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure cloudsql.enable_pgaudit database flag for Cloud SQL PostgreSQL instance is set to on to allow for centralized logging.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"cloudsql.enable_pgaudit database flag for Cloud SQL PostgreSQL instance is off.","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_pgAudit_Database_Flag_for_Postgresql_Instance","autofix":false,"alexaKeyword":"postgres","ruleRestUrl":"","targetType":"cloudsql_postgres","pac_ds":"gcp","policyId":"Enable_pgAudit_Database_Flag_for_Postgresql_Instance","assetGroup":"gcp","ruleUUID":"Enable_pgAudit_Database_Flag_for_Postgresql_Instance","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_pgAudit_Database_Flag_for_Postgresql_Instance','ENABLED','ASGC','Enable cloudsql.enable_pgaudit Database Flag for Postgresql Instance','2022-10-06','2022-10-06','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Remove_user_options_for_SQLServer','Remove_user_options_for_SQLServer','Remove_user_options_for_SQLServer','Remove user options database flag','cloudsql_sqlserver','gcp','sqlserver','{"params":[{"encrypt":false,"value":"disable-enable-database-flags-for-cloudsql-server","key":"ruleKey"},{"key":"dataBaseType","value":"gcp_cloudsql_sqlserver","isValueNew":true,"encrypt":false},{"key":"dbFlagName","value":"user options","isValueNew":true,"encrypt":false},{"key":"dbFlagValue","value":"NULL","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Remove user options database flag for Cloud SQL SERVER instance","isValueNew":true,"encrypt":false},{"key":"description","value":"In order to avoid defining global defaults for all database users, delete user options database flag","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"user options flag is enabled for your Google Cloud SQL Server database instances","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Remove_user_options_for_SQLServer","autofix":false,"alexaKeyword":"sqlserver","ruleRestUrl":"","targetType":"cloudsql_sqlserver","pac_ds":"gcp","policyId":"Remove_user_options_for_SQLServer","assetGroup":"gcp","ruleUUID":"Remove_user_options_for_SQLServer","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Remove_user_options_for_SQLServer','ENABLED','ASGC','Remove user options database flag for Cloud SQL SERVER instance','2022-10-16','2022-10-16','low','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_KeyVault_Secret_ExpiryDate','Azure_KeyVault_Secret_ExpiryDate','Azure_KeyVault_Secret_ExpiryDate','Expiration date for secret','vaults','Azure','KeyVaultSecretExpirationDate','{"params":[{"encrypt":false,"value":"secret-should-have-expiration-date","key":"ruleKey"},{"key":"failure","value":"Key vault Secret does not have expiration date","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"Key vault Secret has expiration date","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Set expiration date for key in vault key","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_KeyVault_Secret_ExpiryDate","autofix":false,"alexaKeyword":"KeyVaultSecretExpirationDate","ruleRestUrl":"","targetType":"vaults","pac_ds":"azure","policyId":"Azure_KeyVault_Secret_ExpiryDate","assetGroup":"azure","ruleUUID":"Azure_KeyVault_Secret_ExpiryDate","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_KeyVault_Secret_ExpiryDate','ENABLED','ASGC','Set Expiration Date for Secrets in Key Vault','2022-08-12','2022-08-12','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Set_all_users_to_owner_email_notifications','Set_all_users_to_owner_email_notifications','Set_all_users_to_owner_email_notifications','Set all users option to owner in email notifications for MS defender','defender','azure','SetAllUsersOptionToOwnerInEmailNotificationsForMSDefender','{"params":[{"encrypt":false,"value":"set-all-users-to-owner-email-notification","key":"ruleKey"},{"key":"description","value":"In MS defender email notifications for security alerts for a subscription, ''All users with the following roles'' should be set to ''Owner''.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"In MS defender email notifications for security alerts for a subscription, ''All users with following rules'' is not set to owner","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Set all users option to owner in email notifications for MS defender","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"Governance","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Set_all_users_to_owner_email_notifications","autofix":false,"alexaKeyword":"SetAllUsersOptionToOwnerInEmailNotificationsForMSDefender","ruleRestUrl":"","targetType":"defender","pac_ds":"azure","policyId":"Set_all_users_to_owner_email_notifications","assetGroup":"azure","ruleUUID":"Set_all_users_to_owner_email_notifications","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Set_all_users_to_owner_email_notifications','ENABLED','ASGC','Set all users option to owner in email notifications for MS defender','2022-10-04','2022-10-04','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Auto_Upgrade_for_GKE_nodes','Enable_Auto_Upgrade_for_GKE_nodes','Enable_Auto_Upgrade_for_GKE_nodes','Enable Auto-Upgrade for GKE nodes','gkecluster','gcp','Kubernates','{"params":[{"encrypt":false,"value":"enable-node-pool-managements","key":"ruleKey"},{"key":"nodePoolKey","value":"autoUpgrade","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure  Auto-Upgrade for GKE nodes enabled","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Auto-Upgrade for GKE nodes disabled","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Auto_Upgrade_for_GKE_nodes","autofix":false,"alexaKeyword":"Kubernates","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Enable_Auto_Upgrade_for_GKE_nodes","assetGroup":"gcp","ruleUUID":"Enable_Auto_Upgrade_for_GKE_nodes","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Auto_Upgrade_for_GKE_nodes','ENABLED','ASGC','Enable Auto-Upgrade for GKE Nodes','2022-10-27','2022-10-27','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Auto_Repair_for_GKE_nodes','Enable_Auto_Repair_for_GKE_nodes','Enable_Auto_Repair_for_GKE_nodes','Enable Auto-Repair for GKE nodes','gkecluster','gcp','Kubernates','{"params":[{"encrypt":false,"value":"enable-auto-repair-for-gke-nodes","key":"ruleKey"},{"key":"nodePoolKey","value":"autoRepair","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure  Auto-Repair for GKE nodes enabled","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Auto-Repair for GKE nodes disabled","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Auto_Repair_for_GKE_nodes","autofix":false,"alexaKeyword":"Kubernates","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Enable_Auto_Repair_for_GKE_nodes","assetGroup":"gcp","ruleUUID":"Enable_Auto_Repair_for_GKE_nodes","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Auto_Repair_for_GKE_nodes','ENABLED','ASGC','Create Clusters with Private Nodes','2022-10-27','2022-10-27','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Create_or_Update_SQL_Database_Log_Alert','Enable_Create_or_Update_SQL_Database_Log_Alert','Enable_Create_or_Update_SQL_Database_Log_Alert','Enable Create or Update SQL Database Log Alert','subscription','Azure','Enable_Create_or_Update_SQL_Database_Log_Alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect create or update SQL Database events","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect create or update SQL Database Rule  events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.Sql/servers/databases/write","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Create or Update SQL Database Log Alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Create_or_Update_SQL_Database_Log_Alert","autofix":false,"alexaKeyword":"Enable_Create_or_Update_SQL_Database_Log_Alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Create_or_Update_SQL_Database_Log_Alert","assetGroup":"azure","ruleUUID":"Enable_Create_or_Update_SQL_Database_Log_Alert","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Create_or_Update_SQL_Database_Log_Alert','ENABLED','ASGC','Enable log Alert for Create/Update SQL DB','2022-07-07','2022-07-07','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Delete_SQL_Database_Log_Alert','Enable_Delete_SQL_Database_Log_Alert','Enable_Delete_SQL_Database_Log_Alert','Enable Delete SQL Database Log Alert','subscription','Azure','Enable_Delete_SQL_Database_Log_Alert','{"params":[{"encrypt":false,"value":"check-for-azure-activity-log-alert","key":"ruleKey"},{"key":"failure","value":"selected alert rule is not  configured to detect delete SQL Database events","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"selected alert rule is  configured to detect delete SQL Database Rule  events","isValueNew":true,"encrypt":false},{"key":"field","value":"operationName","isValueNew":true,"encrypt":false},{"key":"equals","value":"Microsoft.Sql/servers/databases/delete","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Delete SQL Database Log Alert","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Delete_SQL_Database_Log_Alert","autofix":false,"alexaKeyword":"Enable_Delete_SQL_Database_Log_Alert","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Delete_SQL_Database_Log_Alert","assetGroup":"azure","ruleUUID":"Enable_Delete_SQL_Database_Log_Alert","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Delete_SQL_Database_Log_Alert','ENABLED','ASGC','Enable log Alert for Delete SQL DB','2022-07-07','2022-07-07','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Vulnerability_Assessment_Periodic_Recurring_Scans','Enable_Vulnerability_Assessment_Periodic_Recurring_Scans','Enable_Vulnerability_Assessment_Periodic_Recurring_Scans','Enable Vulnerability Assessment Periodic Recurring Scans','sqlserver','Azure','Enable_Vulnerability_Assessment_Periodic_Recurring_Scans','{"params":[{"encrypt":false,"value":"periodic-scan-vulnerability-assessment","key":"ruleKey"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"ruleId","autofix":false,"alexaKeyword":"Enable_Vulnerability_Assessment_Periodic_Recurring_Scans","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Enable_Vulnerability_Assessment_Periodic_Recurring_Scans","assetGroup":"azure","ruleUUID":"Enable_Vulnerability_Assessment_Periodic_Recurring_Scans","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Vulnerability_Assessment_Periodic_Recurring_Scans','ENABLED','ASGC','Enable Vulnerability Assessment Periodic Recurring Scans','2022-10-20','2022-10-20','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Configure_email_in_ms_defender','Configure_email_in_ms_defender','Configure_email_in_ms_defender','Configure additional email address in MS defender email notifications settings','defender','azure','Configure_email_in_ms_defender','{"params":[{"encrypt":false,"value":"configure-additional-email-address-ms-defender","key":"ruleKey"},{"key":"description","value":"In MS defender email alert settings, Ensure additional email address is configured.","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"In MS defender email settings, additional email address is configured.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"In MS defender email alert settings, additional email address is not configured.","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Configure additional email address in MS defender email notifications settings","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"Governance","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Configure_email_in_ms_defender","autofix":false,"alexaKeyword":"Configure_email_in_ms_defender","ruleRestUrl":"","targetType":"defender","pac_ds":"azure","policyId":"Configure_email_in_ms_defender","assetGroup":"azure","ruleUUID":"Configure_email_in_ms_defender","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Configure_email_in_ms_defender','ENABLED','ASGC','Configure additional email address in MS defender','2022-10-18','2022-10-18','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Set_notify_alerts_severity_to_high','Set_notify_alerts_severity_to_high','Set_notify_alerts_severity_to_high','Set notify alerts severity to high in MS defender','defender','azure','Set_notify_alerts_severity_to_high','{"params":[{"encrypt":false,"value":"set-notify-alerts-severity-to-high","key":"ruleKey"},{"key":"description","value":"Set notify email alerts severity to high in MS defender.","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"In MS defender email settings, notify alerts severity is set to high.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"In MS defender email settings, notify alerts severity is not set to high.","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Set notify alerts severity to high in MS defender","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"Governance","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Set_notify_alerts_severity_to_high","autofix":false,"alexaKeyword":"Set_notify_alerts_severity_to_high","ruleRestUrl":"","targetType":"defender","pac_ds":"azure","policyId":"Set_notify_alerts_severity_to_high","assetGroup":"azure","ruleUUID":"Set_notify_alerts_severity_to_high","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Set_notify_alerts_severity_to_high','ENABLED','ASGC','Set the severity of the notification alerts in MS Defender to high','2022-10-18','2022-10-18','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Send_Scan_Reports_Should_Be_Configured','Send_Scan_Reports_Should_Be_Configured','Send_Scan_Reports_Should_Be_Configured','Email should be configured for SQL defender','sqlserver','Azure','SendScanReportsSQLServer','{"params":[{"encrypt":false,"value":"check-if-send-scan-reports-is-configured","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Send_Scan_Reports_Should_Be_Configured","autofix":false,"alexaKeyword":"SendScanReportsSQLServer","ruleRestUrl":"","targetType":"sqlserver","pac_ds":"azure","policyId":"Send_Scan_Reports_Should_Be_Configured","assetGroup":"azure","ruleUUID":"Send_Scan_Reports_Should_Be_Configured","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Send_Scan_Reports_Should_Be_Configured','ENABLED','ASGC','Enforce configuration of Vulnerability Assessment (VA) setting Send scan reports to for a SQL server','2022-10-19','2022-10-19','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Email_Subscription_Admin','Enable_Email_Subscription_Admin','Enable_Email_Subscription_Admin','Enable Also send email notifications to admins and subscription owners','sqlserver','Azure','EmailSubscriptionAdminSQLServer','{"params":[{"encrypt":false,"value":"check-if-emailSubscriptionAdmins-is-enabled","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Email_Subscription_Admin","autofix":false,"alexaKeyword":"EmailSubscriptionAdminSQLServer","ruleRestUrl":"","targetType":"sqlserver","pac_ds":"azure","policyId":"Enable_Email_Subscription_Admin","assetGroup":"azure","ruleUUID":"Enable_Email_Subscription_Admin","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Email_Subscription_Admin','ENABLED','ASGC','Enable send email notifications to admins and subscription owners in vulnerability settings for sql server','2022-10-20','2022-10-20','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_rbac_for_azure_kubernetes','Enable_rbac_for_azure_kubernetes','Enable_rbac_for_azure_kubernetes','Enable RBAC for Azure Kubernetes Services','kubernetes','Azure','EnableRbacForAzureKubernetes','{"params":[{"encrypt":false,"value":"enable-rbac-role-for-kubernetes","key":"ruleKey"},{"key":"description","value":"Enable RBAC for Azure Kubernetes Services.","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"In Azure kubernetes services, role-based access control is enabled.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"In Azure kubernetes services, role-based access control is not enabled.","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable RBAC for Azure Kubernetes Services","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"governance","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_rbac_for_azure_kubernetes","autofix":false,"alexaKeyword":"EnableRbacForAzureKubernetes","ruleRestUrl":"","targetType":"kubernetes","pac_ds":"azure","policyId":"Enable_rbac_for_azure_kubernetes","assetGroup":"azure","ruleUUID":"Enable_rbac_for_azure_kubernetes","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_rbac_for_azure_kubernetes','ENABLED','ASGC','Enable RBAC for Azure Kubernetes Services','2022-10-27','2022-10-27','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Integrity_Monitoring_For_Node_Pool','Enable_Integrity_Monitoring_For_Node_Pool','Enable_Integrity_Monitoring_For_Node_Pool','Integrity Monitoring should be enabled','gkecluster','gcp','IntegrityMonitoringForNodePool','{"params":[{"encrypt":false,"value":"enable-node-pool-managements","key":"ruleKey"},{"key":"nodePoolKey","value":"enableIntegrityMonitoring","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure Integrity monitoring for GKE nodes enabled","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Integrity monitoring for GKE nodes disabled","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Integrity_Monitoring_For_Node_Pool","autofix":false,"alexaKeyword":"IntegrityMonitoringForNodePool","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Enable_Integrity_Monitoring_For_Node_Pool","assetGroup":"gcp","ruleUUID":"Enable_Integrity_Monitoring_For_Node_Pool","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Integrity_Monitoring_For_Node_Pool','ENABLED','ASGC','Enable Integrity Monitoring for Shielded GKE Nodes','2022-10-27','2022-10-27','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Secure_Boot_For_Node_Pool','Enable_Secure_Boot_For_Node_Pool','Enable_Secure_Boot_For_Node_Pool','Secure Boot should be enabled','gkecluster','gcp','SecureBootForNodePool','{"params":[{"encrypt":false,"value":"enable-node-pool-managements","key":"ruleKey"},{"key":"nodePoolKey","value":"enableSecureBoot","isValueNew":true,"encrypt":false},{"key":"description","value":"Ensure secure boot for GKE nodes enabled","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Secure boot for GKE nodes disabled","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Secure_Boot_For_Node_Pool","autofix":false,"alexaKeyword":"SecureBootForNodePool","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Enable_Secure_Boot_For_Node_Pool","assetGroup":"gcp","ruleUUID":"Enable_Secure_Boot_For_Node_Pool","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Secure_Boot_For_Node_Pool','ENABLED','ASGC','Enable Secure Boot for Shielded GKE Nodes','2022-10-27','2022-10-27','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_Legacy_Authorization','Disable_Legacy_Authorization','Disable_Legacy_Authorization','Disable Legacy Authorization','gkecluster','gcp','Kubernates','{"params":[{"encrypt":false,"value":"check-legacy-authorization-disabled","key":"ruleKey"},{"key":"description","value":"Ensure Legacy Authorization is disabled.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Legacy Authorization is enabled ","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_Legacy_Authorization","autofix":false,"alexaKeyword":"Kubernates","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Disable_Legacy_Authorization","assetGroup":"gcp","ruleUUID":"Disable_Legacy_Authorization","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Legacy_Authorization','ENABLED','ASGC','Disable Legacy Authorization','2022-10-27','2022-10-27','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_VPC_Flow_Logs_and_IntraNode_Visibility','Enable_VPC_Flow_Logs_and_IntraNode_Visibility','Enable_VPC_Flow_Logs_and_IntraNode_Visibility','Enable VPC Flow Logs and IntraNode Visibility','gkecluster','gcp','Enable_VPC_Flow_Logs_and_Intranode_Visibility','{"params":[{"encrypt":false,"value":"check-intraNode-visibility","key":"ruleKey"},{"key":"description","value":"Enabling IntraNode Visibility makes your intraNode pod to pod traffic visible to the networking fabric. With this feature, you can use VPC Flow Logs or other VPC features for intranode traffic.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"This rule will be violated if intraNodeVisibility flag is disabled","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_VPC_Flow_Logs_and_IntraNode_Visibility","autofix":false,"alexaKeyword":"Enable_VPC_Flow_Logs_and_IntraNode_Visibility","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Enable_VPC_Flow_Logs_and_IntraNode_Visibility","assetGroup":"gcp","ruleUUID":"Enable_VPC_Flow_Logs_and_IntraNode_Visibility","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_VPC_Flow_Logs_and_IntraNode_Visibility','ENABLED','ASGC','Enable VPC Flow Logs and IntraNode Visibility','2022-10-27','2022-10-27','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_Alpha_Cluster','Disable_Alpha_Cluster','Disable_Alpha_Cluster','Disable alpha clusters','gkecluster','gcp','Kubernates','{"params":[{"encrypt":false,"value":"disable-alpha-clusters","key":"ruleKey"},{"key":"description","value":"disable alpha clusters for production workloads","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Alpha clusters are NOT disabled","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_Alpha_Cluster","autofix":false,"alexaKeyword":"Kubernates","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Disable_Alpha_Cluster","assetGroup":"gcp","ruleUUID":"Disable_Alpha_Cluster","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Alpha_Cluster','ENABLED','ASGC','Disable Alpha clusters for Production Workloads','2022-11-02','2022-11-02','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ensure_clusters_created_with_pvtnodes','Ensure_clusters_created_with_pvtnodes','Ensure_clusters_created_with_pvtnodes','Enforce clusters are created with Private  Nodes','gkecluster','gcp','EnsureClustersCreatedWithPrivateNodes','{"params":[{"encrypt":false,"value":"ensure-clusters-with-private-nodes","key":"ruleKey"},{"key":"description","value":"Disable public IP addresses for cluster nodes, so that they only have private IP addresses. Private Nodes are nodes with no public IP addresses.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Cluster is not created with private nodes.","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"Cluster is created with private nodes.","key":"SUCCESS"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Ensure_clusters_created_with_pvtnodes","autofix":false,"alexaKeyword":"EnsureClustersCreatedWithPrivateNodes","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Ensure_clusters_created_with_pvtnodes","assetGroup":"gcp","ruleUUID":"Ensure_clusters_created_with_pvtnodes","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce clusters are created with Private  Nodes','ENABLED','ASGC','Enforce clusters are created with Private  Nodes','2022-11-03','2022-11-03','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Ensure_clusters_created_with_pvt_endpoints','Ensure_clusters_created_with_pvt_endpoints','Ensure_clusters_created_with_pvt_endpoints','Enforce clusters are created with Private end points','gkecluster','gcp','EnsureClustersCreatedWithPrivateEndPoints','{"params":[{"encrypt":false,"value":"ensure-clusters-with-private-end-points","key":"ruleKey"},{"key":"description","value":"Disable access to the Kubernetes API from outside the node network if it is not required.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Cluster is not having private end points or has public access.","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"Cluster is created with private end points and public access is disabled.","key":"SUCCESS"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Ensure_clusters_created_with_pvt_endpoints","autofix":false,"alexaKeyword":"EnsureClustersCreatedWithPrivateEndPoints","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Ensure_clusters_created_with_pvt_endpoints","assetGroup":"gcp","ruleUUID":"Ensure_clusters_created_with_pvt_endpoints","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Ensure_clusters_created_with_pvt_endpoints','ENABLED','ASGC','Create Clusters with Private Endpoints','2022-11-03','2022-11-03','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_auto_provisioning_of_log_analytics_agent','Enable_auto_provisioning_of_log_analytics_agent','Enable_auto_provisioning_of_log_analytics_agent','Enable auto provisioning of log analytics agent','defender','azure','Enable_auto_provisioning_of_log_analytics_agent','{"params":[{"encrypt":false,"value":"check-if-Auto-Provisioning-is-enabled","key":"ruleKey"},{"key":"description","value":"Ensure that automatic provisioning of the monitoring agent is enabled in your Microsoft Azure account to collect security data and events from your cloud compute resources in order to help you prevent, detect, and respond efficiently to security vulnerabilities and threats.","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"In MS defender Auto provisioning is set to on.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"In MS defender Auto provisioning is set to off.","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable auto provisioning of log analytics agent","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"Security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_auto_provisioning_of_log_analytics_agent","autofix":false,"alexaKeyword":"Enable_auto_provisioning_of_log_analytics_agent","ruleRestUrl":"","targetType":"defender","pac_ds":"azure","policyId":"Enable_auto_provisioning_of_log_analytics_agent","assetGroup":"azure","ruleUUID":"Enable_auto_provisioning_of_log_analytics_agent","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_auto_provisioning_of_log_analytics_agent','ENABLED','ASGC','Enable auto provisioning of log analytics agent','2022-11-08','2022-11-08','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_Basic_Authentication','Disable_Basic_Authentication','Disable_Basic_Authentication','Disable basic authentication','gkecluster','gcp','DisableBasicAuth','{"params":[{"encrypt":false,"value":"disable-basic-authentication","key":"ruleKey"},{"key":"description","value":"Disable Basic Authentication using static passwords","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Basic authentication is not disabled","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_Basic_Authentication","autofix":false,"alexaKeyword":"DisableBasicAuth","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Disable_Basic_Authentication","assetGroup":"gcp","ruleUUID":"Disable_Basic_Authentication","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Basic_Authentication','ENABLED','ASGC','Disable Basic Authentication using static passwords','2022-11-02','2022-11-02','critical','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_VPC_native_for_clusters','Enable_VPC_native_for_clusters','Enable_VPC_native_for_clusters','Enable VPC-native for clusters','gkecluster','gcp','GKE','{"params":[{"encrypt":false,"value":"enable-vpc-native-Clusters","key":"ruleKey"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_VPC_native_for_clusters","autofix":false,"alexaKeyword":"GKE","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Enable_Secure_Boot_For_Node_Pool","assetGroup":"gcp","ruleUUID":"Enable_VPC_native_for_clusters","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_VPC_native_for_clusters','ENABLED','ASGC','Enable VPC-native for clusters','2022-10-30','2022-10-30','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_client_certificate_Authentication_for_Cluster','Disable_client_certificate_Authentication_for_Cluster','Disable_client_certificate_Authentication_for_Cluster','Disable client certificate Authentication for GKE Cluster','gkecluster','gcp','Kubernates','{"params":[{"encrypt":false,"value":"Disable-client-certificate-Authentication-for-GKE-Cluster","key":"ruleKey"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_client_certificate_Authentication_for_Cluster","autofix":false,"alexaKeyword":"Kubernates","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Disable_client_certificate_Authentication_for_Cluster","assetGroup":"gcp","ruleUUID":"Disable_client_certificate_Authentication_for_Cluster","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_client_certificate_Authentication_for_Cluster','ENABLED','ASGC','Disable client certificate Authentication for GKE Cluster','2022-11-01','2022-11-01','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Remove_custom_owner_roles','Remove_custom_owner_roles','Remove_custom_owner_roles','Remove custom Owner roles','subscription','Azure','Remove_custom_owner_roles','{"params":[{"encrypt":false,"value":"check-for-custom-owner-roles","key":"ruleKey"},{"key":"failure","value":" if there are custom subscription owner roles available in your Azure account","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":" if there are no custom subscription owner roles available in your Azure account","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Remove custom Owner roles","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Remove_custom_owner_roles","autofix":false,"alexaKeyword":"Remove_custom_owner_roles","ruleRestUrl":"","targetType":"subscription","pac_ds":"azure","policyId":"Remove_custom_owner_roles","assetGroup":"azure","ruleUUID":"Remove_custom_owner_roles","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Remove_custom_owner_roles','ENABLED','ASGC','Remove custom Owner roles','2022-11-12','2022-11-12','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Set_Retention_Days_Greater_Than_Ninety','Set_Retention_Days_Greater_Than_Ninety','Set_Retention_Days_Greater_Than_Ninety','Retention days should be greater than 90','sqlserver','Azure','RetentionDaysGreaterThan90','{"params":[{"encrypt":false,"value":"check-if-retention-days-is-greater-than-ninety","key":"ruleKey"},{"encrypt":false,"value":",","key":"splitterChar"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Set_Retention_Days_Greater_Than_Ninety","autofix":false,"alexaKeyword":"RetentionDaysGreaterThan90","ruleRestUrl":"","targetType":"sqlserver","pac_ds":"azure","policyId":"Set_Retention_Days_Greater_Than_Ninety","assetGroup":"azure","ruleUUID":"Set_Retention_Days_Greater_Than_Ninety","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Set_Retention_Days_Greater_Than_Ninety','ENABLED','ASGC','Set Retention days greater than 90 for SQL Server','2022-11-17','2022-11-17','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Cloud_Logging_Monitoring','Enable_Cloud_Logging_Monitoring','Enable_Cloud_Logging_Monitoring','Enable Cloud Logging and Monitoring','gkecluster','gcp','Kubernates','{"params":[{"encrypt":false,"value":"enable-cloud-logging-monitoring","key":"ruleKey"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Cloud_Logging_Monitoring","autofix":false,"alexaKeyword":"Kubernates","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Enable_Cloud_Logging_Monitoring","assetGroup":"gcp","ruleUUID":"Disable_client_certificate_Authentication_for_Cluster","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Cloud_Logging_Monitoring','ENABLED','ASGC','Enable Cloud Logging and Monitoring','2022-11-01','2022-11-01','medium','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_KeyVault_Key_ExpiryDate_RBAC','Azure_KeyVault_Key_ExpiryDate_RBAC','Azure_KeyVault_Key_ExpiryDate_RBAC','RBAC Expiration date for keys','vaultsrbac','Azure','KeyVaultKeyExpirationDateRBAC','{"params":[{"encrypt":false,"value":"key-should-have-expiration-date","key":"ruleKey"},{"key":"failure","value":"Key vault key does not have expiration date with access of RBAC","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"Key vault key has expiration date with access of RBAC","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Set expiration date for key in vault key","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_KeyVault_Key_ExpiryDate_RBAC","autofix":false,"alexaKeyword":"KeyVaultKeyExpirationDateRBAC","ruleRestUrl":"","targetType":"vaultsrbac","pac_ds":"azure","policyId":"Azure_KeyVault_Key_ExpiryDate_RBAC","assetGroup":"azure","ruleUUID":"Azure_KeyVault_Key_ExpiryDate_RBAC","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_KeyVault_Key_ExpiryDate_RBAC','ENABLED','ASGC','Set expiration date for Role base access control of keys in key vaults','2022-11-10','2022-11-10','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Azure_KeyVault_Secret_ExpiryDate_RBAC','Azure_KeyVault_Secret_ExpiryDate_RBAC','Azure_KeyVault_Secret_ExpiryDate_RBAC','RBAC Expiration date for secrets','vaultsrbac','Azure','KeyVaultSecretExpirationDate','{"params":[{"encrypt":false,"value":"secret-should-have-expiration-date","key":"ruleKey"},{"key":"failure","value":"Key vault Secret does not have expiration date with access of RBAC","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"Key vault Secret has expiration date with access of RBAC","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Set expiration date for key in vault key","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Azure_KeyVault_Secret_ExpiryDate_RBAC","autofix":false,"alexaKeyword":"KeyVaultSecretExpirationDateRBAC","ruleRestUrl":"","targetType":"vaultsrbac","pac_ds":"azure","policyId":"Azure_KeyVault_Secret_ExpiryDate_RBAC","assetGroup":"azure","ruleUUID":"Azure_KeyVault_Secret_ExpiryDate_RBAC","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Azure_KeyVault_Secret_ExpiryDate_RBAC','ENABLED','ASGC','Set expiration date for Role base access control of secrets in key vaults','2022-11-12','2022-11-12','high','security');

INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Addon_policies_for_AKS','Enable_Addon_policies_for_AKS','Enable_Addon_policies_for_AKS','Enable Add-on Policies for AKS','kubernetes','Azure','Enable_Addon_policies_for_AKS','{"params":[{"encrypt":false,"value":"enable-addon-policies-for-kubernetes","key":"ruleKey"},{"key":"description","value":"Ensure AKS uses Azure policies add-on.","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"In Azure kubernetes services, add-on policies is enabled","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"AKS does not use Azure policies add-on.","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Add-on Policies for AKS","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Addon_policies_for_AKS","autofix":false,"alexaKeyword":"Enable_Addon_policies_for_AKS","ruleRestUrl":"","targetType":"kubernetes","pac_ds":"azure","policyId":"Enable_Addon_policies_for_AKS","assetGroup":"azure","ruleUUID":"Enable_Addon_policies_for_AKS","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Addon_policies_for_AKS','ENABLED','ASGC','Enable Add-on Policies for AKS','2022-11-22','2022-11-22','low','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_private_cluster_for_AKS','Enable_private_cluster_for_AKS','Enable_private_cluster_for_AKS','Enable Private Cluster for AKS','kubernetes','Azure','Enable_private_cluster_for_AKS','{"params":[{"encrypt":false,"value":"enable-private-cluster-for-kubernetes","key":"ruleKey"},{"key":"description","value":"Enable the private cluster feature for your Azure Kubernetes Service cluster to ensure network traffic between your API server and your node pools remains on the private network only","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"AKS is enabled for private clusters","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"AKS is not enabled for private clusters","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable Private Cluster for AKS","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_private_cluster_for_AKS","autofix":false,"alexaKeyword":"Enable_private_cluster_for_AKS","ruleRestUrl":"","targetType":"kubernetes","pac_ds":"azure","policyId":"Enable_private_cluster_for_AKS","assetGroup":"azure","ruleUUID":"Enable_private_cluster_for_AKS","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_private_cluster_for_AKS','ENABLED','ASGC','Enable Private Cluster for AKS','2022-11-22','2022-11-22','low','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_Kubernetes_Web_UI','Disable_Kubernetes_Web_UI','Disable_Kubernetes_Web_UI','Disable Kubernetes Web UI','gkecluster','gcp','Disable_Kubernetes_Web_UI','{"params":[{"encrypt":false,"value":"disable-kubernetes-web-ui","key":"ruleKey"},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_Kubernetes_Web_UI","autofix":false,"alexaKeyword":"Disable_Kubernetes_Web_UI","ruleRestUrl":"","targetType":"gkecluster","pac_ds":"gcp","policyId":"Disable_Kubernetes_Web_UI","assetGroup":"gcp","ruleUUID":"Disable_Kubernetes_Web_UI","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_Kubernetes_Web_UI','ENABLED','ASGC','Disable Kubernetes Web UI','2022-11-01','2022-11-01','low','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enforce_Separate_Service_Account_Duties_for_Users','Enforce_Separate_Service_Account_Duties_for_Users','Enforce_Separate_Service_Account_Duties_for_Users','Enforce Separate Service Account Duties for Users','iamusers','gcp','Enforce_Separate_Service_Account_Duties_for_Users','{"params":[{"encrypt":false,"value":"enforce-Separate-Service-Account-Duties-for-Users","key":"ruleKey"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enforce_Separate_Service_Account_Duties_for_Users","autofix":false,"alexaKeyword":"Enforce_Separate_Service_Account_Duties_for_Users","ruleRestUrl":"","targetType":"iamusers","pac_ds":"gcp","policyId":"Enforce_Separate_Service_Account_Duties_for_Users","assetGroup":"gcp","ruleUUID":"Enforce_Separate_Service_Account_Duties_for_Users","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce_Separate_Service_Account_Duties_for_Users','ENABLED','ASGC','Enforce Separate Service Account Duties for Users','2022-11-01','2022-11-01','low','security');


INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Define_Authorised_IP_for_kubernetes','Define_Authorised_IP_for_kubernetes','Define_Authorised_IP_for_kubernetes','Define authorised IP ranges','kubernetes','Azure','DefineAuthorisedIPRange','{"params":[{"encrypt":false,"value":"define-authorised-ip-ranges-for-kubernetes","key":"ruleKey"},{"key":"description","value":"Define authorised IP ranges for Azure Kubernetes Services.","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"In Azure kubernetes services, authorised IP ranges are defined","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"In Azure kubernetes services,authorised IP ranges are NOT defined","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Define authorised IP ranges for Azure Kubernetes Services","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Define_Authorised_IP_for_kubernetes","autofix":false,"alexaKeyword":"DefineAuthorisedIPRange","ruleRestUrl":"","targetType":"kubernetes","pac_ds":"azure","policyId":"Define_Authorised_IP_for_kubernetes","assetGroup":"azure","ruleUUID":"Define_Authorised_IP_for_kubernetes","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Define_Authorised_IP_for_kubernetes','ENABLED','ASGC','Define authorised IP ranges for AKS API server','2022-11-22','2022-11-22','low','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Cluster_Monitoring_for_kubernetes','Enable_Cluster_Monitoring_for_kubernetes','Enable_Cluster_Monitoring_for_kubernetes','Enable cluster monitoring','kubernetes','Azure','EnableClusterMonitoring','{"params":[{"encrypt":false,"value":"enable-cluster-monitoring-for-kubernetes","key":"ruleKey"},{"key":"description","value":"Enable azure AKS cluster monitoring","isValueNew":true,"encrypt":false},{"key":"SUCCESS","value":"In Azure kubernetes services,cluster monitoring is enabled","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"In Azure kubernetes services,cluster monitoring is NOT enabled","isValueNew":true,"encrypt":false},{"key":"policyName","value":"Enable azure AKS cluster monitoring","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Cluster_Monitoring_for_kubernetes","autofix":false,"alexaKeyword":"EnableClusterMonitoring","ruleRestUrl":"","targetType":"kubernetes","pac_ds":"azure","policyId":"Enable_Cluster_Monitoring_for_kubernetes","assetGroup":"azure","ruleUUID":"Enable_Cluster_Monitoring_for_kubernetes","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Cluster_Monitoring_for_kubernetes','ENABLED','ASGC','Enable azure AKS cluster monitoring','2022-11-22','2022-11-22','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enforce_Separation_Of_Duties_For_KMS_Roles','Enforce_Separation_Of_Duties_For_KMS_Roles','Enforce_Separation_Of_Duties_For_KMS_Roles','Separation of duties','iamusers','gcp','EnforceSeparationOfDutiesForKMS','{"params":[{"encrypt":false,"value":"enforce-separation-of-duties-for-kms","key":"ruleKey"},{"key":"description","value":"Enforce Separation of Duties While Assigning KMS Related Roles to Users","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Separation of Duties While Assigning KMS Related Roles to Users is NOT Enforced","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"Separation of Duties While Assigning KMS Related Roles to Users is enforced","key":"SUCCESS"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enforce_Separation_Of_Duties_For_KMS_Roles","autofix":false,"alexaKeyword":"EnforceSeparationOfDutiesForKMS","ruleRestUrl":"","targetType":"iamusers","pac_ds":"gcp","policyId":"Enforce_Separation_Of_Duties_For_KMS_Roles","assetGroup":"gcp","ruleUUID":"Enforce_Separation_Of_Duties_For_KMS_Roles","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enforce_Separation_Of_Duties_For_KMS_Roles','ENABLED','ASGC','Enforce Separation of Duties While Assigning KMS Related Roles to Users','2022-11-29','2022-11-29','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Avoid_Service_roles_to_IAM_user_at_project_level','Avoid_Service_roles_to_IAM_user_at_project_level','Avoid_Service_roles_to_IAM_user_at_project_level','Avoid Assigning Service Roles to IAM Users at the Project Level','iamusers','gcp','Avoid_Service_roles_to_IAM_user_at_project_level','{"params":[{"encrypt":false,"value":"avoid-assigning-service-roles-to-iam-user-at-project-level","key":"ruleKey"},{"key":"description","value":"Ensure that Service Account User (iam.serviceAccountUser) and Service Account Token Creator (iam.serviceAccountTokenCreator) roles to a user for a specific service account rather than assigning the role to a user at project level.","isValueNew":true,"encrypt":false},{"key":"violationReason","value":"Assigned Service roles to IAM users at project level.","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Avoid_Service_roles_to_IAM_user_at_project_level","autofix":false,"alexaKeyword":"Avoid_Service_roles_to_IAM_user_at_project_level","ruleRestUrl":"","targetType":"iamusers","pac_ds":"gcp","policyId":"Avoid_Service_roles_to_IAM_user_at_project_level","assetGroup":"gcp","ruleUUID":"Avoid_Service_roles_to_IAM_user_at_project_level","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Avoid_Service_roles_to_IAM_user_at_project_level','ENABLED','ASGC','Avoid Assigning Service Roles to IAM Users at the Project Level','2022-11-29','2022-11-29','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_HTTPS_For_LoadBalancer','Enable_HTTPS_For_LoadBalancer','Enable_HTTPS_For_LoadBalancer','Enable https for load balancer','gcploadbalancer','gcp','Enable_HTTPS_For_LoadBalancer','{"params":[{"encrypt":false,"value":"enable-https-for-loadbalancer","key":"ruleKey"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_HTTPS_For_LoadBalancer","autofix":false,"alexaKeyword":"Enable_HTTPS_For_LoadBalancer","ruleRestUrl":"","targetType":"gcploadbalancer","pac_ds":"gcp","policyId":"Enable_HTTPS_For_LoadBalancer","assetGroup":"gcp","ruleUUID":"Enable_HTTPS_For_LoadBalancer","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_HTTPS_For_LoadBalancer','ENABLED','ASGC','Enable HTTPS for Google Cloud Load Balancers','2022-12-08','2022-12-08','high','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_Logging_For_BackendServices_LoadBalancer','Enable_Logging_For_BackendServices_LoadBalancer','Enable_Logging_For_BackendServices_LoadBalancer','Enable logging for load balancer backend services','gcploadbalancer','gcp','Enable_Logging_For_BackendServices_LoadBalancer','{"params":[{"encrypt":false,"value":"enable-https-logging-for-backend-services","key":"ruleKey"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_Logging_For_BackendServices_LoadBalancer","autofix":false,"alexaKeyword":"Enable_Logging_For_BackendServices_LoadBalancer","ruleRestUrl":"","targetType":"gcploadbalancer","pac_ds":"gcp","policyId":"Enable_Logging_For_BackendServices_LoadBalancer","assetGroup":"gcp","ruleUUID":"Enable_Logging_For_BackendServices_LoadBalancer","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_Logging_For_BackendServices_LoadBalancer','ENABLED','ASGC','Enable HTTPS logging for Load Balancing Backend Services','2022-12-08','2022-12-08','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Secure_SSL_Cipher_Suites','Secure_SSL_Cipher_Suites','Secure_SSL_Cipher_Suites','Secure SSL Cipher Suites','gcploadbalancer','gcp','Secure_SSL_Cipher_Suites','{"params":[{"encrypt":false,"value":"check-for-Insecure-SSL-Cipher-Suites","key":"ruleKey"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Secure_SSL_Cipher_Suites","autofix":false,"alexaKeyword":"Secure_SSL_Cipher_Suites","ruleRestUrl":"","targetType":"gcploadbalancer","pac_ds":"gcp","policyId":"Secure_SSL_Cipher_Suites","assetGroup":"gcp","ruleUUID":"Secure_SSL_Cipher_Suites","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Secure_SSL_Cipher_Suites','ENABLED','ASGC','Secure SSL Cipher Suites','2022-12-08','2022-12-08','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_API_Key_Restrictions','Enable_API_Key_Restrictions','Enable_API_Key_Restrictions','Configure API Restriction for API Keys','apikeys','gcp','Enable_API_Key_Restrictions','{"params":[{"encrypt":false,"value":"Check-for-API-Key-API-Restrictions","key":"ruleKey"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_API_Key_Restrictions","autofix":false,"alexaKeyword":"Enable_API_Key_Restrictions","ruleRestUrl":"","targetType":"apikeys","pac_ds":"gcp","policyId":"Enable_API_Key_Restrictions","assetGroup":"gcp","ruleUUID":"Enable_API_Key_Restrictions","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_API_Key_Restrictions','ENABLED','ASGC','Configure API Restriction for API Keys','2022-11-29','2022-11-29','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Enable_API_Key_Application_Restrictions','Enable_API_Key_Application_Restrictions','Enable_API_Key_Application_Restrictions','Configure Application Restrictions for Google Cloud API Key','apikeys','gcp','Enable_API_Key_Application_Restrictions','{"params":[{"encrypt":false,"value":"Check-for-API-Key-Application-Restrictions","key":"ruleKey"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Enable_API_Key_Application_Restrictions","autofix":false,"alexaKeyword":"Enable_API_Key_Application_Restrictions","ruleRestUrl":"","targetType":"apikeys","pac_ds":"gcp","policyId":"Enforce_Separation_Of_Duties_For_KMS_Roles","assetGroup":"gcp","ruleUUID":"Enable_API_Key_Application_Restrictions","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Enable_API_Key_Application_Restrictions','ENABLED','ASGC','Configure Application Restrictions for Google Cloud API Key','2022-11-29','2022-11-29','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Rotate_Google_Cloud_API_Keys','Rotate_Google_Cloud_API_Keys','Rotate_Google_Cloud_API_Keys','Rotate Google Cloud API Keys','apikeys','gcp','Rotate_Google_Cloud_API_Keys','{"params":[{"encrypt":false,"value":"rotate-API-Keys","key":"ruleKey"},{"encrypt":false,"value":"medium","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Rotate_Google_Cloud_API_Keys","autofix":false,"alexaKeyword":"Rotate_Google_Cloud_API_Keys","ruleRestUrl":"","targetType":"apikeys","pac_ds":"gcp","policyId":"Rotate_Google_Cloud_API_Keys","assetGroup":"gcp","ruleUUID":"Rotate_Google_Cloud_API_Keys","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Rotate_Google_Cloud_API_Keys','ENABLED','ASGC','Rotate Google Cloud API Keys','2022-11-29','2022-11-29','medium','security');
INSERT IGNORE INTO cf_RuleInstance (ruleId,ruleUUID,policyId,ruleName,targetType,assetGroup,alexaKeyword,ruleParams,ruleFrequency,ruleExecutable,ruleRestUrl,ruleType,ruleArn,status,userId,displayName,createdDate,modifiedDate,severity,category) VALUES ('Disable_kubernetes_DashBoard','Disable_kubernetes_DashBoard','Disable_kubernetes_DashBoard','Disable kubernetes DashBoard','kubernetes','Azure','Disable_kubernetes_DashBoard','{"params":[{"encrypt":false,"value":"Disable-kubernetes-DashBoard","key":"ruleKey"},{"key":"description","value":"Disable kubernetes DashBoard","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"low","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"","key":"ruleOwner"}],"environmentVariables":[],"ruleId":"Disable_kubernetes_DashBoard","autofix":false,"alexaKeyword":"EnableClusterMonitoring","ruleRestUrl":"","targetType":"kubernetes","pac_ds":"azure","policyId":"Disable_kubernetes_DashBoard","assetGroup":"azure","ruleUUID":"Disable_kubernetes_DashBoard","ruleType":"ManageRule"}','0 0/6 * * ? *',NULL,NULL,'ManageRule','arn:aws:events:us-east-1:***REMOVED***:rule/Disable_kubernetes_DashBoard','ENABLED','ASGC','Disable_kubernetes_DashBoard','2022-11-22','2022-11-22','low','security');


/* Omni Seach Configuration */

INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','All','accountname,region,tags.Application,tags.Environment,tags.Stack,tags.Role','_resourceid,searchcategory,tags[],accountname,_entitytype');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','api','','region,name');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','appelb','scheme,vpcid,type','region,scheme,vpcid,type');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','asg','healthchecktype','region,healthchecktype');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','asgpolicy','policytype,adjustmenttype','region,autoscalinggroupname,policytype');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','cert','','');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','checks','','');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','classicelb','scheme,vpcid','region,scheme,vpcid');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','cloudfront','status,enabled,priceclass,httpversion,ipv6enabled','domainname,status,httpversion,aliases');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','corpdomain','','');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','dynamodb','tablestatus','region,tablestatus');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','ec2 ','availabilityzone,statename,instancetype,imageid,platform,subnetid','availabilityzone,privateipaddress,statename,instancetype');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','efs','performancemode,lifecyclestate','region,performancemode,lifecyclestate');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','elasticip','','networkinterfaceid,privateipaddress,region');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','emr','instancecollectiontype,releaselabel','region,instancecollectiontype,releaselabel');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','eni','status,sourcedestcheck,vpcid,subnetid','region,privateipaddress,status,vpcid,subnetid');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','iamrole','','description');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','iamuser','passwordresetrequired,mfaenabled','');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','internetgateway','','region');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','kms','keystate,keyenabled,keyusage,rotationstatus','region,keystate');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','lambda','memorysize,runtime,timeout','region,runtime');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','launchconfig','instancetype,ebsoptimized,instancemonitoringenabled','instancetype,region');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','nat','vpcid,subnetid,state','region,vpcid,subnetid,state');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','networkacl','vpcid,isdefault','vpcid,region');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','onpremserver','os,used_for,u_business_service,location,company,firewall_status,u_patching_director,install_staus','ip_address,os,os_version,comapny');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','phd','','');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','rdscluster','multiaz,engine,engineversion','region,engine,engineversion');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','rdsdb','dbinstanceclass,dbinstancestatus,engine,engineversion,licensemodel,multiaz,publiclyaccessible','region,engine,engineversion');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','rdssnapshot','snapshottype,encrypted,engine,engineversion,storagetype','vpcid,availabilityzone,engine,engineversion');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','redshift','nodetype,publiclyaccessible','region,nodetype,vpcid');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','routetable','vpcid','vpcid,region');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','s3','versionstatus','region,creationdate,versionstatus');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','sg','vpcid','region,vpcid');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','snapshot','encrypted,state','region,volumeid,state');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','stack','disablerollback,status','region,status');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','subnet','vpcid,availabilityzone,defaultforaz,state','availabilityzone,cidrblock,state');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','targetgroup','','region,vpcid,protocol,port');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','volume','volumetype,availabilityzone,encrypted,state','volumetype,availabilityzone,state');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','vpc','','region,cidrblock,state');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','vpngateway','state,type','region,state,type');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','elasticache','engine,nodetype,engineversion','region,engine');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Assets','wafdomain','','');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Policy Violations','All','severity,policyId','_id,issueid,resourceid,severity,_entitytype,_resourceid');
INSERT IGNORE INTO OmniSearch_Config (SEARCH_CATEGORY,RESOURCE_TYPE,REFINE_BY_FIELDS,RETURN_FIELDS) VALUES ('Vulnerabilities','All','severity,category,vulntype','qid,vulntype,category,_entitytype,_resourceid');


/* RUle Category Weightage */
INSERT IGNORE INTO pac_v2_ruleCategory_weightage (ruleCategory,domain,weightage) VALUES ('costOptimization','Infra & Platforms',20);
INSERT IGNORE INTO pac_v2_ruleCategory_weightage (ruleCategory,domain,weightage) VALUES ('governance','Infra & Platforms',20);
INSERT IGNORE INTO pac_v2_ruleCategory_weightage (ruleCategory,domain,weightage) VALUES ('security','Infra & Platforms',50);
INSERT IGNORE INTO pac_v2_ruleCategory_weightage (ruleCategory,domain,weightage) VALUES ('tagging','Infra & Platforms',10);


/* UI FIlter */

INSERT IGNORE INTO pac_v2_ui_filters (filterId,filterName) VALUES (1,'Issue');
INSERT IGNORE INTO pac_v2_ui_filters (filterId,filterName) VALUES (2,'vulnerbility');
INSERT IGNORE INTO pac_v2_ui_filters (filterId,filterName) VALUES (3,'asset');
INSERT IGNORE INTO pac_v2_ui_filters (filterId,filterName) VALUES (4,'compliance');
INSERT IGNORE INTO pac_v2_ui_filters (filterId,filterName) VALUES (5,'tagging');
INSERT IGNORE INTO pac_v2_ui_filters (filterId,filterName) VALUES (6,'certificates');
INSERT IGNORE INTO pac_v2_ui_filters (filterId,filterName) VALUES (7,'patching');
INSERT IGNORE INTO pac_v2_ui_filters (filterId,filterName) VALUES (8,'AssetListing');
INSERT IGNORE INTO pac_v2_ui_filters (filterId,filterName) VALUES (9,'digitaldev');

/* UI Filter Options */

INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (2,1,'Rule','ruleId.keyword','/compliance/v1/filters/rules?ag=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (3,1,'Region','region.keyword','/compliance/v1/filters/regions?ag=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (4,1,'AccountName','accountid.keyword','/compliance/v1/filters/accounts?ag=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (5,1,'Application','tags.Application.keyword','/compliance/v1/filters/application?ag=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (6,1,'Environment','tags.Environment.keyword','/compliance/v1/filters/environment?ag=aws&application=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (7,2,'Application','tags.Application.keyword','/compliance/v1/filters/application?ag=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (8,2,'Environment','tags.Environment.keyword','/compliance/v1/filters/environment?ag=aws&application=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (9,3,'Application','tags.Application.keyword','/compliance/v1/filters/application?ag=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (12,4,'Resource Type','targetType.keyword','/compliance/v1/filters/targettype?ag=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (13,8,'Application ','application ','/compliance/v1/filters/application?ag=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (14,8,'Environment  ','environment ','/compliance/v1/filters/environment?ag=aws&application=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (15,8,'Resource Type','resourceType ','/compliance/v1/filters/targettype?ag=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (16,9,'Application','tags.Application.keyword','/compliance/v1/filters/application?ag=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (17,1,'Severity','severity.keyword','/compliance/v1/filters/severities?ag=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (18,1,'Category','category.keyword','/compliance/v1/filters/categories?ag=aws');
INSERT IGNORE INTO pac_v2_ui_options (optionId,filterId,optionName,optionValue,optionURL) VALUES (19,1,'Status','issueStatus.keyword','/compliance/v1/filters/issuestatus?ag=aws');


/* UI Widgets */
INSERT IGNORE INTO pac_v2_ui_widgets (widgetId,pageName,widgetName) VALUES (1,'Tagging','TaggingSummary');
INSERT IGNORE INTO pac_v2_ui_widgets (widgetId,pageName,widgetName) VALUES (2,'Tagging','Total Tag Compliance');
INSERT IGNORE INTO pac_v2_ui_widgets (widgetId,pageName,widgetName) VALUES (3,'Tagging','Tagging Compliance Trend');
INSERT IGNORE INTO pac_v2_ui_widgets (widgetId,pageName,widgetName) VALUES (4,'ComplianceOverview','OverallCompliance,tagging,patching,vulnerabilites');

/* UI Widgets faqs */
INSERT IGNORE INTO pac_v2_ui_widget_faqs (faqId,widgetId,widgetName,faqName,faqAnswer) VALUES (1,1,'Tagging Summary','How overall Compliance% calculated ?','Total assets which has Application and Environment tag devided by total taggable Assets.');
INSERT IGNORE INTO pac_v2_ui_widget_faqs (faqId,widgetId,widgetName,faqName,faqAnswer) VALUES (2,1,'Tagging Summary','How an AssetGroup Un-tagged count calculted ?','Total assets which is missing application,Environment tag.');
INSERT IGNORE INTO pac_v2_ui_widget_faqs (faqId,widgetId,widgetName,faqName,faqAnswer) VALUES (3,4,'OverallCompliance,tagging,patching,vulnerabilites','How overall % calculated ?','It''s average of patching,certificates,tagging,vulnerbilites and other policies percentage');
INSERT IGNORE INTO pac_v2_ui_widget_faqs (faqId,widgetId,widgetName,faqName,faqAnswer) VALUES (7,4,'OverallCompliance,tagging,patching,vulnerabilites','How patching % calculated ?','total patched running ec2 instances /total running ec2 instances');
INSERT IGNORE INTO pac_v2_ui_widget_faqs (faqId,widgetId,widgetName,faqName,faqAnswer) VALUES (8,4,'OverallCompliance,tagging,patching,vulnerabilites','How tagging % calculated ?','total tagged assets /total assets');
INSERT IGNORE INTO pac_v2_ui_widget_faqs (faqId,widgetId,widgetName,faqName,faqAnswer) VALUES (9,4,'OverallCompliance,tagging,patching,vulnerabilites','How vulnerabilities % calculated ?','total vulnerable ec2 assets/total ec2 assets.  ');
INSERT IGNORE INTO pac_v2_ui_widget_faqs (faqId,widgetId,widgetName,faqName,faqAnswer) VALUES (10,4,'OverallCompliance,tagging,patching,vulnerabilites','How other policies % calculated',null);


INSERT IGNORE INTO pac_v2_ui_download_filters (serviceId,serviceName,serviceEndpoint) VALUES
 (1,'Violations','/api/compliance/v1/issues'),
 (2,'NonComplaincePolicies','/api/compliance/v1/noncompliancepolicy'),
 (3,'PatchingDetails','/api/compliance/v1/patching/detail'),
 (4,'TaggingDetailsByApplication','/api/compliance/v1/tagging/summarybyapplication'),
 (5,'CertificateDetails','/api/compliance/v1/certificates/detail'),
 (6,'VulnerabilitiesDetails','/api/compliance/v1/vulnerabilities/detail'),
 (7,'Assets','/api/asset/v1//list/assets'),
 (8,'PatchableAssets','/api/asset/v1/list/assets/patchable'),
 (9,'ScannedAssets','/api/asset/v1/list/assets/scanned'),
 (10,'TaggableAssets','/api/asset/v1/list/assets/taggable'),
 (11,'VulnerableAssets','/api/asset/v1/list/assets/vulnerable'),
 (12,'PullRequestAssetsByState','/api/devstandards/v1/pullrequests/asset/bystates'),
 (13,'PullRequestAsstesByAge','/api/devstandards/v1/pullrequests/assets/openstate'),
 (14,'ApplicationOrRepositoryDistribution','/api/devstandards/v1/repositories/assets/repositoryorapplicationdistribution'),
 (15,'RecommendationDetails','/api/asset/v1/recommendations/detail'),
 (16,'Recommendation','/api/asset/v1/recommendations'),
 (17,'CloudNotificationsWithOutGlobal','/api/asset/v1/cloud/notifications?global=false'),
 (18,'CloudNotificationsWithGlobal','/api/asset/v1/cloud/notifications?global=true');


INSERT IGNORE INTO pac_config_relation (`application`,`parent`) VALUES ('application','root');
INSERT IGNORE INTO pac_config_relation (`application`,`parent`) VALUES ('batch','application');
INSERT IGNORE INTO pac_config_relation (`application`,`parent`) VALUES ('api','application');
INSERT IGNORE INTO pac_config_relation (`application`,`parent`) VALUES ('compliance-service','api');
INSERT IGNORE INTO pac_config_relation (`application`,`parent`) VALUES ('asset-service','api');
INSERT IGNORE INTO pac_config_relation (`application`,`parent`) VALUES ('notification-service','api');
INSERT IGNORE INTO pac_config_relation (`application`,`parent`) VALUES ('statistics-service','api');
INSERT IGNORE INTO pac_config_relation (`application`,`parent`) VALUES ('auth-service','api');
INSERT IGNORE INTO pac_config_relation (`application`,`parent`) VALUES ('dev-standards-service','api');
INSERT IGNORE INTO pac_config_relation (`application`,`parent`) VALUES ('admin-service','api');
INSERT IGNORE INTO pac_config_relation (`application`,`parent`) VALUES ('magenta-skill','api');
INSERT IGNORE INTO pac_config_relation (application,parent) VALUES ('data-shipper','batch');
INSERT IGNORE INTO pac_config_relation (application,parent) VALUES ('inventory','batch');
INSERT IGNORE INTO pac_config_relation (`application`,`parent`) VALUES ('rule','application');
INSERT IGNORE INTO pac_config_relation (application,parent) VALUES ('rule-engine','rule');
INSERT IGNORE INTO pac_config_relation (application,parent) VALUES ('recommendation-enricher','batch');
INSERT IGNORE INTO pac_config_relation (application,parent) VALUES ('qualys-enricher','batch');
INSERT IGNORE INTO pac_config_relation (application,parent) VALUES ('azure-discovery','batch');

INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('admin.api-role','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('admin.push.notification.pollinterval.milliseconds','description');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[0].name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[0].url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[0].version','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[1].name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[1].url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[1].version','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[2].name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[2].url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[2].version','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[3].name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[3].url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[3].version','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[4].name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[4].url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[4].version','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[5].name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[5].url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[5].version','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[6].name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[6].url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('api.services[6].version','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('application.cors.allowed.domains','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('auth.active','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('aws.access-key','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('aws.secret-key','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.activedirectory.client-id','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.activedirectory.client-secret','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.activedirectory.scope','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.activedirectory.scopeDesc','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.activedirectory.state','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.activedirectory.tenant-id','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.authorizeEndpoint','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.id-token.claims.email','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.id-token.claims.first-name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.id-token.claims.last-name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.id-token.claims.user-id','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.id-token.claims.user-name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.issuer','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.public-key','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('base.account','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('branch.maxBranchAge','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('cloudinsights.corp-password','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('cloudinsights.corp-user-id','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('cloudinsights.costurl','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('cloudinsights.tokenurl','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('cron.frequency.weekly-report-sync-trigger','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('date.format','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('days-range.age','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('discovery.role','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.admin-host','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.clusterName','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.clusterName-heimdall','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.dev-ingest-host','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.dev-ingest-port','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.host','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.host-heimdall','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.port','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.port-admin','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.port-admin-heimdall','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.port-heimdall','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.update-clusterName','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.update-host','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('elastic-search.update-port','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('endpoints.refresh.sensitive','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('features.certificate.enabled','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('features.patching.enabled','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('features.vulnerability.enabled','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('formats.date','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('hystrix.shareSecurityContext','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('job.lambda.action-disabled','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('job.lambda.action-enabled','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('job.lambda.function-arn','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('job.lambda.function-name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('job.lambda.principal','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('job.lambda.target-id','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('job.s3.bucket-name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.ad.domain','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.ad.provider-url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.ad.search-base','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.baseDn','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.connectionTimeout','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.domain','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.hostList','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.naming.authentication','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.naming.context-factory','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.nt.domain','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.nt.provider-url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.nt.search-base','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.port','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('ldap.responseTimeout','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('logging.config','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('logging.consoleLoggingLevel','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('logging.esHost','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('logging.esLoggingLevel','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('logging.esPort','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('magenta.cache.name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('magenta.default-background','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('magenta.error-background','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('magenta.goodbye-background','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('magenta.goodbye-greeting','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('magenta.welcome-background','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('magenta.welcome-greeting','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('management.endpoints.web.exposure.include','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('management.health.rabbit.enabled','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('management.security.enabled','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('monitoring.contextRootNames','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('pacman.api.oauth2.client-id','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('pacman.api.oauth2.client-secret','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('pacman.service-password','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('pacman.service-user','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('pacman.url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('projections.assetgroups','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('projections.targetTypes','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('redshift.password','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('redshift.url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('redshift.userName','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('remind.cron','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('remind.email.subject','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('remind.email.text','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('rule-engine.invoke.url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('rule.lambda.action-disabled','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('rule.lambda.action-enabled','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('rule.lambda.function-arn','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('rule.lambda.function-name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('rule.lambda.principal','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('rule.lambda.target-id','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('rule.s3.bucket-name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('security.basic.enabled','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('security.oauth2.resource.user-info-uri','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('server.context-path','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('server.contextPath','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('server.servlet.context-path','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('service.dns.name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('service.url.admin','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('service.url.asset','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('service.url.auth','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('service.url.compliance','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('service.url.devstandards','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('service.url.pac_auth','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('service.url.statistics','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.boot.admin.client.instance.health-url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.boot.admin.client.instance.management-url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.boot.admin.client.instance.service-url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.boot.admin.client.password','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.boot.admin.client.url[0]','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.boot.admin.client.username','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.cache.cache-names','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.cache.caffeine.spec','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.cloud.bus.enabled','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.datasource.driver-class-name','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.datasource.password','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.datasource.url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.datasource.username','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.jpa.hibernate.naming.physical-strategy','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.mail.defaultEncoding','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.mail.host','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.mail.port','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.mail.protocol','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.sleuth.sampler.probability','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.zipkin.baseUrl','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.zipkin.sender.type','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('swagger.auth.whitelist','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('tagging.mandatoryTags','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('target-types.categories','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('template.digest-mail.url','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('time.zone','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('vulnerability.summary.severity','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('vulnerability.types','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('s3.role','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('s3.region','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('s3.processed','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('s3.data','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('s3','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('region.ignore','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('file.path','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('base.region','');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.mail.username','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.mail.password','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.mail.properties.mail.smtp.auth','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.mail.properties.mail.smtp.ssl.trust','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.mail.properties.mail.smtp.starttls.enable','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('spring.mail.test-connection','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('email.banner','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('pacbot.autofix.resourceowner.fallbak.email','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('scheduler.interval','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('scheduler.rules.initial.delay','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('scheduler.shipper.initial.delay','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('scheduler.role','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('scheduler.collector.initial.delay','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.enabled','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('gcp.enabled','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('aws.eventbridge.bus.details','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('azure.eventbridge.bus.details','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('gcp.eventbridge.bus.details','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('scheduler.total.batches','Description PlaceHolder');


INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) VALUES('pacman.es.host','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) VALUES('pacman.es.port','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) VALUES('esLoggingLevel','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('heimdall-host','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('heimdall-port','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.host','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.cc.to','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.orphan.resource.owner','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.role.name','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.integrations.slack.webhook.url','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.target.type.alias','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('autofix.allowlist.accounts.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('autofix.allowlist.accounts.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('autofix.cufoff.date','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('api.backup.asset.config','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('api.resource.creationdate','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('api.getlastaction','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('api.postlastaction','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('api.register.reactors.url','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('api.auth.owner.slack.handle','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.tag.name','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.max.email.notifications','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.resource.name.filter.pattern','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.es.stats.index','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.es.stats.type','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.es.auto.fix.transaction.index','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.es.auto.fix.transaction.type','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.api.sendmail','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.es.reactors.index','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.es.reactors.registry','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('square.one.slack.channel','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('com.tmobile.pacman.reactors.impl.s3.S3CreateBucketAndUpdateBucketPolicyReactor.account.whitelist','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('com.tmobile.pacman.reactors.impl.sample.SampleReactor.account.whitelist','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('com.tmobile.pacman.reactors.impl.sample.SampleReactor2.account.whitelist','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.from','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.tag.salt','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.tag.encyption.algorithm','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.exempted.mail.subject','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.exempted.types.for.cutoff.data','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.non.taggable.services','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.policy.url.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.subject.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.warning.mail.subject.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.violation.message.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.warning.message.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.post.fix.message.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.waittime.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.max.email.notifications.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.policy.url.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.subject.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.warning.mail.subject.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.violation.message.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.warning.message.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.post.fix.message.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.waittime.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.max.email.notifications.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.template.columns.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.common.email.notifications.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.login.user.name','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.login.password','Description PlaceHolder');

INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('autofix.allowlist.accounts.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.subject.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.warning.mail.subject.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.violation.message.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.warning.message.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.post.fix.message.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.waittime.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.max.email.notifications.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.template.columns.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.common.email.notifications.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.policy.url.path','Description PlaceHolder');

INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('autofix.allowlist.accounts.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.subject.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.warning.mail.subject.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.violation.message.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.warning.message.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.post.fix.message.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.waittime.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.max.email.notifications.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.template.columns.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.common.email.notifications.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','Description PlaceHolder');


INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('autofix.allowlist.accounts.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.subject.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.warning.mail.subject.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.violation.message.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.warning.message.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.post.fix.message.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.waittime.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.max.email.notifications.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.template.columns.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.common.email.notifications.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','Description PlaceHolder');

INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('autofix.allowlist.accounts.rdsdb_version-1_RdsDbPublicAccess_rdsdb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.subject.rdsdb_version-1_RdsDbPublicAccess_rdsdb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.warning.mail.subject.rdsdb_version-1_RdsDbPublicAccess_rdsdb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.violation.message.rdsdb_version-1_RdsDbPublicAccess_rdsdb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.warning.message.rdsdb_version-1_RdsDbPublicAccess_rdsdb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.post.fix.message.rdsdb_version-1_RdsDbPublicAccess_rdsdb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.waittime.rdsdb_version-1_RdsDbPublicAccess_rdsdb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.max.email.notifications.rdsdb_version-1_RdsDbPublicAccess_rdsdb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.template.columns.rdsdb_version-1_RdsDbPublicAccess_rdsdb','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.common.email.notifications.rdsdb_version-1_RdsDbPublicAccess_rdsdb','Description PlaceHolder');

INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('autofix.allowlist.accounts.Unused-Security-group_version-1_UnusedSecurityGroup_sg','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.contact.Unused-Security-group_version-1_UnusedSecurityGroup_sg','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.fix.type.Unused-Security-group_version-1_UnusedSecurityGroup_sg','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.subject.Unused-Security-group_version-1_UnusedSecurityGroup_sg','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.post.fix.message.Unused-Security-group_version-1_UnusedSecurityGroup_sg','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.fix.notify.Unused-Security-group_version-1_UnusedSecurityGroup_sg','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.template.columns.Unused-Security-group_version-1_UnusedSecurityGroup_sg','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.common.email.notifications.Unused-Security-group_version-1_UnusedSecurityGroup_sg','Description PlaceHolder');

INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('autofix.allowlist.accounts.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.subject.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.warning.mail.subject.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.violation.message.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.warning.message.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.post.fix.message.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.waittime.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.max.email.notifications.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.template.columns.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.common.email.notifications.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('deleteSgTag','Description PlaceHolder');

INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('autofix.allowlist.accounts.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.contact.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.fix.type.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.subject.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.rule.post.fix.message.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.fix.notify.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.mail.template.columns.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.auto.fix.common.email.notifications.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('pacman.autofix.issue.creation.time.elapsed.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('service.url.vulnerability','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('vulnerability.application.occurance','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('vulnerability.application.resourcedetails','Description PlaceHolder');
INSERT IGNORE INTO pac_config_key_metadata (`cfkey`,`description`) VALUES ('vulnerability.application.resourcedetailsboth','Description PlaceHolder');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('qualys_info','Base64 encoded user:password of qualys');
INSERT IGNORE INTO `pac_config_key_metadata` (`cfkey`, `description`) values('qualys_api_url','Qualys api url');

-- delete configs containing http url
DELETE IGNORE FROM pac_config_properties where value like 'http://%elb.amazonaws.com%';

INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('logging.config','classpath:spring-logback.xml','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('logging.esLoggingLevel','WARN','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('logging.consoleLoggingLevel','INFO','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('logging.esHost',concat(@LOGGING_ES_HOST_NAME,''),'application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('logging.esPort',concat(@LOGGING_ES_PORT,''),'application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.host',concat(@ES_HOST_NAME,''),'application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.port',concat(@ES_PORT,''),'application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.clusterName',concat(@ES_CLUSTER_NAME,''),'application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.port-admin',concat(@ES_PORT_ADMIN,''),'application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.host-heimdall',concat(@ES_HEIMDALL_HOST_NAME,''),'application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.port-heimdall',concat(@ES_HEIMDALL_PORT,''),'application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.clusterName-heimdall',concat(@ES_HEIMDALL_CLUSTER_NAME,''),'application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.port-admin-heimdall',concat(@ES_HEIMDALL_PORT_ADMIN,''),'application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.update-host',concat(@ES_UPDATE_HOST,''),'application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.update-port',concat(@ES_UPDATE_PORT,''),'application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.update-clusterName',concat(@ES_UPDATE_CLUSTER_NAME,''),'application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('formats.date','yyyy-MM-dd\'T\'HH:mm:ss.SSSZ','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('ldap.naming.context-factory','com.sun.jndi.ldap.LdapCtxFactory','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('ldap.naming.authentication','simple','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('service.dns.name',concat(@PACMAN_HOST_NAME,''),'api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('service.url.compliance',concat(@PACMAN_HOST_NAME,'/api/compliance'),'api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('service.url.asset',concat(@PACMAN_HOST_NAME,'/api/asset'),'api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('service.url.statistics',concat(@PACMAN_HOST_NAME,'/api/statistics'),'api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('service.url.devstandards',concat(@PACMAN_HOST_NAME,'/api/devstandards'),'api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('service.url.auth',concat(@PACMAN_HOST_NAME,'/api/auth'),'api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('service.url.admin',concat(@PACMAN_HOST_NAME,'/api/admin'),'api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('endpoints.refresh.sensitive','false','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds','100000','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('application.cors.allowed.domains','all','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('monitoring.contextRootNames','asset,compliance,statistics,devstandards,auth,admin','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('auth.active','db','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.cache.cache-names','trends,compliance,assets,trendsvuln','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.cache.caffeine.spec','maximumSize=500, expireAfterWrite=6h','api','prd','latest',NULL,NULL,NULL,NULL);
DELETE IGNORE FROM pac_config_properties where cfKey in ('spring.datasource.url','spring.datasource.username','spring.datasource.password');
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.datasource.url',concat(@RDS_URL,''),'api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.datasource.username',concat(@RDS_USERNAME,''),'api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.datasource.password',concat(@RDS_PASSWORD,''),'api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.datasource.driver-class-name','com.mysql.jdbc.Driver','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.cloud.bus.enabled','false','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[0].name','Admin Service','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[0].url','${PACMAN_HOST_NAME:http://localhost:8080}/api/admin/v2/api-docs','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[0].version','2','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[1].name','Auth Service','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[1].url','${PACMAN_HOST_NAME:http://localhost:8080}/api/auth/v2/api-docs','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[1].version','2','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[2].name','Asset Service','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[2].url','${PACMAN_HOST_NAME:http://localhost:8080}/api/asset/v2/api-docs','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[2].version','2','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[3].name','Notification Service','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[3].url','${PACMAN_HOST_NAME:http://localhost:8080}/api/notifications/v2/api-docs','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[3].version','2','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[4].name','Compliance Service','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[4].url','${PACMAN_HOST_NAME:http://localhost:8080}/api/compliance/v2/api-docs','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[4].version','2','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[5].name','Statistics Service','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[5].url','${PACMAN_HOST_NAME:http://localhost:8080}/api/statistics/v2/api-docs','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[5].version','2','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('tagging.mandatoryTags','Application,Environment','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('vulnerability.types','ec2,onpremserver','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('vulnerability.summary.severity','5','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('swagger.auth.whitelist','/configuration/security,/swagger-ui.html,/api.html,/webjars/**,/user,/public/**,/api.html,/css/styles.js,/js/swagger.js,/js/swagger-ui.js,/js/swagger-oauth.js,/images/pacman_logo.svg,/images/favicon-32x32.png,/images/favicon-16x16.png,/images/favicon.ico,/docs/v1/api.html,/v2/api-docs/**,/v2/swagger.json,/webjars/springfox-swagger-ui/css/**,/webjars/springfox-swagger-ui/js/**,/configuration/ui,/swagger-resources/**,/configuration/**,/imgs/**,/css/**,/css/font/**,/proxy*/**,/hystrix/monitor/**,/hystrix/**/images/pacman_logo.svg,/images/favicon-32x32.png,/images/favicon-16x16.png,/images/favicon.ico,/docs/v1/api.html,/v2/api-docs/**,/v2/swagger.json,/webjars/springfox-swagger-ui/css/**,/webjars/springfox-swagger-ui/js/**,/configuration/ui,/swagger-resources/**,/configuration/**,/imgs/**,/css/**,/css/font/**,/proxy*/**,/hystrix/monitor/**,/hystrix/**,/refresh','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('server.servlet.context-path','/api/admin','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('aws.access-key','','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('aws.secret-key','','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('admin.api-role','ROLE_ADMIN2, ROLE_ADMIN','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('job.s3.bucket-region',concat(@JOB_BUCKET_REGION,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('job.s3.bucket-name',concat(@RULE_JOB_BUCKET_NAME,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('job.lambda.region',concat(@JOB_LAMBDA_REGION,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('job.lambda.target-id','jobTargetId','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('job.lambda.function-name',concat(@JOB_FUNCTION_NAME,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('job.lambda.function-arn',concat(@JOB_FUNCTION_ARN,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('job.lambda.principal','events.amazonaws.com','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('job.lambda.action-enabled','lambda:InvokeFunction','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('job.lambda.action-disabled','lambda:DisableInvokeFunction','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('rule.s3.bucket-region',concat(@RULE_BUCKET_REGION,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('rule.s3.bucket-name',concat(@RULE_JOB_BUCKET_NAME,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('rule.lambda.region',concat(@RULE_LAMBDA_REGION,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('rule.lambda.target-id','ruleTargetId','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('rule.lambda.function-name',concat(@RULE_FUNCTION_NAME,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('rule.lambda.function-arn',concat(@RULE_FUNCTION_ARN,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('rule.lambda.principal','events.amazonaws.com','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('rule.lambda.action-enabled','lambda:InvokeFunction','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('rule.lambda.action-disabled','lambda:DisableInvokeFunction','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('management.security.enabled','false','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('security.basic.enabled','false','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('security.oauth2.client.user-authorization-uri',concat(@PACMAN_HOST_NAME,'/api/auth/oauth/authorize'),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.dev-ingest-host',concat(@ES_UPDATE_HOST,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.dev-ingest-port',concat(@ES_UPDATE_PORT,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.port',concat(@ES_UPDATE_PORT,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('elastic-search.host',concat(@ES_UPDATE_HOST,''),'admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('target-types.categories','Compute,Developer Tools,Analytics,Application Services,Storage,Management Tools,Messaging,Artificial Intelligence,Database,Business Productivity,Security,Identity & Compliance,Networking & Content Delivery,Contact Center,Internet Of Things,Desktop & App Streaming,Desktop & App Streaming,Migration,Mobile Services,Game Development,Contact Center,Application Integration','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.api.oauth2.client-id','22e14922-87d7-4ee4-a470-da0bb10d45d3','admin-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('server.servlet.context-path','/api/asset','asset-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('cloudinsights.tokenurl',concat(@CLOUD_INSIGHTS_TOKEN_URL,''),'asset-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('cloudinsights.costurl',concat(@CLOUD_INSIGHTS_COST_URL,''),'asset-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('cloudinsights.corp-user-id',concat(@SVC_CORP_USER_ID,''),'asset-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('cloudinsights.corp-password',concat(@SVC_CORP_PASSWORD,''),'asset-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('server.servlet.context-path','/api/auth','auth-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.api.oauth2.client-id','22e14922-87d7-4ee4-a470-da0bb10d45d3','auth-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.api.oauth2.client-secret','csrWpc5p7JFF4vEZBkwGCAh67kGQGwXv46qug7v5ZwtKg','auth-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('server.servlet.context-path','/api/compliance','compliance-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('rule-engine.invoke.url','submitRuleExecutionJob','compliance-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('projections.assetgroups','cloud-vm,onprem-vm,all-vm','compliance-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('projections.targetTypes','onpremserver,ec2','compliance-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('features.certificate.enabled',concat(@CERTIFICATE_FEATURE_ENABLED,''),'compliance-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('features.patching.enabled',concat(@PATCHING_FEATURE_ENABLED,''),'compliance-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('features.vulnerability.enabled',concat(@VULNERABILITY_FEATURE_ENABLED,''),'compliance-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('server.servlet.context-path','/api/notifications','notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('remind.cron','0 0 0 * * *','notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('remind.email.text','Hey, {0}! We\'ve missed you here on Pacman. It\'s time to check your compliance, Pacman team','notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('remind.email.subject','Pacman reminder','notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('backup.cron','0 0 12 * * *','notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('backup.email.text','Howdy, {0}. Your account backup is ready.\r\n\r\nCheers,\r\nPiggyMetrics team','notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('backup.email.subject','PiggyMetrics account backup','notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('backup.email.attachment','backup.json','notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.freemarker.suffix','.html','notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.mail.host',concat(@MAIL_SERVER,''),'notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.mail.port',concat(@MAIL_SERVER_PORT, ''),'notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.mail.protocol',concat(@MAIL_PROTOCOL,''),'notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.mail.defaultEncoding','UTF-8','notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('cron.frequency.weekly-report-sync-trigger','0 0 9 ? * MON *','notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('template.digest-mail.url',concat('https://s3.amazonaws.com/',@PACMAN_S3,'/index.html'),'notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('server.servlet.context-path','/api/statistics','statistics-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('region.ignore','us-gov-west-1,cn-north-1,cn-northwest-1','inventory','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('file.path','/home/ec2-user/data','inventory','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('spring.datasource.url',concat(@RDS_URL,''),'batch','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('spring.datasource.username',concat(@RDS_USERNAME,''),'batch','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('spring.datasource.password',concat(@RDS_PASSWORD,''),'batch','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('s3.data',concat(@DATA_IN_DIR,''),'batch','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('s3.processed',concat(@DATA_BKP_DIR,''),'batch','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('s3.role',concat(@PAC_ROLE,''),'batch','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('s3.region',concat(@BASE_REGION,''),'batch','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('s3',concat(@DATA_IN_S3,''),'batch','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('base.account',concat(@BASE_ACCOUNT,''),'batch','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('base.region',concat(@BASE_REGION,''),'batch','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('discovery.role',concat(@PAC_RO_ROLE,''),'inventory','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('elastic-search.host',concat(@ES_HOST_NAME,''),'batch','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (cfkey,value,application,profile,label,createdBy,createdDate,modifiedBy,modifiedDate) VALUES ('elastic-search.port',concat(@ES_PORT,''),'batch','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.mail.username',concat(@MAIL_SERVER_USER,''),'notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.mail.password',concat(@MAIL_SERVER_PWD,''),'notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.mail.properties.mail.smtp.auth',concat(@MAIL_SMTP_AUTH,''),'notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.mail.properties.mail.smtp.ssl.trust',concat(@MAIL_SERVER,''),'notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.mail.properties.mail.smtp.starttls.enable',concat(@MAIL_SMTP_SSL_ENABLE,''),'notification-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('spring.mail.test-connection',concat(@MAIL_SMTP_SSL_TEST_CONNECTION,''),'notification-service','prd','latest',NULL,NULL,NULL,NULL);

DELETE IGNORE FROM pac_config_properties where cfKey in ('azure.enabled','gcp.enabled','scheduler.interval','gcp.eventbridge.bus.details','aws.eventbridge.bus.details','scheduler.rules.initial.delay','scheduler.total.batches','scheduler.shipper.initial.delay','scheduler.collector.initial.delay');

INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('scheduler.interval',concat(@JOB_SCHEDULE_INTERVAL,''),'job-scheduler','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('scheduler.rules.initial.delay',concat(@JOB_SCHEDULE_INITIALDELAY_RULES,''),'job-scheduler','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('scheduler.shipper.initial.delay',concat(@JOB_SCHEDULE_INITIALDELAY_SHIPPER,''),'job-scheduler','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('scheduler.role',concat(@PAC_ROLE,''),'job-scheduler','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('scheduler.collector.initial.delay',concat(@JOB_SCHEDULE_INITIALDELAY,''),'job-scheduler','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('gcp.eventbridge.bus.details',concat(@GCP_EVENTBRIDGE_BUS_DETAILS,''),'job-scheduler','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('azure.eventbridge.bus.details',concat(@AZURE_EVENTBRIDGE_BUS_DETAILS,''),'job-scheduler','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('aws.eventbridge.bus.details',concat(@AWS_EVENTBRIDGE_BUS_DETAILS,''),'job-scheduler','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('scheduler.total.batches',concat(@JOB_SCHEDULER_NUMBER_OF_BATCHES,''),'job-scheduler','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('azure.enabled',concat(@AZURE_ENABLED,''),'job-scheduler','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('gcp.enabled',concat(@GCP_ENABLED,''),'job-scheduler','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('base.account',concat(@BASE_ACCOUNT,''),'job-scheduler','prd','latest',null,null,null,null);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('base.region',concat(@BASE_REGION,''),'job-scheduler','prd','latest',null,null,null,null);

INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.es.host',concat(@ES_HOST_NAME,''),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.es.port',concat(@ES_PORT,''),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('esLoggingLevel','DEBUG','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('heimdall-host',concat(@ES_HEIMDALL_HOST_NAME,''),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('heimdall-port',concat(@ES_HEIMDALL_PORT,''),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.host',concat(@PACMAN_HOST_NAME,''),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.cc.to','mail@pacbot.com','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.orphan.resource.owner','mail@pacbot.com','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.role.name','role/pacbot','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.integrations.slack.webhook.url','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.target.type.alias','account=iam,volume=ec2,snapshot=ec2,rdsdb=rds,dynamodb=dyndb,appelb=elb_app,classicelb=elb_classic,sg=ec2,elasticip=ec2,iamuser=iam,iamrole=iam','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('autofix.allowlist.accounts.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('autofix.allowlist.accounts.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('autofix.cufoff.date','3/28/2018','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('api.backup.asset.config',concat(@PACMAN_HOST_NAME,'/api/asset/v1/save-asset-config'),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('api.resource.creationdate',concat(@PACMAN_HOST_NAME,'/api/asset/v1/get-resource-created-date'),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('api.getlastaction',concat(@PACMAN_HOST_NAME,'/api/compliance/v1/get-last-action'),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('api.postlastaction',concat(@PACMAN_HOST_NAME,'/api/compliance/v1/post-action'),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('api.register.reactors.url',concat(@PACMAN_HOST_NAME,'/api/admin/reactors'),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('api.auth.owner.slack.handle','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.tag.name','pac_auto_fix_do_not_delete','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.max.email.notifications','2','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.resource.name.filter.pattern','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.es.stats.index','fre-stats','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.es.stats.type','execution-stats','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.es.auto.fix.transaction.index','fre-auto-fix-tran-log','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.es.auto.fix.transaction.type','transaction-log','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.api.sendmail',concat(@PACMAN_HOST_NAME,'/api/notifications/send-plain-text-mail'),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.es.reactors.index','pac-reactor','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.es.reactors.registry','events-log','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('square.one.slack.channel','#square-1-alerts','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('com.tmobile.pacman.reactors.impl.s3.S3CreateBucketAndUpdateBucketPolicyReactor.account.whitelist','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('com.tmobile.pacman.reactors.impl.sample.SampleReactor.account.whitelist','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('com.tmobile.pacman.reactors.impl.sample.SampleReactor2.account.whitelist','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.from','noreply@pacman-tmobile.com','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.tag.salt','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.tag.encyption.algorithm','AES','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.exempted.mail.subject','PacMan AutoFix - Vulnerable resource is now exempted','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.exempted.types.for.cutoff.data','iam,account,ec2,volume,snapshot,elasticsearch,efs,redshift,s3,dyndb,rds,elb_app,elb_classic,elasticip','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.non.taggable.services','iam,account','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.policy.url.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3',concat(@PACMAN_HOST_NAME,'/pl/compliance/policy-knowledgebase-details/S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3?ag=aws-all&domain=Infra%20%26%20Platforms'),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.subject.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','PaladinCloud autofix action - S3 bucket policy with anonymous read/write access restored back','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.warning.mail.subject.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','PaladinCloud autofix - S3 bucket detected with anonymous access','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.violation.message.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','a S3 bucket  (<b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) created by you is open to internet for anonymous access','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.warning.message.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','The permissions for this S3 bucket will be automatically fixed by PaladinCloud after {days} days if no exception is granted.','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.post.fix.message.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','PaladinCloud has now automatically revoked the public permissions of s3 bucket (<b>${RESOURCE_ID}</b>) created by you as it was a violation of','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.waittime.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','48','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.max.email.notifications.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3','4','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.policy.url.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2',concat(@PACMAN_HOST_NAME,'/pl/compliance/policy-knowledgebase-details/EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2?ag=aws-all&domain=Infra%20%26%20Platforms'),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.subject.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','PaladinCloud autofix action - Ec2 with public access restored back','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.warning.mail.subject.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','PaladinCloud autofix - Ec2 instance detected with public access','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.violation.message.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','an Ec2 instance  (<b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) created by you is open to internet','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.warning.message.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','The access to this Ec2 instance will be automatically fixed by PaladinCloud after {days} days if no exception is granted.','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.post.fix.message.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','PaladinCloud has now automatically revoked the public access of this Ec2 instance created by you as it was a violation of','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.waittime.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','48','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.max.email.notifications.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','4','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.template.columns.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','Resource Id,Account Id,Region,Attached Sg,Detached Sg','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.common.email.notifications.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2','commonTemplate','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) VALUES('pacman.login.user.name',concat(@PACMAN_LOGIN_USER_NAME,''),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) VALUES('pacman.login.password',concat(@PACMAN_LOGIN_PASSWORD,''),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) VALUES('email.banner','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) VALUES('pacbot.autofix.resourceowner.fallbak.email',concat(@PACBOT_AUTOFIX_RESOURCEOWNER_FALLBACK_MAILID,''),'rule','prd','latest',NULL,NULL,NULL,NULL);

INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.policy.url.path',concat(@PACMAN_HOST_NAME,'/pl/compliance/policy-knowledgebase-details/${RULE_ID}?ag=aws-all&domain=Infra%20%26%20Platforms'),'rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('autofix.allowlist.accounts.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.subject.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','PaladinCloud autofix action - Application ELB with public access restored back','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.warning.mail.subject.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','PaladinCloud autofix - Application ELB detected with public access','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.violation.message.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','An Application ELB (<b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) created by you is open to internet','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.warning.message.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','The access to this Application elb will be automatically fixed by PaladinCloud after {days} days if no exception is granted.','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.post.fix.message.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','PaladinCloud has now automatically revoked the public access of this Application ELB created by you as it was a violation of','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.waittime.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','48','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.max.email.notifications.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','4','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.template.columns.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','Resource Id,Account Id,Region,Attached Sg,Detached Sg','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.common.email.notifications.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb','commonTemplate','rule','prd','latest',NULL,NULL,NULL,NULL);


INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('autofix.allowlist.accounts.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.subject.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','PaladinCloud autofix action - Classic ELB with public access restored back','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.warning.mail.subject.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','PaladinCloud autofix - Classic ELB detected with public access','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.violation.message.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','An Classic ELB (<b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) created by you is open to internet','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.warning.message.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','The access to this Classic elb will be automatically fixed by PaladinCloud after {days} days if no exception is granted.','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.post.fix.message.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','PaladinCloud has now automatically revoked the public access of this Classic ELB created by you as it was a violation of','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.waittime.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','48','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.max.email.notifications.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','4','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.template.columns.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','Resource Id,Account Id,Region,Attached Sg,Detached Sg','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.common.email.notifications.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb','commonTemplate','rule','prd','latest',NULL,NULL,NULL,NULL);

INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('autofix.allowlist.accounts.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.subject.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','PaladinCloud autofix action - Redshift with public access restored back','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.warning.mail.subject.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','PaladinCloud autofix - Redshift detected with public access','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.violation.message.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','Redshift (<b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) created by you is open to internet','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.warning.message.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','The access to this Redshift will be automatically fixed by PaladinCloud after {days} days if no exception is granted.','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.post.fix.message.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','PaladinCloud has now automatically revoked the public access of this Redshift created by you as it was a violation of','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.waittime.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','48','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.max.email.notifications.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','4','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.template.columns.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','Resource Id,Account Id,Region,Attached Sg,Detached Sg','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.common.email.notifications.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift','commonTemplate','rule','prd','latest',NULL,NULL,NULL,NULL);

INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('autofix.allowlist.accounts.rdsdb_version-1_RdsDbPublicAccess_rdsdb','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.subject.rdsdb_version-1_RdsDbPublicAccess_rdsdb','PaladinCloud autofix action - Rds DB with public access restored back','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.warning.mail.subject.rdsdb_version-1_RdsDbPublicAccess_rdsdb','PaladinCloud autofix - Rds DB detected with public access','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.violation.message.rdsdb_version-1_RdsDbPublicAccess_rdsdb','Rds DB (<b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) created by you is open to internet','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.warning.message.rdsdb_version-1_RdsDbPublicAccess_rdsdb','The access to this Rds DB will be automatically fixed by PaladinCloud after {days} days if no exception is granted.','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.post.fix.message.rdsdb_version-1_RdsDbPublicAccess_rdsdb','PaladinCloud has now automatically revoked the public access of this Rds DB created by you as it was a violation of','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.waittime.rdsdb_version-1_RdsDbPublicAccess_rdsdb','48','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.max.email.notifications.rdsdb_version-1_RdsDbPublicAccess_rdsdb','4','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.template.columns.rdsdb_version-1_RdsDbPublicAccess_rdsdb','Resource Id,Account Id,Region,Attached Sg,Detached Sg','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.common.email.notifications.rdsdb_version-1_RdsDbPublicAccess_rdsdb','commonTemplate','rule','prd','latest',NULL,NULL,NULL,NULL);

INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('autofix.allowlist.accounts.Unused-Security-group_version-1_UnusedSecurityGroup_sg','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.contact.Unused-Security-group_version-1_UnusedSecurityGroup_sg','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.fix.type.Unused-Security-group_version-1_UnusedSecurityGroup_sg','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.subject.Unused-Security-group_version-1_UnusedSecurityGroup_sg','PaladinCloud - Unused AWS Security Group Auto Deleted Report which are created by PaladinCloud','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.fix.notify.Unused-Security-group_version-1_UnusedSecurityGroup_sg','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.post.fix.message.Unused-Security-group_version-1_UnusedSecurityGroup_sg','PaladinCloud has now automatically deleted the following list of unused security group resources which are created by PaladinCloud','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.template.columns.Unused-Security-group_version-1_UnusedSecurityGroup_sg','Resource Id,Account Id,Region,Group Name','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.common.email.notifications.Unused-Security-group_version-1_UnusedSecurityGroup_sg','commonTemplate','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.warning.mail.subject.Unused-Security-group_version-1_UnusedSecurityGroup_sg','PaladinCloud autofix - Found Unused AWS Security Group','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.warning.message.Unused-Security-group_version-1_UnusedSecurityGroup_sg','The unused Security group will be automatically deleted by PaladinCloud after {days} days if no exception is granted.','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.violation.message.Unused-Security-group_version-1_UnusedSecurityGroup_sg','Security group (<b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) is unused.','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.waittime.Unused-Security-group_version-1_UnusedSecurityGroup_sg','48','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.max.email.notifications.Unused-Security-group_version-1_UnusedSecurityGroup_sg','2','rule','prd','latest',NULL,NULL,NULL,NULL);

INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('autofix.allowlist.accounts.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.subject.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','PaladinCloud autofix action - Elasticsearch with public access restored back','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.warning.mail.subject.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','PaladinCloud autofix - Elasticsearch detected with public access','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.violation.message.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','Elasticsearch (<b>${RESOURCE_ID}</b>) from account (<b>${ACCOUNT_ID}</b>) of region (<b>${REGION}</b>) created by you is open to internet','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.warning.message.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','The access to this Elasticsearch will be automatically fixed by PaladinCloud after {days} days if no exception is granted.','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.post.fix.message.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','PaladinCloud has now automatically revoked the public access of this Elasticsearch created by you as it was a violation of','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.waittime.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','48','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.max.email.notifications.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','4','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.template.columns.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','Resource Id,Account Id,Region,Attached Sg,Detached Sg','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.common.email.notifications.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch','commonTemplate','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('deleteSgTag','pacbot-delete-sg','rule','prd','latest',NULL,NULL,NULL,NULL);

INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.rule.post.fix.message.Azure_Enable_Network_Security_for_SSH','PaladinCloud has now automatically revoked the public permissions of network security group ( <b> ${RESOURCE_ID} </b> ) created by you as it was a violation','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.mail.template.columns.Azure_Enable_Network_Security_for_SSH','Resource Id,Subscription,Region,Name','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.common.email.notifications.Azure_Enable_Network_Security_for_SSH','commonTemplate','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.fix.notify.Azure_Enable_Network_Security_for_SSH','dheeraj.kholia@paladincloud.io','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.mail.subject.Azure_Enable_Network_Security_for_SSH','PaladinCloud autofix action - Anonymous access to azure network security group port revoked','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.fix.type.Azure_Enable_Network_Security_for_SSH','silent','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.contact.Azure_Enable_Network_Security_for_SSH','dheeraj.kholia@paladincloud.io','application','prd','latest',NULL,NULL,NULL,NULL);

INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`)VALUES ('pacman.autofix.rule.post.fix.message.VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','PaladinCloud has now automatically revoked the public permissions of firewall rule (<b> ${RESOURCE_ID} </b>) created by you as it was a violation','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.mail.template.columns.VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','Resource Id,ProjectName,Firewall Rule Name','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.common.email.notifications.VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','commonTemplate','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.fix.notify.VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','dheeraj.kholia@paladincloud.io','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.mail.subject.VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','PaladinCloud autofix action - Anonymous access to port revoked','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.fix.type.VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','silent','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.contact.VPC_firewall_RDP_port_3389_should_not_be_publicly_accessible','dheeraj.kholia@paladincloud.io','application','prd','latest',NULL,NULL,NULL,NULL);

INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.rule.post.fix.message.UnrestrictedSqlDatabaseAccessRule_version-1','PaladinCloud has now automatically revoked the unrestricted access to SQL database instance (<b> ${RESOURCE_ID} </b>) created by you as it was a violation','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.mail.template.columns.UnrestrictedSqlDatabaseAccessRule_version-1','Resource Id,Subscription,Name','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.common.email.notifications.UnrestrictedSqlDatabaseAccessRule_version-1','commonTemplate','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.fix.notify.UnrestrictedSqlDatabaseAccessRule_version-1','dheeraj.kholia@paladincloud.io','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.mail.subject.UnrestrictedSqlDatabaseAccessRule_version-1','PaladinCloud autofix action - Unrestricted access to SQL database revoked','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.fix.type.UnrestrictedSqlDatabaseAccessRule_version-1','silent','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.contact.UnrestrictedSqlDatabaseAccessRule_version-1','dheeraj.kholia@paladincloud.io','application','prd','latest',NULL,NULL,NULL,NULL);

INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.rule.post.fix.message.Azure_Check_Public_Access_For_Storage_Account','PaladinCloud has now automatically revoked the unrestricted access to SQL database instance (<b> ${RESOURCE_ID} </b>) created by you as it was a violation','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.mail.template.columns.Azure_Check_Public_Access_For_Storage_Account','Resource Id,Subscription,Name','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.common.email.notifications.Azure_Check_Public_Access_For_Storage_Account','commonTemplate','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.fix.notify.Azure_Check_Public_Access_For_Storage_Account','dheeraj.kholia@paladincloud.io','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.mail.subject.Azure_Check_Public_Access_For_Storage_Account','PaladinCloud autofix action - Public access to azure storage account revoked','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.fix.type.Azure_Check_Public_Access_For_Storage_Account','silent','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.contact.Azure_Check_Public_Access_For_Storage_Account','dheeraj.kholia@paladincloud.io','application','prd','latest',NULL,NULL,NULL,NULL);


INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.rule.post.fix.message.GCP_kms_public_access_rule','PaladinCloud has now automatically revoked the public access to GCP KMS key (<b> ${RESOURCE_ID} </b>) created by you as it was a violation','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.mail.template.columns.GCP_kms_public_access_rule','Resource Id,Project,Name','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.common.email.notifications.GCP_kms_public_access_rule','commonTemplate','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.fix.notify.GCP_kms_public_access_rule','dheeraj.kholia@paladincloud.io','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.auto.fix.mail.subject.GCP_kms_public_access_rule','PaladinCloud autofix action - Public access to GCP KMS key revoked','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.fix.type.GCP_kms_public_access_rule','silent','application','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('pacman.autofix.contact.GCP_kms_public_access_rule','dheeraj.kholia@paladincloud.io','application','prd','latest',NULL,NULL,NULL,NULL);


INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('autofix.allowlist.accounts.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.contact.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.fix.type.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','silent','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.subject.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','PaladinCloud - AWS Unassociated Elastic IP Addresses Auto Delete Report','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.fix.notify.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.issue.creation.time.elapsed.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','72','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.autofix.rule.post.fix.message.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','PaladinCloud has now automatically deleted the following list of Unassociated Elastic IP Addresses','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.mail.template.columns.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','Resource Id,Account Id,Region,Allocation Id','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('pacman.auto.fix.common.email.notifications.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip','commonTemplate','rule','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) VALUES('service.url.vulnerability',concat(@PACMAN_HOST_NAME,'/api/vulnerability'),'api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[6].name','Vulnerability Service','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[6].url','${PACMAN_HOST_NAME:http://localhost:8080}/api/vulnerability/v2/api-docs','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('api.services[6].version','2','api','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('server.servlet.context-path','/api/vulnerability','vulnerability-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('qualys_info',concat(@QUALYS_INFO,''),'qualys-enricher','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('qualys_api_url',concat(@QUALYS_API_URL,''),'qualys-enricher','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('s3.data','azure-inventory','azure-discovery','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('s3.processed','backup-azure','azure-discovery','prd','latest',NULL,NULL,NULL,NULL);
DELETE IGNORE FROM pac_config_properties where cfKey = 'azure.credentials';
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('azure.credentials',concat(@AZURE_CREDENTIALS,''),'azure-discovery','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('s3.data','gcp-inventory','gcp-discovery','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('s3.processed','backup-gcp','gcp-discovery','prd','latest',NULL,NULL,NULL,NULL);
DELETE IGNORE FROM pac_config_properties where cfKey='gcp.credentials';
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('gcp.credentials',concat(@GCP_CREDENTIALS,''),'gcp-discovery','prd','latest',NULL,NULL,NULL,NULL);

DELETE IGNORE FROM pac_config_properties where cfKey='current-release';
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('current-release',concat(@CURRENT_RELEASE,''),'application','prd','latest',NULL,NULL,NULL,NULL);


INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('vulnerability.application.occurance','severity,_resourceid,pciflag,_vulnage,vulntype,title,classification,_firstFound,_lastFound,qid,patchable,category','vulnerability-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('vulnerability.application.resourcedetails','tags.Name,accountid,accountname,tags.Environment,tags.Application,privateipaddress,instanceid,region,availabilityzone,imageid,platform,privatednsname,instancetype,subnetid,_resourceid,publicipaddress,publicdnsname,vpcid','vulnerability-service','prd','latest',NULL,NULL,NULL,NULL);
INSERT IGNORE INTO pac_config_properties (`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('vulnerability.application.resourcedetailsboth','tags.Name,tags.Environment,tags.Application,ip_address,privateipaddress,_entitytype,_resourceid','vulnerability-service','prd','latest',NULL,NULL,NULL,NULL);




INSERT IGNORE INTO `Recommendation_Mappings`(`checkId`,`type`,`resourceInfo`,`_resourceId`,`monthlySavingsField`) values ('H7IgTzjTYb','volume','Volume ID','volumeid',NULL),('DAvU99Dc4C','volume','Volume ID','volumeid','Monthly Storage Cost'),('Qch7DwouX1','ec2','Instance ID','instanceid','Estimated Monthly Savings'),('1iG5NDGVre','sg','Security Group ID','groupid',NULL),('HCP4007jGY','sg','Security Group ID','groupid',NULL),('BueAdJ7NrP','s3','Bucket Name','name',NULL),('iqdCTZKCUp','classicelb','Load Balancer Name','loadbalancername',NULL),('R365s2Qddf','s3','Bucket Name','name',NULL),('Pfx0RwqBli','s3','Bucket Name','name',NULL),('a2sEc6ILx','classicelb','Load Balancer Name','loadbalancername',NULL),('xdeXZKIUy','classicelb','Load Balancer Name','loadbalancername',NULL),('CLOG40CDO8','asg','Auto Scaling Group Name','autoscalinggroupname',NULL),('7qGXsKIUw','classicelb','Load Balancer Name','loadbalancername',NULL),('hjLMh88uM8','classicelb','Load Balancer Name','loadbalancername','Estimated Monthly Savings'),('DqdJqYeRm5','iamuser','IAM User','username',NULL),('j3DFqYTe29','ec2','Instance ID','instanceid',NULL),('f2iK5R6Dep','rdsdb','DB Instance','dbinstanceidentifier',NULL),('1MoPEMsKx6','reservedinstance','Instance Type','instancetype','Estimated Monthly Savings'),('Ti39halfu8','rdsdb','DB Instance Name','dbinstanceidentifier','Estimated Monthly Savings (On Demand)'),('Wnwm9Il5bG','ec2','Instance ID','instanceid',NULL),('V77iOLlBqz','ec2','Instance ID','instanceid',NULL),('Z4AUBRNSmz','elasticip','IP Address','publicip',NULL),('8CNsSllI5v','asg','Auto Scaling Group Name','autoscalinggroupname',NULL),('N420c450f2','cloudfront','Distribution ID','id',NULL),('TyfdMXG69d','ec2','Instance ID','instanceid',NULL),('tfg86AVHAZ','sg','Group ID','groupid',NULL),('yHAGQJV9K5','ec2','Instance ID','instanceid',NULL),('S45wrEXrLz','vpnconnection','VPN ID','vpnconnectionid',NULL),('PPkZrjsH2q','volume','Volume ID','volumeid',NULL),('opQPADkZvH','rdsdb','DB Instance','dbinstanceidentifier',NULL),('796d6f3D83','s3','Bucket Name','name',NULL),('G31sQ1E9U','redshift','Cluster','clusteridentifier','Estimated Monthly Savings'),('xSqX82fQu','classicelb','Load Balancer Name','loadbalancername',NULL),('ZRxQlPsb6c','ec2','Instance ID','instanceid',NULL),('N430c450f2','cloudfront','Distribution ID','id',NULL),('4g3Nt5M1Th','virtualinterface','Gateway ID','virtualgatewayid',NULL),('0t121N1Ty3','directconnect','Connection ID','connectionid',NULL),('N425c450f2','cloudfront','Distribution ID','id',NULL),('xuy7H1avtl','rdscluster','Cluster','dbclusteridentifier',NULL),('1e93e4c0b5','reservedinstance','Reserved Instance ID','instanceid','Estimated Monthly Savings'),('51fC20e7I2','route53','Hosted Zone ID','hostedZoneId',NULL),('cF171Db240','route53','Hosted Zone ID','hostedZoneId',NULL),('Cb877eB72b','route53','Hosted Zone ID','hostedZoneId',NULL),('b73EEdD790','route53','Hosted Zone ID','hostedZoneId',NULL),('C056F80cR3','route53','Hosted Zone ID','hostedZoneId',NULL),('B913Ef6fb4','route53','Hosted Zone ID','hostedZoneId',NULL);

INSERT IGNORE INTO `CloudNotification_mapping`(`NotificationId`,`eventType`,`resourceIdKey`,`resourceIdVal`,`esIndex`,`phdEntityKey`) values ('02BUF','CLOUDTRAIL','_resourceid.keyword','_resourceid','cloudtrl','entityvalue'),('4GIGN','S3','_resourceid.keyword','_resourceid','s3','entityvalue'),('5U846','ELASTICSEARCH','arn.keyword','arn','elasticsearch','entityvalue'),('DI3Q3','SQS','_resourceid.keyword','_resourceid','sqs','entityvalue'),('FZC49','VPN','vpnconnectionid.keyword','vpnconnectionid','vpnconnection','entityvalue'),('G30R7','KMS','_resourceid.keyword','_resourceid','kms','entityvalue'),('G4AIH','RDS','dbinstanceidentifier.keyword','dbinstanceidentifier','rdsdb','entityvalue'),('HL28B','EC2','_resourceid.keyword','_resourceid','ec2','entityvalue'),('KBDY2','DIRECTCONNECT','_resourceid.keyword','_resourceid','directconnect','entityvalue'),('LPB7Z','LAMBDA','_resourceid.keyword','_resourceid','lambda','entityvalue'),('PKI3S','CONFIG','_resourceid.keyword','_resourceid','config','entityvalue'),('S2QIA','REDSHIFT','clusteridentifier.keyword','clusteridentifier','redshift','entityvalue'),('W45AP','IAM','arn.keyword','arn','iamuser','entityvalue'),('X9GYT','VPC','_resourceid.keyword','_resourceid','vpc','entityvalue'),('YCFSX','CLOUDFRONT','_resourceid.keyword','_resourceid','cloudfront','entityvalue'),('YGS02','DYNAMODB','tablearn.keyword','tablearn','dynamodb','entityvalue'),('YGS03','MQ','_resourceid.keyword','_resourceid','mq','entityvalue'),('YGS05','APIGATEWAY','_resourceid.keyword','_resourceid','apigtw','entityvalue');





UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='AmazonRDSIdleDBInstancesRule_version-1_AmazonRDSIdleDBInstancesRule_rdsdb';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws',ruleParams = '{"assetGroup":"aws","policyId":"CheckInactiveIamUser_version-1","environmentVariables":[],"ruleUUID":"aws_iam_users_should_not_be_inactive_for_than_target_period","ruleType":"ManageRule","pac_ds":"aws","targetType":"iamuser","params":[{"encrypt":false,"value":"90","key":"pwdInactiveDuration"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"check-for-inactive-iam-users","key":"ruleKey"},{"encrypt":false,"value":"true","key":"threadsafe"}],"ruleId":"CheckInactiveIamUser_version-1_CheckInactiveIamUser_iamuser","autofix":false,"alexaKeyword":"CheckInactiveIamUser","ruleRestUrl":""}' WHERE ruleId='CheckInactiveIamUser_version-1_CheckInactiveIamUser_iamuser';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='GuardDutyFindingsExists_version-1_GuardDutyFindingsExists_ec2';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws',ruleParams = '{"assetGroup":"aws","policyId":"IamPasswordPolicy_version-1","environmentVariables":[],"ruleUUID":"aws_accounts_should_follow_iam_password_policy","ruleType":"ManageRule","pac_ds":"aws","targetType":"account","params":[{"encrypt":false,"value":"role/paladincloud_ro","key":"roleIdentifyingString"},{"encrypt":false,"value":"check-iam-password-policy","key":"ruleKey"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"90","key":"maxPasswordAge"},{"encrypt":false,"value":"true","key":"requireSymbols"},{"encrypt":false,"value":"true","key":"requireNumbers"},{"encrypt":false,"value":"true","key":"requireUppercaseCharacters"},{"encrypt":false,"value":"true","key":"requireLowercaseCharacters"},{"encrypt":false,"value":"true","key":"allowUsersToChangePassword"},{"encrypt":false,"value":"true","key":"expirePasswords"},{"encrypt":false,"value":"false","key":"hardExpiry"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"14","key":"minPasswordLength"},{"encrypt":false,"value":"24","key":"lastPasswordsToRemember"},{"encrypt":false,"value":"iam-password-policy-fix","key":"fixKey"}],"ruleId":"IamPasswordPolicy_version-1_IamPasswordPolicy_account","autofix":false,"alexaKeyword":"IamPasswordPolicy","ruleRestUrl":""}' WHERE ruleId='IamPasswordPolicy_version-1_IamPasswordPolicy_account';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='IdleLoadBalancerRule_version-1_IdleLoadbalancerRule_classicelb';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='LambdaFunWithAdmin-OrIamPrivileges_version-1_LambdaFunWithAdminOrIamPrivileges_lambda';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_ApiWithNonStandardRule_api';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_AppelbWithNonStandardRule_appelb';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_DynamodbWithNonStandardRule_dynamodb';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='IdleLoadBalancerRule_version-1_IdleLoadbalancerRule_classicelb';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='LambdaFunWithAdmin-OrIamPrivileges_version-1_LambdaFunWithAdminOrIamPrivileges_lambda';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_ApiWithNonStandardRule_api';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_AppelbWithNonStandardRule_appelb';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_DynamodbWithNonStandardRule_dynamodb';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_EfsWithNonStandardRule_efs';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_ElasticacheWithNonStandardRule_elasticache';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_ElasticipWithNonStandardRule_elasticip';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_ElasticsearchWithNonStandardRule_elasticsearch';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_EmrWithNonStandardRule_emr';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_EniWithNonStandardRule_eni';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_KmsWithNonStandardRule_kms';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_RdsdbWithNonStandardRule_rdsdb';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_RedshiftWithNonStandardRule_redshift';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_VpcWithNonStandardRule_vpc';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_version-1_AsgWithNonStandardRegion_asg';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_version-1_ClassicelbWithNonStandardRegion_classicelb';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_version-1_LambdaWithNonStandardRegion_lambda';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_version-1_LaunchconfigWithNonStandardRegion_launchconfig';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_version-1_RdsSnapshotWithNonStandardRegion_rdssnapshot';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_version-1_ResourceWithNonStandardRule_ec2';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_version-1_S3WithNonStandardRegion_s3';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_version-1_SgWithNonStandardRegion_sg';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_version-1_SnapshotWithNonStandardRegion_snapshot';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_version-1_SnstopicWithNonStandardRegion_snstopic';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_version-1_StackWithNonStandardRegion_stack';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_version-1_SubnetWithNonStandardRegion_subnet';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='NonStandardRegionRule_version-1_version-1_VolumeWithNonStandardRegion_volume';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='SGWithAnywhereAccess_version-1_SgWithSshPort22OpenToInternetAccess_sg';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='SQS_Public_Access_Rule_version-1_SQS_Public_access_rule_sqs';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='ServiceAccountPrivilegesRule_version-1_UnapprovedServiceAccountAccess_iamuser';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='TaggingRule_version-1_ElasticacheTaggingRule_elasticache';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='TaggingRule_version-1_version-1_ElasticSearchTaggingRule_elasticsearch';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='Underutilized-Amazon-EBS-Volumes_version-1_Underutilized-EBS-Volumes_volume';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='UnderutilizedAmazonRedshiftClustersRule_version-1_UnderutilizedAmazonRedshiftClustersRule_redshift';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='UntaggedOrUnusedEbsRule_version-1_version-1_UntaggedOrUnusedEbsRule_volume';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';
UPDATE `cf_RuleInstance` SET assetGroup = 'aws' WHERE ruleId='core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser';

INSERT IGNORE INTO `cf_JobScheduler`(`jobId`,`jobUUID`,`jobName`,`jobType`,`jobParams`,`jobFrequency`,`jobExecutable`,`jobArn`,`status`,`userId`,`createdDate`,`modifiedDate`) values ('pacbot-AWS-Data-Collector','pacbot-AWS-Data-Collector','AWS-Data-Collector','jar','','0 0/2 * * ? *','inventory-fetch.jar',concat('arn:aws:events:',@region,':',@account,':rule/pacbot-AWS-Data-Collector'),'ENABLED','20433','2017-10-17 00:18:43','2017-11-03 12:48:23');
INSERT IGNORE INTO `cf_JobScheduler`(`jobId`,`jobUUID`,`jobName`,`jobType`,`jobParams`,`jobFrequency`,`jobExecutable`,`jobArn`,`status`,`userId`,`createdDate`,`modifiedDate`) values('pacbot-aws-redshift-es-data-shipper','pacbot-aws-redshift-es-data-shipper','aws-redshift-es-data-shipper','jar','','30 0/2 * * ? *','data-shipper.jar',concat('arn:aws:events:',@region,':',@account,':rule/pacbot-aws-redshift-es-data-shipper'),'ENABLED','20433','2017-11-02 23:56:53','2017-11-03 12:48:49');

UPDATE `cf_RuleInstance` SET ruleParams = '{"params":[{"encrypt":"false","value":"role/paladincloud_ro","key":"roleIdentifyingString"},{"encrypt":"false","value":"check-for-vpc-flowlog-enabled","key":"ruleKey"},{"encrypt":false,"value":"high","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleId":"VpcFlowLogsEnabled_version-1_VpcFlowLogsEnabled_vpc","autofix":false,"alexaKeyword":"VpcFlowLogsEnabled","ruleRestUrl":"","targetType":"vpc","pac_ds":"aws","policyId":"VpcFlowLogsEnabled_version-1","assetGroup":"aws","ruleUUID":"aws_account_should_have_vpclogs_enabled","ruleType":"ManageRule"}' WHERE ruleId = 'VpcFlowLogsEnabled_version-1_VpcFlowLogsEnabled_vpc';
UPDATE `cf_RuleInstance` SET ruleParams = '{"params":[{"key":"apiKeyValue","value":"","encrypt":true},{"key":"apiKeyName","value":"","encrypt":true},{"key":"ruleCategory","value":"security","encrypt":false},{"key":"severity","value":"critical","encrypt":false},{"key":"esServiceURL","value":"/aws_checks/checks_resources/_search","encrypt":false},{"key":"apiGWURL","value":"","encrypt":false},{"key":"ruleKey","value":"check-for-s3-global-access","isValueNew":true,"encrypt":false},{"key":"checkId","value":"Pfx0RwqBli","isValueNew":true,"encrypt":false},{"key":"roleIdentifyingString","value":"role/paladincloud_ro","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"s3-global-access-fix","isValueNew":true,"encrypt":false}],"environmentVariables":[],"ruleId":"S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3","autofix":false,"alexaKeyword":"s3GlobalAccess","ruleRestUrl":"","targetType":"s3","pac_ds":"aws","policyId":"S3GlobalAccess_version-1","assetGroup":"aws","ruleUUID":"aws_s3_should_not_be_publicly_accessible","ruleType":"ManageRule"}' WHERE  ruleId = 'S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3';
UPDATE `cf_RuleInstance` SET ruleParams = '{"assetGroup":"aws","policyId":"NonAdminAccountsWithIAMFullAccess_version-1","environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleUUID":"aws_non_admin_iam_role_should_not_have_iam_full_access","ruleType":"ManageRule","pac_ds":"aws","targetType":"iamrole","params":[{"encrypt":"false","value":"role/paladincloud_ro","key":"roleIdentifyingString"},{"encrypt":"false","value":"Admin","key":"adminRolesToCompare"},{"encrypt":"false","value":"check-non-admin-accounts-for-iamfullccess","key":"ruleKey"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"high","key":"severity"}],"ruleId":"NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole","autofix":false,"alexaKeyword":"IAMAccessGrantForNonAdminAccountRule","ruleRestUrl":""}' WHERE ruleId = 'NonAdminAccountsWithIAMFullAccess_version-1_IAMAccessGrantForNonAdminAccountRule_iamrole';
UPDATE `cf_RuleInstance` SET ruleParams = '{"assetGroup":"aws","policyId":"IamPasswordPolicy_version-1","environmentVariables":[],"ruleUUID":"aws_accounts_should_follow_iam_password_policy","ruleType":"ManageRule","pac_ds":"aws","targetType":"account","params":[{"encrypt":false,"value":"role/paladincloud_ro","key":"roleIdentifyingString"},{"encrypt":false,"value":"check-iam-password-policy","key":"ruleKey"},{"encrypt":false,"value":"security","key":"ruleCategory"},{"encrypt":false,"value":"90","key":"maxPasswordAge"},{"encrypt":false,"value":"true","key":"requireSymbols"},{"encrypt":false,"value":"true","key":"requireNumbers"},{"encrypt":false,"value":"true","key":"requireUppercaseCharacters"},{"encrypt":false,"value":"true","key":"requireLowercaseCharacters"},{"encrypt":false,"value":"true","key":"allowUsersToChangePassword"},{"encrypt":false,"value":"true","key":"expirePasswords"},{"encrypt":false,"value":"false","key":"hardExpiry"},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"14","key":"minPasswordLength"},{"encrypt":false,"value":"24","key":"lastPasswordsToRemember"},{"encrypt":false,"value":"iam-password-policy-fix","key":"fixKey"}],"ruleId":"IamPasswordPolicy_version-1_IamPasswordPolicy_account","autofix":false,"alexaKeyword":"IamPasswordPolicy","ruleRestUrl":""}' WHERE ruleId = 'IamPasswordPolicy_version-1_IamPasswordPolicy_account';
UPDATE `cf_RuleInstance` SET ruleParams = '{"assetGroup":"aws","policyId":"IamAccessKeyRotatedInEvery90Days_version-1","environmentVariables":[{"encrypt":false,"value":"123","key":"abc"}],"ruleUUID":"aws_iam_keys_should_be_rotated_every_target_period","ruleType":"ManageRule","pac_ds":"aws","targetType":"iamuser","params":[{"encrypt":"false","value":"role/paladincloud_ro","key":"roleIdentifyingString"},{"encrypt":"false","value":"check-for-accesskeys-rotated-in-every-90-days","key":"ruleKey"},{"encrypt":false,"value":"high","key":"severity"},{"isValueNew":true,"encrypt":false,"value":"security","key":"ruleCategory"}],"ruleId":"IamAccessKeyRotatedInEvery90Days_version-1_IamAccessKeyRotatedInEvery90Days_iamuser","autofix":false,"alexaKeyword":"IamAccessKeyRotatedInEvery90Days","ruleRestUrl":""}' WHERE ruleId = 'IamAccessKeyRotatedInEvery90Days_version-1_IamAccessKeyRotatedInEvery90Days_iamuser';
UPDATE `cf_RuleInstance` SET ruleParams = '{"params":[{"encrypt":false,"value":"check-guard-duty-enabled-for-all-accounts","key":"ruleKey"},{"encrypt":false,"value":"role/paladincloud_ro","key":"roleIdentifyingString"},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"CheckGuardDutyIsEnabledForAllAccount_version-1_CheckGuardDutyIsEnabledForAllAccount_account","autofix":false,"alexaKeyword":"CheckGuardDutyIsEnabledForAllAccount","ruleRestUrl":"","targetType":"account","pac_ds":"aws","policyId":"CheckGuardDutyIsEnabledForAllAccount_version-1","assetGroup":"aws","ruleUUID":"aws_guardduty_should_be_enabled","ruleType":"ManageRule"}' WHERE ruleId = 'CheckGuardDutyIsEnabledForAllAccount_version-1_CheckGuardDutyIsEnabledForAllAccount_account';
UPDATE `cf_RuleInstance` SET ruleParams = '{"params":[{"key":"roleIdentifyingString","value":"role/paladincloud_ro","encrypt":false},{"key":"splitterChar","value":",","encrypt":false},{"key":"unApprovedIamActions","value":"ec2:*,*,ec2:RunInstances","encrypt":false},{"key":"ruleKey","value":"iam-role-with-unapproved-access","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"iam-role-with-unapproved-access-autofix","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole","autofix":false,"alexaKeyword":"ec2-runInstance-iam-role-with-unapproved-access","ruleRestUrl":"","targetType":"iamrole","pac_ds":"aws","policyId":"EC2-RunInstance-iam-role-with-unapproved-access_version-1","assetGroup":"aws","ruleUUID":"aws_iamrole_shouldnothave_ec2runinstance_privilege","ruleType":"ManageRule"}' WHERE ruleId = 'EC2-RunInstance-iam-role-with-unapproved-access_version-1_ec2-runInstance-iam-role-with-unapproved-access_iamrole';
UPDATE `cf_RuleInstance` SET ruleParams = '{"params":[{"key":"ruleKey","value":"iam-role-with-unapproved-access","isValueNew":true,"encrypt":false},{"key":"roleIdentifyingString","value":"role/paladincloud_ro","isValueNew":true,"encrypt":false},{"key":"unApprovedIamActions","value":"ec2:CreateDefaultSubnet,ec2:CreateDefaultVpc,ec2:CreateInternetGateway,ec2:CreateSubnet,ec2:CreateVpc,ec2:CreateVpcEndpoint,ec2:CreateVpcEndpointConnectionNotification,ec2:CreateVpcEndpointServiceConfiguration,ec2:CreateVpcPeeringConnection,ec2:CreateVpnConnection,ec2:CreateVpnConnectionRoute,ec2:CreateVpnGateway,ec2:ModifySubnetAttribute,ec2:ModifyVpcAttribute,ec2:ModifyVpcEndpoint,ec2:ModifyVpcEndpointConnectionNotification,ec2:ModifyVpcEndpointServiceConfiguration,ec2:ModifyVpcEndpointServicePermissions,ec2:ModifyVpcPeeringConnectionOptions,ec2:ModifyVpcTenancy,ec2:MoveAddressToVpc,ec2:AttachInternetGateway,ec2:CreateEgressOnlyInternetGateway,ec2:AttachVpnGateway.ec2:*,*","isValueNew":true,"encrypt":false},{"key":"splitterChar","value":",","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"iam-role-with-unapproved-access-autofix","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole","autofix":false,"alexaKeyword":"networkprivileges","ruleRestUrl":"","targetType":"iamrole","pac_ds":"aws","policyId":"IAMRoleNetworkPrivilegesRule_version-1","assetGroup":"aws","ruleUUID":"aws_iamrole_shouldnothave_network_privileges","ruleType":"ManageRule"}' WHERE ruleId = 'IAMRoleNetworkPrivilegesRule_version-1_IAMRoleNetworkPrivilegesRule_iamrole';
UPDATE `cf_RuleInstance` SET ruleParams = '{"params":[{"key":"ruleKey","value":"iam-role-with-unapproved-access","encrypt":false},{"key":"roleIdentifyingString","value":"role/paladincloud_ro","encrypt":false},{"key":"unApprovedIamActions","value":"lambda:CreateFunction,lambda:Create*,*,lambda:*","encrypt":false},{"key":"splitterChar","value":",","encrypt":false},{"key":"fixKey","value":"iam-role-with-unapproved-access-autofix","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole","autofix":false,"alexaKeyword":"UnapprovedIamRoleWithLambdaAccess","ruleRestUrl":"","targetType":"iamrole","pac_ds":"aws","policyId":"UnapprovedIamRoleWithLambdaAccess_version-1","assetGroup":"aws","ruleUUID":"aws_iamrole_shouldnothave_lambda_privilege","ruleType":"ManageRule"}' WHERE ruleId = 'UnapprovedIamRoleWithLambdaAccess_version-1_UnapprovedIamRoleLambdaAccess_iamrole';
UPDATE `cf_RuleInstance` SET ruleParams = '{"params":[{"key":"roleIdentifyingString","value":"role/paladincloud_ro","encrypt":false},{"key":"unApprovedIamActions","value":"ec2:CreateDefaultSubnet,ec2:CreateDefaultVpc,ec2:CreateInternetGateway,ec2:CreateSubnet,ec2:CreateVpc,ec2:CreateVpcEndpoint,ec2:CreateVpcEndpointConnectionNotification,ec2:CreateVpcEndpointServiceConfiguration,ec2:CreateVpcPeeringConnection,ec2:CreateVpnConnection,ec2:CreateVpnConnectionRoute,ec2:CreateVpnGateway,ec2:ModifySubnetAttribute,ec2:ModifyVpcAttribute,ec2:ModifyVpcEndpoint,ec2:ModifyVpcEndpointConnectionNotification,ec2:ModifyVpcEndpointServiceConfiguration,ec2:ModifyVpcEndpointServicePermissions,ec2:ModifyVpcPeeringConnectionOptions,ec2:ModifyVpcTenancy,ec2:MoveAddressToVpc,ec2:AttachInternetGateway,ec2:CreateEgressOnlyInternetGateway,ec2:AttachVpnGateway.ec2:*,*","encrypt":false},{"key":"splitterChar","value":",","encrypt":false},{"key":"ruleKey","value":"iam-user-with-unapproved-access","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"iam-user-with-unapproved-access-autofix","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"critical","key":"severity"},{"encrypt":false,"value":"security","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser","autofix":false,"alexaKeyword":"core-networking-iam-user-with-unapproved-access","ruleRestUrl":"","targetType":"iamuser","pac_ds":"aws","policyId":"core-networking-iam-user-with-unapproved-access_version-1","assetGroup":"aws","ruleUUID":"aws_iamuser_shouldnothave_corenetwork_privileges","ruleType":"ManageRule"}' WHERE ruleId = 'core-networking-iam-user-with-unapproved-access_version-1_core-networking-iam-user-with-unapproved-access_iamuser';
UPDATE `cf_RuleInstance` SET ruleParams = '{"params":[{"encrypt":false,"value":"check-for-unused-elastic-ip","key":"ruleKey"},{"key":"threadsafe","value":"true","isValueNew":true,"encrypt":false},{"key":"fixKey","value":"unused-elastic-ip-fix","isValueNew":true,"encrypt":false},{"encrypt":false,"value":"high","key":"severity"},{"encrypt":false,"value":"governance","key":"ruleCategory"}],"environmentVariables":[],"ruleId":"UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip","autofix":false,"alexaKeyword":"UnusedElasticIpRule","ruleRestUrl":"","targetType":"elasticip","pac_ds":"aws","policyId":"UnusedElasticIpRule_version-1","assetGroup":"aws","ruleUUID":"aws_elasticip_should_not_be_there_in_non_standard_region","ruleType":"ManageRule"}' WHERE ruleId = 'UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';


/* This is to delete row with below entry as we need only entry with application='application' which is added in insert query*/
DELETE FROM pac_config_properties WHERE cfkey = 'tagging.mandatoryTags' AND application='api' AND profile='prd' AND label='latest';


/* Update query for updating the description field of pac_config_key_metadata */
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Admin Role key' WHERE `cfkey` = 'admin.api-role';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Time in for admin push notification polling' WHERE `cfkey` = 'admin.push.notification.pollinterval.milliseconds';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Slack handle for auth service' WHERE `cfkey` = 'api.auth.owner.slack.handle';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Configuration for backing up asset' WHERE `cfkey` = 'api.backup.asset.config';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Getting last action by rule engine' WHERE `cfkey` = 'api.getlastaction';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Posting last action by rule engine' WHERE `cfkey` = 'api.postlastaction';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Reactors URL for register' WHERE `cfkey` = 'api.register.reactors.url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Resource creation date key' WHERE `cfkey` = 'api.resource.creationdate';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Name of API service at 0 position' WHERE `cfkey` = 'api.services[0].name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'URL of API service at 0 position' WHERE `cfkey` = 'api.services[0].url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Version of API service at 0 position' WHERE `cfkey` = 'api.services[0].version';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Name of API service at 1 position' WHERE `cfkey` = 'api.services[1].name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'URL of API service at 1 position' WHERE `cfkey` = 'api.services[1].url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Version of API service at 1 position' WHERE `cfkey` = 'api.services[1].version';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Name of API service at 2 position' WHERE `cfkey` = 'api.services[2].name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'URL of API service at 2 position' WHERE `cfkey` = 'api.services[2].url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Version of API service at 2 position' WHERE `cfkey` = 'api.services[2].version';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Name of API service at 3 position' WHERE `cfkey` = 'api.services[3].name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'URL of API service at 3 position' WHERE `cfkey` = 'api.services[3].url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Version of API service at 3 position' WHERE `cfkey` = 'api.services[3].version';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Name of API service at 4 position' WHERE `cfkey` = 'api.services[4].name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'URL of API service at 4 position' WHERE `cfkey` = 'api.services[4].url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Version of API service at 4 position' WHERE `cfkey` = 'api.services[4].version';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Name of API service at 5 position' WHERE `cfkey` = 'api.services[5].name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'URL of API service at 5 position' WHERE `cfkey` = 'api.services[5].url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Version of API service at 5 position' WHERE `cfkey` = 'api.services[5].version';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Name of API service at 6 position' WHERE `cfkey` = 'api.services[6].name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'URL of API service at 6 position' WHERE `cfkey` = 'api.services[6].url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Version of API service at 6 position' WHERE `cfkey` = 'api.services[6].version';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Domains to be allowed in CORS' WHERE `cfkey` = 'application.cors.allowed.domains';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Authication type' WHERE `cfkey` = 'auth.active';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Autofix cut off date' WHERE `cfkey` = 'autofix.cufoff.date';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Accounts for applying autofix for EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2' WHERE `cfkey` = 'autofix.allowlist.accounts.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Accounts for applying autofix for ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch' WHERE `cfkey` = 'autofix.allowlist.accounts.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Accounts for applying autofix for ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb' WHERE `cfkey` = 'autofix.allowlist.accounts.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Accounts for applying autofix for ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb' WHERE `cfkey` = 'autofix.allowlist.accounts.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Accounts for applying autofix for RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift' WHERE `cfkey` = 'autofix.allowlist.accounts.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Accounts for applying autofix for S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3' WHERE `cfkey` = 'autofix.allowlist.accounts.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Accounts for applying autofix for Unused-Security-group_version-1_UnusedSecurityGroup_sg' WHERE `cfkey` = 'autofix.allowlist.accounts.Unused-Security-group_version-1_UnusedSecurityGroup_sg';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Accounts for applying autofix for UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip' WHERE `cfkey` = 'autofix.allowlist.accounts.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Accounts for applying autofix for rdsdb_version-1_RdsDbPublicAccess_rdsdb' WHERE `cfkey` = 'autofix.allowlist.accounts.rdsdb_version-1_RdsDbPublicAccess_rdsdb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'AWS access key' WHERE `cfkey` = 'aws.access-key';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'AWS secret key' WHERE `cfkey` = 'aws.secret-key';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory client id' WHERE `cfkey` = 'azure.activedirectory.client-id';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory client secret' WHERE `cfkey` = 'azure.activedirectory.client-secret';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory scope' WHERE `cfkey` = 'azure.activedirectory.scope';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory scope description' WHERE `cfkey` = 'azure.activedirectory.scopeDesc';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory scope state' WHERE `cfkey` = 'azure.activedirectory.state';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory tenant-id' WHERE `cfkey` = 'azure.activedirectory.tenant-id';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory authorizeEndpoint' WHERE `cfkey` = 'azure.authorizeEndpoint';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory claims email' WHERE `cfkey` = 'azure.id-token.claims.email';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory claims first-name' WHERE `cfkey` = 'azure.id-token.claims.first-name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory claims last-name' WHERE `cfkey` = 'azure.id-token.claims.last-name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory claims user-id' WHERE `cfkey` = 'azure.id-token.claims.user-id';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory claims user-name' WHERE `cfkey` = 'azure.id-token.claims.user-name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory issuer' WHERE `cfkey` = 'azure.issuer';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Azure active directory public-key' WHERE `cfkey` = 'azure.public-key';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'AWS base account' WHERE `cfkey` = 'base.account';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'AWS base region' WHERE `cfkey` = 'base.region';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Branch max age' WHERE `cfkey` = 'branch.maxBranchAge';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Cloud insight CORP password' WHERE `cfkey` = 'cloudinsights.corp-password';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Cloud insight CORP user-id' WHERE `cfkey` = 'cloudinsights.corp-user-id';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Cloud insight costurl' WHERE `cfkey` = 'cloudinsights.costurl';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Cloud insight tokenurl' WHERE `cfkey` = 'cloudinsights.tokenurl';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Accounts to allowlist for S3CreateBucketAndUpdateBucketPolicyReactor' WHERE `cfkey` = 'com.tmobile.pacman.reactors.impl.s3.S3CreateBucketAndUpdateBucketPolicyReactor.account.whitelist';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Accounts to allowlist for SampleReactor' WHERE `cfkey` = 'com.tmobile.pacman.reactors.impl.sample.SampleReactor.account.whitelist';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Accounts to allowlist for SampleReactor2' WHERE `cfkey` = 'com.tmobile.pacman.reactors.impl.sample.SampleReactor2.account.whitelist';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Cron frequency for weekly-report-sync-trigger' WHERE `cfkey` = 'cron.frequency.weekly-report-sync-trigger';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Date format across the application' WHERE `cfkey` = 'date.format';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Date range age across the application' WHERE `cfkey` = 'days-range.age';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Delete Sg Tag' WHERE `cfkey` = 'deleteSgTag';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'AWS role where data discovery is done' WHERE `cfkey` = 'discovery.role';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search admin host' WHERE `cfkey` = 'elastic-search.admin-host';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search clusterName' WHERE `cfkey` = 'elastic-search.clusterName';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search clusterName-heimdall' WHERE `cfkey` = 'elastic-search.clusterName-heimdall';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search dev-ingest-host' WHERE `cfkey` = 'elastic-search.dev-ingest-host';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search dev-ingest-port' WHERE `cfkey` = 'elastic-search.dev-ingest-port';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search host' WHERE `cfkey` = 'elastic-search.host';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search host-heimdall' WHERE `cfkey` = 'elastic-search.host-heimdall';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search port' WHERE `cfkey` = 'elastic-search.port';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search port-admin' WHERE `cfkey` = 'elastic-search.port-admin';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search port-admin-heimdall' WHERE `cfkey` = 'elastic-search.port-admin-heimdall';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search port-heimdall' WHERE `cfkey` = 'elastic-search.port-heimdall';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search update-clusterName' WHERE `cfkey` = 'elastic-search.update-clusterName';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search update-host' WHERE `cfkey` = 'elastic-search.update-host';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Elastic search update-port' WHERE `cfkey` = 'elastic-search.update-port';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Email banner name' WHERE `cfkey` = 'email.banner';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Endpoints refresh required' WHERE `cfkey` = 'endpoints.refresh.sensitive';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Logging level that needs to be logged in ES' WHERE `cfkey` = 'esLoggingLevel';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Feature certificates are enabled or not' WHERE `cfkey` = 'features.certificate.enabled';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Feature patching are enabled or not' WHERE `cfkey` = 'features.patching.enabled';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Feature vulnerability are enabled or not' WHERE `cfkey` = 'features.vulnerability.enabled';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'File path for storing the inventory collected data' WHERE `cfkey` = 'file.path';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Date format across the application' WHERE `cfkey` = 'formats.date';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Heimdall host' WHERE `cfkey` = 'heimdall-host';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Heimdall port' WHERE `cfkey` = 'heimdall-port';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Hystrix command default execution isolation thread timeout In Milliseconds' WHERE `cfkey` = 'hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Hystrix shareSecurityContext enabled' WHERE `cfkey` = 'hystrix.shareSecurityContext';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule engine lambda action disabled or not' WHERE `cfkey` = 'job.lambda.action-disabled';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule engine lambda action enabled or not' WHERE `cfkey` = 'job.lambda.action-enabled';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule engine lambda function-arn value' WHERE `cfkey` = 'job.lambda.function-arn';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule engine lambda function-name value' WHERE `cfkey` = 'job.lambda.function-name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule engine lambda principal value' WHERE `cfkey` = 'job.lambda.principal';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule engine lambda target-id value' WHERE `cfkey` = 'job.lambda.target-id';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Inventory collection bucket-name' WHERE `cfkey` = 'job.s3.bucket-name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP AD domain name' WHERE `cfkey` = 'ldap.ad.domain';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP AD provider URL' WHERE `cfkey` = 'ldap.ad.provider-url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP AD search-base' WHERE `cfkey` = 'ldap.ad.search-base';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP baseDn' WHERE `cfkey` = 'ldap.baseDn';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP connection timeout' WHERE `cfkey` = 'ldap.connectionTimeout';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP domain' WHERE `cfkey` = 'ldap.domain';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP host list' WHERE `cfkey` = 'ldap.hostList';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP authentication naming' WHERE `cfkey` = 'ldap.naming.authentication';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP context-factory naming' WHERE `cfkey` = 'ldap.naming.context-factory';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP NT domain' WHERE `cfkey` = 'ldap.nt.domain';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP NT provider-url' WHERE `cfkey` = 'ldap.nt.provider-url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP NT search-base' WHERE `cfkey` = 'ldap.nt.search-base';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP port' WHERE `cfkey` = 'ldap.port';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'LDAP response timeout' WHERE `cfkey` = 'ldap.responseTimeout';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Logging configuration' WHERE `cfkey` = 'logging.config';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Logging console level' WHERE `cfkey` = 'logging.consoleLoggingLevel';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'ES host for logging' WHERE `cfkey` = 'logging.esHost';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'ES logging level' WHERE `cfkey` = 'logging.esLoggingLevel';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'ES port logging' WHERE `cfkey` = 'logging.esPort';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Magenta skill cache name' WHERE `cfkey` = 'magenta.cache.name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Magenta skill default background image url' WHERE `cfkey` = 'magenta.default-background';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Magenta skill error background image url' WHERE `cfkey` = 'magenta.error-background';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Magenta skill goodbye background image url' WHERE `cfkey` = 'magenta.goodbye-background';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Magenta skill goodbye greeting text' WHERE `cfkey` = 'magenta.goodbye-greeting';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Magenta skill welcome background image url' WHERE `cfkey` = 'magenta.welcome-background';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Magenta skill welcome greeting text' WHERE `cfkey` = 'magenta.welcome-greeting';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Management endpoints which should be exposed' WHERE `cfkey` = 'management.endpoints.web.exposure.include';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Management health rabbit enabled' WHERE `cfkey` = 'management.health.rabbit.enabled';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Management health security enabled' WHERE `cfkey` = 'management.security.enabled';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Services which needs to be monitored' WHERE `cfkey` = 'monitoring.contextRootNames';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot resource owner email when autofix fallback occurs ' WHERE `cfkey` = 'pacbot.autofix.resourceowner.fallbak.email';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Oauth2 client-id for pacbot api' WHERE `cfkey` = 'pacman.api.oauth2.client-id';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Oauth2 client-secret for pacbot api' WHERE `cfkey` = 'pacman.api.oauth2.client-secret';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot API for sending mail' WHERE `cfkey` = 'pacman.api.sendmail';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix common notification template for EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2' WHERE `cfkey` = 'pacman.auto.fix.common.email.notifications.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix common notification template for ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch' WHERE `cfkey` = 'pacman.auto.fix.common.email.notifications.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix common notification template for ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb' WHERE `cfkey` = 'pacman.auto.fix.common.email.notifications.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix common notification template for ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb' WHERE `cfkey` = 'pacman.auto.fix.common.email.notifications.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix common notification template for RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift' WHERE `cfkey` = 'pacman.auto.fix.common.email.notifications.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix common notification template for Unused-Security-group_version-1_UnusedSecurityGroup_sg' WHERE `cfkey` = 'pacman.auto.fix.common.email.notifications.Unused-Security-group_version-1_UnusedSecurityGroup_sg';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix common notification template for UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip' WHERE `cfkey` = 'pacman.auto.fix.common.email.notifications.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix common notification template for rdsdb_version-1_RdsDbPublicAccess_rdsdb' WHERE `cfkey` = 'pacman.auto.fix.common.email.notifications.rdsdb_version-1_RdsDbPublicAccess_rdsdb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail recipients' WHERE `cfkey` = 'pacman.auto.fix.mail.cc.to';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail from mailId' WHERE `cfkey` = 'pacman.auto.fix.mail.from';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail subject for EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2' WHERE `cfkey` = 'pacman.auto.fix.mail.subject.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail subject for ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch' WHERE `cfkey` = 'pacman.auto.fix.mail.subject.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail subject for ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb' WHERE `cfkey` = 'pacman.auto.fix.mail.subject.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail subject for ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb' WHERE `cfkey` = 'pacman.auto.fix.mail.subject.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail subject for RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift' WHERE `cfkey` = 'pacman.auto.fix.mail.subject.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail subject for S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3' WHERE `cfkey` = 'pacman.auto.fix.mail.subject.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail subject for Unused-Security-group_version-1_UnusedSecurityGroup_sg' WHERE `cfkey` = 'pacman.auto.fix.mail.subject.Unused-Security-group_version-1_UnusedSecurityGroup_sg';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail subject for UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip' WHERE `cfkey` = 'pacman.auto.fix.mail.subject.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail subject for rdsdb_version-1_RdsDbPublicAccess_rdsdb' WHERE `cfkey` = 'pacman.auto.fix.mail.subject.rdsdb_version-1_RdsDbPublicAccess_rdsdb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail template columns for EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2' WHERE `cfkey` = 'pacman.auto.fix.mail.template.columns.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail template columns for ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch' WHERE `cfkey` = 'pacman.auto.fix.mail.template.columns.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail template columns for ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb' WHERE `cfkey` = 'pacman.auto.fix.mail.template.columns.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail template columns for ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb' WHERE `cfkey` = 'pacman.auto.fix.mail.template.columns.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail template columns for RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift' WHERE `cfkey` = 'pacman.auto.fix.mail.template.columns.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail template columns for Unused-Security-group_version-1_UnusedSecurityGroup_sg' WHERE `cfkey` = 'pacman.auto.fix.mail.template.columns.Unused-Security-group_version-1_UnusedSecurityGroup_sg';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail template columns for UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip' WHERE `cfkey` = 'pacman.auto.fix.mail.template.columns.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix mail template columns for rdsdb_version-1_RdsDbPublicAccess_rdsdb' WHERE `cfkey` = 'pacman.auto.fix.mail.template.columns.rdsdb_version-1_RdsDbPublicAccess_rdsdb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix maximum number of email notification' WHERE `cfkey` = 'pacman.auto.fix.max.email.notifications';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix maximum number of email notification for EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2' WHERE `cfkey` = 'pacman.auto.fix.max.email.notifications.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix maximum number of email notification for ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch' WHERE `cfkey` = 'pacman.auto.fix.max.email.notifications.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix maximum number of email notification for ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb' WHERE `cfkey` = 'pacman.auto.fix.max.email.notifications.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix maximum number of email notification for ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb' WHERE `cfkey` = 'pacman.auto.fix.max.email.notifications.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix maximum number of email notification for RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift' WHERE `cfkey` = 'pacman.auto.fix.max.email.notifications.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix maximum number of email notification for S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3' WHERE `cfkey` = 'pacman.auto.fix.max.email.notifications.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix maximum number of email notification for rdsdb_version-1_RdsDbPublicAccess_rdsdb' WHERE `cfkey` = 'pacman.auto.fix.max.email.notifications.rdsdb_version-1_RdsDbPublicAccess_rdsdb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix orphan resource owner email' WHERE `cfkey` = 'pacman.auto.fix.orphan.resource.owner';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix resource name filter pattern' WHERE `cfkey` = 'pacman.auto.fix.resource.name.filter.pattern';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix role name' WHERE `cfkey` = 'pacman.auto.fix.role.name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix tag algorithm' WHERE `cfkey` = 'pacman.auto.fix.tag.encyption.algorithm';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix tag name' WHERE `cfkey` = 'pacman.auto.fix.tag.name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix tag salt' WHERE `cfkey` = 'pacman.auto.fix.tag.salt';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix warning mail subject' WHERE `cfkey` = 'pacman.auto.warning.mail.subject.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix warning mail subject for ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch' WHERE `cfkey` = 'pacman.auto.warning.mail.subject.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix warning mail subject for ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb' WHERE `cfkey` = 'pacman.auto.warning.mail.subject.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix warning mail subject for ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb' WHERE `cfkey` = 'pacman.auto.warning.mail.subject.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix warning mail subject for RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift' WHERE `cfkey` = 'pacman.auto.warning.mail.subject.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix warning mail subject for S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3' WHERE `cfkey` = 'pacman.auto.warning.mail.subject.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix warning mail subject for rdsdb_version-1_RdsDbPublicAccess_rdsdb' WHERE `cfkey` = 'pacman.auto.warning.mail.subject.rdsdb_version-1_RdsDbPublicAccess_rdsdb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix contact mailid for Unused-Security-group_version-1_UnusedSecurityGroup_sg' WHERE `cfkey` = 'pacman.autofix.contact.Unused-Security-group_version-1_UnusedSecurityGroup_sg';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix contact mailid for UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip' WHERE `cfkey` = 'pacman.autofix.contact.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix exempted types for cutoff data' WHERE `cfkey` = 'pacman.autofix.exempted.types.for.cutoff.data';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix notify for Unused-Security-group_version-1_UnusedSecurityGroup_sg' WHERE `cfkey` = 'pacman.autofix.fix.notify.Unused-Security-group_version-1_UnusedSecurityGroup_sg';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix notify for UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip' WHERE `cfkey` = 'pacman.autofix.fix.notify.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix fix type for Unused-Security-group_version-1_UnusedSecurityGroup_sg' WHERE `cfkey` = 'pacman.autofix.fix.type.Unused-Security-group_version-1_UnusedSecurityGroup_sg';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix fix type for UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip' WHERE `cfkey` = 'pacman.autofix.fix.type.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix issue creation time elapsed for UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip' WHERE `cfkey` = 'pacman.autofix.issue.creation.time.elapsed.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix non taggable services' WHERE `cfkey` = 'pacman.autofix.non.taggable.services';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix policy URL for EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2' WHERE `cfkey` = 'pacman.autofix.policy.url.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix policy URL for S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3' WHERE `cfkey` = 'pacman.autofix.policy.url.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix policy URL path' WHERE `cfkey` = 'pacman.autofix.policy.url.path';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule post fix message for EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2' WHERE `cfkey` = 'pacman.autofix.rule.post.fix.message.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule post fix message for ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch' WHERE `cfkey` = 'pacman.autofix.rule.post.fix.message.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule post fix message for ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb' WHERE `cfkey` = 'pacman.autofix.rule.post.fix.message.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule post fix message for ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb' WHERE `cfkey` = 'pacman.autofix.rule.post.fix.message.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule post fix message for RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift' WHERE `cfkey` = 'pacman.autofix.rule.post.fix.message.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule post fix message for S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3' WHERE `cfkey` = 'pacman.autofix.rule.post.fix.message.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule post fix message for Unused-Security-group_version-1_UnusedSecurityGroup_sg' WHERE `cfkey` = 'pacman.autofix.rule.post.fix.message.Unused-Security-group_version-1_UnusedSecurityGroup_sg';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule post fix message for UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip' WHERE `cfkey` = 'pacman.autofix.rule.post.fix.message.UnusedElasticIpRule_version-1_UnusedElasticIpRule_elasticip';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule post fix message for rdsdb_version-1_RdsDbPublicAccess_rdsdb' WHERE `cfkey` = 'pacman.autofix.rule.post.fix.message.rdsdb_version-1_RdsDbPublicAccess_rdsdb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule violation message for EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2' WHERE `cfkey` = 'pacman.autofix.rule.violation.message.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule violation message for ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch' WHERE `cfkey` = 'pacman.autofix.rule.violation.message.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule violation message for ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb' WHERE `cfkey` = 'pacman.autofix.rule.violation.message.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule violation message for ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb' WHERE `cfkey` = 'pacman.autofix.rule.violation.message.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule violation message for RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift' WHERE `cfkey` = 'pacman.autofix.rule.violation.message.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule violation message for S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3' WHERE `cfkey` = 'pacman.autofix.rule.violation.message.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule violation message for rdsdb_version-1_RdsDbPublicAccess_rdsdb' WHERE `cfkey` = 'pacman.autofix.rule.violation.message.rdsdb_version-1_RdsDbPublicAccess_rdsdb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule warning message for EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2' WHERE `cfkey` = 'pacman.autofix.rule.warning.message.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule warning message for ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch' WHERE `cfkey` = 'pacman.autofix.rule.warning.message.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule warning message for ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb' WHERE `cfkey` = 'pacman.autofix.rule.warning.message.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule warning message for ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb' WHERE `cfkey` = 'pacman.autofix.rule.warning.message.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule warning message for RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift' WHERE `cfkey` = 'pacman.autofix.rule.warning.message.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule warning message for S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3' WHERE `cfkey` = 'pacman.autofix.rule.warning.message.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix rule warning message for rdsdb_version-1_RdsDbPublicAccess_rdsdb' WHERE `cfkey` = 'pacman.autofix.rule.warning.message.rdsdb_version-1_RdsDbPublicAccess_rdsdb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix wait time for rdsdb_version-1_RdsDbPublicAccess_rdsdb' WHERE `cfkey` = 'pacman.autofix.waittime.EC2WithPublicIPAccess_version-1_Ec2WithPublicAccess_ec2';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix wait time for ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch' WHERE `cfkey` = 'pacman.autofix.waittime.ElasticSearchPublicAccess_version-1_ElasticSearchPublicAccessRule_elasticsearch';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix wait time for ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb' WHERE `cfkey` = 'pacman.autofix.waittime.ElbWithPublicAccess_version-1_ApplicationElbWithPublicAccess_appelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix wait time for ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb' WHERE `cfkey` = 'pacman.autofix.waittime.ElbWithPublicAccess_version-1_ClassicElbWithPublicAccess_classicelb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix wait time for RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift' WHERE `cfkey` = 'pacman.autofix.waittime.RedShiftPublicAccess_version-1_RedShiftPublicAccess_redshift';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix wait time for S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3' WHERE `cfkey` = 'pacman.autofix.waittime.S3GlobalAccess_version-1_S3BucketShouldnotpubliclyaccessble_s3';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix wait time for rdsdb_version-1_RdsDbPublicAccess_rdsdb' WHERE `cfkey` = 'pacman.autofix.waittime.rdsdb_version-1_RdsDbPublicAccess_rdsdb';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix ES transaction index' WHERE `cfkey` = 'pacman.es.auto.fix.transaction.index';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot autofix ES transaction type' WHERE `cfkey` = 'pacman.es.auto.fix.transaction.type';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot ES host' WHERE `cfkey` = 'pacman.es.host';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot ES port' WHERE `cfkey` = 'pacman.es.port';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot ES reactors index' WHERE `cfkey` = 'pacman.es.reactors.index';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot ES reactors registry' WHERE `cfkey` = 'pacman.es.reactors.registry';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot ES stats index' WHERE `cfkey` = 'pacman.es.stats.index';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot ES stats type' WHERE `cfkey` = 'pacman.es.stats.type';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot exempted mail subject' WHERE `cfkey` = 'pacman.exempted.mail.subject';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot host' WHERE `cfkey` = 'pacman.host';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot integrations slack webhook url' WHERE `cfkey` = 'pacman.integrations.slack.webhook.url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot login password' WHERE `cfkey` = 'pacman.login.password';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot login user name' WHERE `cfkey` = 'pacman.login.user.name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot service password' WHERE `cfkey` = 'pacman.service-password';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot service user' WHERE `cfkey` = 'pacman.service-user';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot target type alias' WHERE `cfkey` = 'pacman.target.type.alias';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot URL' WHERE `cfkey` = 'pacman.url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot projections assetgroups' WHERE `cfkey` = 'projections.assetgroups';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot projections targetTypes' WHERE `cfkey` = 'projections.targetTypes';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot redshift password' WHERE `cfkey` = 'redshift.password';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot redshift URL' WHERE `cfkey` = 'redshift.url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Pacbot redshift user name' WHERE `cfkey` = 'redshift.userName';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'AWS region to ignore' WHERE `cfkey` = 'region.ignore';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Remind mail cron' WHERE `cfkey` = 'remind.cron';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Remind mail subject' WHERE `cfkey` = 'remind.email.subject';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Remind mail text' WHERE `cfkey` = 'remind.email.text';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule Engine invoke URL' WHERE `cfkey` = 'rule-engine.invoke.url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule lambda action disabled' WHERE `cfkey` = 'rule.lambda.action-disabled';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule lambda action enabled' WHERE `cfkey` = 'rule.lambda.action-enabled';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule lambda function arn' WHERE `cfkey` = 'rule.lambda.function-arn';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule lambda function name' WHERE `cfkey` = 'rule.lambda.function-name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule lambda principal' WHERE `cfkey` = 'rule.lambda.principal';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule lambda target-id' WHERE `cfkey` = 'rule.lambda.target-id';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Rule s3 bucket-name' WHERE `cfkey` = 'rule.s3.bucket-name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 's3 inventory' WHERE `cfkey` = 's3';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 's3 data' WHERE `cfkey` = 's3.data';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 's3 processed' WHERE `cfkey` = 's3.processed';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 's3 region' WHERE `cfkey` = 's3.region';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 's3 role' WHERE `cfkey` = 's3.role';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Basic security enabled' WHERE `cfkey` = 'security.basic.enabled';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Security oauth2 resource user-info-uri' WHERE `cfkey` = 'security.oauth2.resource.user-info-uri';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Server context-path' WHERE `cfkey` = 'server.context-path';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Server context-path' WHERE `cfkey` = 'server.context-path';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Server context-path' WHERE `cfkey` = 'server.contextPath';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Server servlet context-path' WHERE `cfkey` = 'server.servlet.context-path';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Server type' WHERE `cfkey` = 'server_type';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Service dns name' WHERE `cfkey` = 'service.dns.name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Service admin URL' WHERE `cfkey` = 'service.url.admin';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Service asset URL' WHERE `cfkey` = 'service.url.asset';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Service auth URL' WHERE `cfkey` = 'service.url.auth';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Service compliance URL' WHERE `cfkey` = 'service.url.compliance';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Service devstandards URL' WHERE `cfkey` = 'service.url.devstandards';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Service pac_auth URL' WHERE `cfkey` = 'service.url.pac_auth';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Service statistics URL' WHERE `cfkey` = 'service.url.statistics';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Service vulnerability URL' WHERE `cfkey` = 'service.url.vulnerability';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot admin client instance health URL' WHERE `cfkey` = 'spring.boot.admin.client.instance.health-url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot admin client instance management URL' WHERE `cfkey` = 'spring.boot.admin.client.instance.management-url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot admin client instance service URL' WHERE `cfkey` = 'spring.boot.admin.client.instance.service-url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot admin client password' WHERE `cfkey` = 'spring.boot.admin.client.password';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot admin client URL' WHERE `cfkey` = 'spring.boot.admin.client.url[0]';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot admin client user name' WHERE `cfkey` = 'spring.boot.admin.client.username';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot cache names' WHERE `cfkey` = 'spring.cache.cache-names';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot caffeine spec' WHERE `cfkey` = 'spring.cache.caffeine.spec';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot cloud bus enabled' WHERE `cfkey` = 'spring.cloud.bus.enabled';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot datasource driver-class-name' WHERE `cfkey` = 'spring.datasource.driver-class-name';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot datasource password' WHERE `cfkey` = 'spring.datasource.password';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot datasource url' WHERE `cfkey` = 'spring.datasource.url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot datasource user name' WHERE `cfkey` = 'spring.datasource.username';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot JPA hibernate naming physical strategy' WHERE `cfkey` = 'spring.jpa.hibernate.naming.physical-strategy';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot mail default encoding' WHERE `cfkey` = 'spring.mail.defaultEncoding';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot mail host' WHERE `cfkey` = 'spring.mail.host';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot mail password' WHERE `cfkey` = 'spring.mail.password';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot mail port' WHERE `cfkey` = 'spring.mail.port';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot mail properties mail smtp auth' WHERE `cfkey` = 'spring.mail.properties.mail.smtp.auth';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot mail properties mail smtp ssl trust' WHERE `cfkey` = 'spring.mail.properties.mail.smtp.ssl.trust';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot mail properties mail smtp start tls enable' WHERE `cfkey` = 'spring.mail.properties.mail.smtp.starttls.enable';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot mail protocol' WHERE `cfkey` = 'spring.mail.protocol';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot mail test connection' WHERE `cfkey` = 'spring.mail.test-connection';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot mail user name' WHERE `cfkey` = 'spring.mail.username';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot sleuth sampler probability' WHERE `cfkey` = 'spring.sleuth.sampler.probability';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot zipkin base URL' WHERE `cfkey` = 'spring.zipkin.baseUrl';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Spring boot zipkin sender type' WHERE `cfkey` = 'spring.zipkin.sender.type';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Square one slack channel' WHERE `cfkey` = 'square.one.slack.channel';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Swagger auth allowlist URLs' WHERE `cfkey` = 'swagger.auth.whitelist';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Mandatory tags for resources' WHERE `cfkey` = 'tagging.mandatoryTags';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Categories for different target types' WHERE `cfkey` = 'target-types.categories';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Template digest-mail URL' WHERE `cfkey` = 'template.digest-mail.url';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Timezone across the application' WHERE `cfkey` = 'time.zone';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Vulnerability application occurance' WHERE `cfkey` = 'vulnerability.application.occurance';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Vulnerability application resource details' WHERE `cfkey` = 'vulnerability.application.resourcedetails';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Vulnerability application resource details both' WHERE `cfkey` = 'vulnerability.application.resourcedetailsboth';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Vulnerability severity summary' WHERE `cfkey` = 'vulnerability.summary.severity';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Vulnerability types' WHERE `cfkey` = 'vulnerability.types';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Job interval' WHERE `cfkey` = 'scheduler.interval';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'Job inital delay for shipper' WHERE `cfkey` = 'scheduler.rules.initial.delay';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'job inital delay for rules' WHERE `cfkey` = 'scheduler.shipper.initial.delay';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'job scheduler' WHERE `cfkey` = 'scheduler.role';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'job inital delay for collector' WHERE `cfkey` = 'scheduler.collector.initial.delay';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'azure event bus details' WHERE `cfkey` = 'azure.eventbridge.bus.details';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'number rules in one set of batch' WHERE `cfkey` = 'scheduler.total.batches';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = ' azure cloud is enabled ' WHERE `cfkey` = 'azure.enabled';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'gcp cloud is enabled' WHERE `cfkey` = 'aws.eventbridge.bus.details';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'aws event bus details' WHERE `cfkey` = 'gcp.eventbridge.bus.details';
UPDATE `pacmandata`.`pac_config_key_metadata` SET `description` = 'gcp event bus details' WHERE `cfkey` = 'gcp.enabled';
UPDATE `cf_Policy` SET policyDesc = 'All cloud assets should be tagged with following mandatory tags. Application,  Environment, Role and Stack. Assets without these mandatory tags will be marked as non-complaint. Below is an example for the tag value pairs.\n\nTag name: Application\nExample value: Rebellion\n\nNotes\nThis value for the application tag should be the approved application name give for the project during the cloud on-boarding process. Unknown applications will be marked for review and possible termination.\n\nTag name: Environment\nExample value: Production or Non Production or Non Production::qat1 or Non Production::dit1 (Refer Naming guide)\n\nNotes\nThe value for environment should distinguish the asset as a Production or Non Production class. You can further qualify Non Production assets using the :: separator. Look at the examples 3 and 4.\n\nTag name: Stack\nExample Value: Apache Httpd\n\nTag name: Role\nExample value: Webserver\n\n \nEach asset should at least have these 4 mandatory tags. You can have additional tags as well' WHERE policyId = 'TaggingRule_version-1';

DELETE FROM `pac_config_properties` WHERE cfkey='features.vulnerability.enabled';
INSERT IGNORE INTO pac_config_properties(`cfkey`,`value`,`application`,`profile`,`label`,`createdBy`,`createdDate`,`modifiedBy`,`modifiedDate`) VALUES ('features.vulnerability.enabled',concat(@VULNERABILITY_FEATURE_ENABLED,''),'api','prd','latest',NULL,NULL,NULL,NULL);


INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('batchaccounts','Azure batchaccounts','Compute','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_batchaccounts/batchaccounts'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('blobcontainer','Azure blobcontainer','Storage','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_blobcontainer/blobcontainer'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('cosmosdb','Azure cosmosdb','Databases','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_cosmosdb/cosmosdb'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('databricks','Azure databricks)','Analytics','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_databricks/databricks'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('disk','Azure Disk','Compute','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_disk/disk'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('loadbalancer','Azure Loadbalancer','Networking','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_loadbalancer/loadbalancer'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('mariadb','Azure mariadb','Databases','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_mariadb/mariadb'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('mysqlserver','Azure mysqlserver','Databases','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_mysqlserver/mysqlserver'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('namespaces','Azure namespaces','Web','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_namespaces/namespaces'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('networkinterface','Azure Network Interface','Networking','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_networkinterface/networkinterface'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('nsg','Azure Network Security Group','Networking','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_nsg/nsg'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('policydefinitions','Azure policydefinitions','Governance','azure','{\"key\":\"id\",\"id\":\"id\"}','disable','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_policydefinitions/policydefinitions'),'2019-08-08','2019-08-08','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('policyevaluationresults','Azure policyevaluationresults','Governance','azure','{\"key\":\"id,policyDefinitionId\",\"id\":\"id\"}','disable','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_policyevaluationresults/policyevaluationresults'),'2019-08-08','2019-08-08','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('postgresql','Azure postgresql','Databases','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_postgresql/postgresql'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('publicipaddress','Azure publicipaddress','Networking','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_publicipaddress/publicipaddress'),'2019-07-01','2019-07-01','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('resourcegroup','Azure resourcegroup','General','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_resourcegroup/resourcegroup'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('searchservices','Azure searchservices','Web','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_searchservices/searchservices'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('securityalerts','Azure securityalerts','Governance','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_securityalerts/securityalerts'),'2019-08-08','2019-08-08','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('securitycenter','Azure Security Center','Security','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_securitycenter/securitycenter'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('sites','Sites','Azure sites','Internet of things','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_sites/sites'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('sqldatabase','Azure SQL Database','Databases','azure','{\"key\":\"databaseId\",\"id\":\"databaseId\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_sqldatabase/sqldatabase'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('sqlserver','Azure sqlserver','Databases','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_sqlserver/sqlserver'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('storageaccount','Azure Object Storage Accounts','Storage','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_storageaccount/storageaccount'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('subnets','Azure subnets','Networking','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_subnets/subnets'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('vaults','Azure vaults','Security','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_vaults/vaults'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('virtualmachine','Azure Virtual Machines','Compute','azure','{\"key\":\"vmId\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_virtualmachine/virtualmachine'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('vnet','Azure Disk','Networking','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled',NULL,concat(@eshost,':',@esport,'/azure_vnet/vnet'),'2019-11-05','2019-11-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('workflows','Azure workflows','Internet of things','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_workflows/workflows'),'2019-09-19','2019-09-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('activitylogalert','Azure activitylog','','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_activitylog/activitylog'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('rediscache','Azure rediscache','','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_rediscache/rediscache'),'2022-05-25','2022-05-25','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('securitypricings','Azure Security Pricing','Security','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_securitypricings/securitypricings'),'2022-05-19','2022-05-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('webapp','Azure webapp','','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_webapp/webapp'),'2019-06-27','2019-06-27','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('vpcfirewall','GCP VPC firewall','Compute','gcp','{"key":"id","id":"name"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_vpcfirewall/vpcfirewall'),'2022-06-01','2022-06-01','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('cloudstorage','GCP cloud storage','Compute','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_cloudstorage/cloudstorage'),'2022-06-01','2022-06-01','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('pubsub','GCP pub sub topic','Compute','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_pubsub/pubsub'),'2022-06-29','2022-06-29','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('dataproc','GCP dataproc clusters','Compute','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_dataproc/dataproc'),'2022-07-19','2022-07-19','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`,`targetDesc`,`category`,`dataSourceName`,`targetConfig`,`status`,`userId`,`endpoint`,`createdDate`,`modifiedDate`,`domain`) VALUES ('gkecluster','GKE Cluster','GKE Cluster','Compute','gcp','{"key":"id","id":"id"}','enabled','admin',concat(@eshost,':',@esport,'/gcp_gkecluster/gkecluster'),'2022-06-29','2022-06-29','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('functionapp','Function App','Azure functionapp','','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_functionapp/functionapp'),'2019-08-23','2022-08-23','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('mysqlflexible','My SQL Flexible Server','Azure mysqlflexible','','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_mysqlflexible/mysqlflexible'),'2019-09-05','2022-09-05','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('diagnosticsetting','Diagnostic Setting','Azure diagnosticsetting','','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_diagnosticsetting/diagnosticsetting'),'2019-09-26','2022-09-26','Infra & Platforms');
INSERT IGNORE INTO `cf_Target` (`targetName`,`displayName`, `targetDesc`, `category`, `dataSourceName`, `targetConfig`, `status`, `userId`, `endpoint`, `createdDate`, `modifiedDate`, `domain`) VALUES('vaultsrbac','Vaults with role base access control','Azure vaultsrbac','','azure','{\"key\":\"id\",\"id\":\"id\"}','enabled','admin@pacbot.org',concat(@eshost,':',@esport,'/azure_vaultsrbac/vaultsrbac'),'2019-11-10','2022-11-10','Infra & Platforms');
INSERT IGNORE INTO `pac_config_properties` (`cfkey`, `value`, `application`, `profile`, `label`, `createdBy`, `createdDate`, `modifiedBy`, `modifiedDate`) values('recommendation.categories','fault_tolerance, cost_optimizing, security, performance','application','prd','latest','admin@pacbot.org','09/06/2019 06:07:43','','');

/* Update DisplayName  to TargetName if the value is null in Target table */
update cf_Target set displayName = targetName where displayName is null;

Update cf_Target set status = 'disabled' where targetName in ('asgpolicy','cloudwatchalarm','cloudwatchlogs','customergateway','datastream','deliverystream','dhcpoption','directconnect','iamgroup','internetgateway','nat','rdscluster','reservedinstance','route53','routetable','targetgroup','videostream','virtualinterface','vpnconnection','cosmosdb','diagnosticsetting','mariadb','publicipaddress','searchservices','securityalerts','sites');


/* disable policydefinition , policyevaluationresults and phd */
update  pacmandata.cf_Target set status = 'disable' where targetName in ( 'policydefinitions', 'policyevaluationresults', 'phd');
delete from cf_AssetGroupTargetDetails where targetType in ( 'policydefinitions', 'policyevaluationresults', 'phd');
/* remove older entries from table, can be removed in future */
delete from cf_RuleInstance where ruleUUID = 'aws_account_ensure_cloudwatch_alarm';
/* resolutionUrl bugfix, can be removed in future */
UPDATE cf_Policy SET resolutionUrl = 'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#configure-dedicated-iam-role-for-aws-support-access' WHERE policyId = 'AWS_Support_Access_Role_version-1';
UPDATE cf_Policy SET resolutionUrl = 'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#enable-hardware-mfa-for-root-account' WHERE policyId = 'AWS_rootaccount_hardware_MFA_version-1';
UPDATE cf_Policy SET resolutionUrl = 'https://github.com/PaladinCloud/CE/wiki/AWS-Policy#deny-http-requests-to-s3-bucket' WHERE policyId = 'S3BucketAllowHTTPRequest_version-1';



/* Updating display name can be removed in future  */
Update cf_Target set displayName = 'Subnet' where targetName = 'subnet';
Update cf_Target set displayName = 'Databricks' where targetName = 'databricks';
Update cf_Target set displayName = 'AKS' where targetName = 'kubernetes';
Update cf_Target set displayName = 'MySQL Server' where targetName = 'mysqlserver';
Update cf_Target set displayName = 'Subnet' where targetName = 'subnets';
Update cf_Target set displayName = 'VM' where targetName = 'virtualmachine';
Update cf_Target set displayName = 'PostgreSQL' where targetName = 'cloudsql_postgres';
Update cf_Target set displayName = 'GKE Cluster' where targetName = 'gkecluster';
Update cf_Target set displayName = 'VM' where targetName = 'vminstance';

/* Updating  status field, can be removed in future   */
Update cf_Target set status = 'finding' where targetName in ( 'checks','phd','securityhub','activitylogalert','policydefinitions','policyevaluationresults' );

/* Updating cf_RuleInstance targetType field, can be removed in future   */
update cf_RuleInstance set targetType = 'virtualmachine' where targetType = 'virtualMachine';

update cf_pac_updatable_fields set displayFields='_resourceid,tags.Application,tags.Environment,_entitytype,targetType,accountid,accountname,region' where resourceType='all_list';